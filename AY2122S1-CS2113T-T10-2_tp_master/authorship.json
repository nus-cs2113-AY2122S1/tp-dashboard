[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"    implementation \u0027com.google.code.gson:gson:2.8.8\u0027","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    mainClassName \u003d \"terminus.Terminus\"","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    archiveBaseName \u003d \"TermiNUS\"","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kelvneo":4,"-":44}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"\u003cimg src\u003d\"https://avatars2.githubusercontent.com/u/2332196?s\u003d460\u0026v\u003d4\" width\u003d\"100\"/\u003e | Kelvin Neo | [Github](https://github.com/kelvneo) | [Portfolio](docs/team/kelvneo.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"\u003cimg src\u003d\"https://avatars2.githubusercontent.com/u/69447277?s\u003d460\u0026v\u003d4\" width\u003d\"100\"/\u003e | Louis | [Github](https://github.com/LouisLouis19) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"\u003cimg src\u003d\"https://avatars2.githubusercontent.com/u/68680740?s\u003d460\u0026v\u003d4\" width\u003d\"100\"/\u003e| Tan Juen Woo | [Github](https://github.com/woolicious98) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"\u003cimg src\u003d\"https://avatars2.githubusercontent.com/u/26686523?s\u003d460\u0026v\u003d4\" width\u003d\"100\"/\u003e | Schuyler Tay | [Github](https://github.com/3m0W33D) | [Portfolio](docs/team/johndoe.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"kelvneo":4,"LouisLouis19":1,"-":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"## Table of Content","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"- [1. Introduction](#1-introduction)","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"    * [1.1 Purpose](#11-purpose)","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"    * [1.2 Using this Guide](#12-using-this-guide)","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"- [2. Setting up](#2-setting-up)","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"    * [2.1 Setting up the project in your computer](#21-setting-up-the-project-in-your-computer)","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"        + [2.1.1 Prerequisite](#211-prerequisite)","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"        + [2.1.2 Getting the project files](#212-getting-the-project-files)","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"        + [2.1.3 Setting up on IntelliJ IDEA](#213-setting-up-on-intellij-idea)","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"        + [2.1.4 Configuring the Coding Style](#214-configuring-the-coding-style)","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"## 1. Introduction","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"**Welcome to TermiNUS!**","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"**TermiNUS** is a CLI (command line interface) program for NUS Students who wish to organize their","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"NUS academic materials through a CLI. The product aims to aid student in organizing their academic","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"schedule and enhancing their learning experiences.","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"**TermiNUS** is written in **Java 11** and uses the Object-Oriented Programming (OOP) paradigm which","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"provides us with means to structure a software program into organized and reusable pieces of codes,","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"making it more efficient for future improvements and revisions.","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"### 1.1 Purpose","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"This developer guide is for any developers who wish to contribute to **TermiNUS**. It contains the","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"overall architecture design of **TermiNUS** and it displays our main features implementation details","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"with the rationale and consideration for each. As of now, the guide is written for the current","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"release version of `TermiNUS of v1.0`.","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"### 1.2 Using this Guide","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"Insert legends / special icons used here to aid in the guide later.","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"## 2. Setting up","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"### 2.1 Setting up the project in your computer","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"#### 2.1.1 Prerequisite","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"Before setting up the project, please do ensure you have the following items installed.","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"- [JDK 11](https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/downloads-list.html)","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"- [IntelliJ IDEA](https://www.jetbrains.com/idea/download/)","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"`Java Development Kit ver 11 (JDK 11)` is the **environment / programming language** in which","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"TermiNUS is written with and `IntelliJ IDEA` will be the **integrated development environment (","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"IDE)** platform for us to write the programming codes on.","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"#### 2.1.2 Getting the project files","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"Go to [link](https://github.com/AY2122S1-CS2113T-T10-2/tp) and retrieve the `TermiNUS project file`.","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"You can do so by **forking** the project and **cloning** a copy into your computer.","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"To learn more about github fork-clone feature please follow the guide","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"on [link](https://docs.github.com/en/get-started/quickstart/fork-a-repo).","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"#### 2.1.3 Setting up on IntelliJ IDEA","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"1. Open the application `IntelliJ IDEA`.","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"2. Inside `IntelliJ IDEA` navigate to `open project` button","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"    1. On the top left of the app, `File`\u0026rarr;`Open...`","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"3. Locate and select the folder containing the files for **Terminus** that you have downloaded","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"   earlier on.","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"4. Change the **Project SDK** that IntelliJ IDEA will be using.","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"    1. On the top left of the app, `File`\u0026rarr;`Project Structure...`","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"    2. Under **Project SDK:** section, find and select JDK version 11.","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"       Eg: `Amazon Corretto version 11.0.12`.","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"    3. Under **Project language level:**, select `SDK default`.","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"5. Verifying the setup","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"    1. After performing the steps above, locate the file `src/main/java/terminus/Terminus.java`,","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"       right-click and select `Run \u0027Terminus.main()\u0027`.","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"    2. If everything is correctly set up, you should see the following terminal.","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"   ```","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"   Welcome to TermiNUS!","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"   ","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"   Type any of the following to get started:","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"   \u003e exit","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"   \u003e help","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"   \u003e note","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"   \u003e schedule","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"   ","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"   [] \u003e\u003e\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"   ```","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"#### 2.1.4 Configuring the Coding Style","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"Import the coding style xml file into your IntelliJ IDEA.","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"1. Go to IntelliJ IDEA settings page.","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"    1. Located at the **top-right** of the app, click on the gear icon and select `Settings...`.","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"2. Under the settings page, locate the `Code Style` tab.","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"    1. `Editor`\u0026rarr;`Code Style`","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"3. Once you are at the `Code Style` tab, you will need to import the file `CS2113TStyle.xml`.","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"    1. At the `Scheme` section, select the gear icon and select `Import Scheme`","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"       \u0026rarr;`IntelliJ IDEA code style XML`.","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"    2. Locate and select the `CS2113TStyle.xml` file which is included in the TermiNUS project.","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"    3. Once done, select `Apply` then `OK`.","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"4. Now your IntelliJ IDEA should follow our Coding Style.","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"\u003e :bulb: IntelliJ IDEA have certain shortcut key to aid in auto-formatting of code. ","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"\u003e Once you are done with a piece of code, highlight the section you have just written and press the ","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"\u003e key `CTRL + SHIFT + L`.","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":" ","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"Woolicious98":90,"-":20}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"# TermiNUS User Guide","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"TermiNUS is a CLI (command line interface) program for NUS Students who wish to organize their NUS academic materials through a CLI.  ","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"The product aims to aid student in organizing their academic schedule and enhancing their learning experiences.","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"## Contents","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"* [Getting Start](#Getting-Started)","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"* [Section: Note](#Section:-Note)","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"    * [Accessing Note : `note`](#Accessing-Note)","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"    * [Adding a note : `add \"\u003cname\u003e\" \"\u003ccontent\u003e\"`](#Adding-a-Note)","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"    * [Delete a note : `delete \u003cindex\u003e`](#Delete-a-Note)","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"    * [View note : `view {index}`](#View-Note)","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"* [Section: Schedule](#Section:-Schedule)","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"    * [Accessing Schedule : `schedule`](#Accessing-Schedule)","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"    * [Adding a Schedule : `add \"\u003cdescription\u003e\" \"\u003cday\u003e\" \"\u003cstart_time\u003e\" \"\u003czoom_link\u003e\"`](#Adding-a-Schedule)","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"    * [Delete a Schedule : `delete \u003cindex\u003e`](#Delete-a-Schedule)","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    * [View Schedule : `view`](#View-Schedule)","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"* [Exiting the Program: `exit`](#Exiting-the-Program)","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"* [Accessing Help: `help`](#Accessing-Help)","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"* [FAQ](#faq)","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"* [Command Summary](#Command-Summary)","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"* [Advanced Command Summary](#Advanced-Command-Summary)","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"## Getting Started","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"2. Download the latest version of `TermiNUS` from [here](https://github.com/AY2122S1-CS2113T-T10-2/tp/releases/).","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"3. When you first start the program, you will be greeted with our banner:  ","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"    ```","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"    Welcome to TermiNUS! ","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"    Type any of the following to get started: ","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"    \u003e note","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    \u003e schedule","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"    \u003e help ","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    \u003e exit ","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     ","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"    [] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"    ```","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"4. To get started, you can run the following commands:","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"   - note","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"   - schedule","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"   - help","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"   - exit","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"___  ","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"## Section: Note","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"### Accessing Note","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `note`  ","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"Accessing the note workspace","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"After running the note command, you can see the following:  ","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"[] \u003e\u003e\u003e note","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"You have 0 note(s) inside this workspace ","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"Type any of  the following to get started: ","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"\u003e add ","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"\u003e exit","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"\u003e help","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"\u003e view","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"\u003e back","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"\u003e delete ","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-24"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"[note] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"### Adding a Note","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `add \"\u003cname\u003e\" \"\u003ccontent\u003e\"`  ","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"Adding a note when in the note workspace  ","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"LouisLouis19"},"content":"[note] \u003e\u003e\u003e add “Remind Cabbin” “Cabbin was here” ","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"Note has been added! ","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"[note] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"### Delete a Note","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `delete \u003cindex\u003e`  ","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"Deletes the specified note given by its index.","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"LouisLouis19"},"content":"[note] \u003e\u003e\u003e delete 1","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"Note `Remind Cabbin` has been deleted!","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"[note] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"LouisLouis19"},"content":"### View Note","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `view` or `view {index}`  ","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"Two ways to use this command simply running view or view [index]","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"LouisLouis19"},"content":"View by itself will list all notes","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"[note] \u003e\u003e\u003e view ","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"LouisLouis19"},"content":"You have 3 notes inside: ","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"LouisLouis19"},"content":"1. Remind Cabbin ","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"LouisLouis19"},"content":"2. Name1 ","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"LouisLouis19"},"content":"3. Name2 ","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"LouisLouis19"},"content":"[note] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"LouisLouis19"},"content":"The second way to use view is with an index view [index]","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"LouisLouis19"},"content":"[note] \u003e\u003e\u003e view 1 ","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"LouisLouis19"},"content":"Name: Remind Cabbin ","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"LouisLouis19"},"content":"Content: Cabbin was here ","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"LouisLouis19"},"content":"[note] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"LouisLouis19"},"content":"## Section: Schedule","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"LouisLouis19"},"content":"### Accessing Schedule","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `schedule`  ","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"3m0W33D"},"content":"After running the schedule command, you can see the following:","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"LouisLouis19"},"content":"[] \u003e\u003e\u003e schedule","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"LouisLouis19"},"content":"You have 0 link(s) in this workspace.","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"LouisLouis19"},"content":"Type any of the following to get started: ","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"LouisLouis19"},"content":"\u003e add ","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"LouisLouis19"},"content":"\u003e edit","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"LouisLouis19"},"content":"\u003e help","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"LouisLouis19"},"content":"\u003e view","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"LouisLouis19"},"content":"\u003e back","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"LouisLouis19"},"content":"\u003e delete ","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"LouisLouis19"},"content":"[schedule] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"LouisLouis19"},"content":"### Adding a Schedule","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `add \"\u003cdescription\u003e\" \"\u003cday\u003e\" \"\u003cstart_time\u003e\" \"\u003czoom_link\u003e\"`  ","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"3m0W33D"},"content":"Adding a new schedule when in the schedule’s workspace","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"LouisLouis19"},"content":"[schedule] \u003e\u003e\u003e add “Module1 Tut1” \"Thursday\" \"10:00\" \"https://zoom.us/test\"  ","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"LouisLouis19"},"content":"You have added Module1 Tut’s scheduled zoom link! ","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"LouisLouis19"},"content":"[schedule] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"LouisLouis19"},"content":"### Delete a Schedule","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `delete \u003cindex\u003e`  ","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"3m0W33D"},"content":"Delete schedule when in the schedule’s workspace","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"LouisLouis19"},"content":"[schedule] \u003e\u003e\u003e delete 1 ","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"LouisLouis19"},"content":"You have deleted your 1st schedule. ","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"LouisLouis19"},"content":"Schedule `Module1 Tut, Thursday, 10:00, https://zoom.us/test` has been deleted! ","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"LouisLouis19"},"content":"[schedule] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"LouisLouis19"},"content":"### View Schedule","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `view`  ","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"3m0W33D"},"content":"View all schedules when in the schedule’s workspace","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"LouisLouis19"},"content":"[schedule] \u003e\u003e\u003e view ","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"LouisLouis19"},"content":"You have 3 schedules inside: ","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"LouisLouis19"},"content":"1. Module1 Tut, Thursday, 10:00, https://zoom.us/test ","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"LouisLouis19"},"content":"2. Module2 Lecture, Friday, 14:00, https://zoom.us/test ","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"LouisLouis19"},"content":"3. Module1 Tut1, Thursday, 10:00, https://zoom.us/test","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"LouisLouis19"},"content":"[schedule] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"LouisLouis19"},"content":"## Exiting the Program","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `exit`  ","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"3m0W33D"},"content":"To exit the program, simply run the following command:","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"LouisLouis19"},"content":"[] \u003e\u003e\u003e exit ","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"LouisLouis19"},"content":"Goodbye! ","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"LouisLouis19"},"content":"## Accessing Help","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"LouisLouis19"},"content":"**Format:** `help`  ","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"3m0W33D"},"content":"Depending on your current workspace, you may get different help messages.  ","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"3m0W33D"},"content":"The following shows the help message in the main workspace:","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":183,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"LouisLouis19"},"content":"[] \u003e\u003e\u003e help ","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"LouisLouis19"},"content":"You can run the following commands in the workspace: ","lastModifiedDate":"2021-10-08"},{"lineNumber":187,"author":{"gitId":"LouisLouis19"},"content":"\u003e note ","lastModifiedDate":"2021-10-09"},{"lineNumber":188,"author":{"gitId":"LouisLouis19"},"content":"    - Access all your notes that you have made.  ","lastModifiedDate":"2021-10-08"},{"lineNumber":189,"author":{"gitId":"LouisLouis19"},"content":"\u003e schedule ","lastModifiedDate":"2021-10-09"},{"lineNumber":190,"author":{"gitId":"LouisLouis19"},"content":"    - Access all your schedules that you have scheduled. ","lastModifiedDate":"2021-10-08"},{"lineNumber":191,"author":{"gitId":"LouisLouis19"},"content":"\u003e help ","lastModifiedDate":"2021-10-08"},{"lineNumber":192,"author":{"gitId":"LouisLouis19"},"content":"    - Prints this. ","lastModifiedDate":"2021-10-08"},{"lineNumber":193,"author":{"gitId":"LouisLouis19"},"content":"\u003e quit ","lastModifiedDate":"2021-10-08"},{"lineNumber":194,"author":{"gitId":"LouisLouis19"},"content":"    - Quits TermiNUS ","lastModifiedDate":"2021-10-08"},{"lineNumber":195,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":196,"author":{"gitId":"LouisLouis19"},"content":"You can also run the following to quickly do certain tasks: ","lastModifiedDate":"2021-10-08"},{"lineNumber":197,"author":{"gitId":"LouisLouis19"},"content":"\u003e note add Water “Drinking more water will make me hydrated” ","lastModifiedDate":"2021-10-09"},{"lineNumber":198,"author":{"gitId":"LouisLouis19"},"content":"\u003e schedule view ","lastModifiedDate":"2021-10-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":200,"author":{"gitId":"LouisLouis19"},"content":"Running `help [command]` will print the help for the specific workspace. ","lastModifiedDate":"2021-10-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":202,"author":{"gitId":"LouisLouis19"},"content":"[] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-08"},{"lineNumber":203,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":204,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":205,"author":{"gitId":"LouisLouis19"},"content":"## Advanced Usage of Commands","lastModifiedDate":"2021-10-08"},{"lineNumber":206,"author":{"gitId":"LouisLouis19"},"content":"User can access workspace command directly without entering its environment. Seen below are some command examples.  ","lastModifiedDate":"2021-10-08"},{"lineNumber":207,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"LouisLouis19"},"content":"A workspace command is a command that will bring you to its own workspace. Current workspace command includes notes and schedules.  ","lastModifiedDate":"2021-10-08"},{"lineNumber":209,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"LouisLouis19"},"content":"Command syntax: \u003cworkspace\u003e \u003cavailable workspace command\u003e  ","lastModifiedDate":"2021-10-09"},{"lineNumber":211,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":213,"author":{"gitId":"LouisLouis19"},"content":"Adding a note without entering the note workspace.","lastModifiedDate":"2021-10-09"},{"lineNumber":214,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":215,"author":{"gitId":"LouisLouis19"},"content":"[] \u003e\u003e\u003e note add “Remind Cabbin” “Cabbin was here” ","lastModifiedDate":"2021-10-08"},{"lineNumber":216,"author":{"gitId":"LouisLouis19"},"content":"Note has been added! ","lastModifiedDate":"2021-10-08"},{"lineNumber":217,"author":{"gitId":"LouisLouis19"},"content":"[] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-08"},{"lineNumber":218,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":219,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":220,"author":{"gitId":"LouisLouis19"},"content":"Adding a schedule without entering the schedule workspace.  ","lastModifiedDate":"2021-10-09"},{"lineNumber":221,"author":{"gitId":"LouisLouis19"},"content":"```dtd","lastModifiedDate":"2021-10-08"},{"lineNumber":222,"author":{"gitId":"LouisLouis19"},"content":"[] \u003e\u003e\u003e schedule add “Module1 Tut” Thursday 10:00 https://zoom.us/test","lastModifiedDate":"2021-10-08"},{"lineNumber":223,"author":{"gitId":"LouisLouis19"},"content":"You have added Module1 Tut’s scheduled zoom link!","lastModifiedDate":"2021-10-08"},{"lineNumber":224,"author":{"gitId":"LouisLouis19"},"content":"[] \u003e\u003e\u003e ","lastModifiedDate":"2021-10-08"},{"lineNumber":225,"author":{"gitId":"LouisLouis19"},"content":"```","lastModifiedDate":"2021-10-08"},{"lineNumber":226,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":227,"author":{"gitId":"3m0W33D"},"content":"___  ","lastModifiedDate":"2021-10-10"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":229,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2021-10-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":231,"author":{"gitId":"3m0W33D"},"content":"___  ","lastModifiedDate":"2021-10-10"},{"lineNumber":232,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":233,"author":{"gitId":"-"},"content":"## Command Summary  ","lastModifiedDate":"2020-05-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":235,"author":{"gitId":"3m0W33D"},"content":"| **Action** | **Format, Examples** |","lastModifiedDate":"2021-10-10"},{"lineNumber":236,"author":{"gitId":"3m0W33D"},"content":"| ------------ | -------------  |","lastModifiedDate":"2021-10-10"},{"lineNumber":237,"author":{"gitId":"3m0W33D"},"content":"|**access note workspace**|`note`|","lastModifiedDate":"2021-10-10"},{"lineNumber":238,"author":{"gitId":"3m0W33D"},"content":"|**access schedule workspace**|`schedule`|","lastModifiedDate":"2021-10-10"},{"lineNumber":239,"author":{"gitId":"3m0W33D"},"content":"|**add**|`add \"\u003cname\u003e\" \"\u003ccontent\u003e\"` \u003cbr\u003ee.g. `add note1 note_content`|","lastModifiedDate":"2021-10-10"},{"lineNumber":240,"author":{"gitId":"3m0W33D"},"content":"|**delete**|`delete \u003cindex\u003e` \u003cbr\u003ee.g. `delete 1`|","lastModifiedDate":"2021-10-10"},{"lineNumber":241,"author":{"gitId":"3m0W33D"},"content":"|**view**|`view` or `view {index}`\u003cbr\u003ee.g. `view` or `view 1`|","lastModifiedDate":"2021-10-10"},{"lineNumber":242,"author":{"gitId":"3m0W33D"},"content":"|**help**|`help`|","lastModifiedDate":"2021-10-10"},{"lineNumber":243,"author":{"gitId":"3m0W33D"},"content":"|**exit**|`exit`|","lastModifiedDate":"2021-10-10"},{"lineNumber":244,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":245,"author":{"gitId":"3m0W33D"},"content":"___  ","lastModifiedDate":"2021-10-10"},{"lineNumber":246,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":247,"author":{"gitId":"LouisLouis19"},"content":"## Advanced Command Summary    ","lastModifiedDate":"2021-10-08"},{"lineNumber":248,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":249,"author":{"gitId":"3m0W33D"},"content":"| **Action** | **Format, Examples** |","lastModifiedDate":"2021-10-10"},{"lineNumber":250,"author":{"gitId":"3m0W33D"},"content":"| ------------ | ------------- |","lastModifiedDate":"2021-10-10"},{"lineNumber":251,"author":{"gitId":"3m0W33D"},"content":"|**add note**|`note add \"\u003cname\u003e\" \"\u003ccontent\u003e\"` \u003cbr\u003ee.g. `note add note1 note_content`|","lastModifiedDate":"2021-10-10"},{"lineNumber":252,"author":{"gitId":"3m0W33D"},"content":"|**add schedule**|`schedule add \"\u003cdescription\u003e\" \"\u003cday\u003e\" \"\u003cstart_time\u003e\" \"\u003czoom_link\u003e\"` \u003cbr\u003ee.g. `schedule add “Module1 Tut” \"Thursday\" \"10:00\" \"https://zoom.us/test\"`|","lastModifiedDate":"2021-10-10"},{"lineNumber":253,"author":{"gitId":"3m0W33D"},"content":"|**delete note**|`note delete \u003cindex\u003e` \u003cbr\u003ee.g. `note delete 1`|","lastModifiedDate":"2021-10-10"},{"lineNumber":254,"author":{"gitId":"3m0W33D"},"content":"|**delete schedule**|`schedule delete \u003cindex\u003e` \u003cbr\u003ee.g. `schedule delete 1`|","lastModifiedDate":"2021-10-10"},{"lineNumber":255,"author":{"gitId":"3m0W33D"},"content":"|**view note**|`note view` or `note view {index}` \u003cbr\u003ee.g. `note view 1`|","lastModifiedDate":"2021-10-10"},{"lineNumber":256,"author":{"gitId":"3m0W33D"},"content":"|**view schedule**|`schedule view` \u003cbr\u003ee.g. `schedule view`|","lastModifiedDate":"2021-10-10"},{"lineNumber":257,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":258,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":259,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":260,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":261,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":262,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":263,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":264,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":265,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":266,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":267,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":268,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"LouisLouis19":201,"3m0W33D":40,"Woolicious98":1,"-":30}},{"path":"src/main/java/terminus/Terminus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import com.google.gson.JsonIOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import com.google.gson.JsonSyntaxException;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.CommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"public class Terminus {","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    public static final String[] INVALID_JSON_MESSAGE \u003d {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"        \"Invalid file data detected.\",","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"        \"TermiNUS will still run, but the file will be overwritten when the next command is ran.\",","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"        \"To save your current file, close your terminal (do not run exit).\",","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"        \"Otherwise, you can continue using the program :)\"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    };","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    private CommandParser parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    private String workspace;","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    private ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    private static final Path DATA_DIRECTORY \u003d Path.of(System.getProperty(\"user.dir\"), \"data\");","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    private static final String MAIN_JSON \u003d \"main.json\";","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"     * Enters the main entry-point for the terminus.Terminus application.","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        new Terminus().run();","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"     * Starts the program.","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"    public void run() {","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        start();","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        runCommandsUntilExit();","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        exit();","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"    private void start() {","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.initializeLogger();","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.info(\"Starting Terminus...\");","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"            this.ui \u003d new Ui();","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"            this.parser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"            this.workspace \u003d \"\";","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"            this.moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"            this.moduleStorage.init(DATA_DIRECTORY.resolve(MAIN_JSON));","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"            this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.info(\"Loading file...\");","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"            this.moduleManager \u003d moduleStorage.loadFile();","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(\"File loading has failed.\", e.fillInStackTrace());","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"            handleIoException(e);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"        } catch (JsonSyntaxException | JsonIOException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.severe(\"Invalid file data detected!\", e.fillInStackTrace());","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"            ui.printSection(INVALID_JSON_MESSAGE);","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"        } finally {","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"            if (this.moduleManager \u003d\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"                TerminusLogger.warning(\"File not found.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"                TerminusLogger.warning(\"Creating new NusModule instance...\");","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"                this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"            } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"                TerminusLogger.info(\"File loaded.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"            this.ui.printParserBanner(this.parser, this.moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(\"Terminus has started.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"    private void runCommandsUntilExit() {","lastModifiedDate":"2021-10-02"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"        while (true) {","lastModifiedDate":"2021-10-02"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"            assert workspace !\u003d null : \"Workspace should always have a value\";","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"3m0W33D"},"content":"            String input \u003d ui.requestCommand(workspace);","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.debug(\"User entered: \" + input);","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"            assert input !\u003d null : \"Input should not be null.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"3m0W33D"},"content":"            Command currentCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"            try {","lastModifiedDate":"2021-10-02"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"                currentCommand \u003d parser.parseCommand(input);","lastModifiedDate":"2021-10-02"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"                CommandResult result \u003d currentCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"                boolean isExitCommand \u003d result.isOk() \u0026\u0026 result.isExit();","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"                boolean isWorkspaceCommand \u003d result.isOk() \u0026\u0026 result.getAdditionalData() !\u003d null;","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"                if (isExitCommand) {","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"3m0W33D"},"content":"                    break;","lastModifiedDate":"2021-10-02"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"                } else if (isWorkspaceCommand) {","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"3m0W33D"},"content":"                    parser \u003d result.getAdditionalData();","lastModifiedDate":"2021-10-02"},{"lineNumber":102,"author":{"gitId":"kelvneo"},"content":"                    assert parser !\u003d null : \"commandParser is not null\";","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"3m0W33D"},"content":"                    workspace \u003d parser.getWorkspace();","lastModifiedDate":"2021-10-02"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"                    ui.printParserBanner(parser, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"3m0W33D"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":106,"author":{"gitId":"kelvneo"},"content":"                TerminusLogger.info(\"Saving data into file...\");","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"3m0W33D"},"content":"                this.moduleStorage.saveFile(moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"kelvneo"},"content":"                TerminusLogger.info(\"Save completed.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"LouisLouis19"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"kelvneo"},"content":"                TerminusLogger.warning(\"Invalid input provided: \" + input, e.fillInStackTrace());","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"kelvneo"},"content":"                ui.printSection(e.getMessage());","lastModifiedDate":"2021-10-02"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"            } catch (InvalidArgumentException e) {","lastModifiedDate":"2021-10-03"},{"lineNumber":113,"author":{"gitId":"kelvneo"},"content":"                TerminusLogger.warning(\"Invalid input provided: \" + input, e.fillInStackTrace());","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"kelvneo"},"content":"                // Check if the exception specified a correct command format for the user to follow.","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"kelvneo"},"content":"                if (e.getFormat() !\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"kelvneo"},"content":"                    // Print the format of the command along with the error message to the user.","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"3m0W33D"},"content":"                    ui.printSection(e.getMessage(),","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"3m0W33D"},"content":"                            String.format(Messages.INVALID_ARGUMENT_FORMAT_MESSAGE, e.getFormat()));","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"kelvneo"},"content":"                } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"Woolicious98"},"content":"                    ui.printSection(e.getMessage());","lastModifiedDate":"2021-10-03"},{"lineNumber":122,"author":{"gitId":"kelvneo"},"content":"                }","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"kelvneo"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"kelvneo"},"content":"                TerminusLogger.warning(\"File saving has failed.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"kelvneo"},"content":"                handleIoException(e);","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"kelvneo"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"kelvneo"},"content":"    private void handleIoException(IOException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.severe(\"Save file is inaccessible.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.severe(e.getMessage(), e.getCause());","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"kelvneo"},"content":"        ui.printSection(","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"Woolicious98"},"content":"                String.format(Messages.ERROR_MESSAGE_FILE, e.getMessage()),","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"kelvneo"},"content":"                \"TermiNUS may still run, but your changes may not be saved.\",","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"kelvneo"},"content":"                \"Check \u0027terminus.log\u0027 for more information.\"","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"kelvneo"},"content":"        );","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":139,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":140,"author":{"gitId":"kelvneo"},"content":"    private void exit() {","lastModifiedDate":"2021-10-02"},{"lineNumber":141,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(\"Saving data into file...\");","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"kelvneo"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"3m0W33D"},"content":"            this.moduleStorage.saveFile(moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":144,"author":{"gitId":"Woolicious98"},"content":"            this.moduleStorage.saveAllNotes(moduleManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.info(\"Save completed.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"kelvneo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(\"File saving has failed.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"kelvneo"},"content":"            handleIoException(e);","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"kelvneo"},"content":"        this.ui.printExitMessage();","lastModifiedDate":"2021-10-02"},{"lineNumber":151,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kelvneo":104,"LouisLouis19":2,"3m0W33D":25,"Woolicious98":13,"-":8}},{"path":"src/main/java/terminus/activerecall/DifficultyModifier.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.activerecall;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"public class DifficultyModifier {","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"    public static final double MIN_VALUE \u003d 0.2;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"    public static final double MAX_VALUE \u003d 0.9;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"    private static final double MAX_INCREASE \u003d 0.45;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"    private static final double GROWTH_RATE \u003d 8;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"    private static final double LOG_CURVE_MIDPOINT \u003d 0.4;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"     * Get the value to increment or decrement by based on the logistic curve.","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"     * @param x The difficulty difference","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"     * @return The increment or decrement to apply to the question randomness weight.","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    private static double getCurveValue(double x) {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"        double exponentValue \u003d -1 * DifficultyModifier.GROWTH_RATE * (x - DifficultyModifier.LOG_CURVE_MIDPOINT);","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"        double denominator \u003d (1 + Math.exp(exponentValue));","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"        return DifficultyModifier.MAX_INCREASE / denominator;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"     * Get the new randomness weightage of the question if the question is deemed easy.","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"     * @param initial The current randomness weightage of the question","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"     * @return The new randomness weightage of the question","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    public static double tweakEasyQuestionDifficulty(double initial) {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        if (initial \u003c\u003d MIN_VALUE) {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"            return MIN_VALUE;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        double difference \u003d initial - MIN_VALUE;","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        return Math.max(MIN_VALUE, initial - getCurveValue(difference));","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"     * Get the new randomness weightage of the question if the question is deemed hard.","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"     * @param initial The current randomness weightage of the question","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"     * @return The new randomness weightage of the question","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    public static double tweakHardQuestionDifficulty(double initial) {","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        if (initial \u003e\u003d MAX_VALUE) {","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"            return MAX_VALUE;","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        double difference \u003d MAX_VALUE - initial;","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        return Math.min(MAX_VALUE, initial + getCurveValue(difference));","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kelvneo":51}},{"path":"src/main/java/terminus/activerecall/GameEnvironment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.activerecall;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import java.time.Duration;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import java.time.Instant;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"public class GameEnvironment {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    private final Ui ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"    private final QuestionGenerator questionGenerator;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    GameEnvironment(Ui ui, QuestionGenerator generator) {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"        this.questionGenerator \u003d generator;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"     * Starts the active recall session.","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    public void run() {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"        showPreGameInformation();","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"        while (questionGenerator.hasNext()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"            Question question \u003d questionGenerator.next();","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"            promptQuestion(question);","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"            int difficulty \u003d getUserFeedback();","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"            if (difficulty \u003d\u003d -1) {","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"                break;","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"            postQuestionFeedback(question, difficulty);","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        ui.printSection(Messages.ACTIVE_RECALL_SESSION_END_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"    private void showPreGameInformation() {","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        int questions \u003d questionGenerator.getQuestionPoolSize();","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        ui.printSection(","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"            \"---[Active Recall]---\",","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"            \"\",","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"            \"We will be starting your active recall training session.\",","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"            String.format(\"This session will consist of %d questions.\", questions),","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"            \"\"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        );","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        ui.getUserInput(Messages.ACTIVE_RECALL_ENTER_TO_CONTINUE_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"    private void promptQuestion(Question question) {","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        Instant start \u003d Instant.now(); ","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        ui.printSection(","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"            \"\",","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"            \"---\",","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"            \"\",","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"            \"Question:\",","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"            question.getQuestion(),","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"            \"\"","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"        );","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"        ui.getUserInput(Messages.ACTIVE_RECALL_ENTER_TO_CONTINUE_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        long duration \u003d Duration.between(start, Instant.now()).getSeconds();","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"        ui.printSection(","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"            String.format(\"You took %d seconds to reveal the answer.\", duration),","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"            \"\",","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"            \"Answer:\", ","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"            question.getAnswer()","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"        );","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"    private int getUserFeedback() {","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"        int difficulty \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"        do {","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"            ui.printSection(Messages.ACTIVE_RECALL_ASK_QUESTION_DIFFICULTY_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"            String input \u003d ui.getUserInput(\"[1/2/3/E] \u003e\u003e \").trim().toLowerCase();","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"            Pattern inputPattern \u003d Pattern.compile(\"^[123e]$\");","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"            Matcher matcher \u003d inputPattern.matcher(input);","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"            if (!matcher.matches()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"                ui.printSection(Messages.ERROR_MESSAGE_INVALID_INPUT);","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"                continue;","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"            } else if (input.equalsIgnoreCase(\"e\")) {","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"                difficulty \u003d -1;","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"                break;","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"            difficulty \u003d Integer.parseInt(input);","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"            ","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"        } while (difficulty \u003d\u003d 0);","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"        assert difficulty \u003c\u003d 3 \u0026\u0026 difficulty \u003e\u003d -1;","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"        return difficulty;","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"    private void postQuestionFeedback(Question question, int difficulty) {","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"kelvneo"},"content":"        assert difficulty \u003e\u003d 1 \u0026\u0026 difficulty \u003c\u003d 3;","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"        double weight \u003d question.getWeight();","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"        if (difficulty \u003d\u003d 1) {","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"            double newWeight \u003d DifficultyModifier.tweakEasyQuestionDifficulty(weight);","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"            question.setWeight(newWeight);","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"kelvneo"},"content":"        } else if (difficulty \u003d\u003d 3) {","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"            double newWeight \u003d DifficultyModifier.tweakHardQuestionDifficulty(weight);","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"kelvneo"},"content":"            question.setWeight(newWeight);","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"kelvneo"},"content":"        ui.printSection(\"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"kelvneo"},"content":"        if (questionGenerator.hasNext()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"kelvneo"},"content":"            ui.getUserInput(Messages.ACTIVE_RECALL_ENTER_TO_CONTINUE_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"kelvneo"},"content":"     * Create a new GameEnvironment instance.","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"kelvneo"},"content":"     * @param ui The UI to handle all input and output.","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"kelvneo"},"content":"     * @param questions The list of questions to ask from.","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"kelvneo"},"content":"     * @param questionCount The maximum number of questions.","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"kelvneo"},"content":"     * @return The new GameEnvironment to start the Active Recall.","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"kelvneo"},"content":"    public static GameEnvironment createNewEnvironment(Ui ui, List\u003cQuestion\u003e questions, int questionCount) {","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"kelvneo"},"content":"        return new GameEnvironment(ui, new QuestionGenerator(questions, questionCount));","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kelvneo":121}},{"path":"src/main/java/terminus/activerecall/QuestionGenerator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.activerecall;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import java.util.Map.Entry;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.util.NavigableMap;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.util.Random;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.util.TreeMap;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"public class QuestionGenerator {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    private final NavigableMap\u003cDouble, Question\u003e questionBank \u003d new TreeMap\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"    private final Random random;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    private double total \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"    private int questionCount;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"     * Instantiates a QuestionGenerator.","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"     * @param questionBank The list of questions to pick from.","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"     * @param questionCount The maximum number of questions to pull.","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    public QuestionGenerator(List\u003cQuestion\u003e questionBank, int questionCount) {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"        this(questionBank, questionCount, new Random());","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"     * Instantiates a QuestionGenerator with a specific Random generator.","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"     * @param questionBank The list of questions to pick from.","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"     * @param questionCount The maximum number of questions to pull.","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"     * @param random The random generator to determine the order of questions.","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    public QuestionGenerator(List\u003cQuestion\u003e questionBank, int questionCount, Random random) {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        this.questionCount \u003d questionCount;","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        this.random \u003d random;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        questionBank.forEach(this::addQuestion);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"    private void addQuestion(Question question) {","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        assert question.getWeight() \u003e 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        total +\u003d question.getWeight();","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"        questionBank.put(total, question);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"     * Gets the size of the question pool.","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"     * @return The size of the question pool.","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"    public int getQuestionPoolSize() {","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        return Math.min(questionBank.size(), questionCount);","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"     * Checks if there are still questions left in the pool,","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"     * or if the maximum number of questions have been asked.","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"     * @return Return false if there are no questions left, or if the maximum number of questions have been asked. ","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"    public boolean hasNext() {","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"        return questionCount \u003e 0 \u0026\u0026 !(total \u003c\u003d 0) \u0026\u0026 !questionBank.isEmpty();","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"     * Gets the next question from the question pool randomly.","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"     * @return The next question from the question pool.","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"     * @throws NullPointerException When there are no questions left.","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"    public Question next() {","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"        if (!hasNext()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"            throw new NullPointerException(\"There are no questions left.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"        double key \u003d random.nextDouble() * total;","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"        Entry\u003cDouble, Question\u003e keyValuePair \u003d questionBank.higherEntry(key);","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"        Question question \u003d keyValuePair.getValue();","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"        questionBank.remove(keyValuePair.getKey(), question);","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"        total -\u003d question.getWeight();","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"        questionCount -\u003d 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"        return question;","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kelvneo":85}},{"path":"src/main/java/terminus/command/BackCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleWorkspaceCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"public class BackCommand extends Command {","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"        return CommonFormat.COMMAND_BACK;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"        return Messages.MESSAGE_COMMAND_BACK;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"     * Returns a command result containing the CommandParser object.","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"     * @param ui            The Ui object to send messages to the users.","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"     * @return CommandResult contains a CommandParser","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidCommandException Throws if the command is invalid","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    public CommandResult execute(Ui ui, ModuleManager moduleManager) throws InvalidCommandException {","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Executing Back Command\");","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        if (isModuleNameNullOrEmpty()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"            MainCommandParser mainParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.info(\"Changing Workspace to:\" + mainParser.getWorkspace());","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"            return new CommandResult(true, mainParser);","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"        } else {","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"            ModuleWorkspaceCommandParser moduleParser \u003d ModuleWorkspaceCommandParser.getInstance();","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"            moduleParser.setWorkspace(getModuleName());","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"            return new CommandResult(true, moduleParser);","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"    private boolean isModuleNameNullOrEmpty() {","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        String moduleName \u003d getModuleName();","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        return moduleName \u003d\u003d null || moduleName.isBlank();","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"3m0W33D":46,"Woolicious98":4}},{"path":"src/main/java/terminus/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    protected String arguments;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"    private String moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"     * Returns the format for the command.","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object holding the appropriate format for the command.","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    public abstract String getFormat();","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object containing the description for this command.","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    public abstract String getHelpMessage();","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"     * Parses remaining arguments for the command.","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"     * @param arguments The string arguments to be parsed in to the respective fields.","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when arguments parsing fails.","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"    public void parseArguments(String arguments)","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"     * Executes the command. Prints the required result to the Ui.","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"     * @param ui The Ui object to send messages to the users.","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"     * @return The CommandResult object indicating the success of failure including additional options.","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidCommandException when the command could not be found.","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when arguments parsing fails.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException when the file to be saved is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"    public abstract CommandResult execute(Ui ui, ModuleManager moduleManager)","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"     * Returns the module name.","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"     * @return The String containing the module name","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"    public String getModuleName() {","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        return moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"     * Sets the module name.","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleName The String containing the module name to set","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"    public void setModuleName(String moduleName) {","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"LouisLouis19":8,"kelvneo":4,"3m0W33D":51,"Woolicious98":6}},{"path":"src/main/java/terminus/command/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.CommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"public class CommandResult {","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"    protected CommandParser additionalData;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"    protected boolean isOk;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"    protected boolean isExit;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    public CommandResult(boolean isOk) {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"        this(isOk, false);","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"    public CommandResult(boolean isOk, boolean isExit) {","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"        this(isOk, isExit, null);","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    public CommandResult(boolean isOk, CommandParser additionalData) {","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"        this(isOk, false, additionalData);","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    public CommandResult(boolean isOk, String errorMessage) {","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"        this(isOk, false, null);","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    public CommandResult(boolean isOk, boolean isExit, CommandParser additionalData) {","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"        this.additionalData \u003d additionalData;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"        this.isOk \u003d isOk;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"     * Returns the CommandParser that is required to switch workspaces.","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"     * If additionalData will be null.","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"     * @return The CommandParser object for the workspace or else null.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    public CommandParser getAdditionalData() {","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"        return additionalData;","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"     * Returns the result of the command execution.","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"     * @return True if successful or else false.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"    public boolean isOk() {","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"        return isOk;","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"     * Returns the result to exit or not.","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"     * @return True if \u0027exit\u0027 command is sent.","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        return isExit;","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":5,"3m0W33D":53,"Woolicious98":3}},{"path":"src/main/java/terminus/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"        return CommonFormat.COMMAND_EXIT;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"        return Messages.MESSAGE_COMMAND_EXIT;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    public CommandResult execute(Ui ui, ModuleManager moduleManager) throws InvalidCommandException {","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Executing Exit Command\");","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"        return new CommandResult(true, true);","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":17,"Woolicious98":4,"3m0W33D":6}},{"path":"src/main/java/terminus/command/GoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleWorkspaceCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"public class GoCommand extends WorkspaceCommand {","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    private String moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    public GoCommand() {","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"        super(ModuleWorkspaceCommandParser.getInstance());","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"     * Returns the format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object holding the appropriate format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        return \"go \u003cmodule name\u003e\";","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object containing the description for this command.","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"        return \"Go to a specific module\u0027s workspace\";","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        String[] args \u003d arguments.strip().split(CommonFormat.SPACE_DELIMITER, 2);","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        moduleName \u003d args[0];","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"        if (args.length \u003e 1) {","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"            super.parseArguments(args[1]);","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"            super.parseArguments(null);","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"    public CommandResult execute(Ui ui, ModuleManager moduleManager)","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"        NusModule module \u003d moduleManager.getModule(moduleName);","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"        if (module \u003d\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(\"Module not found! Type \u0027module view\u0027 for the list of modules.\");","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"        commandMap.setWorkspace(moduleName);","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"        return super.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"3m0W33D":62,"Woolicious98":4}},{"path":"src/main/java/terminus/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.CommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"    public static final String HELP_MENU_MESSAGE \u003d \"\\nHelp Menu\\n---------\";","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"    private final CommandParser commandMap;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    public HelpCommand(CommandParser commandMap) {","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"        this.commandMap \u003d commandMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"        return CommonFormat.COMMAND_HELP;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"        return Messages.MESSAGE_COMMAND_HELP;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    public CommandResult execute(Ui ui, ModuleManager moduleManager) throws InvalidCommandException {","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Executing Help Command\");","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        ui.printSection(HELP_MENU_MESSAGE);","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        ui.printSection(commandMap.getHelpMenu());","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        return new CommandResult(true);","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":2,"3m0W33D":31,"Woolicious98":4}},{"path":"src/main/java/terminus/command/TimetableCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.command;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import terminus.timetable.Timetable;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import static terminus.common.CommonUtils.isStringNullOrEmpty;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"import static terminus.common.CommonUtils.isValidDay;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"public class TimetableCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"    private String day;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"     * Returns the format of the command.","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"     * @return The string object holding the appropriate format for the timetable command.","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"        return CommonFormat.COMMAND_TIMETABLE_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"     * @return The String object containing the description for the timetable command.","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"        return Messages.MESSAGE_COMMAND_TIMETABLE;","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"     * Parses remaining arguments for the timetable command.","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"     * @param arguments The string arguments to be parsed in to the respective fields.","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"     * @throws InvalidArgumentException when arguments are invalid.","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"        day \u003d arguments;","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"        if (!isStringNullOrEmpty(day) \u0026\u0026 !isValidDay(day)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.warning(String.format(\"Invalid Day: %s\", day));","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"            throw new InvalidArgumentException(String.format(Messages.ERROR_MESSAGE_INVALID_DAY, day));","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"        TerminusLogger.info(String.format(\"Parsed arguments (day \u003d %s) to Timetable Command\", day));","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"     * Executes the timetable command. Prints the relevant response to the Ui.","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"     * @param ui The Ui object to send messages to the users.","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"     * @return CommandResult to indicate the success and additional information about the execution.","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"    public CommandResult execute(Ui ui, ModuleManager moduleManager) {","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"        Timetable timetable \u003d new Timetable(moduleManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"        String schedule;","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"        if (isStringNullOrEmpty(day)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"            schedule \u003d timetable.getWeeklySchedule();","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"            assert day !\u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"            schedule \u003d timetable.getDailySchedule(day);","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"LouisLouis19"},"content":"        result.append(timetable.checkEmptySchedule(schedule, day));","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"        ui.printSection(result.toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"        return new CommandResult(true, false);","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"LouisLouis19":77}},{"path":"src/main/java/terminus/command/WorkspaceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.CommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"public abstract class WorkspaceCommand extends Command {","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"    protected CommandParser commandMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    public WorkspaceCommand(CommandParser commandMap) {","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"        this.commandMap \u003d commandMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"     * Returns the Command Result after execution. If no other arguments, returns the workspace.","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     * @param ui The Ui object to send messages to the users.","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the list of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"     * @return The CommandResult containing success or failure of command and CommandParser Object.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidCommandException when the command could not be found.","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException when the file to be saved is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    public CommandResult execute(Ui ui, ModuleManager moduleManager)","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        assert commandMap !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Executing Workspace Command\");","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        if (isNotNullOrBlank()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.info(\"Parsing workspace command\");","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"            return commandMap.parseCommand(arguments).execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        } else {","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.info(\"Switching workspace to: \" + commandMap.getWorkspace());","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"            return new CommandResult(true, commandMap);","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"    private boolean isNotNullOrBlank() {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        return arguments !\u003d null \u0026\u0026 !arguments.isBlank();","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"LouisLouis19":1,"3m0W33D":41,"Woolicious98":5}},{"path":"src/main/java/terminus/command/content/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Content;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":" * DeleteCommand generic class which will manage the deletion of Content specified by user command.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":" *","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":" * @param \u003cT\u003e Content object type.","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"public class DeleteCommand\u003cT extends Content\u003e extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    private final Class\u003cT\u003e type;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"    private int itemNumber;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    protected String deletedContentName;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"     * Creates a DeleteCommand object with referenced to the provided class type.","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"     * @param type Content object type.","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    public DeleteCommand(Class\u003cT\u003e type) {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"        return CommonFormat.COMMAND_DELETE_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"        return Messages.MESSAGE_COMMAND_DELETE;","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"     * Parses the arguments to the DeleteCommand object. The arguments are attributes to identify a Content object in an","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"     * ArrayList.","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"     * @param arguments The string arguments to be parsed in to the respective fields.","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when argument provided is empty, non-numeric or less than 1.","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Parsing delete arguments\");","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"            itemNumber \u003d Integer.parseInt(arguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(String.format(\"Failed to parse delete itemNumber : %s\", arguments));","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"        if (itemNumber \u003c\u003d 0) {","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(String.format(\"Invalid itemNumber : %d\", itemNumber));","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"     * Executes the delete command. Prints the relevant response to the Ui and the specified Content object will be","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"     * removed from the arraylist.","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"     * @param ui            The Ui object to send messages to the users.","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The ModuleManager that contains the NusModules.","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"     * @return CommandResult to indicate the success and additional information about the execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when argument provided is index out of bounds of the ArrayList.","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException when file is inaccessible.","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"    public CommandResult execute(Ui ui, ModuleManager moduleManager) throws InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"        assert getModuleName() !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"        NusModule module \u003d moduleManager.getModule(getModuleName());","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cT\u003e contentManager \u003d module.getContentManager(type);","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"3m0W33D"},"content":"        assert contentManager !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Executing Delete Command\");","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"        this.deletedContentName \u003d contentManager.deleteContent(itemNumber);","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"3m0W33D"},"content":"        assert deletedContentName !\u003d null \u0026\u0026 !deletedContentName.isBlank();","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"                String.format(\"%s(%s) has been deleted\", CommonUtils.getClassName(type), deletedContentName));","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"        ui.printSection(String.format(Messages.MESSAGE_RESPONSE_DELETE,","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"                CommonUtils.getClassName(type).toLowerCase(), deletedContentName));","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"        return new CommandResult(true);","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":39,"kelvneo":3,"3m0W33D":23,"Woolicious98":34}},{"path":"src/main/java/terminus/command/content/InnerModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.WorkspaceCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.InnerModuleCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"public abstract class InnerModuleCommand extends WorkspaceCommand {","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    private InnerModuleCommandParser commandMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    public InnerModuleCommand(InnerModuleCommandParser commandMap) {","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"        super(commandMap);","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"        this.commandMap \u003d commandMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    public CommandResult execute(Ui ui, ModuleManager moduleManager)","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"        commandMap.setModuleName(getModuleName());","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"            return super.execute(ui, moduleManager);","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"            if (e.getFormat() \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"                throw e;","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(\"Failed to parse command.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(commandMap.getWorkspace() + \" : \" + e.getFormat());","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"                    String.format(Messages.INVALID_ARGUMENT_FORMAT_MESSAGE_EXCEPTION, commandMap.getWorkspace(true),","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"                            e.getFormat()),","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"                    e.getMessage()","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"            );","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"3m0W33D":41,"Woolicious98":2}},{"path":"src/main/java/terminus/command/content/NotesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"public class NotesCommand extends InnerModuleCommand {","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"    public NotesCommand() {","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"        super(NoteCommandParser.getInstance());","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"        return CommonFormat.COMMAND_NOTE;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"        return Messages.MESSAGE_COMMAND_NOTE;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":1,"3m0W33D":18,"Woolicious98":4}},{"path":"src/main/java/terminus/command/content/QuestionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.QuestionCommandParser;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"public class QuestionCommand extends InnerModuleCommand {","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"    public QuestionCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"        super(QuestionCommandParser.getInstance());","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"        return CommonFormat.COMMAND_QUESTION;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"        return Messages.MESSAGE_COMMAND_QUESTION;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"kelvneo":22}},{"path":"src/main/java/terminus/command/content/ScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":" * ScheduleCommand class to manage commands inside the Schedule workspace.","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"public class ScheduleCommand extends InnerModuleCommand {","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"    public ScheduleCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"        super(LinkCommandParser.getInstance());","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"     * Returns the keyword for schedule-related commands.","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"     * @return The string containing the keyword for schedule-related commands.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"        return CommonFormat.COMMAND_SCHEDULE;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"     * @return The string containing the description for this command.","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"        return Messages.MESSAGE_COMMAND_SCHEDULE;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":31,"kelvneo":1,"3m0W33D":2,"Woolicious98":2}},{"path":"src/main/java/terminus/command/content/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Content;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":" * ViewModuleCommand generic class which will manage the viewing of Content information specified by user command.","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":" *","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":" * @param \u003cT\u003e Content object type.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"public class ViewCommand\u003cT extends Content\u003e extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    private final Class\u003cT\u003e type;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    private int itemNumber;","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"     * Determines whether to print the list of all Content objects or just the specified one.","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    private boolean displayAll;","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"     * Creates a ViewModuleCommand object with referenced to the provided class type.","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"     * @param type Content object type.","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    public ViewCommand(Class\u003cT\u003e type) {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"        this.displayAll \u003d false;","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        return CommonFormat.COMMAND_VIEW_FORMAT;","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        return Messages.MESSAGE_COMMAND_VIEW;","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"     * Parses the arguments to the ViewModuleCommand object. The arguments are attributes to identify a Content object","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"     * in an ArrayList. The arguments can be empty which refers to viewing a list all Content object in an ArrayList","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"     * instead.","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"     * @param arguments The string arguments to be parsed in to the respective fields.","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when a non-empty argument provided is non-numeric or less than 1.","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"            displayAll \u003d true;","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"            return;","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Parsing view arguments\");","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"            itemNumber \u003d Integer.parseInt(arguments);","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"            displayAll \u003d false;","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(String.format(\"Failed to parse view itemNumber : %s\", arguments));","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"        if (itemNumber \u003c\u003d 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(String.format(\"Invalid itemNumber : %d\", itemNumber));","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"     * Executes the view command. Prints the relevant response to the Ui.","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"     * @param ui            The Ui object to send messages to the users.","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"     * @return CommandResult to indicate the success and additional information about the execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when argument provided is index out of bounds of the ArrayList.","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":89,"author":{"gitId":"3m0W33D"},"content":"    public CommandResult execute(Ui ui, ModuleManager moduleManager) throws InvalidArgumentException {","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"3m0W33D"},"content":"        assert getModuleName() !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"3m0W33D"},"content":"        NusModule module \u003d moduleManager.getModule(getModuleName());","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cT\u003e contentManager \u003d module.getContentManager(type);","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"        if (displayAll) {","lastModifiedDate":"2021-10-03"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"            String fullList \u003d contentManager.listAllContents();","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"3m0W33D"},"content":"            assert fullList !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"            if (fullList.isBlank()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"                result.append(Messages.EMPTY_CONTENT_LIST_MESSAGE);","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"            } else {","lastModifiedDate":"2021-10-03"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"                result.append(Messages.CONTENT_MESSAGE_HEADER);","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"kelvneo"},"content":"                result.append(contentManager.listAllContents());","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"kelvneo"},"content":"                result.append(\"\\nRerun the same command with an index behind to view the content.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":104,"author":{"gitId":"kelvneo"},"content":"        } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"kelvneo"},"content":"            result.append(contentManager.getContentData(itemNumber));","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"kelvneo"},"content":"        ui.printSection(result.toString());","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"        return new CommandResult(true, false);","lastModifiedDate":"2021-10-03"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"kelvneo":12,"3m0W33D":25,"Woolicious98":73}},{"path":"src/main/java/terminus/command/content/link/AddLinkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.link;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static terminus.common.CommonUtils.isValidDay;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static terminus.common.CommonUtils.isValidUrl;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":" * AddLinkCommand class which will manage the adding of new Links from user command.","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"public class AddLinkCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"    private String description;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"    private String day;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"    private LocalTime startTime;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"    private String link;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"    private static final int ADD_SCHEDULE_ARGUMENTS \u003d 4;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        return CommonFormat.COMMAND_ADD_SCHEDULE_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"        return Messages.MESSAGE_COMMAND_ADD;","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"     * Parses the arguments to the AddLinkCommand object.","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"     * The arguments are attributes for a new Link object.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"     * @param arguments The string arguments to be parsed in to the respective fields.","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when arguments are empty or missing.","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e argArray \u003d CommonUtils.findArguments(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"        if (!isValidScheduleArguments(argArray)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"        String userStartTime \u003d argArray.get(2);","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"        this.description \u003d argArray.get(0);","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"        this.day \u003d argArray.get(1);","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"        this.startTime \u003d CommonUtils.convertToLocalTime(userStartTime);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"        this.link \u003d argArray.get(3);","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"        if (!isValidDay(this.day)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.warning(String.format(\"Invalid Day: %s\", this.day));","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"            throw new InvalidArgumentException(String.format(Messages.ERROR_MESSAGE_INVALID_DAY, this.day));","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"LouisLouis19"},"content":"        if (!isValidUrl(this.link)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.warning(String.format(\"Invalid Link: %s\", this.link));","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"            throw new InvalidArgumentException(","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"LouisLouis19"},"content":"                    String.format(Messages.ERROR_MESSAGE_INVALID_LINK, this.link));","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"LouisLouis19"},"content":"        TerminusLogger.info(String.format(\"Parsed arguments (description \u003d %s, day \u003d %s, startTime \u003d %s, link \u003d %s)\"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"                + \" to Add Link Command\", description, day, startTime, link));","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"     * Executes the add link command.","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"     * Prints the relevant response to the Ui.","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"LouisLouis19"},"content":"     * @param ui The Ui object to send messages to the users.","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the list of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"     * @return CommandResult to indicate the success and additional information about the execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"3m0W33D"},"content":"    public CommandResult execute(Ui ui, ModuleManager moduleManager) {","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"3m0W33D"},"content":"        assert getModuleName() !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"3m0W33D"},"content":"        NusModule module \u003d moduleManager.getModule(getModuleName());","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"        ContentManager contentManager \u003d module.getContentManager(Link.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"LouisLouis19"},"content":"        assert contentManager !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"        contentManager.add(new Link(description, day, startTime, link));","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"        ui.printSection(String.format(Messages.MESSAGE_RESPONSE_ADD, CommonFormat.COMMAND_SCHEDULE, description));","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"LouisLouis19"},"content":"        return new CommandResult(true, false);","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"LouisLouis19"},"content":"     * Checks if arguments are non-empty and valid.","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"     * @param argArray The command arguments in an array list.","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"LouisLouis19"},"content":"     * @return True if the appropriate number of arguments are present, false otherwise.","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"LouisLouis19"},"content":"    private boolean isValidScheduleArguments(ArrayList\u003cString\u003e argArray) {","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"LouisLouis19"},"content":"        boolean isValid \u003d true;","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"LouisLouis19"},"content":"        if (argArray.size() !\u003d ADD_SCHEDULE_ARGUMENTS) {","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.warning(String.format(\"Failed to find %d arguments, %d arguments found\",","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"LouisLouis19"},"content":"                    ADD_SCHEDULE_ARGUMENTS, argArray.size()));","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"LouisLouis19"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"        } else if (CommonUtils.hasEmptyString(argArray)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.warning(\"Failed to parse arguments, some arguments found is empty\");","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"LouisLouis19"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"LouisLouis19"},"content":"        return isValid;","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":88,"kelvneo":3,"3m0W33D":17,"Woolicious98":12}},{"path":"src/main/java/terminus/command/content/note/AddNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":" * AddNoteCommand class which will manage the adding of new Notes from user command.","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"public class AddNoteCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    private String name;","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    private String data;","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"    private static final int ADD_NOTE_ARGUMENTS \u003d 2;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"        return CommonFormat.COMMAND_ADD_NOTE_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        return Messages.MESSAGE_COMMAND_ADD;","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"     * Parses the arguments to the AddNoteCommand object.","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"     * The arguments are attributes for a new Note object.","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"     * @param arguments The string arguments to be parsed in to the respective fields.","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when arguments are empty or missing.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(\"Parsing add note arguments\");","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.warning(\"Failed to parse arguments: arguments is empty\");","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        // Regex to find arguments","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e argArray \u003d CommonUtils.findArguments(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"        if (!isValidNoteArguments(argArray)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"        this.name \u003d argArray.get(0);","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"        this.data \u003d argArray.get(1);","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(String.format(\"Parsed argument (name \u003d %s, data \u003d %s) to Add Note Command\", name, data));","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"     * Executes the add Note command.","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"     * Prints the relevant response to the Ui and a new Note will be added into the arraylist of Notes.","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"     * @param ui The Ui object to send messages to the users.","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"     * @return CommandResult to indicate the success and additional information about the execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException when the file to be saved is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"    public CommandResult execute(Ui ui, ModuleManager moduleManager) throws IOException, InvalidArgumentException {","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"        assert getModuleName() !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(\"Executing Add Note Command\");","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"        NusModule module \u003d moduleManager.getModule(getModuleName());","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"        ContentManager contentManager \u003d module.getContentManager(Note.class);","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"        assert contentManager !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"        if (contentManager.isDuplicateName(name)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_DUPLICATE_NAME);","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"        Note newNote \u003d new Note(name, data);","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"        contentManager.add(newNote);","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(String.format(\"Note(\\\"%s\\\",\\\"%s\\\") has been added\", name, data));","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"        ui.printSection(String.format(Messages.MESSAGE_RESPONSE_ADD, CommonFormat.COMMAND_NOTE, name));","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"        // Save to file","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.addNoteFromModule(getModuleName(), newNote);","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"        return new CommandResult(true, false);","lastModifiedDate":"2021-10-03"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"     * Checks if arguments are non-empty and valid.","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"     * @param argArray The command arguments in an array list.","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"     * @return True if the appropriate number of arguments are present, false otherwise.","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"LouisLouis19"},"content":"    private boolean isValidNoteArguments(ArrayList\u003cString\u003e argArray) {","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"        boolean isValid \u003d true;","lastModifiedDate":"2021-10-03"},{"lineNumber":100,"author":{"gitId":"LouisLouis19"},"content":"        if (argArray.size() !\u003d ADD_NOTE_ARGUMENTS) {","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.warning(String.format(\"Failed to find %d arguments: %d arguments found\",","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"                    ADD_NOTE_ARGUMENTS, argArray.size()));","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-03"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"        } else if (CommonUtils.hasEmptyString(argArray)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.warning(\"Failed to parse arguments: some arguments found is empty\");","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-03"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"        } else if (!CommonUtils.isValidFileName(argArray.get(0))) {","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.warning(\"Failed to parse arguments: given note name is invalid\");","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"        } else if (argArray.get(1).length() \u003e CommonFormat.MAX_FILE_SIZE) {","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.warning(\"Failed to parse arguments: given note data is too long\");","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"        return isValid;","lastModifiedDate":"2021-10-03"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"LouisLouis19":5,"kelvneo":3,"3m0W33D":9,"Woolicious98":99}},{"path":"src/main/java/terminus/command/content/note/DeleteNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.content.DeleteCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"public class DeleteNoteCommand extends DeleteCommand {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"    public DeleteNoteCommand(Class type) {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"        super(type);","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    public CommandResult execute(Ui ui, ModuleManager moduleManager) throws InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"        CommandResult result \u003d super.execute(ui, moduleManager);","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"        // Update file accordingly","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.removeNoteFromModule(getModuleName(), super.deletedContentName);","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"        return result;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Woolicious98":25}},{"path":"src/main/java/terminus/command/content/question/AddQuestionCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content.question;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"public class AddQuestionCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    private String question;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    private String answer;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    private static final int ADD_NOTE_ARGUMENTS \u003d 2;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"        return CommonFormat.COMMAND_ADD_QUESTION_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"        return Messages.MESSAGE_COMMAND_ADD;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"     * Parses the arguments to the AddQuestionCommand object.","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"     * The arguments are attributes for a new Question object.","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"     * @param arguments The string arguments to be parsed in to the respective fields.","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"     * @throws InvalidArgumentException when arguments are empty or missing.","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(\"Parsing add question arguments\");","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(\"Failed to parse arguments: arguments is empty\");","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        // Regex to find arguments","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        ArrayList\u003cString\u003e argArray \u003d CommonUtils.findArguments(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        if (!isValidQuestionsArgument(argArray)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        this.question \u003d argArray.get(0);","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        this.answer \u003d argArray.get(1);","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(String.format(\"Parsed argument (question \u003d %s, answer \u003d %s) to Add Question Command\", ","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"            question, answer));","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"     * Executes the add Question command.","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"     * Prints the relevant response to the Ui and a new Note will be added into the arraylist of Notes.","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"     * @param ui The Ui object to send messages to the users.","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"     * @return CommandResult to indicate the success and additional information about the execution.","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(Ui ui, ModuleManager moduleManager) {","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"        assert getModuleName() !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(\"Executing Add Question Command\");","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"        NusModule module \u003d moduleManager.getModule(getModuleName());","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"        ContentManager\u003cQuestion\u003e contentManager \u003d module.getContentManager(Question.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"        assert contentManager !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"        contentManager.add(new Question(question, answer));","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(String.format(\"Question (\\\"%s\\\",\\\"%s\\\") has been added\", question, answer));","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"        ui.printSection(String.format(Messages.MESSAGE_RESPONSE_ADD, CommonFormat.COMMAND_QUESTION, question));","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"        return new CommandResult(true, false);","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"     * Checks if arguments are non-empty and valid.","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"     * @param argArray The command arguments in an array list.","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"     * @return True if the appropriate number of arguments are present, false otherwise.","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"    private boolean isValidQuestionsArgument(ArrayList\u003cString\u003e argArray) {","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"        boolean isValid \u003d true;","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"        if (argArray.size() !\u003d ADD_NOTE_ARGUMENTS) {","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(String.format(\"Failed to find %d arguments: %d arguments found\",","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"                ADD_NOTE_ARGUMENTS, argArray.size()));","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"        } else if (CommonUtils.hasEmptyString(argArray)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(\"Failed to parse arguments: some arguments found is empty\");","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"kelvneo"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"        return isValid;","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"kelvneo":98}},{"path":"src/main/java/terminus/command/content/question/TestCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content.question;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import terminus.activerecall.GameEnvironment;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"public class TestCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    private int questionCount;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"        return CommonFormat.COMMAND_TEST_QUESTION_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        return Messages.MESSAGE_COMMAND_TEST_QUESTION;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"            this.questionCount \u003d 10;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"            return;","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(\"Parsing question test arguments\");","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"            questionCount \u003d Integer.parseInt(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(String.format(\"Failed to parse number of questions : %s\", arguments));","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        if (questionCount \u003c\u003d 0) {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(String.format(\"Invalid number of questions : %d\", questionCount));","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"    public CommandResult execute(Ui ui, ModuleManager moduleManager)","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        throws InvalidArgumentException, InvalidCommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"        assert getModuleName() !\u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        assert questionCount \u003e 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"        NusModule module \u003d moduleManager.getModule(getModuleName());","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        ContentManager\u003cQuestion\u003e contentManager \u003d module.getContentManager(Question.class);","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"        ArrayList\u003cQuestion\u003e questions \u003d contentManager.getContents();","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"        if (questions.isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidCommandException(Messages.NO_QUESTIONS_ERROR_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"        GameEnvironment.createNewEnvironment(ui, questions, questionCount).run(); ","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"        return new CommandResult(true);","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kelvneo":69}},{"path":"src/main/java/terminus/command/module/AddModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"public class AddModuleCommand extends Command {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    private static final int MODULE_ARGS_COUNT \u003d 1;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    private String moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"     * Returns the format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object holding the appropriate format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        return CommonFormat.COMMAND_ADD_MODULE_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object containing the description for this command.","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"        return Messages.MESSAGE_COMMAND_ADD_MODULE;","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(\"Failed to parse arguments: arguments is empty\");","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e argArray \u003d CommonUtils.findArguments(arguments);","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"        if (!isValidModuleArguments(argArray)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"        moduleName \u003d argArray.get(0);","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"        if (!moduleName.matches(CommonFormat.SPACE_NEGATED_DELIMITER)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_MODULE_WHITESPACE);","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"     * Executes the command. Prints the required result to the Ui.","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"     * @param ui The Ui object to send messages to the users.","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"     * @return The CommandResult object indicating the success of failure including additional options.","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidCommandException when the command could not be found.","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidArgumentException when arguments parsing fails.","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException when the module directory is not empty.","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"    public CommandResult execute(Ui ui, ModuleManager moduleManager)","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"        if (moduleManager.getModule(moduleName) !\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_MODULE_EXIST);","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"        // Create its directory","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"        if (moduleStorage.createModuleDirectory(moduleName)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"            moduleManager.setModule(moduleName);","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"        ui.printSection(String.format(Messages.MESSAGE_RESPONSE_MODULE_ADD, moduleName));","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"        return new CommandResult(true);","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"    private boolean isValidModuleArguments(ArrayList\u003cString\u003e argArray) {","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"        if (argArray.size() !\u003d MODULE_ARGS_COUNT) {","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"3m0W33D"},"content":"            return false;","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"        } else if (CommonUtils.hasEmptyString(argArray)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"        } else {","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"            return CommonUtils.isValidFileName(argArray.get(0));","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"3m0W33D":80,"Woolicious98":15}},{"path":"src/main/java/terminus/command/module/DeleteModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"public class DeleteModuleCommand extends Command {","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    private int itemNumber;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"     * Returns the format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object holding the appropriate format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        return CommonFormat.COMMAND_DELETE_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object containing the description for this command.","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        return Messages.MESSAGE_COMMAND_MODULE_DELETE;","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"    public void parseArguments(String arguments) throws InvalidArgumentException {","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        if (CommonUtils.isStringNullOrEmpty(arguments)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_MISSING_ARGUMENTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Parsing delete arguments\");","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"            itemNumber \u003d Integer.parseInt(arguments);","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(String.format(\"Failed to parse delete itemNumber : %s\", arguments));","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(this.getFormat(), Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        if (itemNumber \u003c\u003d 0) {","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"            TerminusLogger.warning(String.format(\"Invalid itemNumber : %d\", itemNumber));","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_INVALID_NUMBER);","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"     * Executes the command. Prints the required result to the Ui.","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"     * @param ui The Ui object to send messages to the users.","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"     * @return The CommandResult object indicating the success of failure including additional options.","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidCommandException when the command could not be found.","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidArgumentException when arguments parsing fails.","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException when files to be deleted is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"    public CommandResult execute(Ui ui, ModuleManager moduleManager)","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"        String[] listOfModule \u003d moduleManager.getAllModules();","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"        if (!isValidIndex(itemNumber, listOfModule)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_EMPTY_CONTENTS);","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.removeModule(listOfModule[itemNumber - 1]);","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"        // Delete all files and then its folder","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.cleanAfterDeleteModule(listOfModule[itemNumber - 1]);","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"        ui.printSection(String.format(Messages.MESSAGE_RESPONSE_MODULE_DELETE, listOfModule[itemNumber - 1]));","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"        return new CommandResult(true);","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"     * Returns a boolean if the index give is valid.","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"3m0W33D"},"content":"     * @param index The index to check","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"3m0W33D"},"content":"     * @param listOfModule The full list of modules","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"     * @return True if the index is valid or else it is false","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"3m0W33D"},"content":"    private boolean isValidIndex(int index, String[] listOfModule) {","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"3m0W33D"},"content":"        return listOfModule.length \u003e\u003d index \u0026\u0026 index \u003e 0;","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"3m0W33D":86,"Woolicious98":9}},{"path":"src/main/java/terminus/command/module/ModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.WorkspaceCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"public class ModuleCommand extends WorkspaceCommand {","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"    public ModuleCommand() {","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"        super(ModuleCommandParser.getInstance());","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"     * Returns the format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object holding the appropriate format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"        return CommonFormat.COMMAND_MODULE_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object containing the description for this command.","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        return Messages.MESSAGE_COMMAND_MODULE;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"3m0W33D":33}},{"path":"src/main/java/terminus/command/module/ViewModuleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"public class ViewModuleCommand extends Command {","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"     * Returns the format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object holding the appropriate format for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"        return CommonFormat.COMMAND_VIEW_MODULE_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"     * Returns the description for the command.","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"     * @return The String object containing the description for this command.","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        return Messages.MESSAGE_COMMAND_MODULE_VIEW;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"     * Executes the command. Prints the required result to the Ui.","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"     * @param ui            The Ui object to send messages to the users.","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The NusModule contain the ContentManager of all notes and schedules.","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"     * @return The CommandResult object indicating the success of failure including additional options.","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidCommandException  when the command could not be found.","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"     * @throws InvalidArgumentException when arguments parsing fails.","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"    public CommandResult execute(Ui ui, ModuleManager moduleManager)","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        String[] modules \u003d moduleManager.getAllModules();","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        String[] listOfModules \u003d IntStream.range(0, modules.length)","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"                .mapToObj(i -\u003e String.format(Messages.MESSAGE_RESPONSE_MODULE_FORMAT, i + 1, modules[i]))","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"        if (listOfModules.length \u003d\u003d 0) {","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"            ui.printSection(Messages.MESSAGE_RESPONSE_NO_MODULES);","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"        } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"            ui.printSection(listOfModules);","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        return new CommandResult(true);","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"3m0W33D":58}},{"path":"src/main/java/terminus/common/CommonFormat.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.common;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":" * CommonFormat class that contains formats that are used across different packages.","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"public class CommonFormat {","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_NOTE \u003d \"note\";","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_ADD \u003d \"add\";","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_VIEW \u003d \"view\";","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_BACK \u003d \"back\";","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_EXIT \u003d \"exit\";","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_HELP \u003d \"help\";","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    public static final String COMMAND_SCHEDULE \u003d \"schedule\";","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    public static final String COMMAND_QUESTION \u003d \"question\";","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    public static final String COMMAND_TEST \u003d \"test\";","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    public static final String COMMAND_TIMETABLE \u003d \"timetable\";","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"    public static final String COMMAND_MODULE \u003d \"module\";","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    public static final String COMMAND_GO \u003d \"go\";","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    public static final String LOCAL_TIME_FORMAT \u003d \"HH:mm\";","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_DELETE_FORMAT \u003d COMMAND_DELETE + \" \u003citem number\u003e\";","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_VIEW_FORMAT \u003d COMMAND_VIEW + \" {item number}\";","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_ADD_SCHEDULE_FORMAT \u003d COMMAND_ADD + \" \\\"\u003clink description\u003e\\\" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"            + \"\\\"\u003cday\u003e\\\" \\\"\u003cstart_time \" + LOCAL_TIME_FORMAT + \"\u003e\\\" \\\"\u003czoom_link\u003e\\\"\";","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    public static final String COMMAND_ADD_NOTE_FORMAT \u003d COMMAND_ADD + \" \\\"\u003cnote name\u003e\\\" \\\"\u003cnote content\u003e\\\"\";","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    public static final String COMMAND_ADD_QUESTION_FORMAT \u003d COMMAND_ADD + \" \\\"\u003cquestion\u003e\\\" \\\"\u003canswer\u003e\\\"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    public static final String COMMAND_TEST_QUESTION_FORMAT \u003d COMMAND_TEST + \" {question count}\";","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"    public static final String COMMAND_TIMETABLE_FORMAT \u003d COMMAND_TIMETABLE + \" {day}\";","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    public static final String SPACE_DELIMITER \u003d \"\\\\s+\";","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"    public static final String COMMAND_MODULE_FORMAT \u003d \"module\";","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    public static final String COMMAND_ADD_MODULE_FORMAT \u003d \"add \\\"\u003cmodule name\u003e\\\"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"    public static final String COMMAND_VIEW_MODULE_FORMAT \u003d \"view\";","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"    public static final String SPACE_NEGATED_DELIMITER \u003d \"\\\\S+\";","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    public static final String EXTENSION_TEXT_FILE \u003d \".txt\";","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"    public static final ArrayList\u003cCharacter\u003e ILLEGAL_CHARACTERS \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"            Arrays.asList(\u0027/\u0027, \u0027\\n\u0027, \u0027\\r\u0027, \u0027\\t\u0027, \u0027\\0\u0027, \u0027\\f\u0027, \u0027`\u0027, \u0027?\u0027, \u0027*\u0027, \u0027\\\\\u0027, \u0027\u003c\u0027, \u0027\u003e\u0027, \u0027|\u0027, \u0027\\\"\u0027, \u0027:\u0027, \u0027.\u0027));","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"    public static final int MAX_FILENAME_LENGTH \u003d 30;","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"    public static final int STARTING_ASCII \u003d 32;","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"    public static final int ENDING_ASCII \u003d 126;","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"    public static final long MAX_FILE_SIZE \u003d 1000000;","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":12,"kelvneo":4,"Woolicious98":35,"3m0W33D":5}},{"path":"src/main/java/terminus/common/CommonUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.common;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import java.net.URL;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":" * CommonUtils class to manage methods that are used across different packages.","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"public class CommonUtils {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"     * Returns an ArrayList of String containing elements found based on regex.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"     * Matches any strings that is within a pair of double quotes.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"     * @param arg String containing the arguments from inputs.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"     * @return An array list containing strings that is within a pair of double quotes from arg.","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    public static ArrayList\u003cString\u003e findArguments(String arg) {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        assert arg !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e argsArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"        Pattern p \u003d Pattern.compile(\"\\\"(.*?)\\\"\");","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        Matcher m \u003d p.matcher(arg);","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        while (m.find()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"            argsArray.add(m.group(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        return argsArray;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"     * Checks if any elements in the ArrayList of String is empty.","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"     * @param argArray The ArrayList to be checked.","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"     * @return True if array list is empty, false otherwise.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"    public static boolean hasEmptyString(ArrayList\u003cString\u003e argArray) {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        assert argArray !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        if (argArray.isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"        return argArray.stream().anyMatch(x -\u003e x \u003d\u003d null || x.isBlank());","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"     * Returns a LocalTime object from a given string.","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"     * @param startTime The string to be converted to a LocalTime object.","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"     * @return A LocalTime object of the converted string.","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when string does not follow the proper time format.","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"    public static LocalTime convertToLocalTime(String startTime) throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"        assert startTime !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"            DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(CommonFormat.LOCAL_TIME_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"            return LocalTime.parse(startTime, format);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"                    String.format(Messages.ERROR_MESSAGE_INVALID_TIME_FORMAT, CommonFormat.LOCAL_TIME_FORMAT));","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"     * Returns the class name without its packages.","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"     * @param type Content class type.","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"     * @param \u003cT\u003e Content object type.","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"     * @return A string of the class name from the class type without its packages.","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"    public static \u003cT\u003e String getClassName(T type) {","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"        assert type !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"        String result \u003d type.toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"        String[] string \u003d result.split(\"\\\\.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"        if (string.length \u003e 0) {","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"            result \u003d string[string.length - 1];","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"        return result;","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"     * Checks if the given string is a valid url.","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"     * @param url The string to be checked.","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"     * @return True if url is valid, false otherwise.","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when given string is not a valid url.","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"    public static boolean isValidUrl(String url) throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"3m0W33D"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"3m0W33D"},"content":"            new URL(url).toURI();","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"3m0W33D"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"3m0W33D"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"3m0W33D"},"content":"            throw new InvalidArgumentException(","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"3m0W33D"},"content":"                    String.format(Messages.ERROR_MESSAGE_INVALID_LINK, url));","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"     * Checks if the given string is a valid DaysOfWeekEnum type.","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"     * @param day The string to be checked.","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"     * @return True if day is a valid DaysOfWeekEnum type, false otherwise.","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"3m0W33D"},"content":"    public static boolean isValidDay(String day) {","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"3m0W33D"},"content":"        for (DaysOfWeekEnum dayOfWeek : DaysOfWeekEnum.values()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"3m0W33D"},"content":"            if (dayOfWeek.name().equalsIgnoreCase(day)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"3m0W33D"},"content":"                return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"3m0W33D"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"3m0W33D"},"content":"        return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"3m0W33D"},"content":"    public static boolean isStringNullOrEmpty(String string) {","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"3m0W33D"},"content":"        return string \u003d\u003d null || string.isBlank();","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"     * \u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"Woolicious98"},"content":"     * Checks if the given name is a valid file name.","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"     * @param name The string to be checked.","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"Woolicious98"},"content":"     * @return True if name is a valid file name, false otherwise.","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"Woolicious98"},"content":"    public static boolean isValidFileName(String name) {","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"Woolicious98"},"content":"        if (name \u003d\u003d null || name.isBlank() || name.length() \u003e CommonFormat.MAX_FILENAME_LENGTH) {","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"Woolicious98"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"Woolicious98"},"content":"        boolean isOnlyAscii \u003d name.chars()","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"Woolicious98"},"content":"                .allMatch(c -\u003e CommonFormat.STARTING_ASCII \u003c\u003d c \u0026\u0026 c \u003c\u003d CommonFormat.ENDING_ASCII);","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"Woolicious98"},"content":"        boolean hasIllegalChar \u003d name.chars().anyMatch(x -\u003e CommonFormat.ILLEGAL_CHARACTERS.contains((char) x));","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"Woolicious98"},"content":"        if (!isOnlyAscii || hasIllegalChar) {","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"Woolicious98"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"Woolicious98"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"Woolicious98"},"content":"            Paths.get(name);","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"Woolicious98"},"content":"            return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"Woolicious98"},"content":"        } catch (InvalidPathException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"Woolicious98"},"content":"            return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"Woolicious98"},"content":"     * Returns the filename without its file extension of a given full filename.","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"Woolicious98"},"content":"     * @param filename The filename string to be extracted.","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"Woolicious98"},"content":"     * @return A string of the file name without its file extension.","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"Woolicious98"},"content":"    public static String getFileNameOnly(String filename) {","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"Woolicious98"},"content":"        assert filename !\u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"Woolicious98"},"content":"        String[] string \u003d filename.split(\"\\\\.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"Woolicious98"},"content":"        if (string !\u003d null \u0026\u0026 string.length \u003d\u003d 2) {","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"Woolicious98"},"content":"            return string[0];","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"Woolicious98"},"content":"        return null;","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"LouisLouis19"},"content":"     * Function to get today\u0027s day of the week.","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"LouisLouis19"},"content":"     * @return A string indicating today\u0027s day","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"LouisLouis19"},"content":"    public static String getCurrentDay() {","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"LouisLouis19"},"content":"        String currentDay \u003d LocalDate.now().getDayOfWeek().toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"LouisLouis19"},"content":"        return currentDay;","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LouisLouis19":10,"3m0W33D":85,"Woolicious98":79}},{"path":"src/main/java/terminus/common/DaysOfWeekEnum.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.common;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"public enum DaysOfWeekEnum {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"    MONDAY,","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"    TUESDAY,","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"    WEDNESDAY,","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"    THURSDAY,","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"    FRIDAY,","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"    SATURDAY,","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"    SUNDAY","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LouisLouis19":11}},{"path":"src/main/java/terminus/common/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.common;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"public class Messages {","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"    public static final String MESSAGE_COMMAND_ADD \u003d \"add an item into your list.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"    public static final String MESSAGE_COMMAND_DELETE \u003d \"delete an item from your list.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"    public static final String MESSAGE_COMMAND_VIEW \u003d \"view all items or view an individual items\";","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"    public static final String MESSAGE_COMMAND_BACK \u003d \"Returns to the parent workspace.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"    public static final String MESSAGE_COMMAND_EXIT \u003d \"Exits the program.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"    public static final String MESSAGE_COMMAND_HELP \u003d \"Prints the help page.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"    public static final String MESSAGE_COMMAND_NOTE \u003d \"Move to notes workspace.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"    public static final String MESSAGE_COMMAND_SCHEDULE \u003d \"Move to schedules workspace.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_QUESTION \u003d \"Move to questions workspace.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_COMMAND_TEST_QUESTION \u003d \"Test yourself with Active Recall.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"    public static final String MESSAGE_COMMAND_TIMETABLE \u003d \"Displays all your schedule.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    public static final String MESSAGE_RESPONSE_DELETE \u003d \"Your %s on \u0027%s\u0027 has been deleted!\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"    public static final String MESSAGE_RESPONSE_ADD \u003d \"Your %s on \u0027%s\u0027 has been added!\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MESSAGE_TAG \u003d \"Error: \";","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    public static final String ERROR_MESSAGE_INVALID_INPUT \u003d ERROR_MESSAGE_TAG + \"Invalid input provided.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MESSAGE_MISSING_ARGUMENTS \u003d ERROR_MESSAGE_TAG + \"Missing arguments.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MESSAGE_EMPTY_CONTENTS \u003d ERROR_MESSAGE_TAG + \"Content not found.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MESSAGE_INVALID_NUMBER \u003d ERROR_MESSAGE_TAG + \"Invalid numerical value provided.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MESSAGE_INVALID_TIME_FORMAT \u003d ERROR_MESSAGE_TAG + \"Invalid time format %s.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"    public static final String ERROR_MESSAGE_INVALID_LINK \u003d ERROR_MESSAGE_TAG + \"Invalid link %s.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"    public static final String ERROR_MESSAGE_INVALID_DAY \u003d ERROR_MESSAGE_TAG + \"Invalid day %s.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MESSAGE_DUPLICATE_NAME \u003d ERROR_MESSAGE_TAG + \"Duplicate name found.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_FILE_TOO_LARGE \u003d \"Unable to read large files.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_FILE_NOT_DELETED \u003d \"Unable to delete the file.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_FILES_NOT_DELETED \u003d \"Unable to delete some file.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MESSAGE_FILE \u003d \"Unable to save/load file: %s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    public static final String ERROR_MESSAGE_FOLDER \u003d \"Unable to save/load folder: %s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"    public static final String EMPTY_CONTENT_LIST_MESSAGE \u003d \"You do not have any content in this workspace.\\n\";","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    public static final String CONTENT_MESSAGE_HEADER \u003d \"List of Content\\n---------------\\n\";","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    public static final String EMPTY_SCHEDULE_FOR_THE_DAY \u003d \"You have no schedule for %s\\n\";","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"    public static final String MAIN_BANNER \u003d \"Welcome to TermiNUS!\\n\";","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"    public static final String MAIN_REMINDER \u003d \"This is your schedule today:\\n\";","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    public static final String NOTE_BANNER \u003d \"You have %d note(s) inside this workspace.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"    public static final String SCHEDULE_BANNER \u003d \"You have %d link(s) in this workspace.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"    public static final String QUESTION_BANNER \u003d \"You have %d question(s) in this workspace.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"    public static final String INVALID_ARGUMENT_FORMAT_MESSAGE_EXCEPTION \u003d \"%s %s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"    public static final String INVALID_ARGUMENT_FORMAT_MESSAGE \u003d \"Format: %s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"    public static final String MESSAGE_COMMAND_MODULE \u003d \"Move to the module workspace\";","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"    public static final String MESSAGE_COMMAND_ADD_MODULE \u003d \"Adds a module\";","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"    public static final String ERROR_MESSAGE_MODULE_WHITESPACE \u003d \"Module name cannot contain any whitespaces!\";","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"    public static final String ERROR_MESSAGE_MODULE_EXIST \u003d \"Module already exist!\";","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"    public static final String MESSAGE_RESPONSE_MODULE_ADD \u003d \"Module %s has been added\";","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"    public static final String MESSAGE_RESPONSE_MODULE_DELETE \u003d \"Deleted module %s.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"    public static final String MESSAGE_COMMAND_MODULE_DELETE \u003d \"Deletes a module\";","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"    public static final String MESSAGE_COMMAND_MODULE_VIEW \u003d \"View all modules available\";","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"    public static final String MESSAGE_RESPONSE_MODULE_FORMAT \u003d \"%d. %s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"    public static final String MESSAGE_RESPONSE_NO_MODULES \u003d \"You do not have any modules.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"    public static final String NO_QUESTIONS_ERROR_MESSAGE \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"        \"There are no questions to be tested on. Type \u0027questions add\u0027 to get started\";","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"    public static final String ACTIVE_RECALL_ENTER_TO_CONTINUE_MESSAGE \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"        \"When you are ready, press [Enter] to continue.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"    public static final String[] ACTIVE_RECALL_SESSION_END_MESSAGE \u003d {\"This training session has ended.\",","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        \"Returning you back to main program.\"};","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"    public static final String[] ACTIVE_RECALL_ASK_QUESTION_DIFFICULTY_MESSAGE \u003d {\"\",","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"        \"How did you find the question? (Compare against past attempts if any)\",","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"        \"[1] Easy; [2] Normal / Same; [3] Hard; [E] Exit\"};","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"    public static final String MESSAGE_EMPTY_DAILY_SCHEDULE \u003d \"You have no schedule for today.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"LouisLouis19":8,"kelvneo":20,"Woolicious98":27,"3m0W33D":13}},{"path":"src/main/java/terminus/common/TerminusLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.common;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"public class TerminusLogger {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    private static final Logger LOGGER \u003d Logger.getLogger(\"TermiNUS\");","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"     * Initializes TerminusLogger.","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"     * @throws IOException When \u0027terminus.log\u0027 is unable to be written to.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    public static void initializeLogger() throws IOException {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"        consoleHandler.setLevel(Level.OFF);","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"        LOGGER.addHandler(consoleHandler);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"        FileHandler fileHandler \u003d new FileHandler(\"terminus.log\");","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"        fileHandler.setLevel(Level.INFO);","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"        LOGGER.addHandler(fileHandler);","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"     * Initializes TerminusLogger that prints only warnings and above.","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    public static void initializeLoggerWarnings() {","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        consoleHandler.setLevel(Level.WARNING);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        LOGGER.addHandler(consoleHandler);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"     * Writes a debug message to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"     * Equivalent to Level.FINE.","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger. ","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"    public static void debug(String message) {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        LOGGER.fine(message);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"     * Writes a verbose debug message to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"     * Equivalent to Level.FINER.","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger. ","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"    public static void verboseDebug(String message) {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        LOGGER.finer(message);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"     * Writes a very verbose debug message to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"     * Mainly used for printing stack traces and non-important strings.","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"     * Equivalent to Level.FINEST.","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger. ","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"    public static void veryVerboseDebug(String message) {","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"        LOGGER.finest(message);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"     * Writes an information message to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger. ","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"    public static void info(String message) {","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"        LOGGER.info(message);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"     * Writes a warning message to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger. ","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"    public static void warning(String message) {","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"        LOGGER.warning(message);","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"     * Writes a warning message with a Throwable to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"kelvneo"},"content":"     * @param throwable The Throwable to tag to the log message.","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"    public static void warning(String message, Throwable throwable) {","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"        LOGGER.log(Level.WARNING, message, throwable);","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"kelvneo"},"content":"     * Writes a severe message to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger. ","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"kelvneo"},"content":"    public static void severe(String message) {","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"kelvneo"},"content":"        LOGGER.severe(message);","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"kelvneo"},"content":"     * Writes a warning message with a Throwable to the Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"kelvneo"},"content":"     * @param message The message to write to Logger.","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"kelvneo"},"content":"     * @param throwable The Throwable to tag to the log message.","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"kelvneo"},"content":"    public static void severe(String message, Throwable throwable) {","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"kelvneo"},"content":"        LOGGER.log(Level.SEVERE, message, throwable);","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"kelvneo":119}},{"path":"src/main/java/terminus/content/Content.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.content;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":" * Content class to represent any data related object.","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"public class Content {","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"    protected String name;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"    protected String data;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"    public static final String TYPE \u003d \"\";","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    private static final String DISPLAY_MESSAGE \u003d \"Name: %s\\nContent:\\n%s\\n\";","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"    public Content(String name) {","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"     * Initializes a Content object.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"     * @param name The name attribute of the Content.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"     * @param data The data attribute of the Content.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    public Content(String name, String data) {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"        this.data \u003d data;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"    public String getName() {","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"        return name;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    public String getData() {","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"        return data;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"    public void setData(String data) {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"        this.data \u003d data;","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"     * Returns all the attributes of the Content object formatted by its display message.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"     * @return A string containing all the attributes of the Content object.","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"    public String getDisplayInfo() {","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"        return String.format(DISPLAY_MESSAGE, name, data);","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"     * Returns attributes of the Content object to be listed by the view command.","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"     * @return A string containing attributes of the Content object based on the view command.","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"    public String getViewDescription() {","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"        return this.name;","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":45,"kelvneo":1,"Woolicious98":16}},{"path":"src/main/java/terminus/content/ContentManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.content;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":" * ContentManager class to manage any Content related object.","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":" *","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":" * @param \u003cT\u003e Content object type.","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"public class ContentManager\u003cT extends Content\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"    private ArrayList\u003cT\u003e contents;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"     * Creates a ContentManager object.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"     * It will initialize a new ArrayList for its contents.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"    public ContentManager() {","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"        contents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    public void setContent(ArrayList\u003cT\u003e contents) {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"        this.contents \u003d contents;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    public ArrayList\u003cT\u003e getContents() {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"        return contents;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"     * Returns the total size of the ArrayList of type Content.","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"     * @return The total size of ArrayList of type Content.","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    public int getTotalContents() {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        return contents.size();","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"     * Returns a string containing a list of all Content information from ArrayList contents.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"     * @return String of a list of all Content information in ArrayList contents.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"    public String listAllContents() {","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        for (T n : contents) {","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"            result.append(String.format(\"%d. %s\\n\", i, n.getViewDescription()));","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"            i++;","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        return result.toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"     * Returns string of all information of a Content object.","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"     * @param contentNumber Number to identify a element in the ArrayList.","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"     * @return A String of all information of the specified Content object.","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when given number is ArrayOutOfBounds.","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"    public String getContentData(int contentNumber) throws InvalidArgumentException {","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"        if (isNotValidNumber(contentNumber)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_EMPTY_CONTENTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"        return contents.get(contentNumber - 1).getDisplayInfo();","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"     * Return deleted Content object name.","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"     * @param contentNumber Number to identify a element in the ArrayList.","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"     * @return The string name of the deleted Content object.","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when given contentNumber is ArrayOurOfBounds.","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"    public String deleteContent(int contentNumber) throws InvalidArgumentException {","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"        if (isNotValidNumber(contentNumber)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"            throw new InvalidArgumentException(Messages.ERROR_MESSAGE_EMPTY_CONTENTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"        String deletedContentName \u003d contents.get(contentNumber - 1).getName();","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"        contents.remove(contentNumber - 1);","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"        return deletedContentName;","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"     * Adds a Content object into the ArrayList contents.","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"     * @param content The Content object to be added into the ArrayList contents.","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"    public void add(T content) {","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"        contents.add(content);","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"    private boolean isNotValidNumber(int number) {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"3m0W33D"},"content":"        return number \u003c 1 || number \u003e contents.size();","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"     * Replaces the current ArrayList for a new empty ArrayList.","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"    public void purgeData() {","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"        this.contents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"    public boolean isDuplicateName(String name) {","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"        if (contents.size() \u003c 1) {","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"        return contents.stream().anyMatch(x -\u003e x.getName().equals(name));","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":37,"kelvneo":3,"Woolicious98":68,"3m0W33D":4}},{"path":"src/main/java/terminus/content/Link.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.content;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":" * Link class to represent a content of type link.","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"public class Link extends Content {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"    private String day;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"    private LocalTime startTime;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"    private String link;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"    public static final String TYPE \u003d \"Z\";","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"    private static final String DISPLAY_LINK_MESSAGE \u003d \"%s (%s, %s): %s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"    public Link(String name, String day, LocalTime startTime, String link) {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"        super(name);","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"        this.day \u003d day;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"        this.link \u003d link;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"    public String getDay() {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"        return day;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"    public void setDay(String day) {","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"        this.day \u003d day;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"        return startTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    public void setStartTime(LocalTime startTime) {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"    public String getLink() {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"        return link;","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"    public void setLink(String link) {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"        this.link \u003d link;","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"     * Returns all the attributes of the Link object.","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"     * @return A string containing all the attributes of the Link object.","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"    public String getDisplayInfo() {","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"        return String.format(DISPLAY_LINK_MESSAGE, this.name, day, startTime, link);","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"     * Returns all the attributes\u0027 information of the Link object.","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"     * @return A method to display all the attributes of the Link object.","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"    public String getViewDescription() {","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"        return getDisplayInfo();","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":64,"kelvneo":1,"Woolicious98":3}},{"path":"src/main/java/terminus/content/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.content;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"public class Note extends Content {","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"    public static final String TYPE \u003d \"N\";","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"    public Note(String name, String data) {","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"        super(name, data);","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"Woolicious98":10}},{"path":"src/main/java/terminus/content/Question.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.content;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import terminus.activerecall.DifficultyModifier;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"public class Question extends Content {","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"    private double weight;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"    public Question(String question, String answer) {","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"        super(question, answer);","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"        this.weight \u003d 0.5;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    public String getQuestion() {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"        return this.name;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"    public String getAnswer() {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"        return this.data;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    private void setWeightSafely() {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"        if (weight \u003c DifficultyModifier.MIN_VALUE) {","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"            this.weight \u003d DifficultyModifier.MIN_VALUE;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"        } else if (weight \u003e DifficultyModifier.MAX_VALUE) {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"            this.weight \u003d DifficultyModifier.MAX_VALUE;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    public double getWeight() {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"        setWeightSafely();","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        return weight;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    public void setWeight(double weight) {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        setWeightSafely();","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"kelvneo":39}},{"path":"src/main/java/terminus/exception/InvalidArgumentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.exception;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":" * Invalid Argument Exception class which handles exception when argument from user command is invalid.","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"public class InvalidArgumentException extends Exception {","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"    private final String format;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"    public InvalidArgumentException(String message) {","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"        this(null, message);","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    public InvalidArgumentException(String format, String message) {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"        super(message);","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"        this.format \u003d format;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    public String getFormat() {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"        return format;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"LouisLouis19":3,"kelvneo":11,"3m0W33D":8}},{"path":"src/main/java/terminus/exception/InvalidCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.exception;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":" * Invalid Command Exception class which handles exception when user command is not found.","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"        super(message);","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":8,"LouisLouis19":3}},{"path":"src/main/java/terminus/module/ModuleManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.module;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"public class ModuleManager {","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"    private HashMap\u003cString, NusModule\u003e moduleMap;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"    public ModuleManager() {","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"        moduleMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"     * Returns a NusModule Object given a module name.","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleName The module name","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"     * @return The NusModule Object for the given module name","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    public NusModule getModule(String moduleName) {","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"        return moduleMap.get(moduleName);","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     * Adds a new module to the moduleMap.","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleName The module name of the new module","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    public void setModule(String moduleName) {","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        moduleMap.put(moduleName, new NusModule());","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"     * Returns a String array contains the list of module names.","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"     * @return String array with the list of module names","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    public String[] getAllModules() {","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        return moduleMap.keySet().toArray(new String[0]);","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"     * Deletes the specified module.","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleName The module name of the module to remove","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"    public void removeModule(String moduleName) {","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        moduleMap.remove(moduleName);","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"3m0W33D":49}},{"path":"src/main/java/terminus/module/NusModule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.module;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Content;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":" * NusModule class to represent a Module object.","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"public class NusModule {","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    private final transient ContentManager\u003cNote\u003e noteManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    private final ContentManager\u003cLink\u003e linkManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    private final ContentManager\u003cQuestion\u003e questionManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"     * Creates a NusModule object.","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    public NusModule() {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"        noteManager \u003d new ContentManager\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"        linkManager \u003d new ContentManager\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"        questionManager \u003d new ContentManager\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"     * Returns a ContentManager object based on the provided class type.","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"     * @param type Content class type.","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"     * @param \u003cT\u003e  Content object type.","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"     * @return The ContentManager object based on the provided class type.","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    public \u003cT extends Content\u003e ContentManager\u003cT\u003e getContentManager(Class\u003cT\u003e type) {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(String.format(\"Get ContentManager from NusModule with provided class type: %s\", type));","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cT\u003e result \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"        if (type \u003d\u003d Note.class) {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"            result \u003d (ContentManager\u003cT\u003e) this.noteManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"        } else if (type \u003d\u003d Link.class) {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"            result \u003d (ContentManager\u003cT\u003e) this.linkManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        } else if (type \u003d\u003d Question.class) {","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"            result \u003d (ContentManager\u003cT\u003e) this.questionManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"        } else {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"            // Fatal error encountered","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.severe(String.format(\"Class type provided not found: %s\", type));","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"            assert false;","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"            return null;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(\"ContentManager found\");","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        return result;","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"LouisLouis19":14,"kelvneo":5,"3m0W33D":6,"Woolicious98":28}},{"path":"src/main/java/terminus/parser/CommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.ExitCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.HelpCommand;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"public abstract class CommandParser {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"    private static final String SPACE_DELIMITER \u003d \"\\\\s+\";","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    protected String workspace;","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    protected final HashMap\u003cString, Command\u003e commandMap;","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"     * Initializes the commandMap. Adds some default commands to it.","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"     * @param workspace The name of the workspace.","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    public CommandParser(String workspace) {","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"        this.commandMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        this.workspace \u003d workspace;","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"        addCommand(\"exit\", new ExitCommand());","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        addCommand(\"help\", new HelpCommand(this));","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"     * Parses the command and its arguments.","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"     * @param command The user input command.","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"     * @return The Command object to be executed.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidCommandException  when there is no command or empty command.","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"     * @throws InvalidArgumentException when arguments could not be parsed.","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"    public Command parseCommand(String command)","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        String[] commandLine \u003d command.strip().split(SPACE_DELIMITER, 2);","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Parsing Command: \" + command);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        assert commandLine.length \u003c\u003d 2 \u0026\u0026 commandLine.length \u003e 0;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        String cmdName \u003d commandLine[0];","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        Command currentCommand \u003d commandMap.get(cmdName.strip().toLowerCase(Locale.ROOT));","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        if (currentCommand \u003d\u003d null) {","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"            throw new InvalidCommandException(\"Command not found! Type \u0027help\u0027 for a list of commands.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"        String cmdData \u003d null;","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"        if (commandLine.length \u003e 1) {","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"            cmdData \u003d commandLine[1];","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"        TerminusLogger.info(\"Parsing arguments.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        currentCommand.parseArguments(cmdData);","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"        return currentCommand;","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"    public Set\u003cString\u003e getCommandList() {","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        return commandMap.keySet();","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"    public abstract String getWorkspaceBanner(ModuleManager moduleManager);","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"     * Returns the list of items in the help menu.","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"     * @return Array of strings contain the help messages.","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"    public String[] getHelpMenu() {","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"        return commandMap.entrySet()","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"                .stream()","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"                .map((i) -\u003e String.format(\"%s : %s\\nFormat: %s\\n\",","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"                        i.getKey(),","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"                        i.getValue().getHelpMessage(),","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"                        i.getValue().getFormat()))","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"     * Adds a command to the commandMap.","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"     * @param cmdName The name of the command.","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"     * @param command The actual command object.","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"    protected void addCommand(String cmdName, Command command) {","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"        commandMap.put(cmdName, command);","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":93,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"     * Returns the name of the current workspace.","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"     * @return The name of the workspace.","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspace() {","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"3m0W33D"},"content":"        return workspace;","lastModifiedDate":"2021-10-02"},{"lineNumber":100,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":101,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"3m0W33D"},"content":"     * Sets the existing workspace for the module.","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"3m0W33D"},"content":"     * @param workspace The name of the workspace","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"3m0W33D"},"content":"    public void setWorkspace(String workspace) {","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"3m0W33D"},"content":"        this.workspace \u003d workspace;","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":23,"LouisLouis19":4,"3m0W33D":73,"Woolicious98":10}},{"path":"src/main/java/terminus/parser/InnerModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"public abstract class InnerModuleCommandParser extends CommandParser {","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"    private String moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"     * Initializes the commandMap. Adds some default commands to it.","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"     * @param workspace The name of the workspace.","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    public InnerModuleCommandParser(String workspace) {","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"        super(workspace);","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"     * Returns the module name for the current workspace.","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"     * @return The string containing the module name","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    public String getModuleName() {","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"        return moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"     * Sets the module name for the current workspace.","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleName The module name to set","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    public void setModuleName(String moduleName) {","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    public Command parseCommand(String command) throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d super.parseCommand(command);","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        cmd.setModuleName(moduleName);","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        return cmd;","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"     * Returns a workspace that contains the moduleName and the current work space.","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"     * @return The consolidated workspace name","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspace() {","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        return getWorkspace(false);","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspace(boolean isOriginal) {","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        if (isOriginal) {","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"            return super.getWorkspace();","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"        return moduleName + \" \u003e \" + super.getWorkspace();","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"3m0W33D":57,"Woolicious98":4}},{"path":"src/main/java/terminus/parser/LinkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.BackCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.DeleteCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.ViewCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.link.AddLinkCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":" * LinkCommandParser class to manage schedule-related commands.","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"public class LinkCommandParser extends InnerModuleCommandParser {","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    private static LinkCommandParser parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    private LinkCommandParser() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"        super(CommonFormat.COMMAND_SCHEDULE);","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"     * Returns the command map for the schedule workspace.","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"     * @return A LinkCommandParser object which contains the command map for the schedule workspace.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"    public static LinkCommandParser getInstance() {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        if (parser \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"            parser \u003d new LinkCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"            parser.addCommand(CommonFormat.COMMAND_BACK, new BackCommand());","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"            parser.addCommand(CommonFormat.COMMAND_ADD, new AddLinkCommand());","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"            parser.addCommand(CommonFormat.COMMAND_VIEW, new ViewCommand(Link.class));","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"            parser.addCommand(CommonFormat.COMMAND_DELETE, new DeleteCommand(Link.class));","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"        return parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"     * Returns the opening description of the workspace.","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The current module containing the array list of all the links.","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"     * @return The string containing a description of the number of links in the workspace.","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspaceBanner(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"        return String.format(Messages.SCHEDULE_BANNER,","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"                moduleManager.getModule(getModuleName()).getContentManager(Link.class).getContents().size());","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"LouisLouis19":27,"kelvneo":4,"3m0W33D":12,"Woolicious98":7}},{"path":"src/main/java/terminus/parser/MainCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.GoCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.TimetableCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.ModuleCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.timetable.Timetable;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import static terminus.common.CommonUtils.getCurrentDay;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"public class MainCommandParser extends CommandParser {","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"    private static MainCommandParser parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    private MainCommandParser() {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"        super(\"\");","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    public static MainCommandParser getInstance() {","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"        if (parser \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"            parser \u003d new MainCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_MODULE, new ModuleCommand());","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_GO, new GoCommand());","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"            parser.addCommand(CommonFormat.COMMAND_TIMETABLE, new TimetableCommand());","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        return parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspaceBanner(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"        String mainReminder \u003d getMainReminder(moduleManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"        return Messages.MAIN_BANNER + mainReminder;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    public String getMainReminder(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"        String currentDay \u003d getCurrentDay();","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"        Timetable timetable \u003d new Timetable(moduleManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"        String dailySchedule \u003d timetable.getDailySchedule(currentDay);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"        if (dailySchedule !\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"            result.append(Messages.MAIN_REMINDER);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"            result.append(dailySchedule);","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"            result.append(Messages.MESSAGE_EMPTY_DAILY_SCHEDULE);","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"        return result.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"LouisLouis19":21,"kelvneo":4,"3m0W33D":24,"Woolicious98":2}},{"path":"src/main/java/terminus/parser/ModuleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.BackCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.AddModuleCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.DeleteModuleCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.ViewModuleCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"public class ModuleCommandParser extends CommandParser {","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"    private static ModuleCommandParser parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"     * Initializes the commandMap. Adds some default commands to it.","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    private ModuleCommandParser() {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"        super(CommonFormat.COMMAND_MODULE);","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    public static ModuleCommandParser getInstance() {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"        if (parser \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"            parser \u003d new ModuleCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_ADD, new AddModuleCommand());","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_VIEW, new ViewModuleCommand());","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_DELETE, new DeleteModuleCommand());","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_BACK, new BackCommand());","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        return parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspaceBanner(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        return String.format(\"You have %d modules\", moduleManager.getAllModules().length);","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"3m0W33D":34,"Woolicious98":2}},{"path":"src/main/java/terminus/parser/ModuleWorkspaceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.BackCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.NotesCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.QuestionCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.ScheduleCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"public class ModuleWorkspaceCommandParser extends CommandParser {","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"    private static ModuleWorkspaceCommandParser parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"     * Initializes the commandMap. Adds some default commands to it.","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    private ModuleWorkspaceCommandParser() {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"        super(\"\");","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    public static ModuleWorkspaceCommandParser getInstance() {","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"        if (parser \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"            parser \u003d new ModuleWorkspaceCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_BACK, new BackCommand());","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_NOTE, new NotesCommand());","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"            parser.addCommand(CommonFormat.COMMAND_SCHEDULE, new ScheduleCommand());","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"            parser.addCommand(CommonFormat.COMMAND_QUESTION, new QuestionCommand());","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        return parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    public Command parseCommand(String command) throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d super.parseCommand(command);","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        if (!(cmd instanceof BackCommand)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"            cmd.setModuleName(getWorkspace());","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        return cmd;","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspaceBanner(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        return \"Entering \" + getWorkspace() + \" workspace\";","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"kelvneo":2,"3m0W33D":44,"Woolicious98":2}},{"path":"src/main/java/terminus/parser/NoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.BackCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.ViewCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.note.AddNoteCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.content.note.DeleteNoteCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"public class NoteCommandParser extends InnerModuleCommandParser {","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"    private static NoteCommandParser parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"    private NoteCommandParser() {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"        super(CommonFormat.COMMAND_NOTE);","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    public static NoteCommandParser getInstance() {","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"        if (parser \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"            parser \u003d new NoteCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"            parser.addCommand(CommonFormat.COMMAND_BACK, new BackCommand());","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"            parser.addCommand(CommonFormat.COMMAND_ADD, new AddNoteCommand());","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"            parser.addCommand(CommonFormat.COMMAND_VIEW, new ViewCommand(Note.class));","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"            parser.addCommand(CommonFormat.COMMAND_DELETE, new DeleteNoteCommand(Note.class));","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        return parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    public String getWorkspaceBanner(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        return String.format(Messages.NOTE_BANNER,","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"                moduleManager.getModule(getModuleName()).getContentManager(Note.class).getContents().size());","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":4,"3m0W33D":22,"Woolicious98":11}},{"path":"src/main/java/terminus/parser/QuestionCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import terminus.command.BackCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.DeleteCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.ViewCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.question.AddQuestionCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.question.TestCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"public class QuestionCommandParser extends InnerModuleCommandParser {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"    private static QuestionCommandParser parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    private QuestionCommandParser() {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"        super(CommonFormat.COMMAND_QUESTION);","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    public static QuestionCommandParser getInstance() {","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"        if (parser \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"            parser \u003d new QuestionCommandParser();","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"            parser.addCommand(CommonFormat.COMMAND_BACK, new BackCommand());","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"            parser.addCommand(CommonFormat.COMMAND_ADD, new AddQuestionCommand());","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"            parser.addCommand(CommonFormat.COMMAND_VIEW, new ViewCommand\u003c\u003e(Question.class));","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"            parser.addCommand(CommonFormat.COMMAND_DELETE, new DeleteCommand\u003c\u003e(Question.class));","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"            parser.addCommand(CommonFormat.COMMAND_TEST, new TestCommand());","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        return parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"    public String getWorkspaceBanner(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        return String.format(Messages.QUESTION_BANNER,","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"            moduleManager.getModule(getModuleName()).getContentManager(Question.class).getContents().size());","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"kelvneo":38}},{"path":"src/main/java/terminus/storage/ModuleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import com.google.gson.GsonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.io.File;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":" * ModuleStorage is a class that handles any file I/O operation within TermiNUS.","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"public class ModuleStorage {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    private Path filePath;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    private final Gson gson;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    private static ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    private ModuleStorage() {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"        this.filePath \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"        this.gson \u003d new GsonBuilder().setPrettyPrinting().create();","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"     * Stores the given filepath for the singleton ModuleStorage.","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"     * @param filePath The path to the file to store at.","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"    public void init(Path filePath) {","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"     * Returns the singleton object of ModuleStorage.","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"     * @return ModuleStorage object of current session.","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"    public static ModuleStorage getInstance() {","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        if (moduleStorage \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"            moduleStorage \u003d new ModuleStorage();","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"        return moduleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"     * Creates main data folder and main JSON object containing TermiNUS information.","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"    private void initializeFile() throws IOException {","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        assert filePath !\u003d null : \"filePath should not be null\";","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"        if (!Files.isDirectory(filePath.getParent())) {","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(\"Parent directories not found, attempting to create them...\");","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"            Files.createDirectories(filePath.getParent());","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.info(\"Parent directories created.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.warning(String.format(\"%s not found, attempting to create file...\",","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"                    filePath.getFileName().toString()));","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"            Files.createFile(filePath);","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.info(String.format(\"%s created.\", filePath.getFileName().toString()));","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"     * Loads a JSON file and parses it as a ModuleManager object based on GSON followed by loading all notes content.","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"     * Returns null if the file does not exist or the file is not in a valid format.","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"     * @return NusModule based on the contents of the file.","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"    public ModuleManager loadFile() throws IOException {","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"        initializeFile();","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"        if (!Files.isReadable(filePath)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"            TerminusLogger.severe(\"File is does not exist or is not readable!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"            return null;","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(\"Decoding JSON to object\");","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"        ModuleManager moduleManager \u003d gson.fromJson(Files.newBufferedReader(filePath), ModuleManager.class);","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(\"Loading notes content into ModuleManager\");","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"        loadAllNotes(moduleManager);","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"        return moduleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"3m0W33D"},"content":"     * Saves NusModule instance into a JSON file based on GSON. Throws NullPointerException if the `module` is null.","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"3m0W33D"},"content":"     * @param moduleManager The ModuleManager to convert to JSON file.","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"kelvneo"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"3m0W33D"},"content":"    public void saveFile(ModuleManager moduleManager) throws IOException {","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"3m0W33D"},"content":"        if (moduleManager \u003d\u003d null) {","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"kelvneo"},"content":"            throw new NullPointerException(\"module cannot be null!\");","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"kelvneo"},"content":"        initializeFile();","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(\"Converting ModuleManager object into String...\");","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"3m0W33D"},"content":"        String jsonString \u003d gson.toJson(moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(\"String conversion completed.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.info(String.format(\"Writing to file: %s\", filePath.toString()));","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"kelvneo"},"content":"        assert jsonString !\u003d null \u0026\u0026 !jsonString.isBlank() : \"File saved is blank\";","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"kelvneo"},"content":"        Files.writeString(filePath, jsonString);","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"Woolicious98"},"content":"     * Loads all notes data from existing modules if there is any.","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleManager The ModuleManager containing existing modules.","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"Woolicious98"},"content":"    private void loadAllNotes(ModuleManager moduleManager) throws IOException {","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"Woolicious98"},"content":"        Path modDirPath;","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"Woolicious98"},"content":"        if (moduleManager \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"            return;","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"Woolicious98"},"content":"        for (String mod : moduleManager.getAllModules()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"            modDirPath \u003d Paths.get(filePath.getParent().toString(), mod);","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"Woolicious98"},"content":"            // Check if module name is a valid module and file name","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"Woolicious98"},"content":"            if (!CommonUtils.isValidFileName(mod) || !mod.matches(CommonFormat.SPACE_NEGATED_DELIMITER)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"Woolicious98"},"content":"                // Skip this module and remove from moduleManager","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"Woolicious98"},"content":"                TerminusLogger.warning(String.format(\"Invalid module name detected: %s\", mod));","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"Woolicious98"},"content":"                moduleManager.removeModule(mod);","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"Woolicious98"},"content":"                continue;","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"Woolicious98"},"content":"            // Check if directory does not exist and proceed to create directory, otherwise retrieve notes.","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"Woolicious98"},"content":"            if (Files.notExists(modDirPath)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"Woolicious98"},"content":"                TerminusLogger.info(\"Creating directory: \" + modDirPath);","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"Woolicious98"},"content":"                Files.createDirectories(modDirPath);","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"Woolicious98"},"content":"            } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"Woolicious98"},"content":"                // Load its notes file data if there is any.","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"Woolicious98"},"content":"                loadNotesFromModule(moduleManager, mod);","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"Woolicious98"},"content":"     * Loads all notes data from a specified module if any.","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleManager The ModuleManager containing existing modules.","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"Woolicious98"},"content":"     * @param mod A module name in the moduleManager.","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"Woolicious98"},"content":"    public void loadNotesFromModule(ModuleManager moduleManager, String mod) throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"Woolicious98"},"content":"        Path modDirPath \u003d Paths.get(filePath.getParent().toString(), mod);","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"Woolicious98"},"content":"        File folder \u003d new File(modDirPath.toString());","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"Woolicious98"},"content":"        assert folder !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"Woolicious98"},"content":"        File[] listOfFiles \u003d folder.listFiles();","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cNote\u003e contentManager \u003d moduleManager.getModule(mod).getContentManager(Note.class);","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"Woolicious98"},"content":"        contentManager.purgeData();","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"Woolicious98"},"content":"        for (File file : listOfFiles) {","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"Woolicious98"},"content":"            if (isValidFile(file)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"Woolicious98"},"content":"                TerminusLogger.info(String.format(\"Loading note file %s.\", file.getAbsolutePath()));","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"Woolicious98"},"content":"                contentManager.add(new Note(CommonUtils.getFileNameOnly(file.getName()),","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"Woolicious98"},"content":"                        Files.readString(Paths.get(file.getAbsolutePath()))));","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"Woolicious98"},"content":"            } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"Woolicious98"},"content":"                TerminusLogger.info(String.format(\"File %s is not a valid note file.\", file.getAbsolutePath()));","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"Woolicious98"},"content":"     * Saves all notes from all modules into multiple text files separated by its module directory.","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleManager The ModuleManager containing all data from each module.","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"Woolicious98"},"content":"    public void saveAllNotes(ModuleManager moduleManager) throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"Woolicious98"},"content":"        for (String mod : moduleManager.getAllModules()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"Woolicious98"},"content":"            saveNotesFromModule(moduleManager, mod, false);","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"Woolicious98"},"content":"     * Saves all notes from a specified module into multiple text files inside the directory of its module name.","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleManager The ModuleManager containing all data from each module.","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"Woolicious98"},"content":"     * @param mod A module name in the moduleManager.","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"Woolicious98"},"content":"     * @param toDeleteAll True if files in directory should be removed first, otherwise false.","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"Woolicious98"},"content":"    public void saveNotesFromModule(ModuleManager moduleManager, String mod, Boolean toDeleteAll) throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"Woolicious98"},"content":"        Path modDirPath \u003d Paths.get(filePath.getParent().toString(), mod);","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"Woolicious98"},"content":"        assert CommonUtils.isValidFileName(mod);","lastModifiedDate":"2021-10-18"},{"lineNumber":195,"author":{"gitId":"Woolicious98"},"content":"        // Create module folder if it is missing.","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"Woolicious98"},"content":"        if (Files.notExists(modDirPath)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(\"Creating directory: \" + modDirPath);","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"Woolicious98"},"content":"            Files.createDirectories(modDirPath);","lastModifiedDate":"2021-10-18"},{"lineNumber":199,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":200,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"Woolicious98"},"content":"        if (toDeleteAll) {","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"Woolicious98"},"content":"            // Remove all files within the folder, used when notes have been deleted.","lastModifiedDate":"2021-10-19"},{"lineNumber":203,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(\"Removing files from directory: \" + modDirPath);","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"Woolicious98"},"content":"            deleteAllFilesInDirectory(modDirPath);","lastModifiedDate":"2021-10-19"},{"lineNumber":205,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"Woolicious98"},"content":"        // Write to its specific note files.","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(\"Adding note files into directory: \" + modDirPath);","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cNote\u003e contentManager \u003d moduleManager.getModule(mod).getContentManager(Note.class);","lastModifiedDate":"2021-10-18"},{"lineNumber":210,"author":{"gitId":"Woolicious98"},"content":"        ArrayList\u003cNote\u003e noteArrayList \u003d contentManager.getContents();","lastModifiedDate":"2021-10-18"},{"lineNumber":211,"author":{"gitId":"Woolicious98"},"content":"        for (Note note : noteArrayList) {","lastModifiedDate":"2021-10-18"},{"lineNumber":212,"author":{"gitId":"Woolicious98"},"content":"            assert Files.isDirectory(modDirPath);","lastModifiedDate":"2021-10-18"},{"lineNumber":213,"author":{"gitId":"Woolicious98"},"content":"            assert CommonUtils.isValidFileName(note.getName());","lastModifiedDate":"2021-10-18"},{"lineNumber":214,"author":{"gitId":"Woolicious98"},"content":"            createNoteFile(modDirPath, note);","lastModifiedDate":"2021-10-20"},{"lineNumber":215,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":217,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":218,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":219,"author":{"gitId":"Woolicious98"},"content":"     * Removes deleted note file from module folder.","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":221,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleName The module name related to the new note.","lastModifiedDate":"2021-10-20"},{"lineNumber":222,"author":{"gitId":"Woolicious98"},"content":"     * @param noteName The note removed from moduleManager.","lastModifiedDate":"2021-10-20"},{"lineNumber":223,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-20"},{"lineNumber":224,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":225,"author":{"gitId":"Woolicious98"},"content":"    public void removeNoteFromModule(String moduleName, String noteName) throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":226,"author":{"gitId":"Woolicious98"},"content":"        Path modDirPath \u003d Paths.get(filePath.getParent().toString(), moduleName);","lastModifiedDate":"2021-10-20"},{"lineNumber":227,"author":{"gitId":"Woolicious98"},"content":"        if (Files.notExists(modDirPath)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":228,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(\"Module directory not found: \" + modDirPath);","lastModifiedDate":"2021-10-20"},{"lineNumber":229,"author":{"gitId":"Woolicious98"},"content":"            return;","lastModifiedDate":"2021-10-20"},{"lineNumber":230,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":231,"author":{"gitId":"Woolicious98"},"content":"        File deleteFile \u003d new File(","lastModifiedDate":"2021-10-20"},{"lineNumber":232,"author":{"gitId":"Woolicious98"},"content":"                Paths.get(modDirPath.toString(), noteName + CommonFormat.EXTENSION_TEXT_FILE).toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":233,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(\"Removing file: \" + deleteFile.getAbsolutePath());","lastModifiedDate":"2021-10-20"},{"lineNumber":234,"author":{"gitId":"Woolicious98"},"content":"        if (!deleteFile.delete()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":235,"author":{"gitId":"Woolicious98"},"content":"            throw new IOException(deleteFile.getAbsolutePath());","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":237,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":238,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":239,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":240,"author":{"gitId":"Woolicious98"},"content":"     * Add new notes file into module folder.","lastModifiedDate":"2021-10-20"},{"lineNumber":241,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":242,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleName The module name related to the new note.","lastModifiedDate":"2021-10-20"},{"lineNumber":243,"author":{"gitId":"Woolicious98"},"content":"     * @param newNote The new note added to moduleManager.","lastModifiedDate":"2021-10-20"},{"lineNumber":244,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-20"},{"lineNumber":245,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":246,"author":{"gitId":"Woolicious98"},"content":"    public void addNoteFromModule(String moduleName, Note newNote) throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":247,"author":{"gitId":"Woolicious98"},"content":"        Path modDirPath \u003d Paths.get(filePath.getParent().toString(), moduleName);","lastModifiedDate":"2021-10-20"},{"lineNumber":248,"author":{"gitId":"Woolicious98"},"content":"        if (Files.notExists(modDirPath)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":249,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(\"Creating directory: \" + modDirPath);","lastModifiedDate":"2021-10-20"},{"lineNumber":250,"author":{"gitId":"Woolicious98"},"content":"            Files.createDirectories(modDirPath);","lastModifiedDate":"2021-10-20"},{"lineNumber":251,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":252,"author":{"gitId":"Woolicious98"},"content":"        createNoteFile(modDirPath, newNote);","lastModifiedDate":"2021-10-20"},{"lineNumber":253,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":254,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":255,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":256,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":257,"author":{"gitId":"Woolicious98"},"content":"     * Deletes all files within a specified directory given by its full path.","lastModifiedDate":"2021-10-19"},{"lineNumber":258,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":259,"author":{"gitId":"Woolicious98"},"content":"     * @param directoryPath Directory path where all files inside will be deleted.","lastModifiedDate":"2021-10-19"},{"lineNumber":260,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-20"},{"lineNumber":261,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":262,"author":{"gitId":"Woolicious98"},"content":"    private void deleteAllFilesInDirectory(Path directoryPath) throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":263,"author":{"gitId":"Woolicious98"},"content":"        File folder \u003d new File(directoryPath.toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":264,"author":{"gitId":"Woolicious98"},"content":"        File[] listOfFiles \u003d folder.listFiles();","lastModifiedDate":"2021-10-19"},{"lineNumber":265,"author":{"gitId":"Woolicious98"},"content":"        for (File file : listOfFiles) {","lastModifiedDate":"2021-10-19"},{"lineNumber":266,"author":{"gitId":"Woolicious98"},"content":"            cleanAllFilesInclusive(file);","lastModifiedDate":"2021-10-19"},{"lineNumber":267,"author":{"gitId":"Woolicious98"},"content":"            if (file.exists()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":268,"author":{"gitId":"Woolicious98"},"content":"                throw new IOException(file.getAbsolutePath());","lastModifiedDate":"2021-10-21"},{"lineNumber":269,"author":{"gitId":"Woolicious98"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":270,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":271,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":272,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":273,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":274,"author":{"gitId":"Woolicious98"},"content":"     * Deletes all files from the deleted module folder.","lastModifiedDate":"2021-10-19"},{"lineNumber":275,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":276,"author":{"gitId":"Woolicious98"},"content":"     * @param mod A module name in the moduleManager.","lastModifiedDate":"2021-10-19"},{"lineNumber":277,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":278,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":279,"author":{"gitId":"Woolicious98"},"content":"    public void cleanAfterDeleteModule(String mod) throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":280,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(\"Cleaning up deleted modules.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":281,"author":{"gitId":"Woolicious98"},"content":"        Path modDirPath \u003d Paths.get(filePath.getParent().toString(), mod);","lastModifiedDate":"2021-10-19"},{"lineNumber":282,"author":{"gitId":"Woolicious98"},"content":"        if (Files.notExists(modDirPath)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":283,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(\"Directory does not exists: \" + modDirPath);","lastModifiedDate":"2021-10-19"},{"lineNumber":284,"author":{"gitId":"Woolicious98"},"content":"            return;","lastModifiedDate":"2021-10-19"},{"lineNumber":285,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":286,"author":{"gitId":"Woolicious98"},"content":"        File folder \u003d new File(modDirPath.toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":287,"author":{"gitId":"Woolicious98"},"content":"        cleanAllFilesInclusive(folder);","lastModifiedDate":"2021-10-19"},{"lineNumber":288,"author":{"gitId":"Woolicious98"},"content":"        if (folder.exists()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":289,"author":{"gitId":"Woolicious98"},"content":"            throw new IOException(folder.getAbsolutePath());","lastModifiedDate":"2021-10-21"},{"lineNumber":290,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":291,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":292,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":293,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":294,"author":{"gitId":"Woolicious98"},"content":"     * Deletes all files within itself and itself from a specified file.","lastModifiedDate":"2021-10-19"},{"lineNumber":295,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":296,"author":{"gitId":"Woolicious98"},"content":"     * @param file The file to be deleted.","lastModifiedDate":"2021-10-19"},{"lineNumber":297,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":298,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":299,"author":{"gitId":"Woolicious98"},"content":"    private void cleanAllFilesInclusive(File file) throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":300,"author":{"gitId":"Woolicious98"},"content":"        Files.walk(Paths.get(file.getAbsolutePath()))","lastModifiedDate":"2021-10-19"},{"lineNumber":301,"author":{"gitId":"Woolicious98"},"content":"                .sorted(Comparator.reverseOrder())","lastModifiedDate":"2021-10-19"},{"lineNumber":302,"author":{"gitId":"Woolicious98"},"content":"                .map(Path::toFile)","lastModifiedDate":"2021-10-19"},{"lineNumber":303,"author":{"gitId":"Woolicious98"},"content":"                .forEach(File::delete);","lastModifiedDate":"2021-10-19"},{"lineNumber":304,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":305,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":306,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":307,"author":{"gitId":"Woolicious98"},"content":"     * Creates a module directory and checks if directory is empty.","lastModifiedDate":"2021-10-19"},{"lineNumber":308,"author":{"gitId":"Woolicious98"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":309,"author":{"gitId":"Woolicious98"},"content":"     * @param moduleName The name of the directory to be created.","lastModifiedDate":"2021-10-19"},{"lineNumber":310,"author":{"gitId":"Woolicious98"},"content":"     * @return True if the directory created is empty.","lastModifiedDate":"2021-10-19"},{"lineNumber":311,"author":{"gitId":"Woolicious98"},"content":"     * @throws IOException When the file is inaccessible (e.g. file is locked by OS).","lastModifiedDate":"2021-10-19"},{"lineNumber":312,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":313,"author":{"gitId":"Woolicious98"},"content":"    public boolean createModuleDirectory(String moduleName) throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":314,"author":{"gitId":"Woolicious98"},"content":"        assert moduleName !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":315,"author":{"gitId":"Woolicious98"},"content":"        assert CommonUtils.isValidFileName(moduleName);","lastModifiedDate":"2021-10-19"},{"lineNumber":316,"author":{"gitId":"Woolicious98"},"content":"        assert moduleName.matches(CommonFormat.SPACE_NEGATED_DELIMITER);","lastModifiedDate":"2021-10-19"},{"lineNumber":317,"author":{"gitId":"Woolicious98"},"content":"        Path modDirPath \u003d Paths.get(filePath.getParent().toString(), moduleName);","lastModifiedDate":"2021-10-19"},{"lineNumber":318,"author":{"gitId":"Woolicious98"},"content":"        if (Files.notExists(modDirPath)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":319,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(\"Creating directory: \" + modDirPath);","lastModifiedDate":"2021-10-19"},{"lineNumber":320,"author":{"gitId":"Woolicious98"},"content":"            Files.createDirectories(modDirPath);","lastModifiedDate":"2021-10-19"},{"lineNumber":321,"author":{"gitId":"Woolicious98"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":322,"author":{"gitId":"Woolicious98"},"content":"            TerminusLogger.info(\"Removing files from directory: \" + modDirPath);","lastModifiedDate":"2021-10-19"},{"lineNumber":323,"author":{"gitId":"Woolicious98"},"content":"            deleteAllFilesInDirectory(modDirPath);","lastModifiedDate":"2021-10-19"},{"lineNumber":324,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":325,"author":{"gitId":"Woolicious98"},"content":"        return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":326,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":327,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":328,"author":{"gitId":"Woolicious98"},"content":"    private boolean isValidFile(File file) throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":329,"author":{"gitId":"Woolicious98"},"content":"        boolean isValid \u003d true;","lastModifiedDate":"2021-10-19"},{"lineNumber":330,"author":{"gitId":"Woolicious98"},"content":"        if (!Files.isReadable(Paths.get(file.getAbsolutePath()))) {","lastModifiedDate":"2021-10-19"},{"lineNumber":331,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":332,"author":{"gitId":"Woolicious98"},"content":"        } else if (!CommonUtils.isValidFileName(CommonUtils.getFileNameOnly(file.getName()))) {","lastModifiedDate":"2021-10-19"},{"lineNumber":333,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":334,"author":{"gitId":"Woolicious98"},"content":"        } else if (!isValidFileSize(file)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":335,"author":{"gitId":"Woolicious98"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-19"},{"lineNumber":336,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":337,"author":{"gitId":"Woolicious98"},"content":"        return isValid;","lastModifiedDate":"2021-10-19"},{"lineNumber":338,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":339,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":340,"author":{"gitId":"Woolicious98"},"content":"    private boolean isValidFileSize(File file) throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":341,"author":{"gitId":"Woolicious98"},"content":"        return Files.size(Paths.get(file.getAbsolutePath())) \u003c\u003d CommonFormat.MAX_FILE_SIZE;","lastModifiedDate":"2021-10-19"},{"lineNumber":342,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":343,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":344,"author":{"gitId":"Woolicious98"},"content":"    private void createNoteFile(Path modDirPath, Note note) throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":345,"author":{"gitId":"Woolicious98"},"content":"        Path filePath \u003d Paths.get(modDirPath.toString(), note.getName() + CommonFormat.EXTENSION_TEXT_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":346,"author":{"gitId":"Woolicious98"},"content":"        Files.writeString(filePath, note.getData());","lastModifiedDate":"2021-10-20"},{"lineNumber":347,"author":{"gitId":"Woolicious98"},"content":"        TerminusLogger.info(\"Added file: \" + filePath);","lastModifiedDate":"2021-10-20"},{"lineNumber":348,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":349,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":350,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":351,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"kelvneo":60,"Woolicious98":283,"3m0W33D":8}},{"path":"src/main/java/terminus/timetable/Timetable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.timetable;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.DaysOfWeekEnum;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.NusModule;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"import static terminus.common.CommonUtils.isStringNullOrEmpty;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"public class Timetable {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"    private int index \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    public Timetable(ModuleManager moduleManager) {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"        this.moduleManager \u003d moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"     * Lists all the schedule for a particular day.","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"     * @param contentManager ContentManager object containing all user\u0027s links.","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"     * @param currentDay     The particular day at which the schedules are selected from.","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"     * @return String String object containing all the schedules for the particular day.","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"    private String listDailySchedule(ContentManager\u003cLink\u003e contentManager, String currentDay) {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"        StringBuilder dailySchedule \u003d new StringBuilder();","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"        contentManager.getContents()","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"                .stream()","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"                .filter(x -\u003e x.getDay().equalsIgnoreCase(currentDay))","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"                .forEach(x -\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"                    index++;","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"                    dailySchedule.append(String.format(\"%d. %s\\n\", index, x.getViewDescription()));","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"                });","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"        return dailySchedule.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"     * Retrieve and format all the user\u0027s schedule for the particular day.","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"     * @param today The particular day at which the schedules are selected from.","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"     * @return String String object containing all the schedules for the day","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"    public String getDailySchedule(String today) {","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"        StringBuilder schedule \u003d new StringBuilder();","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"        String[] modules \u003d moduleManager.getAllModules();","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"        Stream\u003cString\u003e stream \u003d Arrays.stream(modules);","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"        stream.forEach(x -\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"            NusModule module \u003d moduleManager.getModule(x);","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"            ContentManager\u003cLink\u003e contentManager \u003d module.getContentManager(Link.class);","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"            assert contentManager !\u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"            schedule.append(listDailySchedule(contentManager, today));","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.info(String.format(\"Successfully acquire %s\u0027s schedule for %s\", x, today));","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"        });","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"        index \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"        if (isStringNullOrEmpty(schedule.toString())) {","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"            return null;","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"        return schedule.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"LouisLouis19"},"content":"     * Retrieve and format all the user\u0027s schedule for the week.","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"     * @return String string object containing all the user\u0027s schedule for the week","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"    public String getWeeklySchedule() {","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"LouisLouis19"},"content":"        StringBuilder dailyResult \u003d new StringBuilder();","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"        for (DaysOfWeekEnum currentDay : DaysOfWeekEnum.values()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"            String today \u003d currentDay.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"            String dailySchedule \u003d getDailySchedule(today);","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"            if (!isStringNullOrEmpty(dailySchedule)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"                assert dailySchedule !\u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"                String header \u003d String.format(\"%s:\\n\", today);","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"LouisLouis19"},"content":"                dailyResult.append(header.toUpperCase());","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"LouisLouis19"},"content":"                dailyResult.append(dailySchedule);","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"                assert dailyResult !\u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"                TerminusLogger.info(String.format(\"Successfully acquire %s\u0027s schedule\", today));","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"LouisLouis19"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"LouisLouis19"},"content":"            index \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"LouisLouis19"},"content":"        return dailyResult.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"LouisLouis19"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"     * Print empty message for empty user schedule.","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"LouisLouis19"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"LouisLouis19"},"content":"     * @param schedule The string containing the retrieved user schedule.","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"LouisLouis19"},"content":"     * @param day      The day corresponding to the retrieved schedule","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"LouisLouis19"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"LouisLouis19"},"content":"    public String checkEmptySchedule(String schedule, String day) {","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"LouisLouis19"},"content":"        if (schedule \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"LouisLouis19"},"content":"            TerminusLogger.info(\"There is no schedule in the user\u0027s timetable\");","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"LouisLouis19"},"content":"            schedule \u003d String.format(Messages.EMPTY_SCHEDULE_FOR_THE_DAY, day);","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"LouisLouis19"},"content":"        return schedule;","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"LouisLouis19":109}},{"path":"src/main/java/terminus/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.CommandParser;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"public class Ui {","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    private static final String PROMPT \u003d \"[%s] \u003e\u003e\u003e \";","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"    private final Scanner scanner;","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"    public Ui() {","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"        this(System.in);","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    public Ui(InputStream in) {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"        this.scanner \u003d new Scanner(in);","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"     * Prints the banner for a workspace, which includes all the commands in the parser.","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    public void printParserBanner(CommandParser parser, ModuleManager moduleManager) {","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"        printSection(","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"            \"\",","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"            parser.getWorkspaceBanner(moduleManager),","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"            parser.getCommandList()","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"                .stream()","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"                .reduce(\"\\nType any of the following to get started:\\n\",","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"                    (x, y) -\u003e String.format(\"%s\u003e %s\\n\", x, y))","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        );","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"     * Prints a prompt and requests a command from the user.","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"     * @param workspaceName The string to place within the brackets.","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"     * @return The command the user inputted.","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    public String requestCommand(String workspaceName) {","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        String validatedWorkspaceName \u003d workspaceName;","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        if (validatedWorkspaceName \u003d\u003d null) {","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"            validatedWorkspaceName \u003d \"\";","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        return getUserInput(String.format(PROMPT, validatedWorkspaceName));","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"     * Prints multiple strings at once, separated by a new line.","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"     * @param strings The strings to print.","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"    public void printSection(String... strings) {","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"        Arrays.stream(strings).forEach(System.out::println);","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"     * Prints the exit message.","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"    public void printExitMessage() {","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"        System.out.println(\"Goodbye!\");","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"     * Get the input of the user through the Scanner.","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"     * ","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"     * @return The user input from the Scanner.","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"    public String getUserInput(String prompt) {","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"        System.out.print(prompt);","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kelvneo":69,"Woolicious98":3,"3m0W33D":4}},{"path":"src/test/java/terminus/TerminusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"class TerminusTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void sampleTest() {","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        assertTrue(true);","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"kelvneo":2,"-":10}},{"path":"src/test/java/terminus/TestFilePath.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"public class TestFilePath {","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"    public static final Path RESOURCE_FOLDER \u003d Path.of(\"src\", \"test\", \"resources\");","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"    public static final Path SAVE_FILE \u003d RESOURCE_FOLDER.resolve(\"saveFile.json\");","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"    public static final Path MALFORMED_FILE \u003d RESOURCE_FOLDER.resolve(\"malformedFile.json\");","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"    public static final Path VALID_FILE \u003d RESOURCE_FOLDER.resolve(\"validFile.json\");","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Woolicious98":10}},{"path":"src/test/java/terminus/activerecall/DifficultyModifierTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.activerecall;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"public class DifficultyModifierTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"    void tweakEasyQuestionDifficulty_lowerThanMinValue_returnMinValue() {","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.2, DifficultyModifier.tweakEasyQuestionDifficulty(0.1));","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.2, DifficultyModifier.tweakEasyQuestionDifficulty(0.2));","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.2, DifficultyModifier.tweakEasyQuestionDifficulty(0));","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.2, DifficultyModifier.tweakEasyQuestionDifficulty(Double.MIN_VALUE));","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"    void tweakHardQuestionDifficulty_higherThanMaxValue_returnMaxValue() {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.9, DifficultyModifier.tweakHardQuestionDifficulty(1));","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.9, DifficultyModifier.tweakHardQuestionDifficulty(0.9));","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.9, DifficultyModifier.tweakHardQuestionDifficulty(100000));","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"        assertEquals(0.9, DifficultyModifier.tweakHardQuestionDifficulty(Double.MAX_VALUE));","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":26}},{"path":"src/test/java/terminus/activerecall/GameEnvironmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.activerecall;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import java.util.Random;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"public class GameEnvironmentTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"    private Random random;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"        random \u003d new Random();","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"        random.setSeed(1L);","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    void run_exit_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"        String input \u003d String.format(\"%s%s2%s%s%se%s\", LS, LS, LS, LS, LS, LS);","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"        Ui ui \u003d new Ui(in);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        List\u003cQuestion\u003e questions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"            questions.add(new Question(\"test \" + i, \"answer \" + i));","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        QuestionGenerator questionGenerator \u003d new QuestionGenerator(questions, 3, random);","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        GameEnvironment gameEnvironment \u003d new GameEnvironment(ui, questionGenerator);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        gameEnvironment.run();","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"            assertEquals(0.5, questions.get(i).getWeight());","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"    void run_ignoreGarbageInput_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        String input \u003d String.format(\"%s%sasdf%s2%s%s%sasdf%se%s\", LS, LS, LS, LS, LS, LS, LS, LS);","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        Ui ui \u003d new Ui(in);","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        List\u003cQuestion\u003e questions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"            questions.add(new Question(\"test \" + i, \"answer \" + i));","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        QuestionGenerator questionGenerator \u003d new QuestionGenerator(questions, 3, random);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        GameEnvironment gameEnvironment \u003d new GameEnvironment(ui, questionGenerator);","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"        gameEnvironment.run();","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"            assertEquals(0.5, questions.get(i).getWeight());","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"    void run_reweigh_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"        String input \u003d String.format(\"%s%s3%s%s%s2%s%s%s1%s%s%s2%s%s%s2%s\", LS, LS, LS, LS, LS, LS, LS, LS, LS, LS,","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"            LS, LS, LS, LS, LS);","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"        Ui ui \u003d new Ui(in);","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"        List\u003cQuestion\u003e questions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"            questions.add(new Question(\"test \" + i, \"answer \" + i));","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"        QuestionGenerator questionGenerator \u003d new QuestionGenerator(questions, 10, random);","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"        GameEnvironment gameEnvironment \u003d new GameEnvironment(ui, questionGenerator);","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"        gameEnvironment.run();","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"        double highNewWeight \u003d DifficultyModifier.tweakHardQuestionDifficulty(0.5);","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"        double lowNewWeight \u003d DifficultyModifier.tweakEasyQuestionDifficulty(0.5);","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"        int high \u003d 0; ","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"        int same \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"        int low \u003d 0;","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"            if (questions.get(i).getWeight() \u003d\u003d highNewWeight) {","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"                high++;","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"            } else if (questions.get(i).getWeight() \u003d\u003d 0.5) {","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"                same++;","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"            } else if (questions.get(i).getWeight() \u003d\u003d lowNewWeight) {","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"                low++;","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"        assertEquals(1, high);","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"        assertEquals(1, low);","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"        assertEquals(3, same);","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":93}},{"path":"src/test/java/terminus/activerecall/QuestionGeneratorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.activerecall;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import java.util.Random;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"public class QuestionGeneratorTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    private Random random;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"        random \u003d new Random();","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"        random.setSeed(1L);","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    void hasNext_noQuestions_returnsFalse() {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"        QuestionGenerator questionGenerator \u003d new QuestionGenerator(new ArrayList\u003c\u003e(), 10);","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"        assertFalse(questionGenerator.hasNext());","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    void next_noQuestions_throwsException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        QuestionGenerator questionGenerator \u003d new QuestionGenerator(new ArrayList\u003c\u003e(), 10);","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        assertThrows(NullPointerException.class, questionGenerator::next);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"    void next_success() {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        List\u003cQuestion\u003e questions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"            questions.add(new Question(\"test \" + i, \"answer \" + i));","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"        QuestionGenerator questionGenerator \u003d new QuestionGenerator(questions, 10, random);","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"            Question question \u003d questionGenerator.next();","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"            questions.remove(question);","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        assertTrue(questions.isEmpty());","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        ","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"            questions.add(new Question(\"test \" + i, \"answer \" + i));","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        questionGenerator \u003d new QuestionGenerator(questions, 100, random);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"            questions.remove(questionGenerator.next());","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"        assertTrue(questions.isEmpty());","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        assertFalse(questionGenerator.hasNext());","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"            questions.add(new Question(\"test \" + i, \"answer \" + i));","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"        questionGenerator \u003d new QuestionGenerator(questions, 5, random);","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"            questions.remove(questionGenerator.next());","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"        assertEquals(5, questions.size());","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"        assertFalse(questionGenerator.hasNext());","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":71}},{"path":"src/test/java/terminus/command/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.common.CommonFormat;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"public class ExitCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    private MainCommandParser commandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.setModule(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    void execute_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        Command exitCommand \u003d commandParser.parseCommand(CommonFormat.COMMAND_EXIT);","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        CommandResult mainResult \u003d exitCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        assertTrue(mainResult.isOk() \u0026\u0026 mainResult.isExit());","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        Command noteExitCommand \u003d commandParser","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"            .parseCommand(\"go \" + tempModule + \" \" + CommonFormat.COMMAND_NOTE + \" \" + CommonFormat.COMMAND_EXIT);","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"        CommandResult noteResult \u003d noteExitCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        assertTrue(noteResult.isOk() \u0026\u0026 noteResult.isExit());","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        Command scheduleExitCommand \u003d commandParser","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"            .parseCommand(\"go \" + tempModule + \" \" + CommonFormat.COMMAND_SCHEDULE + \" \" + CommonFormat.COMMAND_EXIT);","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        CommandResult scheduleExitResult \u003d scheduleExitCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        assertTrue(scheduleExitResult.isOk() \u0026\u0026 scheduleExitResult.isExit());","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"        Command goCommandExitCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" \" + CommonFormat.COMMAND_EXIT);","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"        CommandResult goCommandExitCommandResult \u003d goCommandExitCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(goCommandExitCommandResult.isOk() \u0026\u0026 goCommandExitCommandResult.isExit());","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        Command moduleCommandExitCommand \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"                commandParser.parseCommand(\"module \" + CommonFormat.COMMAND_EXIT);","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        CommandResult moduleCommandExitCommandResult \u003d moduleCommandExitCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(moduleCommandExitCommandResult.isOk() \u0026\u0026 moduleCommandExitCommandResult.isExit());","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"kelvneo":32,"LouisLouis19":1,"Woolicious98":22,"3m0W33D":1}},{"path":"src/test/java/terminus/command/GoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleWorkspaceCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"public class GoCommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    private MainCommandParser commandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    private ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(TestFilePath.SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.createModuleDirectory(tempModule);","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.setModule(tempModule);","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"    @AfterAll","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    static void reset() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.cleanAfterDeleteModule(\"test\");","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"    void execute_go_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d commandParser.parseCommand(\"go \" + tempModule);","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"        CommandResult cmdResult \u003d cmd.execute(ui, moduleManager);","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.getAdditionalData() instanceof ModuleWorkspaceCommandParser);","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"    void execute_go_throwsException() throws InvalidArgumentException, InvalidCommandException {","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d commandParser.parseCommand(\"go not_a_test\");","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e cmd.execute(ui, moduleManager));","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"    void execute_goAdvance_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" note\");","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"        CommandResult cmdResult \u003d cmd.execute(ui, moduleManager);","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.getAdditionalData() instanceof NoteCommandParser);","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" note add \\\"test\\\" \\\"test1\\\"\");","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"        cmdResult \u003d cmd.execute(ui, moduleManager);","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(Note.class).getTotalContents());","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" note view\");","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"        cmdResult \u003d cmd.execute(ui, moduleManager);","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" note delete 1\");","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"        cmdResult \u003d cmd.execute(ui, moduleManager);","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(0, moduleManager.getModule(tempModule).getContentManager(Note.class).getTotalContents());","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" schedule\");","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"        cmdResult \u003d cmd.execute(ui, moduleManager);","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.getAdditionalData() instanceof LinkCommandParser);","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" schedule add \\\"test\\\" \\\"Thursday\\\" \\\"00:00\\\" \"","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"                + \"\\\"https://zoom.us\\\"\");","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"3m0W33D"},"content":"        cmdResult \u003d cmd.execute(ui, moduleManager);","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(Link.class).getTotalContents());","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" schedule view\");","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"3m0W33D"},"content":"        cmdResult \u003d cmd.execute(ui, moduleManager);","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"go \" + tempModule + \" schedule delete 1\");","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"        cmdResult \u003d cmd.execute(ui, moduleManager);","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(0, moduleManager.getModule(tempModule).getContentManager(Link.class).getTotalContents());","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"3m0W33D"},"content":"    void execute_goAdvance_throwException() throws InvalidArgumentException, InvalidCommandException {","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" note abcbd\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" schedule abcbd\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" schedule delete -1\").execute(ui,","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"3m0W33D"},"content":"                        moduleManager));","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" note delete -1\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" note view 100\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"3m0W33D":97,"Woolicious98":17}},{"path":"src/test/java/terminus/command/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.parser.ModuleCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"public class HelpCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    private MainCommandParser mainCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    private NoteCommandParser noteCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    private LinkCommandParser linkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    private ModuleCommandParser moduleCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"        mainCommandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        noteCommandParser \u003d NoteCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"        noteCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        moduleCommandParser \u003d ModuleCommandParser.getInstance();","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.setModule(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"    void execute_helpCommand_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"        CommandResult result \u003d mainCommandParser.parseCommand(\"help\").execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(result.isOk());","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"        result \u003d noteCommandParser.parseCommand(\"help\").execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(result.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"        result \u003d linkCommandParser.parseCommand(\"help\").execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(result.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        result \u003d moduleCommandParser.parseCommand(\"help\").execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(result.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"3m0W33D":34,"Woolicious98":18}},{"path":"src/test/java/terminus/command/ModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"public class ModuleCommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    private MainCommandParser commandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    private ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(TestFilePath.SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        commandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    @AfterAll","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    static void reset() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.cleanAfterDeleteModule(\"test\");","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    void execute_module_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d commandParser.parseCommand(\"module\");","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        CommandResult cmdResult \u003d cmd.execute(ui, moduleManager);","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.getAdditionalData() instanceof ModuleCommandParser);","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        cmd \u003d commandParser.parseCommand(\"module add \\\"test\\\"\");","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"        cmdResult \u003d cmd.execute(ui, moduleManager);","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(1, moduleManager.getAllModules().length);","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"    void execute_module_throwsException() throws InvalidArgumentException, InvalidCommandException {","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"module add\").execute(ui,","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"                moduleManager));","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"module delete asd\").execute(ui,","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"                moduleManager));","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"module asdsasd\").execute(ui,","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"                moduleManager));","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"3m0W33D":51,"Woolicious98":14}},{"path":"src/test/java/terminus/command/NoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.command;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"public class NoteCommandTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    private MainCommandParser commandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    private ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(TestFilePath.SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.createModuleDirectory(tempModule);","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        commandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.setModule(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"    @AfterAll","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"    static void reset() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.cleanAfterDeleteModule(\"test\");","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"    void execute_noteAdvance_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        Command mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" note\");","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"        CommandResult changeResult \u003d mainCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(changeResult.getAdditionalData() instanceof NoteCommandParser);","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" note add \\\"username\\\" \\\"password\\\"\");","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"        changeResult \u003d mainCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(Note.class).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"        mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" note view\");","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"        changeResult \u003d mainCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"    void execute_noteAdvance_throwsException() throws InvalidArgumentException, InvalidCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidCommandException.class,","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" note -1\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" note view 100\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" note delete -1\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Woolicious98":72}},{"path":"src/test/java/terminus/command/QuestionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.QuestionCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"public class QuestionCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    private MainCommandParser commandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"        commandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"        moduleManager.setModule(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"    void execute_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        Command mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" question\");","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        CommandResult changeResult \u003d mainCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        assertTrue(changeResult.getAdditionalData() instanceof QuestionCommandParser);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" question add \\\"username\\\" \\\"password\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        changeResult \u003d mainCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(Question.class).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" question view\");","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        changeResult \u003d mainCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"    void execute_throwsException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class,","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" question -1\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" question view 100\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" question delete -1\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":60}},{"path":"src/test/java/terminus/command/ScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"public class ScheduleCommandTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    private MainCommandParser commandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        commandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.setModule(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    void execute_linkAdvance_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        Command mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" schedule\");","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        CommandResult changeResult \u003d mainCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(changeResult.getAdditionalData() instanceof LinkCommandParser);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"        mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" schedule add \\\"test\\\" \\\"Thursday\\\" \\\"00:00\\\" \"","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"                + \"\\\"https://zoom.us\\\"\");","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        changeResult \u003d mainCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(Link.class).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"        mainCommand \u003d commandParser.parseCommand(\"go \" + tempModule + \" schedule view\");","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"        changeResult \u003d mainCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(changeResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"    void execute_linkAdvance_throwsException() throws InvalidArgumentException, InvalidCommandException {","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" schedule -1\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"            () -\u003e commandParser.parseCommand(","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"                            \"go \" + tempModule + \" schedule add \\\"test\\\" \\\"Thursday\\\" \\\"00:00\\\" \\\"test.com\\\"\")","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"                    .execute(ui, moduleManager));","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"            () -\u003e commandParser.parseCommand(\"go \" + tempModule + \" schedule delete -1\")","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"                    .execute(ui, moduleManager));","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"3m0W33D":36,"Woolicious98":27}},{"path":"src/test/java/terminus/command/TimetableCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.command;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.parser.MainCommandParser;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"public class TimetableCommandTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"    private MainCommandParser mainCommandParser;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    private LinkCommandParser linkCommandParser;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"    private String tempModule1 \u003d \"test1\";","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    void setUp() {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"        this.mainCommandParser \u003d mainCommandParser.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"        this.linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"        this.linkCommandParser.setModuleName(tempModule1);","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"        moduleManager.setModule(tempModule1);","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"    void execute_viewWeekly_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Saturday\\\" \\\"00:00\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"        Command timetableCommand \u003d mainCommandParser.parseCommand(\"timetable\");","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"        CommandResult timetableResult \u003d timetableCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(timetableResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Friday\\\" \\\"00:00\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"        Command timetableCommand1 \u003d mainCommandParser.parseCommand(\"timetable\");","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"        CommandResult timetableResult1 \u003d timetableCommand1.execute(ui, moduleManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(timetableResult1.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Sunday\\\" \\\"00:00\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"        Command timetableCommand2 \u003d mainCommandParser.parseCommand(\"timetable\");","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"        CommandResult timetableResult2 \u003d timetableCommand2.execute(ui, moduleManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(timetableResult2.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"    void execute_viewDaily_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Tuesday\\\" \\\"00:00\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"LouisLouis19"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Wednesday\\\" \\\"00:00\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Thursday\\\" \\\"00:00\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"LouisLouis19"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"LouisLouis19"},"content":"        Command timetableCommand \u003d mainCommandParser.parseCommand(\"timetable Saturday\");","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"LouisLouis19"},"content":"        CommandResult timetableResult \u003d timetableCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(timetableResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"LouisLouis19"},"content":"        Command timetableCommand1 \u003d mainCommandParser.parseCommand(\"timetable Saturday\");","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"LouisLouis19"},"content":"        CommandResult timetableResult1 \u003d timetableCommand1.execute(ui, moduleManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(timetableResult1.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"LouisLouis19"},"content":"        Command timetableCommand2 \u003d mainCommandParser.parseCommand(\"timetable Saturday\");","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"LouisLouis19"},"content":"        CommandResult timetableResult2 \u003d timetableCommand2.execute(ui, moduleManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(timetableResult2.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"LouisLouis19"},"content":"        Command timetableCommand3 \u003d mainCommandParser.parseCommand(\"timetable Saturday\");","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"LouisLouis19"},"content":"        CommandResult timetableResult3 \u003d timetableCommand3.execute(ui, moduleManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(timetableResult3.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"    void execute_viewDaily_exceptionThrown() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Saturday\\\" \\\"00:00\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"LouisLouis19"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e mainCommandParser.parseCommand(\"timetable -1\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e mainCommandParser.parseCommand(\"timetable .\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e mainCommandParser.parseCommand(\"timetable today\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e mainCommandParser.parseCommand(\"timetable mondayyy\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e mainCommandParser.parseCommand(\"timetable yesterday\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"LouisLouis19":122,"Woolicious98":4}},{"path":"src/test/java/terminus/command/content/link/AddLinkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.link;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.common.CommonUtils;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"public class AddLinkCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    private LinkCommandParser linkCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    Class\u003cLink\u003e type \u003d Link.class;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"    void setUp() {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.setModule(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"        this.linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        this.linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"    void parseArguments_addLinkCommand_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"        String addLinkInput \u003d \"add \\\"test\\\" \\\"Thursday\\\" \\\"00:00\\\" \\\"https://zoom.us/test\\\"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e parsedArguments \u003d CommonUtils.findArguments(addLinkInput);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"        assertEquals(\"test\", parsedArguments.get(0));","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"        assertEquals(\"Thursday\", parsedArguments.get(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"        assertEquals(\"00:00\", parsedArguments.get(2));","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"        assertEquals(\"https://zoom.us/test\", parsedArguments.get(3));","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"    void execute_addLinkCommand_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"        Command addLinkCommand \u003d linkCommandParser.parseCommand(\"add \\\"test\\\" \\\"Monday\\\" \\\"00:00\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        CommandResult addResult \u003d addLinkCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(moduleManager.getModule(tempModule).getContentManager(type).getContentData(1).contains(\"test\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(moduleManager.getModule(tempModule).getContentManager(type).getContentData(1).contains(\"Monday\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(moduleManager.getModule(tempModule).getContentManager(type).getContentData(1).contains(\"00:00\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(moduleManager.getModule(tempModule).getContentManager(type).getContentData(1).contains(\"https://zoom.us/test\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"            addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Saturday\\\" \\\"00:00\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"            addResult \u003d addLinkCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(6, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"LouisLouis19":39,"kelvneo":1,"3m0W33D":8,"Woolicious98":20}},{"path":"src/test/java/terminus/command/content/link/BackLinkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.link;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.parser.ModuleWorkspaceCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"public class BackLinkCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"    private LinkCommandParser linkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"    void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"        this.linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"        this.linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.setModule(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"    void execute_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"        Command backCommand \u003d linkCommandParser.parseCommand(\"back\");","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        CommandResult backResult \u003d backCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(backResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(backResult.getAdditionalData() instanceof ModuleWorkspaceCommandParser);","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LouisLouis19":30,"3m0W33D":1,"Woolicious98":12}},{"path":"src/test/java/terminus/command/content/link/DeleteLinkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.link;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"public class DeleteLinkCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"    private LinkCommandParser linkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"    Class\u003cLink\u003e type \u003d Link.class;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"    void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.setModule(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"        this.linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        this.linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    void execute_deleteLink_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(\"add \\\"test_desc\\\" \\\"Monday\\\" \\\"12:00\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"            CommandResult addResult \u003d addLinkCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(3, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"        Command deleteLinkCommand \u003d linkCommandParser.parseCommand(\"delete 1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        CommandResult deleteResult \u003d deleteLinkCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(deleteResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(2, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"        for (int j \u003d 0; j \u003c 2; j++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"            deleteLinkCommand \u003d linkCommandParser.parseCommand(\"delete 1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"            deleteResult \u003d deleteLinkCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(deleteResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(0, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"    void execute_deleteLink_throwsException() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"        Command deleteLinkCommand \u003d linkCommandParser.parseCommand(\"delete 20\");","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e deleteLinkCommand.execute(ui, moduleManager));","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LouisLouis19":45,"3m0W33D":5,"Woolicious98":16}},{"path":"src/test/java/terminus/command/content/link/ViewLinkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.link;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"import terminus.parser.LinkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"public class ViewLinkCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    Class\u003cLink\u003e type \u003d Link.class;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"    private LinkCommandParser linkCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"    void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"        this.linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"        this.linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.setModule(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    void execute_viewAll_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Saturday\\\" \\\"00:00\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"        Command viewLinkCommand \u003d linkCommandParser.parseCommand(\"view\");","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        CommandResult viewLinkResult \u003d viewLinkCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(viewLinkResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"    void execute_viewLink_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Saturday\\\" \\\"00:00\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"        Command viewLinkCommand \u003d linkCommandParser.parseCommand(\"view 1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        CommandResult viewLinkResult \u003d viewLinkCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(viewLinkResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"        viewLinkCommand \u003d linkCommandParser.parseCommand(\"view 5\");","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"        viewLinkResult \u003d viewLinkCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(viewLinkResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"    void execute_viewLink_exceptionThrown() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"            Command addLinkCommand \u003d linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"LouisLouis19"},"content":"                    \"add \\\"test\\\" \\\"Saturday\\\" \\\"00:00\\\" \\\"https://zoom.us/test\\\"\");","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"            CommandResult addLinkResult \u003d addLinkCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"LouisLouis19"},"content":"            assertTrue(addLinkResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkCommandParser.parseCommand(\"view -1\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkCommandParser.parseCommand(\"view X\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e linkCommandParser.parseCommand(\"viewwwww\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"LouisLouis19":60,"3m0W33D":5,"Woolicious98":21}},{"path":"src/test/java/terminus/command/content/note/AddNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.common.TerminusLogger;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"public class AddNoteCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    private NoteCommandParser commandParser;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    private ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    Class\u003cNote\u003e type \u003d Note.class;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(TestFilePath.SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.createModuleDirectory(tempModule);","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.setModule(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d NoteCommandParser.getInstance();","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"    @AfterAll","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"    static void reset() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.cleanAfterDeleteModule(\"test\");","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"    void execute_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test1\\\"\");","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"        CommandResult addResult \u003d addCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(moduleManager.getModule(tempModule).getContentManager(type).getContentData(1).contains(\"test\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(moduleManager.getModule(tempModule).getContentManager(type).getContentData(1).contains(\"test1\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"    void execute_success_multipleNotes() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\" + i + \"\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"            CommandResult addResult \u003d addCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"    void execute_duplicateNoteName_exceptionThrown() throws InvalidArgumentException, InvalidCommandException,","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"            IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"        Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test\\\"\");","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"        CommandResult addResult \u003d addCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"        for (int i \u003d 1; i \u003c 5; i++) {","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"            assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"                () -\u003e commandParser.parseCommand(\"add \\\"test\\\" \\\"test\\\"\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"    void execute_illegalNoteName_exceptionThrown() {","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"\\\\uD83D\\\\uDC76 \\\" \\\"test\\\"\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\".......\\\" \\\"test\\\"\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"\\\" \\\"test\\\"\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"        String s \u003d \"a\".repeat(31);","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"\" + s + \"\\\" \\\"test\\\"\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"    void execute_invalidArguments_exceptionThrown() {","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\" \\\"test\\\"\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"t\\\" \\\"\\\"\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"\\\" \\\"test\\\"\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"test\\\" \\\"test\\\"\\\"\\\"\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"    void execute_longNoteData_exceptionThrown() {","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"kelvneo"},"content":"        TerminusLogger.initializeLoggerWarnings();","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"        String s \u003d \"a\".repeat(1000001);","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"test\\\" \\\"\" + s + \"\\\"\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"kelvneo":4,"LouisLouis19":1,"3m0W33D":28,"Woolicious98":85}},{"path":"src/test/java/terminus/command/content/note/BackNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.parser.ModuleWorkspaceCommandParser;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"public class BackNoteCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    private NoteCommandParser commandParser;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d NoteCommandParser.getInstance();","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.setModule(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    void execute_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        Command backCommand \u003d commandParser.parseCommand(\"back\");","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        CommandResult backResult \u003d backCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(backResult.isOk());","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(backResult.getAdditionalData() instanceof ModuleWorkspaceCommandParser);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"LouisLouis19":1,"kelvneo":2,"3m0W33D":26,"Woolicious98":12}},{"path":"src/test/java/terminus/command/content/note/DeleteNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"public class DeleteNoteCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    private NoteCommandParser commandParser;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    private ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    Class\u003cNote\u003e type \u003d Note.class;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(TestFilePath.SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.createModuleDirectory(tempModule);","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.setModule(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d NoteCommandParser.getInstance();","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    @AfterAll","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"    static void reset() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.cleanAfterDeleteModule(\"test\");","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"    void execute_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\" + i + \"\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"            CommandResult addResult \u003d addCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"        Command deleteCommand \u003d commandParser.parseCommand(\"delete 1\");","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"        CommandResult deleteResult \u003d deleteCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(deleteResult.isOk());","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(4, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"        for (int i \u003d 2; i \u003c 4; i++) {","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"            deleteCommand \u003d commandParser.parseCommand(\"delete \" + i);","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"            deleteResult \u003d deleteCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"            assertTrue(deleteResult.isOk());","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(2, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"    void execute_throwsException() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"        Command deleteCommand \u003d commandParser.parseCommand(\"delete 100\");","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e deleteCommand.execute(ui, moduleManager));","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"LouisLouis19":2,"kelvneo":2,"3m0W33D":40,"Woolicious98":34}},{"path":"src/test/java/terminus/command/content/note/ViewNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.content.note;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"public class ViewNoteCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    private NoteCommandParser commandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    private ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    Class\u003cNote\u003e type \u003d Note.class;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(TestFilePath.SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.createModuleDirectory(tempModule);","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.setModule(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"        this.commandParser \u003d NoteCommandParser.getInstance();","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    @AfterAll","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"    static void reset() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.cleanAfterDeleteModule(\"test\");","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"    void execute_viewAll_success()","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\" + i + \"\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"            CommandResult addResult \u003d addCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"        Command viewCommand \u003d commandParser.parseCommand(\"view\");","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"        CommandResult viewResult \u003d viewCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(viewResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"    void execute_viewOne_success()","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\" + i + \"\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"            CommandResult addResult \u003d addCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"        Command viewCommand \u003d commandParser.parseCommand(\"view 1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"        CommandResult viewResult \u003d viewCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(viewResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"    void execute_viewOne_exceptionThrown()","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"            throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\" + i + \"\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"            CommandResult addResult \u003d addCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"view a\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"            () -\u003e commandParser.parseCommand(\"view -1\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"            () -\u003e commandParser.parseCommand(\"view 6\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"3m0W33D":1,"Woolicious98":96}},{"path":"src/test/java/terminus/command/content/question/AddQuestionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content.question;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.QuestionCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"public class AddQuestionCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    private QuestionCommandParser commandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    private final String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    Class\u003cQuestion\u003e type \u003d Question.class;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        moduleManager.setModule(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d QuestionCommandParser.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"    void execute_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test1\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        CommandResult addResult \u003d addCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"        assertEquals(1, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        assertTrue(moduleManager.getModule(tempModule).getContentManager(type).getContentData(1).contains(\"test\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        assertTrue(moduleManager.getModule(tempModule).getContentManager(type).getContentData(1).contains(\"test1\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"            addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"            addResult \u003d addCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"        assertEquals(6, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":53}},{"path":"src/test/java/terminus/command/content/question/BackQuestionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content.question;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.ModuleWorkspaceCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.QuestionCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"public class BackQuestionCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    private QuestionCommandParser commandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d QuestionCommandParser.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"        moduleManager.setModule(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"    void execute_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        Command backCommand \u003d commandParser.parseCommand(\"back\");","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        CommandResult backResult \u003d backCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        assertTrue(backResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        assertTrue(backResult.getAdditionalData() instanceof ModuleWorkspaceCommandParser);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":42}},{"path":"src/test/java/terminus/command/content/question/DeleteQuestionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content.question;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.QuestionCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"public class DeleteQuestionCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    private QuestionCommandParser commandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    private final String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    Class\u003cQuestion\u003e type \u003d Question.class;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        moduleManager.setModule(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d QuestionCommandParser.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"    void execute_success() throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        Command deleteCommand \u003d commandParser.parseCommand(\"delete 1\");","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"        CommandResult deleteResult \u003d deleteCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        assertTrue(deleteResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        assertEquals(4, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 2; i \u003c 4; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"            deleteCommand \u003d commandParser.parseCommand(\"delete \" + i);","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"            deleteResult \u003d deleteCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"            assertTrue(deleteResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"        assertEquals(2, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"    void execute_throwsException() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"        Command deleteCommand \u003d commandParser.parseCommand(\"delete 100\");","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e deleteCommand.execute(ui, moduleManager));","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":67}},{"path":"src/test/java/terminus/command/content/question/TestCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content.question;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.QuestionCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"public class TestCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    private QuestionCommandParser commandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    private final String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"        moduleManager.setModule(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d QuestionCommandParser.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"    void execute_noQuestions_exceptionThrown() throws InvalidArgumentException, InvalidCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        Command command \u003d commandParser.parseCommand(\"test\");","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e command.execute(ui, moduleManager));","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"    void execute_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 4; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        Command command \u003d commandParser.parseCommand(\"test\");","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        String input \u003d String.format(\"%s%s2%s%s%se%s\", System.lineSeparator(), System.lineSeparator(),","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"            System.lineSeparator(), System.lineSeparator(), System.lineSeparator(), System.lineSeparator());","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        this.ui \u003d new Ui(in);","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        assertTrue(command.execute(ui, moduleManager).isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":55}},{"path":"src/test/java/terminus/command/content/question/ViewQuestionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.command.content.question;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Question;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.NoteCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"import terminus.parser.QuestionCommandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"public class ViewQuestionCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    private QuestionCommandParser commandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    Class\u003cQuestion\u003e type \u003d Question.class;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        moduleManager.setModule(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d QuestionCommandParser.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"    void execute_viewAll_success()","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        Command viewCommand \u003d commandParser.parseCommand(\"view\");","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"        CommandResult viewResult \u003d viewCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"        assertTrue(viewResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"    void execute_viewOne_success()","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"        throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"        Command viewCommand \u003d commandParser.parseCommand(\"view 1\");","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"        CommandResult viewResult \u003d viewCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"        assertTrue(viewResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"    void execute_viewOne_exceptionThrown()","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"        throws InvalidCommandException, InvalidArgumentException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"        for (int i \u003d 0; i \u003c 5; i++) {","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"            Command addCommand \u003d commandParser.parseCommand(\"add \\\"test\\\" \\\"test\" + i + \"\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"            CommandResult addResult \u003d addCommand.execute(ui, moduleManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"            assertTrue(addResult.isOk());","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"        assertEquals(5, moduleManager.getModule(tempModule).getContentManager(type).getTotalContents());","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"view a\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"view -1\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"view 6\").execute(ui, moduleManager));","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":86}},{"path":"src/test/java/terminus/command/module/AddModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"public class AddModuleCommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    private ModuleCommandParser commandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    private ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(TestFilePath.SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d ModuleCommandParser.getInstance();","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    @AfterAll","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    static void reset() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.cleanAfterDeleteModule(\"test\");","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"    void execute_addModule_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d commandParser.parseCommand(\"add \\\"test\\\"\");","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"        CommandResult cmdResult \u003d cmd.execute(ui, moduleManager);","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        assertNotNull(moduleManager.getModule(\"test\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"    void execute_addModule_throwsException() throws InvalidArgumentException, InvalidCommandException {","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"test\\\" \\\"test2\\\"\").execute(ui,","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"                    moduleManager));","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e commandParser.parseCommand(\"add   \").execute(ui,","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"                    moduleManager));","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"3m0W33D":47,"Woolicious98":14}},{"path":"src/test/java/terminus/command/module/DeleteModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"import terminus.storage.ModuleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"public class DeleteModuleCommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    private ModuleCommandParser commandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"    private ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"    private static final String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(TestFilePath.SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.createModuleDirectory(tempModule);","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d ModuleCommandParser.getInstance();","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.setModule(tempModule);","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"    @AfterAll","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"    static void reset() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.cleanAfterDeleteModule(\"test\");","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"    void execute_deleteModule_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d commandParser.parseCommand(\"delete 1\");","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        CommandResult cmdResult \u003d cmd.execute(ui, moduleManager);","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        assertNull(moduleManager.getModule(tempModule));","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"    void execute_deleteModule_throwsException() throws InvalidArgumentException, InvalidCommandException {","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e commandParser.parseCommand(\"delete -1\").execute(ui,","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"                    moduleManager));","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e commandParser.parseCommand(\"delete\").execute(ui,","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"                    moduleManager));","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e commandParser.parseCommand(\"delete 100\").execute(ui,","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"                    moduleManager));","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"3m0W33D":52,"Woolicious98":16}},{"path":"src/test/java/terminus/command/module/ViewModuleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.command.module;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.CommandResult;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.parser.ModuleCommandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.ui.Ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"public class ViewModuleCommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    private ModuleCommandParser commandParser;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    private static final String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"        this.moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d ModuleCommandParser.getInstance();","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.setModule(tempModule);","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    void execute_viewModule_success() throws InvalidArgumentException, InvalidCommandException, IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        Command cmd \u003d commandParser.parseCommand(\"view\");","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        CommandResult cmdResult \u003d cmd.execute(ui, moduleManager);","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(cmdResult.isOk());","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"3m0W33D":36,"Woolicious98":2}},{"path":"src/test/java/terminus/common/CommonUtilsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.common;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"public class CommonUtilsTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    private ArrayList\u003cString\u003e resultExpected;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    void reset() {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"        resultExpected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    void setup() {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"        resultExpected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"    void findArguments_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"        String input \u003d \"add \\\"test1\\\" \\\"test2\\\"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(2, result.size());","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(resultExpected, result);","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"    void findArguments_missingDoubleQuotes() {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        String input \u003d \"add \\\"test1\\\" \\\"test2\";","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, result.size());","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(resultExpected, result);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"        reset();","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"        input \u003d \"add \\\"test1 test2\";","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"        result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(0, result.size());","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(resultExpected, result);","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        reset();","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"        input \u003d \"add test1 test2\";","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"        result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(0, result.size());","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(resultExpected, result);","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"    void findArguments_extraDoubleQuotes() {","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"        String input \u003d \"add \\\"test1\\\"\\\"\\\"test2\\\"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"\");","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(2, result.size());","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(resultExpected, result);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"        reset();","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"        input \u003d \"add \\\"test1\\\" \\\"test2\\\"\\\"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"        result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(2, result.size());","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(resultExpected, result);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"        reset();","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"        input \u003d \"add \\\"test1\\\" \\\"\\\"\\\"test2\";","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"        result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"\");","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(2, result.size());","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(resultExpected, result);","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"    void findArguments_missingArgument() {","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"        String input \u003d \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"3m0W33D"},"content":"        ArrayList\u003cString\u003e result \u003d CommonUtils.findArguments(input);","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(0, result.size());","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(resultExpected, result);","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"    void findArguments_nullArgument_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"        String input \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(AssertionError.class, () -\u003e CommonUtils.findArguments(input));","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"    void isArrayEmpty_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(CommonUtils.hasEmptyString(resultExpected));","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"    void isArrayEmpty_emptyElements() {","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"\");","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(CommonUtils.hasEmptyString(resultExpected));","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"        reset();","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"        System.out.println(resultExpected);","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(CommonUtils.hasEmptyString(resultExpected));","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"Woolicious98"},"content":"    void isArrayEmpty_nullElements_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(null);","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"Woolicious98"},"content":"        resultExpected.add(\"test2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(CommonUtils.hasEmptyString(resultExpected));","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"    void isArrayEmpty_nullArraylist_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(AssertionError.class, () -\u003e CommonUtils.hasEmptyString(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"Woolicious98"},"content":"    void getClassName_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"3m0W33D"},"content":"        String result \u003d CommonUtils.getClassName(Note.class);","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(\"Note\", result);","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"3m0W33D"},"content":"        result \u003d CommonUtils.getClassName(Link.class);","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(\"Link\", result);","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"Woolicious98"},"content":"    void getClassName_invalidInput() {","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"3m0W33D"},"content":"        String result \u003d CommonUtils.getClassName(\"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(\"test1\", result);","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"3m0W33D"},"content":"        result \u003d CommonUtils.getClassName(\"test1.2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(\"2\", result);","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"Woolicious98"},"content":"    void getClassName_nullInput_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(AssertionError.class, () -\u003e CommonUtils.getClassName(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"Woolicious98"},"content":"    void convertToLocalTime_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.convertToLocalTime(\"11:56\") instanceof LocalTime);","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.convertToLocalTime(\"22:56\") instanceof LocalTime);","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"Woolicious98"},"content":"    void convertToLocalTime_invalidInput_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e CommonUtils.convertToLocalTime(\"test\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e CommonUtils.convertToLocalTime(\"25:10\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e CommonUtils.convertToLocalTime(\"11-10\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(AssertionError.class, () -\u003e CommonUtils.convertToLocalTime(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"Woolicious98"},"content":"    void isValidDay_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"monday\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"MoNdAy\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"tuesday\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"wednesday\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"thursday\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"friday\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"saturday\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidDay(\"sunday\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"Woolicious98"},"content":"    void isValidDay_invalidInput() {","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"3m0W33D"},"content":"        assertFalse(CommonUtils.isValidDay(\"mon\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"3m0W33D"},"content":"        assertFalse(CommonUtils.isValidDay(\"test1\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"3m0W33D"},"content":"        assertFalse(CommonUtils.isValidDay(\"wednesdey\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"3m0W33D"},"content":"        assertFalse(CommonUtils.isValidDay(\"\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"3m0W33D"},"content":"        assertFalse(CommonUtils.isValidDay(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"Woolicious98"},"content":"    void isValidUrl_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidUrl(\"https://www.test.com\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidUrl(\"http://www.test.org\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(CommonUtils.isValidUrl(\"https://nus-sg.zoom.us/j/88433650229?pwd\u003dNFg3WSl0UEQ5ZG05ZW1MZz09\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"Woolicious98"},"content":"    void isValidUrl_invalidInput_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e CommonUtils.isValidUrl(\"\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e CommonUtils.isValidUrl(\"..\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"Woolicious98"},"content":"    void isStringNullOrEmpty_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(CommonUtils.isStringNullOrEmpty(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(CommonUtils.isStringNullOrEmpty(\"\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(CommonUtils.isStringNullOrEmpty(\"test\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"Woolicious98"},"content":"    void isValidFileName_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":210,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(CommonUtils.isValidFileName(\"test\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(CommonUtils.isValidFileName(\"CS2113T\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":212,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":213,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":214,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":215,"author":{"gitId":"Woolicious98"},"content":"    void isValidFileName_invalidFileName() {","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(CommonUtils.isValidFileName(\"\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":217,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(CommonUtils.isValidFileName(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":218,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(CommonUtils.isValidFileName(\"\\\\uD83D\\\\uDE00\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":219,"author":{"gitId":"Woolicious98"},"content":"        String s \u003d \"a\".repeat(31);","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(CommonUtils.isValidFileName(s));","lastModifiedDate":"2021-10-20"},{"lineNumber":221,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":222,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":223,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":224,"author":{"gitId":"Woolicious98"},"content":"    void getFileNameOnly_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":225,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(\"test\", CommonUtils.getFileNameOnly(\"test.txt\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":226,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":227,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":228,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":229,"author":{"gitId":"Woolicious98"},"content":"    void getFileNameOnly_invalidFileName() {","lastModifiedDate":"2021-10-20"},{"lineNumber":230,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(null, CommonUtils.getFileNameOnly(\"test.txt.txt\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":231,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(null, CommonUtils.getFileNameOnly(\"\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":232,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":233,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":234,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":235,"author":{"gitId":"Woolicious98"},"content":"    void getFileNameOnly_nullInput_exceptionThrown() {","lastModifiedDate":"2021-10-20"},{"lineNumber":236,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(AssertionError.class, () -\u003e CommonUtils.getFileNameOnly(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":237,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":238,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":239,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Woolicious98":201,"3m0W33D":38}},{"path":"src/test/java/terminus/content/ContentManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.content;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertSame;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"public class ContentManagerTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"    private ContentManager\u003cNote\u003e noteContentManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"    private ContentManager\u003cLink\u003e linkContentManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"        this.noteContentManager \u003d new ContentManager\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"        this.linkContentManager \u003d new ContentManager\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"    void addContent_note_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"        Note note \u003d new Note(\"test\", \"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(note.getDisplayInfo(), noteContentManager.getContentData(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"    void addContent_link_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"        Link link \u003d new Link(\"test\", \"monday\", LocalTime.now(), \"test.com\");","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(link.getDisplayInfo(), linkContentManager.getContentData(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"    void deleteContent_link_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"        Link link \u003d new Link(\"test\", \"monday\", LocalTime.now(), \"test.com\");","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link);","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, linkContentManager.getTotalContents());","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"        assertSame(link.getName(), linkContentManager.deleteContent(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(0, linkContentManager.getTotalContents());","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Woolicious98"},"content":"    void deleteContent_note_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"        Note note \u003d new Note(\"test\", \"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"        assertSame(note.getName(), noteContentManager.deleteContent(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(0, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"    void deleteContent_exceptionThrown() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"        Link link \u003d new Link(\"test\", \"monday\", LocalTime.now(), \"test.com\");","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkContentManager.deleteContent(-1));","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkContentManager.deleteContent(0));","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkContentManager.deleteContent(99));","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Woolicious98"},"content":"    void getContent_note_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Woolicious98"},"content":"        Note note \u003d new Note(\"test\", \"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(note.getDisplayInfo(), noteContentManager.getContentData(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"    void getContent_link_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Woolicious98"},"content":"        Link link \u003d new Link(\"test\", \"monday\", LocalTime.now(), \"test.com\");","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(link.getDisplayInfo(), linkContentManager.getContentData(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Woolicious98"},"content":"    void getContent_exceptionThrown() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"Woolicious98"},"content":"        Note note \u003d new Note(\"test\", \"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e noteContentManager.getContentData(-1));","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e noteContentManager.getContentData(0));","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e noteContentManager.getContentData(99));","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"    void getContentSize_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"        Note note \u003d new Note(\"test1\", \"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"        note \u003d new Note(\"test2\", \"test2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(2, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"        note \u003d new Note(\"test3\", \"test3\");","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(3, noteContentManager.getTotalContents());","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"    void listContent_note_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"        Note note1 \u003d new Note(\"test1\", \"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"        Note note2 \u003d new Note(\"test2\", \"test2\");","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"        Note note3 \u003d new Note(\"test3\", \"test3\");","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note1);","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note2);","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note3);","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"        String result \u003d noteContentManager.listAllContents();","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(result.contains(note1.getViewDescription()));","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(result.contains(note2.getViewDescription()));","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(result.contains(note3.getViewDescription()));","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"    void listContent_link_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"Woolicious98"},"content":"        Link link1 \u003d new Link(\"test1\", \"monday\", LocalTime.now(), \"test.com\");","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"Woolicious98"},"content":"        Link link2 \u003d new Link(\"test2\", \"monday\", LocalTime.now(), \"test.com\");","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"Woolicious98"},"content":"        Link link3 \u003d new Link(\"test3\", \"monday\", LocalTime.now(), \"test.com\");","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link1);","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link2);","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link3);","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"Woolicious98"},"content":"        String result \u003d linkContentManager.listAllContents();","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(result.contains(link1.getViewDescription()));","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(result.contains(link2.getViewDescription()));","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(result.contains(link3.getViewDescription()));","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Woolicious98":129}},{"path":"src/test/java/terminus/module/ModuleManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.module;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"public class ModuleManagerTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"    public static final String TEMP_MODULE \u003d \"Test\";","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    void getModule_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.setModule(TEMP_MODULE);","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"        assertNotNull(moduleManager.getModule(TEMP_MODULE));","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        moduleManager.removeModule(TEMP_MODULE);","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        assertNull(moduleManager.getModule(TEMP_MODULE));","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    void getAllModules_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        IntStream.range(0, 5).forEach(i -\u003e moduleManager.setModule(TEMP_MODULE + i));","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        String [] listOfModules \u003d moduleManager.getAllModules();","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(5, listOfModules.length);","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(Arrays.asList(listOfModules).contains(TEMP_MODULE + 3));","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"3m0W33D":39}},{"path":"src/test/java/terminus/module/NusModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Woolicious98"},"content":"package terminus.module;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Woolicious98"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Woolicious98"},"content":"public class NusModuleTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"    private NusModule module;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Woolicious98"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"        this.module \u003d new NusModule();","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"    void getContent_success() throws InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cNote\u003e noteContentManager \u003d module.getContentManager(Note.class);","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"        ContentManager\u003cLink\u003e linkContentManager \u003d module.getContentManager(Link.class);","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"        Note note \u003d new Note(\"test1\", \"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"        Link link \u003d new Link(\"test1\", \"test1\", LocalTime.now(), \"test1\");","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Woolicious98"},"content":"        noteContentManager.add(note);","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Woolicious98"},"content":"        linkContentManager.add(link);","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(note.getDisplayInfo(), noteContentManager.getContentData(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(link.getDisplayInfo(), linkContentManager.getContentData(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"    void getContent_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(AssertionError.class, () -\u003e module.getContentManager(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Woolicious98":40}},{"path":"src/test/java/terminus/parser/LinkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.ExitCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import terminus.command.HelpCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.DeleteCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.ViewCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.link.AddLinkCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"public class LinkCommandParserTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    private LinkCommandParser linkCommandParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    void setUp() {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"        this.linkCommandParser \u003d LinkCommandParser.getInstance();","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"        this.linkCommandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_invalidCommand_exceptionThrown() {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e linkCommandParser.parseCommand(\"exitt\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e linkCommandParser.parseCommand(\"helpp\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e linkCommandParser.parseCommand(\"aadddd\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e linkCommandParser.parseCommand(\"vieww\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e linkCommandParser.parseCommand(\"dellett\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e linkCommandParser.parseCommand(\"\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveExitCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"exit\") instanceof ExitCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"eXiT\") instanceof ExitCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"   ExIt   \") instanceof ExitCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"eXiT tt\") instanceof ExitCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveHelpCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"help\") instanceof HelpCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"HeLp\") instanceof HelpCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"   hElP   \") instanceof HelpCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"HeLp pppp\") instanceof HelpCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveAddCommand_InvalidArgumentExceptionThrown()","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkCommandParser.parseCommand(\"add\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\"test day\\\"\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"test day\\\" \\\"00:00\\\"\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"today\\\" \\\"00:00\\\" \\\"https://zoom.us/test\\\"\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"monday\\\" \\\"x:30\\\" \\\"https://zoom.us/test\\\"\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"            () -\u003e linkCommandParser.parseCommand(\"add \\\"test desc\\\" \\\"friday\\\" \\\"10:00\\\" \\\"zoom.test\\\"\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveAddCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"                \"add \\\"test desc\\\" \\\"Tuesday\\\" \\\"10:00\\\" \\\"https://zoom.us/test\\\"\") instanceof AddLinkCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"LouisLouis19"},"content":"                \"add \\\"    test     \\\" \\\"Wednesday\\\" \\\"10:00\\\" \\\"    https://zoom.us/test    \\\"\") instanceof AddLinkCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"LouisLouis19"},"content":"                \"add \\\"CS2113T Lecture\\\" \\\"Friday\\\" \\\"16:00\\\" \\\"https://zoom.us/test\\\"\") instanceof AddLinkCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveDeleteCommand_exceptionThrown()","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkCommandParser.parseCommand(\"delete\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkCommandParser.parseCommand(\"delete abcd\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkCommandParser.parseCommand(\"delete -1\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveDeleteCommand_success()","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"delete 1\") instanceof DeleteCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"delete 2\") instanceof DeleteCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveViewCommand_exceptionThrown() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e linkCommandParser.parseCommand(\"view abcd\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveViewCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"view\") instanceof ViewCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.parseCommand(\"view 1\") instanceof ViewCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"LouisLouis19"},"content":"    void getCommandList_containsBasicCommands() {","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.getCommandList().contains(\"exit\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.getCommandList().contains(\"add\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.getCommandList().contains(\"back\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.getCommandList().contains(\"delete\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.getCommandList().contains(\"view\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.getCommandList().contains(\"help\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"LouisLouis19"},"content":"    void getWorkspace_isSchedule() {","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(tempModule + \" \u003e schedule\", linkCommandParser.getWorkspace());","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"LouisLouis19"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"LouisLouis19"},"content":"    void getHelpMenu_isNotEmpty() {","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(linkCommandParser.getHelpMenu().length \u003e 0);","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"LouisLouis19":114,"3m0W33D":8,"Woolicious98":4}},{"path":"src/test/java/terminus/parser/MainCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import terminus.command.ExitCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import terminus.command.GoCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.command.HelpCommand;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"public class MainCommandParserTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    private MainCommandParser commandParser;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"Woolicious98"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d MainCommandParser.getInstance();","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"Woolicious98"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.setModule(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_invalidCommand_exceptionThrown() {","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"ex it\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"helpa\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveExitCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"exit\") instanceof ExitCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"EXIT\") instanceof ExitCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"   exit   \") instanceof ExitCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"eXiT a\") instanceof ExitCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveHelpCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"help\") instanceof HelpCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"HELP\") instanceof HelpCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"   help   \") instanceof HelpCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"HeLp    a\") instanceof HelpCommand);","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"    void getCommandList_containsBasicCommands() {","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"exit\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"help\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveNoteCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.parseCommand(\"go \" + tempModule + \" note\") instanceof GoCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.parseCommand(\"go \" + tempModule + \" NOTE\") instanceof GoCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.parseCommand(\"go \" + tempModule + \"    note   \") instanceof GoCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.parseCommand(\"go \" + tempModule + \" note    help\") instanceof GoCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.parseCommand(\"go \" + tempModule + \" note    exit\") instanceof GoCommand);","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"    void getHelpMenu_isNotEmpty() {","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getHelpMenu().length \u003e 0);","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"    void getWorkspace_isEmptyString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getWorkspace().isEmpty());","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"kelvneo":59,"LouisLouis19":4,"Woolicious98":13,"3m0W33D":1}},{"path":"src/test/java/terminus/parser/ModuleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.ExitCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.HelpCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.AddModuleCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.DeleteModuleCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.module.ViewModuleCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"public class ModuleCommandParserTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    private ModuleCommandParser commandParser;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"        commandParser \u003d ModuleCommandParser.getInstance();","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_invalidCommand_exceptionThrown() {","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"ex it\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"helpa\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"adda\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"vie wer\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"deleterr\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveExitCommand_success()","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"exit\") instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"EXIT\") instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"   exit   \") instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"eXiT a\") instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveHelpCommand_success()","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"help\") instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"HELP\") instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"   help   \") instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"HeLp    a\") instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveAddCommand_exceptionThrown()","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"add\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"test\\\" \\\"test1\\\" \"));","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"add \\\"    test     \\\" \"));","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveAddCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"add \\\"test\\\" \") instanceof AddModuleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"add \\\"username\\\"\") instanceof AddModuleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"add \\\"test1\\\"test2\\\"\") instanceof AddModuleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveDeleteCommand_exceptionThrown() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete abcd\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete -5\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveDeleteCommand_success()","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"delete 1\") instanceof DeleteModuleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"delete 2\") instanceof DeleteModuleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveViewCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"view\") instanceof ViewModuleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"    void getCommandList_containsBasicCommands() {","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"exit\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"add\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"back\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"delete\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"view\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"help\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"3m0W33D"},"content":"    void getWorkspace_isModule() {","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"3m0W33D"},"content":"        assertEquals(\"module\", commandParser.getWorkspace());","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"3m0W33D"},"content":"    void getHelpMenu_isNotEmpty() {","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getHelpMenu().length \u003e 0);","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"3m0W33D":109}},{"path":"src/test/java/terminus/parser/ModuleWorkspaceCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.ExitCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.HelpCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.NotesCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.ScheduleCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"public class ModuleWorkspaceCommandParserTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"    private ModuleWorkspaceCommandParser commandParser;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"3m0W33D"},"content":"        commandParser \u003d ModuleWorkspaceCommandParser.getInstance();","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"        commandParser.setWorkspace(\"2106\");","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_invalidCommand_exceptionThrown() {","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"ex it\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"helpa\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"adda\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"vie wer\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"deleterr\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveExitCommand_success()","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"exit\") instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"EXIT\") instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"   exit   \") instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"eXiT a\") instanceof ExitCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveHelpCommand_success()","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"help\") instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"HELP\") instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"   help   \") instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"HeLp    a\") instanceof HelpCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveNoteCommand_success()","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"note\") instanceof NotesCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"note add \\\"test\\\" \\\"test\\\"\") instanceof NotesCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"note view\") instanceof NotesCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"note delete 1\") instanceof NotesCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_resolveScheduleCommand_success()","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"schedule\") instanceof ScheduleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"3m0W33D"},"content":"                \"schedule add \\\"test desc\\\" \\\"Tuesday\\\" \\\"10:00\\\" \\\"https://zoom.us/test\\\"\")","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"3m0W33D"},"content":"                instanceof ScheduleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"schedule view\") instanceof ScheduleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"schedule delete 1\") instanceof ScheduleCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"3m0W33D":72}},{"path":"src/test/java/terminus/parser/NoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"3m0W33D"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"3m0W33D"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"3m0W33D"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.ExitCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.HelpCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.DeleteCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.ViewCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"3m0W33D"},"content":"import terminus.command.content.note.AddNoteCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"3m0W33D"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"3m0W33D"},"content":"public class NoteCommandParserTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"3m0W33D"},"content":"    private NoteCommandParser commandParser;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"3m0W33D"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"    void setUp() {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"3m0W33D"},"content":"        this.commandParser \u003d NoteCommandParser.getInstance();","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Woolicious98"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"3m0W33D"},"content":"    void parseCommand_invalidCommand_exceptionThrown() {","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"ex it\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"helpa\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"adda\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"vie wer\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"deleterr\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveExitCommand_success()","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"exit\") instanceof ExitCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"EXIT\") instanceof ExitCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"   exit   \") instanceof ExitCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"eXiT a\") instanceof ExitCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveHelpCommand_success()","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"help\") instanceof HelpCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"HELP\") instanceof HelpCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"   help   \") instanceof HelpCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"HeLp    a\") instanceof HelpCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveAddCommand_exceptionThrown()","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"add\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"add \\\"test1\\\"test2\\\"\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"3m0W33D"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"test\\\" \\\"test1\\\" \\\"test2\\\"\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveAddCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.parseCommand(\"add \\\"test\\\" \\\"test1\\\"\") instanceof AddNoteCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(commandParser.parseCommand(\"add \\\"username\\\" \\\"password\\\"\") instanceof AddNoteCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveDeleteCommand_exceptionThrown() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete abcd\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"LouisLouis19"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete -5\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveDeleteCommand_success()","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"delete 1\") instanceof DeleteCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"        assertTrue(commandParser.parseCommand(\"delete 2\") instanceof DeleteCommand);","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveViewCommand_exceptionThrown()","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"3m0W33D"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"view abcd\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"LouisLouis19"},"content":"    void parseCommand_resolveViewCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"view\") instanceof ViewCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.parseCommand(\"view 1\") instanceof ViewCommand);","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"3m0W33D"},"content":"    void getCommandList_containsBasicCommands() {","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"exit\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"add\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"back\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"delete\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"view\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getCommandList().contains(\"help\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"3m0W33D"},"content":"    void getWorkspace_isNote() {","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(tempModule + \" \u003e note\", commandParser.getWorkspace());","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"3m0W33D"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"3m0W33D"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"3m0W33D"},"content":"    void getHelpMenu_isNotEmpty() {","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"3m0W33D"},"content":"        assertTrue(commandParser.getHelpMenu().length \u003e 0);","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"3m0W33D"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"3m0W33D"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"LouisLouis19":16,"3m0W33D":95,"Woolicious98":6}},{"path":"src/test/java/terminus/parser/QuestionCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"import terminus.command.ExitCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import terminus.command.HelpCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.DeleteCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.ViewCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.note.AddNoteCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.question.AddQuestionCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import terminus.command.content.question.TestCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidArgumentException;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"import terminus.exception.InvalidCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"public class QuestionCommandParserTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    private QuestionCommandParser commandParser;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    private final String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    void setUp() {","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"        this.commandParser \u003d QuestionCommandParser.getInstance();","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"        this.commandParser.setModuleName(tempModule);","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_invalidCommand_exceptionThrown() {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"ex it\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"helpa\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"adda\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"vie wer\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"deleterr\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e commandParser.parseCommand(\"\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveExitCommand_success()","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"exit\") instanceof ExitCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"EXIT\") instanceof ExitCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"   exit   \") instanceof ExitCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"eXiT a\") instanceof ExitCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveHelpCommand_success()","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"help\") instanceof HelpCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"HELP\") instanceof HelpCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"   help   \") instanceof HelpCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"HeLp    a\") instanceof HelpCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveAddCommand_exceptionThrown() {","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"add\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"add \\\"test1\\\"test2\\\"\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class,","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"            () -\u003e commandParser.parseCommand(\"add \\\"test\\\" \\\"test1\\\" \\\"test2\\\"\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveAddCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"add \\\"test\\\" \\\"test1\\\"\") instanceof AddQuestionCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"add \\\"    test     \\\" \\\"    test1   \\\"\") instanceof AddQuestionCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"add \\\"username\\\" \\\"password\\\"\") instanceof AddQuestionCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveDeleteCommand_exceptionThrown() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete abcd\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"delete -5\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveDeleteCommand_success()","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"            throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"delete 1\") instanceof DeleteCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"delete 2\") instanceof DeleteCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveViewCommand_exceptionThrown() {","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"view abcd\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveViewCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"view\") instanceof ViewCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"view 1\") instanceof ViewCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveTestCommand_exceptionThrown() {","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"kelvneo"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e commandParser.parseCommand(\"test abcd\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"kelvneo"},"content":"    void parseCommand_resolveTestCommand_success() throws InvalidCommandException, InvalidArgumentException {","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"test\") instanceof TestCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.parseCommand(\"test 1\") instanceof TestCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"kelvneo"},"content":"    void getCommandList_containsBasicCommands() {","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"exit\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"add\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"back\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"delete\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"view\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"help\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getCommandList().contains(\"test\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"kelvneo"},"content":"    void getWorkspace_isNote() {","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"kelvneo"},"content":"        assertEquals(tempModule + \" \u003e question\", commandParser.getWorkspace());","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"kelvneo"},"content":"    void getHelpMenu_isNotEmpty() {","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"kelvneo"},"content":"        assertTrue(commandParser.getHelpMenu().length \u003e 0);","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kelvneo":131}},{"path":"src/test/java/terminus/storage/ModuleStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"package terminus.storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Woolicious98"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"import com.google.gson.JsonSyntaxException;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Woolicious98"},"content":"import java.io.File;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Woolicious98"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Woolicious98"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Woolicious98"},"content":"import terminus.TestFilePath;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Woolicious98"},"content":"import terminus.content.ContentManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Link;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"import terminus.content.Note;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"3m0W33D"},"content":"import terminus.module.ModuleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"public class ModuleStorageTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Woolicious98"},"content":"    private static final Path RESOURCE_FOLDER \u003d Path.of(\"src\", \"test\", \"resources\");","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"    private static final Path SAVE_FILE \u003d RESOURCE_FOLDER.resolve(\"saveFile.json\");","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"    private static final Path MALFORMED_FILE \u003d RESOURCE_FOLDER.resolve(\"malformedFile.json\");","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"    private static final Path VALID_FILE \u003d RESOURCE_FOLDER.resolve(\"validFile.json\");","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"3m0W33D"},"content":"    private ModuleManager moduleManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"Woolicious98"},"content":"    private ModuleStorage moduleStorage;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Woolicious98"},"content":"    private String tempModule \u003d \"test\";","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Woolicious98"},"content":"    void setUp() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"Woolicious98"},"content":"        moduleManager \u003d new ModuleManager();","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.setModule(tempModule);","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.getModule(tempModule).getContentManager(Note.class).add(new Note(\"test\", \"test\"));","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.saveNotesFromModule(moduleManager, tempModule, true);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"Woolicious98"},"content":"        moduleManager.getModule(tempModule).getContentManager(Link.class).add(new Link(\"test\", \"tuesday\",","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"                LocalTime.of(11, 11), \"https://zoom.us/\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Woolicious98"},"content":"    @AfterEach","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"Woolicious98"},"content":"    void reset_filepath() {","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"Woolicious98"},"content":"    @AfterAll","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"Woolicious98"},"content":"    static void reset() throws IOException {","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"Woolicious98"},"content":"        ModuleStorage moduleStorage \u003d ModuleStorage.getInstance();","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.cleanAfterDeleteModule(\"test\");","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"    void loadFile_invalidJson_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(MALFORMED_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        assertThrows(JsonSyntaxException.class, moduleStorage::loadFile);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"    void loadFile_success() throws IOException {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(VALID_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"Woolicious98"},"content":"        ModuleManager module \u003d moduleStorage.loadFile();","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(module.getModule(tempModule).getContentManager(Note.class).listAllContents(),","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"Woolicious98"},"content":"                moduleManager.getModule(tempModule).getContentManager(Note.class).listAllContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(module.getModule(tempModule).getContentManager(Link.class).listAllContents(),","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"Woolicious98"},"content":"                moduleManager.getModule(tempModule).getContentManager(Link.class).listAllContents());","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"    void saveFile_nullArgument_exceptionThrown() {","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(NullPointerException.class, () -\u003e moduleStorage.saveFile(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"    void saveFile_success() throws IOException {","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.init(SAVE_FILE);","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.saveFile(moduleManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"Woolicious98"},"content":"        assertTextFilesEqual(SAVE_FILE, VALID_FILE);","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"Woolicious98"},"content":"    void removeNoteFromModule_success() throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"Woolicious98"},"content":"        File deletedFile \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), tempModule, \"test.txt\").toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(deletedFile.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.removeNoteFromModule(tempModule, \"test\");","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(deletedFile.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"Woolicious98"},"content":"    void addNoteFromModule_success() throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"Woolicious98"},"content":"        File file \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), tempModule, \"test1.txt\").toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(file.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.addNoteFromModule(tempModule, new Note(\"test1\", \"test1\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"Woolicious98"},"content":"    void createModuleDirectory_success() throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"Woolicious98"},"content":"        File file \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), \"newmod\").toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(file.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.createModuleDirectory(\"newmod\");","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.cleanAfterDeleteModule(\"newmod\");","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"Woolicious98"},"content":"    void createModuleDirectory_invalidModuleName_exceptionThrown() {","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(AssertionError.class, () -\u003e this.moduleStorage.createModuleDirectory(\"new mod\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(AssertionError.class, () -\u003e this.moduleStorage.createModuleDirectory(\"\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"Woolicious98"},"content":"        assertThrows(AssertionError.class, () -\u003e this.moduleStorage.createModuleDirectory(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"Woolicious98"},"content":"    void cleanAfterDeleteModule_success() throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"Woolicious98"},"content":"        File file \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), \"newmod\").toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.createModuleDirectory(\"newmod\");","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(file.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"Woolicious98"},"content":"        moduleStorage.cleanAfterDeleteModule(\"newmod\");","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(file.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"Woolicious98"},"content":"    void saveAllNotes_success() throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"Woolicious98"},"content":"        ContentManager noteManager \u003d this.moduleManager.getModule(tempModule).getContentManager(Note.class);","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"Woolicious98"},"content":"        Note note1 \u003d new Note(\"a\", \"test\");","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"Woolicious98"},"content":"        Note note2 \u003d new Note(\"b\", \"test\");","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"Woolicious98"},"content":"        Note note3 \u003d new Note(\"c\", \"test\");","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"Woolicious98"},"content":"        noteManager.add(note1);","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"Woolicious98"},"content":"        noteManager.add(note2);","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"Woolicious98"},"content":"        noteManager.add(note3);","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.cleanAfterDeleteModule(tempModule);","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"Woolicious98"},"content":"        File file1 \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), tempModule, \"a.txt\").toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"Woolicious98"},"content":"        File file2 \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), tempModule, \"b.txt\").toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"Woolicious98"},"content":"        File file3 \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), tempModule, \"c.txt\").toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(file1.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(file2.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"Woolicious98"},"content":"        assertFalse(file3.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.saveAllNotes(this.moduleManager);","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(file1.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(file2.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(file3.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"Woolicious98"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"Woolicious98"},"content":"    void loadAllNotes_success() throws IOException {","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"Woolicious98"},"content":"        Note note1 \u003d new Note(\"a\", \"test\");","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"Woolicious98"},"content":"        Note note2 \u003d new Note(\"b\", \"test\");","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"Woolicious98"},"content":"        Note note3 \u003d new Note(\"c\", \"test\");","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.addNoteFromModule(tempModule, note1);","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.addNoteFromModule(tempModule, note2);","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"Woolicious98"},"content":"        this.moduleStorage.addNoteFromModule(tempModule, note3);","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"Woolicious98"},"content":"        File file1 \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), tempModule, \"a.txt\").toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"Woolicious98"},"content":"        File file2 \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), tempModule, \"b.txt\").toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":162,"author":{"gitId":"Woolicious98"},"content":"        File file3 \u003d new File(Paths.get(RESOURCE_FOLDER.toString(), tempModule, \"c.txt\").toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":163,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(file1.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(file2.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"Woolicious98"},"content":"        assertTrue(file3.exists());","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(1,","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"Woolicious98"},"content":"                this.moduleManager.getModule(tempModule).getContentManager(Note.class).getTotalContents());","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"Woolicious98"},"content":"        this.moduleManager \u003d this.moduleStorage.loadFile();","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"Woolicious98"},"content":"        assertEquals(4,","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"Woolicious98"},"content":"                this.moduleManager.getModule(tempModule).getContentManager(Note.class).getTotalContents());","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"Woolicious98"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"Woolicious98"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"kelvneo"},"content":"     * Asserts whether the text in the two given files are the same.","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"kelvneo"},"content":"     * Ignores any differences in line endings.","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"kelvneo"},"content":"     * Taken from: https://github.com/se-edu/addressbook-level2/blob/master/test/java/seedu/addressbook/util/TestUtil.java#L128","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"Woolicious98"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"kelvneo"},"content":"    public static void assertTextFilesEqual(Path path1, Path path2) throws IOException {","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"kelvneo"},"content":"        List\u003cString\u003e list1 \u003d Files.readAllLines(path1);","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"kelvneo"},"content":"        List\u003cString\u003e list2 \u003d Files.readAllLines(path2);","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"kelvneo"},"content":"        assertEquals(String.join(\"\\n\", list1), String.join(\"\\n\", list2));","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"Woolicious98"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"kelvneo":51,"Woolicious98":131,"3m0W33D":2}},{"path":"src/test/resources/malformedFile.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"{","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"  \"noteManager\": {","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"    \"contents\": [","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"      {","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"        \"name\": \"test\",","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"        \"data\": \"test\"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"      }","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"    ]","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"  \"linkManager\": {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    \"contents\": [","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"      {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"        \"day\": \"tuesday\",","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"        \"startTime\": {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"          \"hour\": 11,","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"          \"minute\": 11,","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"          \"second\": 0,","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"          \"nano\": 0","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"        },","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"        \"link\": \"https://zoom.us/\",","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"        \"name\": \"test\"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"      }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"    ]","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"  },","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"  \"questionManager\": {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    \"contents\": []","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"  }","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"kelvneo":28}},{"path":"src/test/resources/saveFile.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"{","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"  \"moduleMap\": {","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"    \"test\": {","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"      \"linkManager\": {","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"        \"contents\": [","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"          {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"            \"day\": \"tuesday\",","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"            \"startTime\": {","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"              \"hour\": 11,","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"              \"minute\": 11,","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"              \"second\": 0,","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"              \"nano\": 0","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"            },","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"            \"link\": \"https://zoom.us/\",","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"            \"name\": \"test\"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"          }","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"        ]","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"      },","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"      \"questionManager\": {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"        \"contents\": []","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"      }","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"  }","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"kelvneo":20,"Woolicious98":4}},{"path":"src/test/resources/validFile.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"{","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Woolicious98"},"content":"  \"moduleMap\": {","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Woolicious98"},"content":"    \"test\": {","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"      \"linkManager\": {","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"        \"contents\": [","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"          {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"            \"day\": \"tuesday\",","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"            \"startTime\": {","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"              \"hour\": 11,","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"              \"minute\": 11,","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"              \"second\": 0,","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"              \"nano\": 0","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"            },","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"            \"link\": \"https://zoom.us/\",","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"            \"name\": \"test\"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"          }","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"        ]","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"      },","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"      \"questionManager\": {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"        \"contents\": []","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"      }","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Woolicious98"},"content":"  }","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Woolicious98"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"kelvneo":20,"Woolicious98":4}},{"path":"text-ui-test/runtest.bat","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@echo off","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"setlocal enableextensions","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"pushd %~dp0","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"if exist .\\data rmdir /Q /S .\\data","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"call gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"cd build\\libs","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"for /f \"tokens\u003d*\" %%a in (","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u0027dir /b *.jar\u0027","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":") do (","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    set jarloc\u003d%%a","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"java -jar %jarloc% \u003c ..\\..\\text-ui-test\\input.txt \u003e ..\\..\\text-ui-test\\ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"cd ..\\..\\text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 ECHO Test passed! || Echo Test failed!","lastModifiedDate":"2020-05-24"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"if exist .\\data rmdir /Q /S .\\data","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"kelvneo":4,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"if [ -d \"./data\" ]","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"then","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"    rm -rf ./data","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"fi","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"if [ -d \"./data\" ]","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"then","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"    rm -rf ./data","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"fi","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kelvneo":10,"-":23}}]
