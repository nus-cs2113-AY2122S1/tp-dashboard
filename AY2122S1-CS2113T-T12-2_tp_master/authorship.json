[{"path":".github/ISSUE_TEMPLATE/bug-report--customised-template-.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yeezao"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"yeezao"},"content":"name: Bug report (Customised Template)","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"yeezao"},"content":"about: Template to provide bug reports","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"yeezao"},"content":"title: \u0027\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"yeezao"},"content":"labels: type.Bug","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"yeezao"},"content":"assignees: \u0027\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"yeezao"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"yeezao"},"content":"**Bug Description**","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"yeezao"},"content":"A clear and concise description of what the bug is.","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"yeezao"},"content":"**To Reproduce**","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"yeezao"},"content":"Steps to reproduce the behavior:","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"yeezao"},"content":"**Expected behavior**","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"yeezao"},"content":"A clear and concise description of what you expected to happen.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"yeezao"},"content":"**Actual Behaviour**","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"yeezao"},"content":"Provide any output of what actually happened, and the stack trace if possible.","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"yeezao"},"content":"**Screenshots**","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"yeezao"},"content":"If applicable, add screenshots to help explain your problem.","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"yeezao"},"content":"**Additional context**","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"yeezao"},"content":"Add any other context about the problem here.","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"yeezao":26}},{"path":".github/ISSUE_TEMPLATE/bug-report--github-template-.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yeezao"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"yeezao"},"content":"name: Bug report (Github Template)","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"yeezao"},"content":"about: Create a report to help us improve","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"yeezao"},"content":"title: \u0027\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"yeezao"},"content":"labels: \u0027\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"yeezao"},"content":"assignees: \u0027\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"yeezao"},"content":"---","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"yeezao"},"content":"**Describe the bug**","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"yeezao"},"content":"A clear and concise description of what the bug is.","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"yeezao"},"content":"**To Reproduce**","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"yeezao"},"content":"Steps to reproduce the behavior:","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"yeezao"},"content":"1. Go to \u0027...\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"yeezao"},"content":"2. Click on \u0027....\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"yeezao"},"content":"3. Scroll down to \u0027....\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"yeezao"},"content":"4. See error","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"yeezao"},"content":"**Expected behavior**","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"yeezao"},"content":"A clear and concise description of what you expected to happen.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"yeezao"},"content":"**Screenshots**","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"yeezao"},"content":"If applicable, add screenshots to help explain your problem.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"yeezao"},"content":"**Desktop (please complete the following information):**","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"yeezao"},"content":" - OS: [e.g. iOS]","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"yeezao"},"content":" - Browser [e.g. chrome, safari]","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"yeezao"},"content":" - Version [e.g. 22]","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"yeezao"},"content":"**Smartphone (please complete the following information):**","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"yeezao"},"content":" - Device: [e.g. iPhone6]","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"yeezao"},"content":" - OS: [e.g. iOS8.1]","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"yeezao"},"content":" - Browser [e.g. stock browser, safari]","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"yeezao"},"content":" - Version [e.g. 22]","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"yeezao"},"content":"**Additional context**","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"yeezao"},"content":"Add any other context about the problem here.","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"yeezao":38}},{"path":".github/ISSUE_TEMPLATE/user-stories.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yeezao"},"content":"---","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"yeezao"},"content":"name: User Stories","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"yeezao"},"content":"about: Blank template (with some tags set) for adding new user stories","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"yeezao"},"content":"title: \u0027\u0027","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"yeezao"},"content":"labels: type.Story","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"yeezao"},"content":"assignees: \u0027\u0027","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"yeezao"},"content":"---","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"yeezao":10}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11 (use the exact version), update Intellij to the most recent version.","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. **Ensure Intellij JDK 11 is defined as an SDK**, as described [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk) -- this step is not needed if you have used JDK 11 in a previous Intellij project.","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"   * In the same dialog, you _may_ have to set the Project language level field to the SDK default option.","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"1. **Import the project _as a Gradle project_**, as described [here](https://se-education.org/guides/tutorials/intellijImportGradleProject.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. **Verify the set up**: After the importing is complete, locate the `src/main/java/seedu/duke/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:","lastModifiedDate":"2020-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"   \u003e Task :compileJava","lastModifiedDate":"2020-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   \u003e Task :processResources NO-SOURCE","lastModifiedDate":"2020-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   \u003e Task :classes","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   \u003e Task :Duke.main()","lastModifiedDate":"2020-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   What is your name?","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Type some word and press enter to let the execution proceed to the end.","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Build automation using Gradle","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* This project uses Gradle for build automation and dependency management. It includes a basic build script as well (i.e. the `build.gradle` file).","lastModifiedDate":"2020-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* If you are new to Gradle, refer to the [Gradle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/gradle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"## Testing","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"### I/O redirection tests","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* To run _I/O redirection_ tests (aka _Text UI tests_), navigate to the `text-ui-test` and run the `runtest(.bat/.sh)` script.","lastModifiedDate":"2020-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### JUnit tests","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* A skeleton JUnit test (`src/test/java/seedu/duke/DukeTest.java`) is provided with this project template. ","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* If you are new to JUnit, refer to the [JUnit Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/junit.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Checkstyle","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* A sample CheckStyle rule configuration is provided in this project.","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* If you are new to Checkstyle, refer to the [Checkstyle Tutorial at se-education.org/guides](https://se-education.org/guides/tutorials/checkstyle.html).","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## CI using GitHub Actions","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The project uses [GitHub actions](https://github.com/features/actions) for CI. When you push a commit to this repo or PR against it, GitHub actions will run automatically to build and verify the code as updated by the commit/PR.","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"## Documentation","lastModifiedDate":"2020-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"`/docs` folder contains a skeleton version of the project documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Steps for publishing documentation to the public: ","lastModifiedDate":"2020-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"1. If you are using this project template for an individual project, go your fork on GitHub.\u003cbr\u003e","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   If you are using this project template for a team project, go to the team fork on GitHub.","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"1. Click on the `settings` tab.","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"1. Scroll down to the `GitHub Pages` section.","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Set the `source` as `master branch /docs folder`.","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Optionally, use the `choose a theme` button to choose a theme for your documentation.","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"yeezao"},"content":"*temp change*","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"yeezao":2,"-":65}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"yeezao"},"content":"    implementation group: \u0027com.google.code.gson\u0027, name: \u0027gson\u0027, version: \u00272.8.8\u0027","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"yeezao"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yeezao":2,"-":46}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"leeyikai"},"content":"![](images/leeyikai.jpeg) | Lee Yi Kai | [Github](https://github.com/leeyikai) | [Portfolio](team/leeyikai.md)","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"itsleeqian"},"content":"![](images/xiyuan_profile.jpg) | Li Xi Yuan | [Github](https://github.com/lixiyuan416) | [Portfolio](team/lixiyuan416.md)","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"joshualeeky"},"content":"![](images/joshualeeky.jpg) | Lee Keng Yong Joshua | [Github](https://github.com/joshualeeky) | [Portfolio](team/joshualeeky.md)","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"joshualeeky"},"content":"![](https://via.placeholder.com/100.png?text\u003dPhoto) | Lee Qi An | [Github](https://github.com/itsleeqian) | [Portfolio](team/itsleeqian.md)","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"leeyikai"},"content":"![](images/yuzhao.jpeg) | Liang Yuzhao | [Github](https://github.com/yeezao) | [Portfolio](team/yeezao.md)","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"joshualeeky":2,"-":4,"itsleeqian":1,"leeyikai":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"yeezao"},"content":"Third party library used: GSON under Apache License 2.0 (repo [here](https://github.com/google/gson))","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"itsleeqian"},"content":"## Design ","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"itsleeqian"},"content":"### Architecture","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"itsleeqian"},"content":"![](images/Architectural_Diagram.JPG)","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"itsleeqian"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"itsleeqian"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"itsleeqian"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"itsleeqian"},"content":"`Main` is responsible for initialising the different components correctly at app launch, and connecting them with one another.","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"itsleeqian"},"content":"`Commons` represents a collection of classes used by multiple components.","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"itsleeqian"},"content":"The major classes in `Commons` are `Trip`, `Expense` and `Person`.  ","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"itsleeqian"},"content":"Further elaboration on these classes will be in the following sections later.","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"itsleeqian"},"content":"The remaining components are as follows:","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"itsleeqian"},"content":"`Ui`: The User Interface of the App.","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"itsleeqian"},"content":"`Parser`: The command handler and executor. Holds the main logic for handling any command.","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"itsleeqian"},"content":"`Storage`: Holds the data of the App in memory, and also reads and writes data to the hard disk.","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"itsleeqian"},"content":"**How the architecture components interact with one another**","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"itsleeqian"},"content":"The ***Sequence Diagram*** below shows a brief overview of how the components interact with each other.","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"itsleeqian"},"content":"For this particular interaction, the user has issued the command","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"itsleeqian"},"content":"`create` with the correct input parameters.","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"itsleeqian"},"content":"![](images/Architectural_Sequence_Diagram.JPG)","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"itsleeqian"},"content":"The sections below provide more details of the components and classes in them.","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"yeezao"},"content":"### `Trip` Class","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"yeezao"},"content":"The `Trip` class contains attributes storing the details of trips added by the user, ","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"yeezao"},"content":"and is a container class for the expenses (each expense being represented by an ","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"yeezao"},"content":"instance of the `Expense` class) and persons (each person being represented by an ","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"yeezao"},"content":"instance of the `Person` class) tagged to the trip. The class diagram below illustrates","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"yeezao"},"content":"the interactions of the `Trip` class with other classes.","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"lixiyuan416"},"content":"![](images/classDiagTrip.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"yeezao"},"content":"A trip is created when the `Parser` class calls its `executeCreate()` method to instantiate ","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"yeezao"},"content":"a new instance of `Trip`. The newly-created trip is then added to the `ArrayList\u003cTrip\u003e` ","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"yeezao"},"content":"in the Storage class.","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"yeezao"},"content":"Although the program is able to store zero trips, in order for it to work at any appreciable level,","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"yeezao"},"content":"there must be at least one trip added by the user (either through input or through loading from the","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"yeezao"},"content":"save file) in order for any other features to be available. If there are no trips added, the program ","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"yeezao"},"content":"will repeatedly prompt the user to add a new trip.","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"lixiyuan416"},"content":"The sequence diagram below shows what happens when the user creates a new trip. If a duplicate","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"lixiyuan416"},"content":"trip is input, the app will confirm with the user if he/she wishes to add the duplicate trip.","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"lixiyuan416"},"content":"![](images/tripSeq.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"joshualeeky"},"content":"### `Person` Class","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"itsleeqian"},"content":"Below details the UML diagram for the `Person` class.","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"itsleeqian"},"content":"![](images/Person_Diagram.JPG)","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"joshualeeky"},"content":"The  Person Class,","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"itsleeqian"},"content":"Represents an individual that participated in an expense or a whole trip.","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"joshualeeky"},"content":"* A user-defined amount of `Person` objects will be created by the user during the create function of the `Trip` Class.","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"joshualeeky"},"content":"* Every time an object is created of the `Expense` Class, the user may define the people who were involved in the expense, however the people who are added to the expense must be already a `Person` object in the `Trip` object that the expense was made.","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"joshualeeky"},"content":"* One `Person` object who was involved in the expense will then be appointed as the payer of the group, the user will then have to indicate how much (in foreign currency) each of the participating persons spent for that particular expense. This is then stored and updated in each of the respective `Person` object’s `moneyOwed` HashMap,  where a positive double refers to how much the person owes the respective Person object (i.e. the key of the HashMap) and a negative double refers to how much the Person object (i.e. the key of the HashMap) owes to that instance of the Person object.","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"joshualeeky"},"content":"  * Example: If the HashMap \u003d {person2 \u003d 22, person3 \u003d -11} in the person1 object, then person1 owes person2 $22 and person3 owes person1 $11.","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"leeyikai"},"content":"### `Ui` Class","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"lixiyuan416"},"content":"The `Ui` class handles everything that the user sees, which includes feedback, error messages, user prompts, and displaying help. All of Ui\u0027s methods are static, and are meant to be called by other classes.","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"lixiyuan416"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"lixiyuan416"},"content":"**Methods of \u0027Ui\u0027 can be broadly categorised into 2 types:**","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"lixiyuan416"},"content":"1. Error and feedback messages, which do not contain references to other classes, and are mainly `System.out.println` statements.","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"lixiyuan416"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"lixiyuan416"},"content":"2. Methods that calculates and prints the state of the program. These methods contain references ","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"lixiyuan416"},"content":"   to other classes, and may require input parameters. An example will be ","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"lixiyuan416"},"content":"   `public static void printAmount(Person person, Trip trip)`, which generates the total amount ","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"lixiyuan416"},"content":"   spent and the repayment instructions for `person` in that `trip`.","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"lixiyuan416"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":95,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":96,"author":{"gitId":"lixiyuan416"},"content":"The `help` command is implemented by `Ui.displayHelp()`, and has 3 different states, as shown in the diagram below:","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"lixiyuan416"},"content":"![](images/HelpCommandStates.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"leeyikai"},"content":"### `Parser` Class","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"leeyikai"},"content":"The `Parser` class handles all input and executes the corresponding actions based on the user input. ","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"joshualeeky"},"content":"It consists of methods that will execute commands that is input by the user which is crucial to the functionality ","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"joshualeeky"},"content":"of our program.","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"leeyikai"},"content":"`Parser` depends on other classes for the respective inputs and outputs.`Duke` calls the `Parser` class in order for the ","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"leeyikai"},"content":"necessary commands to be executed. However, not all functionality is stored here. Rather, `Parser` acts like an interface ","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"leeyikai"},"content":"that handles all the logic required to pass in the correct information into the different classes to execute.","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"joshualeeky"},"content":"The following partial class diagram depicts the relation of the Parser class with other classes that it interacts with:","lastModifiedDate":"2021-11-08"},{"lineNumber":113,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":114,"author":{"gitId":"joshualeeky"},"content":"![](images/ParserClassDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":115,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":116,"author":{"gitId":"joshualeeky"},"content":"The `Parser` class,","lastModifiedDate":"2021-11-07"},{"lineNumber":117,"author":{"gitId":"joshualeeky"},"content":"- Reads in the user input and determines if the command entered is valid.","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"joshualeeky"},"content":"- Parser class will then pass it to the abstract class CommandHandler which will then pass it to CommandExecutor, any ","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"joshualeeky"},"content":"exceptions thrown here will be caught by the CommandHandler.","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"joshualeeky"},"content":"- The CommandExecutor will then execute the commands provided with the relevant method calls from the other classes in the ","lastModifiedDate":"2021-11-07"},{"lineNumber":121,"author":{"gitId":"joshualeeky"},"content":"program, again if there is an exception thrown at this stage, it will be caught in the CommandHandler class.","lastModifiedDate":"2021-11-07"},{"lineNumber":122,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"joshualeeky"},"content":"The following partial sequence diagram dictates the flow of events when the user enters a command into the program.","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":125,"author":{"gitId":"joshualeeky"},"content":"![](images/ParserSequenceDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"lixiyuan416"},"content":"### `Expense` Class","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"leeyikai"},"content":"The `Expense` class deals with most functionalities related to adding an expense inside a trip. The following partial class diagram","lastModifiedDate":"2021-11-08"},{"lineNumber":129,"author":{"gitId":"leeyikai"},"content":"shows the interactions between the `Expense` class and other classes and interfaces.","lastModifiedDate":"2021-11-08"},{"lineNumber":130,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":131,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":132,"author":{"gitId":"leeyikai"},"content":"![](images/ExpenseClassDiagram.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":133,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":134,"author":{"gitId":"leeyikai"},"content":"The `Expense` class,","lastModifiedDate":"2021-11-08"},{"lineNumber":135,"author":{"gitId":"leeyikai"},"content":"- Stores amount spent","lastModifiedDate":"2021-11-08"},{"lineNumber":136,"author":{"gitId":"leeyikai"},"content":"- Stores description","lastModifiedDate":"2021-11-08"},{"lineNumber":137,"author":{"gitId":"leeyikai"},"content":"- Stores category","lastModifiedDate":"2021-11-08"},{"lineNumber":138,"author":{"gitId":"leeyikai"},"content":"- Stores persons involved","lastModifiedDate":"2021-11-08"},{"lineNumber":139,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":140,"author":{"gitId":"leeyikai"},"content":"The sequence diagram below shows how an expense is initialised.","lastModifiedDate":"2021-11-08"},{"lineNumber":141,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":142,"author":{"gitId":"leeyikai"},"content":"![](images/ExpenseSequenceDiagram.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":143,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":144,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":145,"author":{"gitId":"joshualeeky"},"content":"When `CommandExecutor` calls the `executeCreateExpense()` function, the open trip will be retrieved, and an expense will be initialized.","lastModifiedDate":"2021-11-08"},{"lineNumber":146,"author":{"gitId":"leeyikai"},"content":"During the initialization fo a new `Expense`, the amount spent for the expense is set using `setAmountSpent()`, the category is set","lastModifiedDate":"2021-11-08"},{"lineNumber":147,"author":{"gitId":"leeyikai"},"content":"using `setCategory` and the date of the `Expense` is being prompted using `promptDate()`. ","lastModifiedDate":"2021-11-08"},{"lineNumber":148,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":149,"author":{"gitId":"leeyikai"},"content":"In `promptDate()`, the date is checked if it is valid and will only return if it is. Otherwise, the program will keep prompting the user.","lastModifiedDate":"2021-11-08"},{"lineNumber":150,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":151,"author":{"gitId":"leeyikai"},"content":"If no date is entered, `LocalDate` will return the date which the user entered the expense. ","lastModifiedDate":"2021-11-08"},{"lineNumber":152,"author":{"gitId":"leeyikai"},"content":"Otherwise, `LocalDate` will parse the date according to the given format.","lastModifiedDate":"2021-11-08"},{"lineNumber":153,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":154,"author":{"gitId":"leeyikai"},"content":"If there is only 1 `Person` in the expense, then `Expense` will call the corresponding methods in `ExpenseSplitter`. `CommandExecutor` will","lastModifiedDate":"2021-11-08"},{"lineNumber":155,"author":{"gitId":"leeyikai"},"content":"call `addExpense()` and `setLastExpense` to add the expense to the trip and set it as the last expense added. Then, a success message is printed using","lastModifiedDate":"2021-11-08"},{"lineNumber":156,"author":{"gitId":"leeyikai"},"content":"`printExpensesAddedSuccess()` of `Ui`.","lastModifiedDate":"2021-11-08"},{"lineNumber":157,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"yeezao"},"content":"### `Storage` Component","lastModifiedDate":"2021-11-07"},{"lineNumber":160,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":161,"author":{"gitId":"yeezao"},"content":"The `Storage` component consists of two classes - the `Storage` class, which stores data for the current instance of the program,","lastModifiedDate":"2021-11-07"},{"lineNumber":162,"author":{"gitId":"yeezao"},"content":"and `FileStorage` class, which interacts with the save file.","lastModifiedDate":"2021-11-07"},{"lineNumber":163,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":164,"author":{"gitId":"yeezao"},"content":"The interaction between the two classes is illustrated in the diagram below:","lastModifiedDate":"2021-11-07"},{"lineNumber":165,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":166,"author":{"gitId":"yeezao"},"content":"![](images/StorageCompClassDiag.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":167,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":168,"author":{"gitId":"yeezao"},"content":"- The `Storage` class stores the user data after it has been read from the save file. It also stores the list of supported ","lastModifiedDate":"2021-11-07"},{"lineNumber":169,"author":{"gitId":"yeezao"},"content":"currencies, the current open trip (set to `null` if there is no open trip), and the trip which the user last interacted with and","lastModifiedDate":"2021-11-07"},{"lineNumber":170,"author":{"gitId":"yeezao"},"content":"(set to `null` if the trip was deleted).","lastModifiedDate":"2021-11-07"},{"lineNumber":171,"author":{"gitId":"yeezao"},"content":"- The `FileStorage` class contains methods to read from and write to a save file, and to create a new save file.","lastModifiedDate":"2021-11-07"},{"lineNumber":172,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":173,"author":{"gitId":"yeezao"},"content":"The sequence diagram illustrating the process of reading from a save file is below:","lastModifiedDate":"2021-11-07"},{"lineNumber":174,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":175,"author":{"gitId":"yeezao"},"content":"![](images/ReadFromFileSeqDiag.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":176,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":177,"author":{"gitId":"yeezao"},"content":"The sequence diagram illustrating the process of writing to a save file is below:","lastModifiedDate":"2021-11-07"},{"lineNumber":178,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":179,"author":{"gitId":"yeezao"},"content":"![](images/WriteToFileSeqDiag.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":180,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":181,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":182,"author":{"gitId":"yeezao"},"content":"#### `FileStorage` implementation","lastModifiedDate":"2021-11-07"},{"lineNumber":183,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":184,"author":{"gitId":"joshualeeky"},"content":"The Gson library we use to serialise and deserialise data to and from the JSON format does not properly parse LocalDate","lastModifiedDate":"2021-11-08"},{"lineNumber":185,"author":{"gitId":"yeezao"},"content":"objects, given that LocalDate cannot be directly instantiated. As a result, using the default implementation of Gson ","lastModifiedDate":"2021-11-07"},{"lineNumber":186,"author":{"gitId":"yeezao"},"content":"to serialise LocalDate causes an `InaccessibleObjectException` when attempting to deserialise a LocalDate object. To overcome","lastModifiedDate":"2021-11-07"},{"lineNumber":187,"author":{"gitId":"yeezao"},"content":"this, we implemented a custom serialiser and deserialiser specifically for LocalDate, adapted from the Gson User Guide ","lastModifiedDate":"2021-11-07"},{"lineNumber":188,"author":{"gitId":"yeezao"},"content":"[here](https://github.com/google/gson/blob/master/UserGuide.md#TOC-Custom-Serialization-and-Deserialization).","lastModifiedDate":"2021-11-07"},{"lineNumber":189,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":190,"author":{"gitId":"yeezao"},"content":"The custom serialiser and deserialiser is implemented as inner classes within the `FileStorage` class.","lastModifiedDate":"2021-11-07"},{"lineNumber":191,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":192,"author":{"gitId":"lixiyuan416"},"content":"## Appendix: Requirements","lastModifiedDate":"2021-11-07"},{"lineNumber":193,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":194,"author":{"gitId":"lixiyuan416"},"content":"### Appendix A: Product scope","lastModifiedDate":"2021-11-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":196,"author":{"gitId":"lixiyuan416"},"content":"**Target user profile**","lastModifiedDate":"2021-11-08"},{"lineNumber":197,"author":{"gitId":"lixiyuan416"},"content":"- Students who are travelling overseas and sharing expenses with a group","lastModifiedDate":"2021-11-08"},{"lineNumber":198,"author":{"gitId":"lixiyuan416"},"content":"- Comfortable with CLI desktop apps","lastModifiedDate":"2021-11-08"},{"lineNumber":199,"author":{"gitId":"lixiyuan416"},"content":"- Prefers typing to mouse interaction for data input","lastModifiedDate":"2021-11-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":201,"author":{"gitId":"lixiyuan416"},"content":"**Value proposition**","lastModifiedDate":"2021-11-08"},{"lineNumber":202,"author":{"gitId":"lixiyuan416"},"content":"- Suitable for batch input of expenses","lastModifiedDate":"2021-11-08"},{"lineNumber":203,"author":{"gitId":"lixiyuan416"},"content":"- PayMeBack data is in JSON, which is lightweight and easily transferable","lastModifiedDate":"2021-11-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":205,"author":{"gitId":"lixiyuan416"},"content":"### Appendix B: User Stories","lastModifiedDate":"2021-11-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":207,"author":{"gitId":"lixiyuan416"},"content":"| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2021-11-08"},{"lineNumber":208,"author":{"gitId":"lixiyuan416"},"content":"|----------|---------------|------------------|","lastModifiedDate":"2021-11-08"},{"lineNumber":209,"author":{"gitId":"lixiyuan416"},"content":"New user|See help instructions|refer to them when I forget how to use the application","lastModifiedDate":"2021-11-08"},{"lineNumber":210,"author":{"gitId":"lixiyuan416"},"content":"User|See my nett expenses|I can manage my budget","lastModifiedDate":"2021-11-08"},{"lineNumber":211,"author":{"gitId":"lixiyuan416"},"content":"User|Enter my name|I can keep track of whose expenses it is","lastModifiedDate":"2021-11-08"},{"lineNumber":212,"author":{"gitId":"lixiyuan416"},"content":"User|Enter names of other people|I can track who I went where with","lastModifiedDate":"2021-11-08"},{"lineNumber":213,"author":{"gitId":"lixiyuan416"},"content":"User|Enter the category of my expenses|I can see how much I spent in certain areas","lastModifiedDate":"2021-11-08"},{"lineNumber":214,"author":{"gitId":"lixiyuan416"},"content":"User|Enter the location of my expenses|I can see where I spent my money","lastModifiedDate":"2021-11-08"},{"lineNumber":215,"author":{"gitId":"lixiyuan416"},"content":"User|Edit the location|I can change the location later on if i need to be more specific","lastModifiedDate":"2021-11-08"},{"lineNumber":216,"author":{"gitId":"lixiyuan416"},"content":"User|Enter the exchange rate of the currency of country I am visiting|I can repay people back in my local currency correctly","lastModifiedDate":"2021-11-08"},{"lineNumber":217,"author":{"gitId":"lixiyuan416"},"content":"User|Filter the expenses based on categories|I can better categorise my own spending","lastModifiedDate":"2021-11-08"},{"lineNumber":218,"author":{"gitId":"lixiyuan416"},"content":"User|Filter the expenses based on who is involved|I can better settle expenses with individual person(s)","lastModifiedDate":"2021-11-08"},{"lineNumber":219,"author":{"gitId":"lixiyuan416"},"content":"User|Start a new trip and save the previous one|I can record all my travels","lastModifiedDate":"2021-11-08"},{"lineNumber":220,"author":{"gitId":"lixiyuan416"},"content":"User|Delete wrong entries|In case I added something wrongly","lastModifiedDate":"2021-11-08"},{"lineNumber":221,"author":{"gitId":"lixiyuan416"},"content":"User|Delete whole trips|In case I don’t want to remember the trips","lastModifiedDate":"2021-11-08"},{"lineNumber":222,"author":{"gitId":"lixiyuan416"},"content":"User|See history of my expenses, classified into trips|I can have a record to refer to","lastModifiedDate":"2021-11-08"},{"lineNumber":223,"author":{"gitId":"lixiyuan416"},"content":"User|Display total amount spent in local and foreign currency|For accounting purposes","lastModifiedDate":"2021-11-08"},{"lineNumber":224,"author":{"gitId":"lixiyuan416"},"content":"User|Know how much my friends has to pay me at the end of the trip|I will not go broke","lastModifiedDate":"2021-11-08"},{"lineNumber":225,"author":{"gitId":"lixiyuan416"},"content":"User|Cancel an operation instead of re-entering my data when prompted|save time and run other commands immediately","lastModifiedDate":"2021-11-08"},{"lineNumber":226,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":229,"author":{"gitId":"lixiyuan416"},"content":"### Appendix C: Non-Functional Requirements","lastModifiedDate":"2021-11-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":231,"author":{"gitId":"yeezao"},"content":"- The app should work on all mainstream OSes (Windows, macOS, Linux) with Java 11 or later installed.","lastModifiedDate":"2021-11-08"},{"lineNumber":232,"author":{"gitId":"yeezao"},"content":"- The app should be able to store 1000 trips, each with 1000 expenses, without any noticeable slowdown in performance.","lastModifiedDate":"2021-11-08"},{"lineNumber":233,"author":{"gitId":"yeezao"},"content":"- A user with an above-average typing speed in English should be able to complete tasks on the app quicker than using a ","lastModifiedDate":"2021-11-08"},{"lineNumber":234,"author":{"gitId":"yeezao"},"content":"GUI.","lastModifiedDate":"2021-11-08"},{"lineNumber":235,"author":{"gitId":"yeezao"},"content":"- The app should be able to handle corrupted save files.","lastModifiedDate":"2021-11-08"},{"lineNumber":236,"author":{"gitId":"yeezao"},"content":"- An advanced user should be able to manipulate the save file directly, and the app must be able to handle this scenario","lastModifiedDate":"2021-11-08"},{"lineNumber":237,"author":{"gitId":"yeezao"},"content":"without error.","lastModifiedDate":"2021-11-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":240,"author":{"gitId":"itsleeqian"},"content":"### Appendix D: Instructions for manual testing","lastModifiedDate":"2021-11-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":242,"author":{"gitId":"yeezao"},"content":"#### Setting up","lastModifiedDate":"2021-11-08"},{"lineNumber":243,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":244,"author":{"gitId":"yeezao"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2021-11-08"},{"lineNumber":245,"author":{"gitId":"yeezao"},"content":"2. Download the latest version of `PayMeBack` from [here](https://github.com/AY2122S1-CS2113T-T12-2/tp/releases),","lastModifiedDate":"2021-11-08"},{"lineNumber":246,"author":{"gitId":"yeezao"},"content":"   and move the downloaded file to your preferred folder.","lastModifiedDate":"2021-11-08"},{"lineNumber":247,"author":{"gitId":"yeezao"},"content":"3. Open any command-line application (such as Terminal, Command Prompt, or Powershell) and navigate to the folder","lastModifiedDate":"2021-11-08"},{"lineNumber":248,"author":{"gitId":"yeezao"},"content":"   containing your downloaded copy of `PayMeBack`.","lastModifiedDate":"2021-11-08"},{"lineNumber":249,"author":{"gitId":"yeezao"},"content":"4. In the command-line interface, type `java -jar PayMeBack.jar`.","lastModifiedDate":"2021-11-08"},{"lineNumber":250,"author":{"gitId":"yeezao"},"content":"5. If the program starts successfully, you should see the following on your screen:","lastModifiedDate":"2021-11-08"},{"lineNumber":251,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":252,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":253,"author":{"gitId":"yeezao"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":254,"author":{"gitId":"yeezao"},"content":"Welcome to","lastModifiedDate":"2021-11-08"},{"lineNumber":255,"author":{"gitId":"yeezao"},"content":"    ____              __  ___     ____             __  ","lastModifiedDate":"2021-11-08"},{"lineNumber":256,"author":{"gitId":"yeezao"},"content":"   / __ \\____ ___  __/  |/  ___  / __ )____ ______/ /__","lastModifiedDate":"2021-11-08"},{"lineNumber":257,"author":{"gitId":"yeezao"},"content":"  / /_/ / __ `/ / / / /|_/ / _ \\/ __  / __ `/ ___/ //_/","lastModifiedDate":"2021-11-08"},{"lineNumber":258,"author":{"gitId":"yeezao"},"content":" / ____/ /_/ / /_/ / /  / /  __/ /_/ / /_/ / /__/ ,\u003c   ","lastModifiedDate":"2021-11-08"},{"lineNumber":259,"author":{"gitId":"yeezao"},"content":"/_/    \\__,_/\\__, /_/  /_/\\___/_____/\\__,_/\\___/_/|_|  ","lastModifiedDate":"2021-11-08"},{"lineNumber":260,"author":{"gitId":"yeezao"},"content":"            /____/                                     ","lastModifiedDate":"2021-11-08"},{"lineNumber":261,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":262,"author":{"gitId":"yeezao"},"content":"```","lastModifiedDate":"2021-11-08"},{"lineNumber":263,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":264,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":265,"author":{"gitId":"yeezao"},"content":"#### Manual Testing","lastModifiedDate":"2021-11-08"},{"lineNumber":266,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":267,"author":{"gitId":"yeezao"},"content":"The following is a non-exhaustive list of common commands that may be used to operate the program, and","lastModifiedDate":"2021-11-08"},{"lineNumber":268,"author":{"gitId":"yeezao"},"content":"the expected behaviour for each. For more information on commands, please refer to the [User Guide](https://ay2122s1-cs2113t-t12-2.github.io/tp/UserGuide.html).","lastModifiedDate":"2021-11-08"},{"lineNumber":269,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":270,"author":{"gitId":"yeezao"},"content":"#### Creating Trip","lastModifiedDate":"2021-11-08"},{"lineNumber":271,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":272,"author":{"gitId":"yeezao"},"content":"- `create` syntax with missing attribute (e.g. missing date `create /USA /USD /0.74 /ben, jerry`)","lastModifiedDate":"2021-11-08"},{"lineNumber":273,"author":{"gitId":"yeezao"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":274,"author":{"gitId":"yeezao"},"content":"Expected: an error message shows, providing the input syntax for creating a trip.","lastModifiedDate":"2021-11-08"},{"lineNumber":275,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":276,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":277,"author":{"gitId":"yeezao"},"content":"- `create` syntax with incorrect type/format (e.g. incorrect date format `create /USA /hello /USD /0.74 /ben, jerry`)","lastModifiedDate":"2021-11-08"},{"lineNumber":278,"author":{"gitId":"yeezao"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":279,"author":{"gitId":"yeezao"},"content":"  Expected:","lastModifiedDate":"2021-11-08"},{"lineNumber":280,"author":{"gitId":"yeezao"},"content":"  - For some errors, the program will prompt the user to correct the input for that attribute on the spot.","lastModifiedDate":"2021-11-08"},{"lineNumber":281,"author":{"gitId":"yeezao"},"content":"  - For other errors, the program will display an error message, and the user will need to re-enter the full command again.","lastModifiedDate":"2021-11-08"},{"lineNumber":282,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":283,"author":{"gitId":"yeezao"},"content":"- `create` with a new trip with the same attributes as an already existing trip.","lastModifiedDate":"2021-11-08"},{"lineNumber":284,"author":{"gitId":"yeezao"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":285,"author":{"gitId":"yeezao"},"content":"Expected: the program will warn the user, and asks for confirmation from the user on whether to add the duplicate trip.","lastModifiedDate":"2021-11-08"},{"lineNumber":286,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":287,"author":{"gitId":"yeezao"},"content":"#### Opening and deleting trip ","lastModifiedDate":"2021-11-08"},{"lineNumber":288,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":289,"author":{"gitId":"joshualeeky"},"content":"- `open` or `delete` with an incorrect trip number (wrong format/trip number doesn\u0027t exist ","lastModifiedDate":"2021-11-08"},{"lineNumber":290,"author":{"gitId":"yeezao"},"content":"e.g. `open something` or `delete 1000` when only 2 trips are stored.)","lastModifiedDate":"2021-11-08"},{"lineNumber":291,"author":{"gitId":"yeezao"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":292,"author":{"gitId":"yeezao"},"content":"Expected: An error will inform the user that the trip number does not exist.","lastModifiedDate":"2021-11-08"},{"lineNumber":293,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":294,"author":{"gitId":"itsleeqian"},"content":"#### Editing trip","lastModifiedDate":"2021-11-08"},{"lineNumber":295,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":296,"author":{"gitId":"joshualeeky"},"content":"- `edit` syntax with incorrect or missing attribute (e.g. edit 1 -location).","lastModifiedDate":"2021-11-08"},{"lineNumber":297,"author":{"gitId":"itsleeqian"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":298,"author":{"gitId":"itsleeqian"},"content":"Expected: An error will inform the user, providing the input syntax for editing a trip.","lastModifiedDate":"2021-11-08"},{"lineNumber":299,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":300,"author":{"gitId":"itsleeqian"},"content":"#### Viewing summary of expenses","lastModifiedDate":"2021-11-08"},{"lineNumber":301,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":302,"author":{"gitId":"itsleeqian"},"content":"- `summary` with a random string or a name that does not exist in the trip","lastModifiedDate":"2021-11-08"},{"lineNumber":303,"author":{"gitId":"itsleeqian"},"content":"e.g. \u0027summary abcdefg\u0027 or \u0027summary %32!3\u0027.","lastModifiedDate":"2021-11-08"},{"lineNumber":304,"author":{"gitId":"itsleeqian"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":305,"author":{"gitId":"itsleeqian"},"content":"Expected: An error will inform the user that the string or name does not exist in the trip.","lastModifiedDate":"2021-11-08"},{"lineNumber":306,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":307,"author":{"gitId":"joshualeeky"},"content":"#### Creating expenses","lastModifiedDate":"2021-11-08"},{"lineNumber":308,"author":{"gitId":"lixiyuan416"},"content":"- Create an expense inside a trip. When prompted for date, enter an input like `testing123`, or enter an invalid date like `31-02-2021`","lastModifiedDate":"2021-11-08"},{"lineNumber":309,"author":{"gitId":"lixiyuan416"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":310,"author":{"gitId":"lixiyuan416"},"content":"  Expected: Program will prompt you to re-enter date in DD-MM-YYYY format.","lastModifiedDate":"2021-11-08"},{"lineNumber":311,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":312,"author":{"gitId":"joshualeeky"},"content":"- Create an Expense with the people with identical names (case-insensitive). e.g. `expense 2113 food duke, dUkE /nice dinner`.","lastModifiedDate":"2021-11-08"},{"lineNumber":313,"author":{"gitId":"joshualeeky"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":314,"author":{"gitId":"joshualeeky"},"content":"  Expected: An error will inform the user that they have entered people with the same name.","lastModifiedDate":"2021-11-08"},{"lineNumber":315,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":316,"author":{"gitId":"joshualeeky"},"content":"- Create an Expense with invalid parameters (negative, zero or non-number). e.g. `expense -2113 category Duke, Duke2 /description` or","lastModifiedDate":"2021-11-08"},{"lineNumber":317,"author":{"gitId":"joshualeeky"},"content":"  `expense 0 category Duke, Duke2 /description` or `expense notNumber cateogry Duke, Duke2 /description`.","lastModifiedDate":"2021-11-08"},{"lineNumber":318,"author":{"gitId":"joshualeeky"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":319,"author":{"gitId":"joshualeeky"},"content":"  Expected: An error will inform the user that the amount is invalid and request the user to enter the amount again.","lastModifiedDate":"2021-11-08"},{"lineNumber":320,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":321,"author":{"gitId":"joshualeeky"},"content":"#### Viewing and deleting expenses","lastModifiedDate":"2021-11-08"},{"lineNumber":322,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":323,"author":{"gitId":"joshualeeky"},"content":"- `view` and `delete` with an invalid expense number (wrong format/trip number doesn\u0027t exist).","lastModifiedDate":"2021-11-08"},{"lineNumber":324,"author":{"gitId":"joshualeeky"},"content":"  e.g. `view something` or `delete 1000` when only 2 expenses are added.","lastModifiedDate":"2021-11-08"},{"lineNumber":325,"author":{"gitId":"joshualeeky"},"content":"  \u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":326,"author":{"gitId":"joshualeeky"},"content":"  Expected: An error will inform the user that the expense number does not exist.","lastModifiedDate":"2021-11-08"},{"lineNumber":327,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":328,"author":{"gitId":"joshualeeky"},"content":"- `view last` and `delete last` when you have already deleted your most recent expense.","lastModifiedDate":"2021-11-08"},{"lineNumber":329,"author":{"gitId":"joshualeeky"},"content":"e.g. `delete last` followed by `delete last` or `view last`.","lastModifiedDate":"2021-11-08"},{"lineNumber":330,"author":{"gitId":"joshualeeky"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":331,"author":{"gitId":"joshualeeky"},"content":"Expected: An error will inform the user that they have no recently added an expense.","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"yeezao":110,"joshualeeky":51,"-":30,"itsleeqian":40,"lixiyuan416":60,"leeyikai":40}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lixiyuan416"},"content":"# PayMeBack","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"lixiyuan416"},"content":"PayMeBack is a CLI-based expense tracker for a group of friends travelling overseas together.","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"lixiyuan416"},"content":"In such a group, it is easier for an individual to pay for expenses on behalf of the group rather than having each individual pay for their share for every activity. At the end of the day, it is quite troublesome to manually calculate how much money each individual owes to another. PayMeBack is designed to make this process easy and fuss-free, by helping you calculate how much each person owes every other person.","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Useful links:","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* [User Guide](UserGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* [Developer Guide](DeveloperGuide.md)","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* [About Us](AboutUs.md)","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"-":6,"lixiyuan416":6}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Introduction","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"lixiyuan416"},"content":"PayMeBack is a CLI-based expense tracker for a group of friends travelling overseas together.","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"yeezao"},"content":"In such a group, it is easier for an individual to pay for expenses on behalf of the group rather than having each","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"yeezao"},"content":"individual pay for their share for every activity. At the end of the day, it is quite troublesome to","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"lixiyuan416"},"content":"manually calculate how much money each individual owes to another. PayMeBack is designed to make this process","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"yeezao"},"content":"easy and fuss-free, by helping you calculate how much each person owes every other person.","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"yeezao"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"itsleeqian"},"content":"## Table of Contents","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"itsleeqian"},"content":"* [Using this guide](#using-this-guide)","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"itsleeqian"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"itsleeqian"},"content":"* [Features](#features)","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"itsleeqian"},"content":"  * [Saving your data](#saving-your-data)","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"itsleeqian"},"content":"  * [Loading your saved data](#loading-your-saved-data)","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"itsleeqian"},"content":"  * [Trips](#trips)","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"itsleeqian"},"content":"    * [Create Trip](#--create-trip)","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"itsleeqian"},"content":"    * [Open Trip](#--open-trip)","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"itsleeqian"},"content":"    * [Close Trip](#--close-trip)","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"itsleeqian"},"content":"    * [List Trips](#--list-trips)","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"itsleeqian"},"content":"    * [View People in Trip](#--view-people-in-trip)","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"itsleeqian"},"content":"    * [Delete Trip](#--delete-trip)","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"itsleeqian"},"content":"    * [Edit Trip](#--edit-trip)","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"itsleeqian"},"content":"  * [Expenses](#expenses)","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"itsleeqian"},"content":"    * [Create Expense](#--create-expense)","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"itsleeqian"},"content":"    * [List Expenses](#--list-expenses)","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"itsleeqian"},"content":"    * [View an Expense](#--view-an-expense)","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"itsleeqian"},"content":"    * [Filter Expenses by Attribute](#--filter-expenses-by-attribute)","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"itsleeqian"},"content":"    * [Delete Expense](#--delete-expense)","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"itsleeqian"},"content":"  * [Settling Expenses](#settling-expenses)","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"itsleeqian"},"content":"    * [Amount](#amount)","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"itsleeqian"},"content":"    * [Optimize Transactions](#optimize-transactions)","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"itsleeqian"},"content":"  * [Summary of Expenses](#summary-of-expenses)","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"itsleeqian"},"content":"* [FAQ](#faq)","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"itsleeqian"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"yeezao"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"yeezao"},"content":"## Using this guide","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"yeezao"},"content":"- Text bounded by `this formatting` refers to elements displayed in your window as the program is running.","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"yeezao"},"content":"It can either be an input entered by the user, or an output displayed by the program.","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"yeezao"},"content":"- All entries enclosed in square brackets, \"[\" and \"]\" refer to user-defined inputs.","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"yeezao"},"content":"For example, input values displayed as `[something]` can be determined by the user, where `something` is the data","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"yeezao"},"content":"entered by the user.","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"yeezao"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"joshualeeky"},"content":"2. Download the latest version of `PayMeBack` from [here](https://github.com/AY2122S1-CS2113T-T12-2/tp/releases), ","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"joshualeeky"},"content":"and move the downloaded file to your preferred folder.","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"yeezao"},"content":"3. Open any command-line application (such as Terminal, Command Prompt, or Powershell) and navigate to the folder","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"joshualeeky"},"content":"   containing your downloaded copy of `PayMeBack`.","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"yeezao"},"content":"4. In the command-line interface, type `java -jar PayMeBack.jar`.","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"yeezao"},"content":"5. If the program starts successfully, you should see the following on your screen:","lastModifiedDate":"2021-10-30"},{"lineNumber":62,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"joshualeeky"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"joshualeeky"},"content":"Welcome to","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"joshualeeky"},"content":"    ____              __  ___     ____             __  ","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"joshualeeky"},"content":"   / __ \\____ ___  __/  |/  ___  / __ )____ ______/ /__","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"joshualeeky"},"content":"  / /_/ / __ `/ / / / /|_/ / _ \\/ __  / __ `/ ___/ //_/","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"joshualeeky"},"content":" / ____/ /_/ / /_/ / /  / /  __/ /_/ / /_/ / /__/ ,\u003c   ","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"joshualeeky"},"content":"/_/    \\__,_/\\__, /_/  /_/\\___/_____/\\__,_/\\___/_/|_|  ","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"joshualeeky"},"content":"            /____/                                     ","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"joshualeeky"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"yeezao"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":76,"author":{"gitId":"yeezao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":77,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":78,"author":{"gitId":"lixiyuan416"},"content":"## Features","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":80,"author":{"gitId":"yeezao"},"content":"### Saving your data","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":82,"author":{"gitId":"yeezao"},"content":"By default, the program attempts to save your data to a file named `trips.json` located in the same directory","lastModifiedDate":"2021-10-30"},{"lineNumber":83,"author":{"gitId":"yeezao"},"content":"as the app each time after you run a command. This includes the `quit` command.","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":85,"author":{"gitId":"yeezao"},"content":"If the save attempt is unsuccessful, you will see an error message. The program will then attempt to save again the next time you run a command.","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"joshualeeky"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":89,"author":{"gitId":"yeezao"},"content":"### Loading your saved data","lastModifiedDate":"2021-10-30"},{"lineNumber":90,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"yeezao"},"content":"The first time you open the program, or if the save file was deleted or moved, the program will create a save file ","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"yeezao"},"content":"named `trips.json` for you.","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"yeezao"},"content":"The next time you open the program, it will attempt to load your data from the save file. If the data is successfully ","lastModifiedDate":"2021-11-12"},{"lineNumber":95,"author":{"gitId":"yeezao"},"content":"loaded, you will see the following message:","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"yeezao"},"content":"```","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"yeezao"},"content":"Your saved data was successfully loaded!","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"yeezao"},"content":"```","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"lixiyuan416"},"content":"If there is an error loading your save file, please go to the [FAQ](#faq)  for more information.","lastModifiedDate":"2021-11-06"},{"lineNumber":101,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"yeezao"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"yeezao"},"content":"### Trips","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":106,"author":{"gitId":"itsleeqian"},"content":"#### - Create Trip","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":108,"author":{"gitId":"yeezao"},"content":"Creates a new Trip in the program. This command will only work when there is no trip open.","lastModifiedDate":"2021-11-08"},{"lineNumber":109,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"itsleeqian"},"content":"Input syntax:","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"yeezao"},"content":"create /[location] /[date] /[foreign-currency] /[exchange-rate] /[persons-in-trip]","lastModifiedDate":"2021-11-08"},{"lineNumber":113,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"itsleeqian"},"content":"All fields are compulsory. Note the following:","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"itsleeqian"},"content":"- `[location]` is the location of the trip. Any string can be entered.","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"joshualeeky"},"content":"- `[date]` must follow the format of dd-mm-yyyy.","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"yeezao"},"content":"- `[foriegn-currency]` is the 3-digit ISO code of the foreign currency (e.g USD, GBP). Currently there are 30 currencies supported, the currencies\u0027 names and ISO codes are listed below.","lastModifiedDate":"2021-11-08"},{"lineNumber":119,"author":{"gitId":"joshualeeky"},"content":"  - Some currencies will not have symbols as some terminals may not be able to support displaying of certain symbols.","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"joshualeeky"},"content":"  - Supported currencies will be rounded to either 2 decimal places or to the nearest whole number, ","lastModifiedDate":"2021-11-08"},{"lineNumber":121,"author":{"gitId":"joshualeeky"},"content":"  depending on the currency\u0027s smallest denomination.","lastModifiedDate":"2021-11-08"},{"lineNumber":122,"author":{"gitId":"joshualeeky"},"content":"  - The program is still runnable with unknown currencies, however there will be no symbol and the decimal place may not be accurate.","lastModifiedDate":"2021-11-08"},{"lineNumber":123,"author":{"gitId":"joshualeeky"},"content":"- `[exchange-rate]` should be how much 1 of your home currency costs in foreign currency.","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"joshualeeky"},"content":"  - Example: SGD $1 is equivalent to USD $0.74, hence the `exchange-rate` will be 0.74.","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"yeezao"},"content":"  - Note that the default home currency is SGD. To change the home currency, please refer to [Edit Trip](#--edit-trip).","lastModifiedDate":"2021-11-06"},{"lineNumber":126,"author":{"gitId":"joshualeeky"},"content":"- `persons-in-trip` should be separated with commas.","lastModifiedDate":"2021-10-28"},{"lineNumber":127,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"joshualeeky"},"content":"#### Compatible Currencies","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"joshualeeky"},"content":"Currency Name | ISO Code | Is symbol \u003cbr/\u003e available?","lastModifiedDate":"2021-11-08"},{"lineNumber":131,"author":{"gitId":"joshualeeky"},"content":"--- | :---: | :---: |","lastModifiedDate":"2021-11-08"},{"lineNumber":132,"author":{"gitId":"joshualeeky"},"content":"United States Dollar | USD | Yes","lastModifiedDate":"2021-11-07"},{"lineNumber":133,"author":{"gitId":"joshualeeky"},"content":"Singapore Dollar | SGD | Yes","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"joshualeeky"},"content":"Australian Dollar | AUD | Yes","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"joshualeeky"},"content":"Canadian Dollar | CAD | Yes","lastModifiedDate":"2021-11-07"},{"lineNumber":136,"author":{"gitId":"joshualeeky"},"content":"New Zealand Dollar | NZD | Yes","lastModifiedDate":"2021-11-07"},{"lineNumber":137,"author":{"gitId":"joshualeeky"},"content":"Euro | EUR | No","lastModifiedDate":"2021-11-07"},{"lineNumber":138,"author":{"gitId":"joshualeeky"},"content":"Pound Sterling| GBP | No","lastModifiedDate":"2021-11-07"},{"lineNumber":139,"author":{"gitId":"joshualeeky"},"content":"Malaysian Ringgit | MYR | Yes","lastModifiedDate":"2021-11-07"},{"lineNumber":140,"author":{"gitId":"joshualeeky"},"content":"Hong Kong Dollar | HKD | Yes","lastModifiedDate":"2021-11-07"},{"lineNumber":141,"author":{"gitId":"joshualeeky"},"content":"Thai Baht | THB | No","lastModifiedDate":"2021-11-07"},{"lineNumber":142,"author":{"gitId":"joshualeeky"},"content":"Russian Ruble | RUB | No","lastModifiedDate":"2021-11-07"},{"lineNumber":143,"author":{"gitId":"joshualeeky"},"content":"South African Rand | ZAR | Yes","lastModifiedDate":"2021-11-07"},{"lineNumber":144,"author":{"gitId":"joshualeeky"},"content":"Turkish Lira | TRY |  No","lastModifiedDate":"2021-11-07"},{"lineNumber":145,"author":{"gitId":"joshualeeky"},"content":"Brazilian Real | BRL | Yes","lastModifiedDate":"2021-11-07"},{"lineNumber":146,"author":{"gitId":"joshualeeky"},"content":"Danish Krone | DKK | Yes","lastModifiedDate":"2021-11-07"},{"lineNumber":147,"author":{"gitId":"joshualeeky"},"content":"Polish Zloty | PLN | No","lastModifiedDate":"2021-11-07"},{"lineNumber":148,"author":{"gitId":"joshualeeky"},"content":"Israeli New Shekel | ILS | No","lastModifiedDate":"2021-11-07"},{"lineNumber":149,"author":{"gitId":"joshualeeky"},"content":"Saudi Riyal | SAR | Yes","lastModifiedDate":"2021-11-07"},{"lineNumber":150,"author":{"gitId":"joshualeeky"},"content":"Chinese Yuan | CNY | No","lastModifiedDate":"2021-11-07"},{"lineNumber":151,"author":{"gitId":"joshualeeky"},"content":"Japanese Yen | JPY | No","lastModifiedDate":"2021-11-07"},{"lineNumber":152,"author":{"gitId":"joshualeeky"},"content":"South Korean Won | KRW | No","lastModifiedDate":"2021-11-07"},{"lineNumber":153,"author":{"gitId":"joshualeeky"},"content":"Indonesian Rupiah | IDR | Yes","lastModifiedDate":"2021-11-07"},{"lineNumber":154,"author":{"gitId":"joshualeeky"},"content":"Indian Rupee | INR | Yes","lastModifiedDate":"2021-11-07"},{"lineNumber":155,"author":{"gitId":"joshualeeky"},"content":"Swiss Franc | CHF | Yes","lastModifiedDate":"2021-11-07"},{"lineNumber":156,"author":{"gitId":"joshualeeky"},"content":"Swedish Krona | SEK | Yes","lastModifiedDate":"2021-11-07"},{"lineNumber":157,"author":{"gitId":"joshualeeky"},"content":"Norwegian Krone | NOK | Yes","lastModifiedDate":"2021-11-07"},{"lineNumber":158,"author":{"gitId":"joshualeeky"},"content":"Mexican Peso | MXN | Yes","lastModifiedDate":"2021-11-07"},{"lineNumber":159,"author":{"gitId":"joshualeeky"},"content":"New Taiwan Dollar | TWD | Yes","lastModifiedDate":"2021-11-07"},{"lineNumber":160,"author":{"gitId":"joshualeeky"},"content":"Hungarian Forint | HUF | Yes","lastModifiedDate":"2021-11-07"},{"lineNumber":161,"author":{"gitId":"joshualeeky"},"content":"Czech Koruna | CZK | Yes","lastModifiedDate":"2021-11-07"},{"lineNumber":162,"author":{"gitId":"joshualeeky"},"content":"Chilean Peso | CLP | Yes","lastModifiedDate":"2021-11-07"},{"lineNumber":163,"author":{"gitId":"joshualeeky"},"content":"Philippine Peso | PHP | No","lastModifiedDate":"2021-11-07"},{"lineNumber":164,"author":{"gitId":"joshualeeky"},"content":"United Arab Emirates Dirham | AED | No","lastModifiedDate":"2021-11-07"},{"lineNumber":165,"author":{"gitId":"joshualeeky"},"content":"Colombian Peso | COP | Yes","lastModifiedDate":"2021-11-07"},{"lineNumber":166,"author":{"gitId":"joshualeeky"},"content":"Romanian Leu | RON | Yes","lastModifiedDate":"2021-11-07"},{"lineNumber":167,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"yeezao"},"content":"For example,","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"joshualeeky"},"content":"Input:","lastModifiedDate":"2021-10-28"},{"lineNumber":171,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":172,"author":{"gitId":"yeezao"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"yeezao"},"content":"create /United States of America /02-02-2021 /USD /0.74 /Ben, Jerry, Tom","lastModifiedDate":"2021-11-06"},{"lineNumber":174,"author":{"gitId":"yeezao"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"itsleeqian"},"content":"If successful, the output will be as follows:","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"yeezao"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"yeezao"},"content":"Your trip to United States of America on 02 Feb 2021 has been successfully added!","lastModifiedDate":"2021-11-06"},{"lineNumber":180,"author":{"gitId":"yeezao"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"joshualeeky"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":183,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":184,"author":{"gitId":"joshualeeky"},"content":"#### - Open Trip","lastModifiedDate":"2021-10-28"},{"lineNumber":185,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"itsleeqian"},"content":"Opens a Trip, which allows the user to interact with other functionalities of our app, such as adding and viewing expenses.","lastModifiedDate":"2021-11-04"},{"lineNumber":187,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"itsleeqian"},"content":"Input syntax:","lastModifiedDate":"2021-11-04"},{"lineNumber":189,"author":{"gitId":"yeezao"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"yeezao"},"content":"open [trip-number]","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"yeezao"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"joshualeeky"},"content":"For example,","lastModifiedDate":"2021-10-28"},{"lineNumber":194,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"itsleeqian"},"content":"Input:","lastModifiedDate":"2021-11-04"},{"lineNumber":196,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":197,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":198,"author":{"gitId":"joshualeeky"},"content":"open 1","lastModifiedDate":"2021-10-28"},{"lineNumber":199,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":200,"author":{"gitId":"itsleeqian"},"content":"If successful, the output will be as follows:","lastModifiedDate":"2021-11-04"},{"lineNumber":201,"author":{"gitId":"yeezao"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"yeezao"},"content":"You have opened the following trip:","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"yeezao"},"content":"United States of America | 02 Feb 2021","lastModifiedDate":"2021-11-06"},{"lineNumber":204,"author":{"gitId":"yeezao"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":206,"author":{"gitId":"itsleeqian"},"content":"You can also run the `open` command while a Trip is already open. This will close the currently-opened","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"itsleeqian"},"content":"Trip, and open the specified Trip in the most recent command.","lastModifiedDate":"2021-11-04"},{"lineNumber":208,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":209,"author":{"gitId":"itsleeqian"},"content":"*Note: Only one Trip can be open at any time.*","lastModifiedDate":"2021-11-04"},{"lineNumber":210,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":211,"author":{"gitId":"joshualeeky"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":212,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"joshualeeky"},"content":"#### - Close Trip","lastModifiedDate":"2021-10-28"},{"lineNumber":214,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":215,"author":{"gitId":"yeezao"},"content":"Closes the current Trip you are in. This allows you to interact with trips (e.g. add a new trip, delete a trip, or list all trips)","lastModifiedDate":"2021-11-12"},{"lineNumber":216,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":217,"author":{"gitId":"yeezao"},"content":"This command can only be used if a Trip is already open.","lastModifiedDate":"2021-11-06"},{"lineNumber":218,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":219,"author":{"gitId":"itsleeqian"},"content":"Input syntax:","lastModifiedDate":"2021-11-04"},{"lineNumber":220,"author":{"gitId":"joshualeeky"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":221,"author":{"gitId":"joshualeeky"},"content":"close","lastModifiedDate":"2021-10-28"},{"lineNumber":222,"author":{"gitId":"joshualeeky"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":223,"author":{"gitId":"itsleeqian"},"content":"For example,","lastModifiedDate":"2021-11-04"},{"lineNumber":224,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":225,"author":{"gitId":"itsleeqian"},"content":"Input:","lastModifiedDate":"2021-11-04"},{"lineNumber":226,"author":{"gitId":"itsleeqian"},"content":"````","lastModifiedDate":"2021-11-04"},{"lineNumber":227,"author":{"gitId":"itsleeqian"},"content":"close","lastModifiedDate":"2021-11-04"},{"lineNumber":228,"author":{"gitId":"itsleeqian"},"content":"````","lastModifiedDate":"2021-11-04"},{"lineNumber":229,"author":{"gitId":"joshualeeky"},"content":"If successful, the output will be as follows:","lastModifiedDate":"2021-10-28"},{"lineNumber":230,"author":{"gitId":"joshualeeky"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":231,"author":{"gitId":"joshualeeky"},"content":"You have closed the following trip:","lastModifiedDate":"2021-10-28"},{"lineNumber":232,"author":{"gitId":"joshualeeky"},"content":"America | 02 Feb 2021","lastModifiedDate":"2021-10-28"},{"lineNumber":233,"author":{"gitId":"joshualeeky"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":234,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":235,"author":{"gitId":"joshualeeky"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":236,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":237,"author":{"gitId":"joshualeeky"},"content":"#### - List Trips","lastModifiedDate":"2021-10-28"},{"lineNumber":238,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":239,"author":{"gitId":"joshualeeky"},"content":"Lists all the Trips that you have created along with their index numbers. ","lastModifiedDate":"2021-11-07"},{"lineNumber":240,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":241,"author":{"gitId":"yeezao"},"content":"This command can only be used if no Trip is open. If a trip is open, this command will list down your expenses instead. See [List Expenses](#--list-expenses)","lastModifiedDate":"2021-11-08"},{"lineNumber":242,"author":{"gitId":"yeezao"},"content":"for more information on listing expenses.","lastModifiedDate":"2021-11-06"},{"lineNumber":243,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":244,"author":{"gitId":"itsleeqian"},"content":"Input syntax:","lastModifiedDate":"2021-11-04"},{"lineNumber":245,"author":{"gitId":"joshualeeky"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":246,"author":{"gitId":"joshualeeky"},"content":"list","lastModifiedDate":"2021-10-28"},{"lineNumber":247,"author":{"gitId":"joshualeeky"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":248,"author":{"gitId":"itsleeqian"},"content":"For example,","lastModifiedDate":"2021-11-04"},{"lineNumber":249,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":250,"author":{"gitId":"itsleeqian"},"content":"Input:","lastModifiedDate":"2021-11-04"},{"lineNumber":251,"author":{"gitId":"itsleeqian"},"content":"````","lastModifiedDate":"2021-11-04"},{"lineNumber":252,"author":{"gitId":"itsleeqian"},"content":"list","lastModifiedDate":"2021-11-04"},{"lineNumber":253,"author":{"gitId":"itsleeqian"},"content":"````","lastModifiedDate":"2021-11-04"},{"lineNumber":254,"author":{"gitId":"joshualeeky"},"content":"If successful, the output will be as follows:","lastModifiedDate":"2021-10-28"},{"lineNumber":255,"author":{"gitId":"joshualeeky"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":256,"author":{"gitId":"joshualeeky"},"content":"List of Trips:","lastModifiedDate":"2021-10-28"},{"lineNumber":257,"author":{"gitId":"joshualeeky"},"content":"    1. London | 27 Oct 2021","lastModifiedDate":"2021-10-28"},{"lineNumber":258,"author":{"gitId":"joshualeeky"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":259,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":260,"author":{"gitId":"joshualeeky"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":261,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":262,"author":{"gitId":"itsleeqian"},"content":"#### - View People in Trip","lastModifiedDate":"2021-11-04"},{"lineNumber":263,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":264,"author":{"gitId":"itsleeqian"},"content":"Lists the persons involved in a particular Trip. ","lastModifiedDate":"2021-11-04"},{"lineNumber":265,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":266,"author":{"gitId":"joshualeeky"},"content":"This command can only be used if you have a Trip opened.","lastModifiedDate":"2021-11-07"},{"lineNumber":267,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":268,"author":{"gitId":"itsleeqian"},"content":"Input syntax:","lastModifiedDate":"2021-11-04"},{"lineNumber":269,"author":{"gitId":"itsleeqian"},"content":"```","lastModifiedDate":"2021-11-04"},{"lineNumber":270,"author":{"gitId":"itsleeqian"},"content":"people","lastModifiedDate":"2021-11-04"},{"lineNumber":271,"author":{"gitId":"itsleeqian"},"content":"```","lastModifiedDate":"2021-11-04"},{"lineNumber":272,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":273,"author":{"gitId":"yeezao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":274,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":275,"author":{"gitId":"itsleeqian"},"content":"For example,","lastModifiedDate":"2021-11-04"},{"lineNumber":276,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":277,"author":{"gitId":"itsleeqian"},"content":"Input:","lastModifiedDate":"2021-11-04"},{"lineNumber":278,"author":{"gitId":"itsleeqian"},"content":"````","lastModifiedDate":"2021-11-04"},{"lineNumber":279,"author":{"gitId":"itsleeqian"},"content":"people","lastModifiedDate":"2021-11-04"},{"lineNumber":280,"author":{"gitId":"itsleeqian"},"content":"````","lastModifiedDate":"2021-11-04"},{"lineNumber":281,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":282,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":283,"author":{"gitId":"itsleeqian"},"content":"If successful, the output will be as follows:","lastModifiedDate":"2021-11-04"},{"lineNumber":284,"author":{"gitId":"itsleeqian"},"content":"```","lastModifiedDate":"2021-11-04"},{"lineNumber":285,"author":{"gitId":"itsleeqian"},"content":"These are the people involved in this trip:","lastModifiedDate":"2021-11-04"},{"lineNumber":286,"author":{"gitId":"itsleeqian"},"content":"\tBen","lastModifiedDate":"2021-11-04"},{"lineNumber":287,"author":{"gitId":"itsleeqian"},"content":"\tJerry","lastModifiedDate":"2021-11-04"},{"lineNumber":288,"author":{"gitId":"itsleeqian"},"content":"\tTom","lastModifiedDate":"2021-11-04"},{"lineNumber":289,"author":{"gitId":"itsleeqian"},"content":"```","lastModifiedDate":"2021-11-04"},{"lineNumber":290,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":291,"author":{"gitId":"itsleeqian"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":292,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":293,"author":{"gitId":"itsleeqian"},"content":"#### - Delete Trip","lastModifiedDate":"2021-11-04"},{"lineNumber":294,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":295,"author":{"gitId":"itsleeqian"},"content":"Deletes a Trip from the program. ","lastModifiedDate":"2021-11-04"},{"lineNumber":296,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":297,"author":{"gitId":"yeezao"},"content":"This command can only be used when no trip is open. If a trip is open, this command will delete an expense instead. See [Delete Expense](#--delete-expense)","lastModifiedDate":"2021-11-08"},{"lineNumber":298,"author":{"gitId":"yeezao"},"content":"for more information on deleting expenses.","lastModifiedDate":"2021-11-08"},{"lineNumber":299,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":300,"author":{"gitId":"itsleeqian"},"content":"Input syntax:","lastModifiedDate":"2021-11-04"},{"lineNumber":301,"author":{"gitId":"yeezao"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":302,"author":{"gitId":"yeezao"},"content":"delete [trip-number]","lastModifiedDate":"2021-10-25"},{"lineNumber":303,"author":{"gitId":"yeezao"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":304,"author":{"gitId":"itsleeqian"},"content":"- `[trip-number]` is the index of the Trip you wish to delete, which can be found by using `list` command while no Trip is open.","lastModifiedDate":"2021-11-04"},{"lineNumber":305,"author":{"gitId":"yeezao"},"content":"- `delete last` to delete the trip you last interacted with.","lastModifiedDate":"2021-11-06"},{"lineNumber":306,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":307,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":308,"author":{"gitId":"lixiyuan416"},"content":"For example,","lastModifiedDate":"2021-11-06"},{"lineNumber":309,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":310,"author":{"gitId":"lixiyuan416"},"content":"Input:","lastModifiedDate":"2021-11-06"},{"lineNumber":311,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":312,"author":{"gitId":"lixiyuan416"},"content":"````","lastModifiedDate":"2021-11-06"},{"lineNumber":313,"author":{"gitId":"lixiyuan416"},"content":"delete 1","lastModifiedDate":"2021-11-06"},{"lineNumber":314,"author":{"gitId":"lixiyuan416"},"content":"````","lastModifiedDate":"2021-11-06"},{"lineNumber":315,"author":{"gitId":"lixiyuan416"},"content":"If successful, the output will be as follows:","lastModifiedDate":"2021-11-06"},{"lineNumber":316,"author":{"gitId":"lixiyuan416"},"content":"```","lastModifiedDate":"2021-11-06"},{"lineNumber":317,"author":{"gitId":"lixiyuan416"},"content":"Your trip to America on 02 Feb 2021 has been successfully removed.","lastModifiedDate":"2021-11-06"},{"lineNumber":318,"author":{"gitId":"lixiyuan416"},"content":"```","lastModifiedDate":"2021-11-06"},{"lineNumber":319,"author":{"gitId":"lixiyuan416"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":320,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":321,"author":{"gitId":"yeezao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":322,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":323,"author":{"gitId":"lixiyuan416"},"content":"#### - Edit Trip","lastModifiedDate":"2021-11-06"},{"lineNumber":324,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":325,"author":{"gitId":"yeezao"},"content":"Edit the attributes of a Trip. This command can only be used when no trip is open.","lastModifiedDate":"2021-11-08"},{"lineNumber":326,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":327,"author":{"gitId":"lixiyuan416"},"content":"Input syntax:","lastModifiedDate":"2021-11-06"},{"lineNumber":328,"author":{"gitId":"lixiyuan416"},"content":"```","lastModifiedDate":"2021-11-06"},{"lineNumber":329,"author":{"gitId":"yeezao"},"content":"edit [trip-num] -[attribute] [new-value]","lastModifiedDate":"2021-11-06"},{"lineNumber":330,"author":{"gitId":"lixiyuan416"},"content":"```","lastModifiedDate":"2021-11-06"},{"lineNumber":331,"author":{"gitId":"itsleeqian"},"content":"All fields are compulsory. Note the following:","lastModifiedDate":"2021-11-06"},{"lineNumber":332,"author":{"gitId":"joshualeeky"},"content":"- The following are the attributes that can be edited along with their corresponding syntax: ","lastModifiedDate":"2021-11-07"},{"lineNumber":333,"author":{"gitId":"yeezao"},"content":"  - Location: `-location`","lastModifiedDate":"2021-11-06"},{"lineNumber":334,"author":{"gitId":"yeezao"},"content":"  - Date: `-date`","lastModifiedDate":"2021-11-06"},{"lineNumber":335,"author":{"gitId":"yeezao"},"content":"  - Exchange Rate: `-exchangerate`","lastModifiedDate":"2021-11-06"},{"lineNumber":336,"author":{"gitId":"yeezao"},"content":"  - Foreign Currency ISO Code: `-forcur`","lastModifiedDate":"2021-11-06"},{"lineNumber":337,"author":{"gitId":"yeezao"},"content":"  - Home Currency ISO Code: `-homecur`","lastModifiedDate":"2021-11-06"},{"lineNumber":338,"author":{"gitId":"yeezao"},"content":"- The hyphen preceding `[attribute]` is part of the syntax.","lastModifiedDate":"2021-11-06"},{"lineNumber":339,"author":{"gitId":"lixiyuan416"},"content":"- `[trip-number]` is the index of the Trip you wish to edit, which can be found by using `list` command while no Trip is open.","lastModifiedDate":"2021-11-06"},{"lineNumber":340,"author":{"gitId":"yeezao"},"content":"- `last` can be used for `[trip num]`. This will modify the last trip you interacted with.","lastModifiedDate":"2021-11-06"},{"lineNumber":341,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":342,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":343,"author":{"gitId":"joshualeeky"},"content":"For example,","lastModifiedDate":"2021-10-28"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":345,"author":{"gitId":"itsleeqian"},"content":"Input:","lastModifiedDate":"2021-11-04"},{"lineNumber":346,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":347,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":348,"author":{"gitId":"itsleeqian"},"content":"edit 2 -location japan","lastModifiedDate":"2021-11-06"},{"lineNumber":349,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":350,"author":{"gitId":"itsleeqian"},"content":"If successful, the output will be as follows:","lastModifiedDate":"2021-11-04"},{"lineNumber":351,"author":{"gitId":"yeezao"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":352,"author":{"gitId":"itsleeqian"},"content":"The location of your trip has been changed from tokyo to japan.","lastModifiedDate":"2021-11-06"},{"lineNumber":353,"author":{"gitId":"yeezao"},"content":"```","lastModifiedDate":"2021-10-25"},{"lineNumber":354,"author":{"gitId":"joshualeeky"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":355,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":356,"author":{"gitId":"joshualeeky"},"content":"### Expenses","lastModifiedDate":"2021-10-28"},{"lineNumber":357,"author":{"gitId":"joshualeeky"},"content":"#### - Create Expense","lastModifiedDate":"2021-10-28"},{"lineNumber":358,"author":{"gitId":"yeezao"},"content":"Creates a new expense entry for the currently opened Trip. ","lastModifiedDate":"2021-11-12"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":360,"author":{"gitId":"joshualeeky"},"content":"This command can only be used if you have a Trip opened.","lastModifiedDate":"2021-11-07"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":362,"author":{"gitId":"yeezao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":363,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":364,"author":{"gitId":"itsleeqian"},"content":"Input syntax:","lastModifiedDate":"2021-11-04"},{"lineNumber":365,"author":{"gitId":"joshualeeky"},"content":"````  ","lastModifiedDate":"2021-10-28"},{"lineNumber":366,"author":{"gitId":"joshualeeky"},"content":"expense [amount] [category] [people] /[description]","lastModifiedDate":"2021-10-28"},{"lineNumber":367,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":368,"author":{"gitId":"itsleeqian"},"content":"All fields are compulsory. Note the following:","lastModifiedDate":"2021-11-04"},{"lineNumber":369,"author":{"gitId":"joshualeeky"},"content":"- `[amount]` is the total amount spent on the expense.","lastModifiedDate":"2021-10-28"},{"lineNumber":370,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":371,"author":{"gitId":"itsleeqian"},"content":"- `[category]` is a category tag for the expense. Only 1 category per Expense is allowed.","lastModifiedDate":"2021-11-04"},{"lineNumber":372,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":373,"author":{"gitId":"itsleeqian"},"content":"- `[people]` denotes the people involved in the expense. Multiple people involved are to be separated by commas.","lastModifiedDate":"2021-11-04"},{"lineNumber":374,"author":{"gitId":"joshualeeky"},"content":"  - Entering `-all` will add every person in the trip to the expense","lastModifiedDate":"2021-10-28"},{"lineNumber":375,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":376,"author":{"gitId":"joshualeeky"},"content":"- `[description]` is the description of the expense.","lastModifiedDate":"2021-10-28"},{"lineNumber":377,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":378,"author":{"gitId":"itsleeqian"},"content":"For example,","lastModifiedDate":"2021-11-04"},{"lineNumber":379,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":380,"author":{"gitId":"itsleeqian"},"content":"Input:","lastModifiedDate":"2021-11-04"},{"lineNumber":381,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":382,"author":{"gitId":"joshualeeky"},"content":"expense 30 food Ben, Jerry /In-and-Out Burgers","lastModifiedDate":"2021-10-28"},{"lineNumber":383,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":384,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":385,"author":{"gitId":"joshualeeky"},"content":"PayMeBack will then ask you to enter the date of the expense:","lastModifiedDate":"2021-10-28"},{"lineNumber":386,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":387,"author":{"gitId":"joshualeeky"},"content":"Enter date of expense:","lastModifiedDate":"2021-10-28"},{"lineNumber":388,"author":{"gitId":"joshualeeky"},"content":"\tPress enter to use today\u0027s date","lastModifiedDate":"2021-10-28"},{"lineNumber":389,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":390,"author":{"gitId":"joshualeeky"},"content":"- The date must follow the format of dd-mm-yyyy.","lastModifiedDate":"2021-10-28"},{"lineNumber":391,"author":{"gitId":"joshualeeky"},"content":"- Pressing the enter key without keying in anything will use the current date.","lastModifiedDate":"2021-10-28"},{"lineNumber":392,"author":{"gitId":"itsleeqian"},"content":"- If the expense only has one person involved, the steps below will be skipped and the expense will be automatically added.","lastModifiedDate":"2021-11-04"},{"lineNumber":393,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":394,"author":{"gitId":"joshualeeky"},"content":"PayMeBack will then ask for the name of the person who paid for the expense:","lastModifiedDate":"2021-10-28"},{"lineNumber":395,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":396,"author":{"gitId":"joshualeeky"},"content":"Who paid for the expense?: ","lastModifiedDate":"2021-10-28"},{"lineNumber":397,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":398,"author":{"gitId":"joshualeeky"},"content":"- The name entered has to be part of the expense or PayMeBack will request for the name again.","lastModifiedDate":"2021-10-28"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":400,"author":{"gitId":"yeezao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":402,"author":{"gitId":"itsleeqian"},"content":"PayMeBack will then ask for the amounts spent by each person involved along","lastModifiedDate":"2021-11-04"},{"lineNumber":403,"author":{"gitId":"joshualeeky"},"content":"with how much of the amount has yet to be assigned:","lastModifiedDate":"2021-10-28"},{"lineNumber":404,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":405,"author":{"gitId":"joshualeeky"},"content":"Who paid for the expense?: Ben","lastModifiedDate":"2021-10-28"},{"lineNumber":406,"author":{"gitId":"joshualeeky"},"content":"Enter \"equal\" if expense is to be evenly split, enter individual spending otherwise","lastModifiedDate":"2021-10-28"},{"lineNumber":407,"author":{"gitId":"itsleeqian"},"content":"There is USD $30.00 left to be assigned. How much did Tom spend?: ","lastModifiedDate":"2021-11-04"},{"lineNumber":408,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":409,"author":{"gitId":"joshualeeky"},"content":"- The program will automatically cycle through every person involved in the expense.","lastModifiedDate":"2021-10-28"},{"lineNumber":410,"author":{"gitId":"joshualeeky"},"content":"- Entering `equal` when the program asks for the amount spent for the first person will cause the program to evenly split the expense among all the people involved in it.","lastModifiedDate":"2021-10-28"},{"lineNumber":411,"author":{"gitId":"joshualeeky"},"content":"  - Note: If the amount is not perfectly divisible by the number of people, the payer will bear the surplus or deficit.","lastModifiedDate":"2021-11-07"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":413,"author":{"gitId":"joshualeeky"},"content":"If there is no amount remaining but there are still people left to be assigned, PayMeBack will prompt the user if they would like to assign 0 to the rest of the people involved in the expense:","lastModifiedDate":"2021-10-28"},{"lineNumber":414,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":415,"author":{"gitId":"joshualeeky"},"content":"There is USD $30.00 left to be assigned. How much did Ben spend?: 30","lastModifiedDate":"2021-10-28"},{"lineNumber":416,"author":{"gitId":"joshualeeky"},"content":"There will be people involved that don\u0027t need to pay, are you sure? (y/n): ","lastModifiedDate":"2021-10-28"},{"lineNumber":417,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":418,"author":{"gitId":"joshualeeky"},"content":"- Entering `y` will allow PayMeBack to assign 0 to the remaining people involved in the expense.","lastModifiedDate":"2021-10-28"},{"lineNumber":419,"author":{"gitId":"joshualeeky"},"content":"- Entering `n` will result in PayMeBack requesting for the name of the person who paid for the expense again, followed by the same sequence of steps.","lastModifiedDate":"2021-10-28"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":421,"author":{"gitId":"joshualeeky"},"content":"PayMeBack will automatically prompt the user to assign the remaining amount when it requests for the amount spent of the last person in the expense:","lastModifiedDate":"2021-10-28"},{"lineNumber":422,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":423,"author":{"gitId":"joshualeeky"},"content":"There is USD $30.00 left to be assigned. How much did Ben spend?: 20","lastModifiedDate":"2021-10-28"},{"lineNumber":424,"author":{"gitId":"joshualeeky"},"content":"Assign the remaining USD $10.00 to Jerry? (y/n): ","lastModifiedDate":"2021-10-28"},{"lineNumber":425,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":426,"author":{"gitId":"joshualeeky"},"content":"- Entering `y` will allow PayMeBack to assign the amount to the persons stated.","lastModifiedDate":"2021-10-28"},{"lineNumber":427,"author":{"gitId":"joshualeeky"},"content":"- Entering `n` will result in PayMeBack requesting for the name of the person who paid for the expense again, followed by the same sequence of steps.","lastModifiedDate":"2021-10-28"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":429,"author":{"gitId":"itsleeqian"},"content":"If successful, the output will be as follows:","lastModifiedDate":"2021-11-04"},{"lineNumber":430,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":431,"author":{"gitId":"joshualeeky"},"content":"Your expense has been added successfully","lastModifiedDate":"2021-10-28"},{"lineNumber":432,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":434,"author":{"gitId":"joshualeeky"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":436,"author":{"gitId":"yeezao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":438,"author":{"gitId":"joshualeeky"},"content":"#### - List Expenses","lastModifiedDate":"2021-10-28"},{"lineNumber":439,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":440,"author":{"gitId":"joshualeeky"},"content":"List all expenses in the current opened trip.","lastModifiedDate":"2021-10-28"},{"lineNumber":441,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":442,"author":{"gitId":"yeezao"},"content":"This command can only be used if a trip is open. If no trip is currently open, this command will list trips instead. See [List Trips](#--list-trips)","lastModifiedDate":"2021-11-08"},{"lineNumber":443,"author":{"gitId":"yeezao"},"content":"for more information on listing trips.","lastModifiedDate":"2021-11-08"},{"lineNumber":444,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":445,"author":{"gitId":"itsleeqian"},"content":"Input syntax:","lastModifiedDate":"2021-11-04"},{"lineNumber":446,"author":{"gitId":"itsleeqian"},"content":"````  ","lastModifiedDate":"2021-11-04"},{"lineNumber":447,"author":{"gitId":"itsleeqian"},"content":"list","lastModifiedDate":"2021-11-04"},{"lineNumber":448,"author":{"gitId":"itsleeqian"},"content":"````","lastModifiedDate":"2021-11-04"},{"lineNumber":449,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":450,"author":{"gitId":"joshualeeky"},"content":"For example,","lastModifiedDate":"2021-10-28"},{"lineNumber":451,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":452,"author":{"gitId":"joshualeeky"},"content":"Input:","lastModifiedDate":"2021-10-28"},{"lineNumber":453,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":454,"author":{"gitId":"itsleeqian"},"content":"list","lastModifiedDate":"2021-11-04"},{"lineNumber":455,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":456,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":457,"author":{"gitId":"itsleeqian"},"content":"If successful, the output will be as follows:","lastModifiedDate":"2021-11-04"},{"lineNumber":458,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":459,"author":{"gitId":"joshualeeky"},"content":"List of Expenses: ","lastModifiedDate":"2021-10-28"},{"lineNumber":460,"author":{"gitId":"joshualeeky"},"content":"\t1. In-and-Out Burgers | 03 Feb 2021","lastModifiedDate":"2021-10-28"},{"lineNumber":461,"author":{"gitId":"joshualeeky"},"content":"\t2. Gift shopping at mall | 03 Feb 2021","lastModifiedDate":"2021-10-28"},{"lineNumber":462,"author":{"gitId":"joshualeeky"},"content":"\t3. Dinner at Taco Bell | 03 Feb 2021","lastModifiedDate":"2021-10-28"},{"lineNumber":463,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":464,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":465,"author":{"gitId":"joshualeeky"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":466,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":467,"author":{"gitId":"itsleeqian"},"content":"#### - View an Expense","lastModifiedDate":"2021-11-04"},{"lineNumber":468,"author":{"gitId":"joshualeeky"},"content":"Shows the details of a particular expense of a trip.","lastModifiedDate":"2021-10-28"},{"lineNumber":469,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":470,"author":{"gitId":"itsleeqian"},"content":"This command can only be used if a trip is open, and there is at least 1 expense.","lastModifiedDate":"2021-11-04"},{"lineNumber":471,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":472,"author":{"gitId":"itsleeqian"},"content":"Input syntax:","lastModifiedDate":"2021-11-04"},{"lineNumber":473,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":474,"author":{"gitId":"itsleeqian"},"content":"view [expense-number]","lastModifiedDate":"2021-11-04"},{"lineNumber":475,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":476,"author":{"gitId":"itsleeqian"},"content":"- Note that entering `view` without an index will print all expenses in the currently opened trip.","lastModifiedDate":"2021-11-04"},{"lineNumber":477,"author":{"gitId":"joshualeeky"},"content":"- Enter `view last` to view the last added expense.","lastModifiedDate":"2021-11-08"},{"lineNumber":478,"author":{"gitId":"joshualeeky"},"content":"  - Note: If the last added expense is deleted, you will not be able to use this command.","lastModifiedDate":"2021-11-08"},{"lineNumber":479,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":480,"author":{"gitId":"yeezao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":481,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":482,"author":{"gitId":"joshualeeky"},"content":"For example,","lastModifiedDate":"2021-10-28"},{"lineNumber":483,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":484,"author":{"gitId":"joshualeeky"},"content":"Input:","lastModifiedDate":"2021-10-28"},{"lineNumber":485,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":486,"author":{"gitId":"itsleeqian"},"content":"view 1","lastModifiedDate":"2021-11-04"},{"lineNumber":487,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":488,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":489,"author":{"gitId":"itsleeqian"},"content":"If successful, the output will be as follows:","lastModifiedDate":"2021-11-04"},{"lineNumber":490,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":491,"author":{"gitId":"joshualeeky"},"content":"\tIn-and-Out Burgers","lastModifiedDate":"2021-10-28"},{"lineNumber":492,"author":{"gitId":"joshualeeky"},"content":"\tDate: 03 Feb 2021","lastModifiedDate":"2021-10-28"},{"lineNumber":493,"author":{"gitId":"joshualeeky"},"content":"\tAmount Spent: USD $30.00","lastModifiedDate":"2021-10-28"},{"lineNumber":494,"author":{"gitId":"joshualeeky"},"content":"\tPeople involved: ","lastModifiedDate":"2021-10-28"},{"lineNumber":495,"author":{"gitId":"joshualeeky"},"content":"\t\t1) Ben, USD $20.00","lastModifiedDate":"2021-10-28"},{"lineNumber":496,"author":{"gitId":"joshualeeky"},"content":"\t\t2) Jerry, USD $10.00","lastModifiedDate":"2021-10-28"},{"lineNumber":497,"author":{"gitId":"joshualeeky"},"content":"\tPayer: Ben","lastModifiedDate":"2021-10-28"},{"lineNumber":498,"author":{"gitId":"joshualeeky"},"content":"\tCategory: food","lastModifiedDate":"2021-10-28"},{"lineNumber":499,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":500,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":501,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":502,"author":{"gitId":"joshualeeky"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":503,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":504,"author":{"gitId":"itsleeqian"},"content":"#### - Filter Expenses By Attribute","lastModifiedDate":"2021-11-04"},{"lineNumber":505,"author":{"gitId":"joshualeeky"},"content":"Allows the user to view specific expenses and index numbers based on an attribute of their choice.","lastModifiedDate":"2021-11-07"},{"lineNumber":506,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":507,"author":{"gitId":"itsleeqian"},"content":"This command can only be used if a trip is open, and there is at least 1 expense.","lastModifiedDate":"2021-11-04"},{"lineNumber":508,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":509,"author":{"gitId":"itsleeqian"},"content":"Input syntax:","lastModifiedDate":"2021-11-04"},{"lineNumber":510,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":511,"author":{"gitId":"joshualeeky"},"content":"view filter [expense-attribute] [search-keyword]","lastModifiedDate":"2021-10-28"},{"lineNumber":512,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":513,"author":{"gitId":"lixiyuan416"},"content":"- `[expense-attribute]` can be either `[category]`, `[description]`, `[payer]`, `[person]` or `[date]`.","lastModifiedDate":"2021-11-06"},{"lineNumber":514,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":515,"author":{"gitId":"joshualeeky"},"content":"For example, if the user would like to search for all expenses in the category \"food\",","lastModifiedDate":"2021-10-28"},{"lineNumber":516,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":517,"author":{"gitId":"joshualeeky"},"content":"Input:","lastModifiedDate":"2021-10-28"},{"lineNumber":518,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":519,"author":{"gitId":"joshualeeky"},"content":"Enter your command: view filter category food","lastModifiedDate":"2021-10-28"},{"lineNumber":520,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":521,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":522,"author":{"gitId":"yeezao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":523,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":524,"author":{"gitId":"itsleeqian"},"content":"If successful, the output will be as follows:","lastModifiedDate":"2021-11-04"},{"lineNumber":525,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":526,"author":{"gitId":"joshualeeky"},"content":"1.  In-and-Out Burgers","lastModifiedDate":"2021-10-28"},{"lineNumber":527,"author":{"gitId":"joshualeeky"},"content":"    Date: 03 Feb 2021","lastModifiedDate":"2021-10-28"},{"lineNumber":528,"author":{"gitId":"joshualeeky"},"content":"    Amount Spent: USD $30.00","lastModifiedDate":"2021-10-28"},{"lineNumber":529,"author":{"gitId":"joshualeeky"},"content":"    People involved: ","lastModifiedDate":"2021-10-28"},{"lineNumber":530,"author":{"gitId":"joshualeeky"},"content":"        1) Ben, USD $20.00","lastModifiedDate":"2021-10-28"},{"lineNumber":531,"author":{"gitId":"joshualeeky"},"content":"        2) Jerry, USD $10.00","lastModifiedDate":"2021-10-28"},{"lineNumber":532,"author":{"gitId":"joshualeeky"},"content":"    Payer: Ben","lastModifiedDate":"2021-10-28"},{"lineNumber":533,"author":{"gitId":"joshualeeky"},"content":"    Category: food","lastModifiedDate":"2021-10-28"},{"lineNumber":534,"author":{"gitId":"joshualeeky"},"content":"\t","lastModifiedDate":"2021-10-28"},{"lineNumber":535,"author":{"gitId":"joshualeeky"},"content":"3.  Dinner at Taco Bell","lastModifiedDate":"2021-10-28"},{"lineNumber":536,"author":{"gitId":"joshualeeky"},"content":"    Date: 03 Feb 2021","lastModifiedDate":"2021-10-28"},{"lineNumber":537,"author":{"gitId":"joshualeeky"},"content":"    Amount Spent: USD $20.00","lastModifiedDate":"2021-10-28"},{"lineNumber":538,"author":{"gitId":"joshualeeky"},"content":"    People involved:","lastModifiedDate":"2021-10-28"},{"lineNumber":539,"author":{"gitId":"joshualeeky"},"content":"        1) Ben, USD $8.00 ","lastModifiedDate":"2021-10-28"},{"lineNumber":540,"author":{"gitId":"joshualeeky"},"content":"        2) Jerry, USD $6.00","lastModifiedDate":"2021-10-28"},{"lineNumber":541,"author":{"gitId":"joshualeeky"},"content":"        3) Tom, USD $6.00","lastModifiedDate":"2021-10-28"},{"lineNumber":542,"author":{"gitId":"joshualeeky"},"content":"    Payer: Tom","lastModifiedDate":"2021-10-28"},{"lineNumber":543,"author":{"gitId":"joshualeeky"},"content":"    Category: food","lastModifiedDate":"2021-10-28"},{"lineNumber":544,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":545,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":546,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":547,"author":{"gitId":"joshualeeky"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":548,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":549,"author":{"gitId":"itsleeqian"},"content":"#### - Delete Expense","lastModifiedDate":"2021-11-04"},{"lineNumber":550,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":551,"author":{"gitId":"itsleeqian"},"content":"Deletes an expense from a trip.","lastModifiedDate":"2021-11-04"},{"lineNumber":552,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":553,"author":{"gitId":"yeezao"},"content":"This command can only be used if a trip is open, and there is at least 1 expense. If no trip is open, this command will delete trips instead. See [Delete Trip](#--delete-trip)","lastModifiedDate":"2021-11-08"},{"lineNumber":554,"author":{"gitId":"yeezao"},"content":"for more information on deleting trips.","lastModifiedDate":"2021-11-08"},{"lineNumber":555,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":556,"author":{"gitId":"itsleeqian"},"content":"Input syntax:","lastModifiedDate":"2021-11-04"},{"lineNumber":557,"author":{"gitId":"itsleeqian"},"content":"```","lastModifiedDate":"2021-11-04"},{"lineNumber":558,"author":{"gitId":"itsleeqian"},"content":"delete [expense-number]","lastModifiedDate":"2021-11-04"},{"lineNumber":559,"author":{"gitId":"itsleeqian"},"content":"```","lastModifiedDate":"2021-11-04"},{"lineNumber":560,"author":{"gitId":"itsleeqian"},"content":"- `[expense-number]` is the index of the expense you wish to delete, ","lastModifiedDate":"2021-11-04"},{"lineNumber":561,"author":{"gitId":"yeezao"},"content":"and can be found by using `list` while a trip is open.","lastModifiedDate":"2021-11-12"},{"lineNumber":562,"author":{"gitId":"joshualeeky"},"content":"- `delete last` to delete the last added expense.","lastModifiedDate":"2021-11-08"},{"lineNumber":563,"author":{"gitId":"joshualeeky"},"content":"  - Note: After deletion, you will not be able to use this command again until you add another expense.","lastModifiedDate":"2021-11-08"},{"lineNumber":564,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":565,"author":{"gitId":"yeezao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":566,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":567,"author":{"gitId":"itsleeqian"},"content":"For example,","lastModifiedDate":"2021-11-04"},{"lineNumber":568,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":569,"author":{"gitId":"itsleeqian"},"content":"Input:","lastModifiedDate":"2021-11-04"},{"lineNumber":570,"author":{"gitId":"itsleeqian"},"content":"````","lastModifiedDate":"2021-11-04"},{"lineNumber":571,"author":{"gitId":"itsleeqian"},"content":"delete 1","lastModifiedDate":"2021-11-04"},{"lineNumber":572,"author":{"gitId":"itsleeqian"},"content":"````","lastModifiedDate":"2021-11-04"},{"lineNumber":573,"author":{"gitId":"itsleeqian"},"content":"If successful, the output will be as follows:","lastModifiedDate":"2021-11-04"},{"lineNumber":574,"author":{"gitId":"itsleeqian"},"content":"```","lastModifiedDate":"2021-11-04"},{"lineNumber":575,"author":{"gitId":"joshualeeky"},"content":"Your expense of SGD $50.00 has been successfully removed.","lastModifiedDate":"2021-11-07"},{"lineNumber":576,"author":{"gitId":"itsleeqian"},"content":"```","lastModifiedDate":"2021-11-04"},{"lineNumber":577,"author":{"gitId":"itsleeqian"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":578,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":579,"author":{"gitId":"lixiyuan416"},"content":"### Settling Expenses","lastModifiedDate":"2021-11-06"},{"lineNumber":580,"author":{"gitId":"lixiyuan416"},"content":"There are 2 commands that you can run to get a list of who pays who (WPW) to ","lastModifiedDate":"2021-11-06"},{"lineNumber":581,"author":{"gitId":"lixiyuan416"},"content":"settle expenses. `amount` displays the WPW for 1 person, while `optimize` displays the WPW for everyone in ","lastModifiedDate":"2021-11-06"},{"lineNumber":582,"author":{"gitId":"joshualeeky"},"content":"the trip.","lastModifiedDate":"2021-11-07"},{"lineNumber":583,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":584,"author":{"gitId":"lixiyuan416"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":585,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":586,"author":{"gitId":"lixiyuan416"},"content":"#### Amount","lastModifiedDate":"2021-11-06"},{"lineNumber":587,"author":{"gitId":"joshualeeky"},"content":"Shows the transactions that a person will have to engage in so that the person will not owe or be owed any money.","lastModifiedDate":"2021-11-07"},{"lineNumber":588,"author":{"gitId":"joshualeeky"},"content":"User needs to have a trip opened and have expenses added to use this command. Note that this list is not optimized, ","lastModifiedDate":"2021-11-07"},{"lineNumber":589,"author":{"gitId":"joshualeeky"},"content":"if you would like to settle all payments, please use `optimize` instead.","lastModifiedDate":"2021-11-07"},{"lineNumber":590,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":591,"author":{"gitId":"lixiyuan416"},"content":"Input syntax:","lastModifiedDate":"2021-11-06"},{"lineNumber":592,"author":{"gitId":"lixiyuan416"},"content":"```","lastModifiedDate":"2021-11-06"},{"lineNumber":593,"author":{"gitId":"lixiyuan416"},"content":"amount [person-in-trip]","lastModifiedDate":"2021-11-06"},{"lineNumber":594,"author":{"gitId":"lixiyuan416"},"content":"```","lastModifiedDate":"2021-11-06"},{"lineNumber":595,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":596,"author":{"gitId":"lixiyuan416"},"content":"For example,","lastModifiedDate":"2021-11-06"},{"lineNumber":597,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":598,"author":{"gitId":"lixiyuan416"},"content":"Input:","lastModifiedDate":"2021-11-06"},{"lineNumber":599,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":600,"author":{"gitId":"lixiyuan416"},"content":"```","lastModifiedDate":"2021-11-06"},{"lineNumber":601,"author":{"gitId":"lixiyuan416"},"content":"amount Ben","lastModifiedDate":"2021-11-06"},{"lineNumber":602,"author":{"gitId":"lixiyuan416"},"content":"```","lastModifiedDate":"2021-11-06"},{"lineNumber":603,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":604,"author":{"gitId":"lixiyuan416"},"content":"If successful, the output will be as follows:","lastModifiedDate":"2021-11-06"},{"lineNumber":605,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":606,"author":{"gitId":"lixiyuan416"},"content":"```","lastModifiedDate":"2021-11-06"},{"lineNumber":607,"author":{"gitId":"joshualeeky"},"content":"Ben spent USD $350.50 (SGD $473.65) on the trip so far","lastModifiedDate":"2021-11-07"},{"lineNumber":608,"author":{"gitId":"joshualeeky"},"content":"Ben owes USD $30.00 (SGD $40.54) to Jerry","lastModifiedDate":"2021-11-07"},{"lineNumber":609,"author":{"gitId":"lixiyuan416"},"content":"Ben does not owe anything to Dick","lastModifiedDate":"2021-11-06"},{"lineNumber":610,"author":{"gitId":"joshualeeky"},"content":"Ben owes USD $7.00 (SGD $9.46) to Eve","lastModifiedDate":"2021-11-07"},{"lineNumber":611,"author":{"gitId":"lixiyuan416"},"content":"```","lastModifiedDate":"2021-11-06"},{"lineNumber":612,"author":{"gitId":"yeezao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":613,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":614,"author":{"gitId":"lixiyuan416"},"content":"#### Optimize Transactions","lastModifiedDate":"2021-11-06"},{"lineNumber":615,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":616,"author":{"gitId":"lixiyuan416"},"content":"Shows the most optimized number of transactions to ensure that everyone is being paid back. User needs to have opened a trip and have expenses to use the command. ","lastModifiedDate":"2021-11-06"},{"lineNumber":617,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":618,"author":{"gitId":"itsleeqian"},"content":"Input syntax:","lastModifiedDate":"2021-11-04"},{"lineNumber":619,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":620,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":621,"author":{"gitId":"leeyikai"},"content":"optimize","lastModifiedDate":"2021-11-03"},{"lineNumber":622,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":623,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":624,"author":{"gitId":"leeyikai"},"content":"For example,","lastModifiedDate":"2021-11-03"},{"lineNumber":625,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":626,"author":{"gitId":"leeyikai"},"content":"Input:","lastModifiedDate":"2021-11-03"},{"lineNumber":627,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":628,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":629,"author":{"gitId":"leeyikai"},"content":"optimize","lastModifiedDate":"2021-11-03"},{"lineNumber":630,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":631,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":632,"author":{"gitId":"itsleeqian"},"content":"If successful, the output will be as follows:","lastModifiedDate":"2021-11-04"},{"lineNumber":633,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":634,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":635,"author":{"gitId":"leeyikai"},"content":"Here is the optimized payment transactions:","lastModifiedDate":"2021-11-03"},{"lineNumber":636,"author":{"gitId":"joshualeeky"},"content":"yuzhao needs to pay USD $8.00 (SGD $8.00) to yikai","lastModifiedDate":"2021-11-07"},{"lineNumber":637,"author":{"gitId":"joshualeeky"},"content":"yuzhao needs to pay USD $13.00 (SGD $13.00) to qian","lastModifiedDate":"2021-11-07"},{"lineNumber":638,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":639,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":640,"author":{"gitId":"itsleeqian"},"content":"If no transactions are required, the user will see this message:","lastModifiedDate":"2021-11-04"},{"lineNumber":641,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":642,"author":{"gitId":"leeyikai"},"content":"Output:","lastModifiedDate":"2021-11-03"},{"lineNumber":643,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":644,"author":{"gitId":"leeyikai"},"content":"All are paid! :)","lastModifiedDate":"2021-11-03"},{"lineNumber":645,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-11-03"},{"lineNumber":646,"author":{"gitId":"itsleeqian"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":647,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":648,"author":{"gitId":"itsleeqian"},"content":"### Summary of Expenses","lastModifiedDate":"2021-11-04"},{"lineNumber":649,"author":{"gitId":"itsleeqian"},"content":"Shows an overall summary of individual expenses in a trip.","lastModifiedDate":"2021-11-04"},{"lineNumber":650,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":651,"author":{"gitId":"itsleeqian"},"content":"This command can only be used if you have opened a trip.","lastModifiedDate":"2021-11-04"},{"lineNumber":652,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":653,"author":{"gitId":"joshualeeky"},"content":"The input syntax is as follows:","lastModifiedDate":"2021-10-28"},{"lineNumber":654,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":655,"author":{"gitId":"joshualeeky"},"content":"summary [name]","lastModifiedDate":"2021-10-28"},{"lineNumber":656,"author":{"gitId":"joshualeeky"},"content":"````","lastModifiedDate":"2021-10-28"},{"lineNumber":657,"author":{"gitId":"yeezao"},"content":"- `[name]` is an optional argument.","lastModifiedDate":"2021-11-06"},{"lineNumber":658,"author":{"gitId":"itsleeqian"},"content":"- Note that entering `summary` without a name will print the summary of everybody in the opened trip.","lastModifiedDate":"2021-11-04"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":660,"author":{"gitId":"yeezao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":661,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":662,"author":{"gitId":"joshualeeky"},"content":"For example,","lastModifiedDate":"2021-10-28"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":664,"author":{"gitId":"leeyikai"},"content":"Input:","lastModifiedDate":"2021-10-20"},{"lineNumber":665,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":666,"author":{"gitId":"joshualeeky"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":667,"author":{"gitId":"itsleeqian"},"content":"summary","lastModifiedDate":"2021-11-04"},{"lineNumber":668,"author":{"gitId":"joshualeeky"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":670,"author":{"gitId":"itsleeqian"},"content":"If successful, the output will be as follows:","lastModifiedDate":"2021-11-04"},{"lineNumber":671,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":672,"author":{"gitId":"joshualeeky"},"content":"Ben has spent USD $50.00 (SGD $67.57) on 3 expenses on the following categories:","lastModifiedDate":"2021-10-28"},{"lineNumber":673,"author":{"gitId":"joshualeeky"},"content":"food: USD $30.00 (SGD $40.54)","lastModifiedDate":"2021-10-28"},{"lineNumber":674,"author":{"gitId":"joshualeeky"},"content":"travel: USD $20.00 (SGD $27.03)","lastModifiedDate":"2021-10-28"},{"lineNumber":675,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":676,"author":{"gitId":"joshualeeky"},"content":"Jerry has spent USD $150.00 (SGD $202.71) on 6 expenses on the following categories:","lastModifiedDate":"2021-10-28"},{"lineNumber":677,"author":{"gitId":"joshualeeky"},"content":"food: USD $30.00 (SGD $40.54)","lastModifiedDate":"2021-10-28"},{"lineNumber":678,"author":{"gitId":"joshualeeky"},"content":"travel: USD $20.00 (SGD $27.03)","lastModifiedDate":"2021-10-28"},{"lineNumber":679,"author":{"gitId":"joshualeeky"},"content":"leisure: USD $100.00 (SGD $135.14)","lastModifiedDate":"2021-10-28"},{"lineNumber":680,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":681,"author":{"gitId":"joshualeeky"},"content":"Tom has spent USD $75.00 (SGD $101.35) on 3 expenses on the following categories:","lastModifiedDate":"2021-10-28"},{"lineNumber":682,"author":{"gitId":"joshualeeky"},"content":"food: USD $25.00 (SGD $33.78)","lastModifiedDate":"2021-10-28"},{"lineNumber":683,"author":{"gitId":"joshualeeky"},"content":"travel: USD $20.00 (SGD $27.03)","lastModifiedDate":"2021-10-28"},{"lineNumber":684,"author":{"gitId":"joshualeeky"},"content":"shopping: USD $30.00 (SGD $40.54)","lastModifiedDate":"2021-10-28"},{"lineNumber":685,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":686,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":687,"author":{"gitId":"itsleeqian"},"content":"### Help","lastModifiedDate":"2021-11-04"},{"lineNumber":688,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":689,"author":{"gitId":"itsleeqian"},"content":"Shows a quick help message, depending on which stage the user is at.","lastModifiedDate":"2021-11-04"},{"lineNumber":690,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":691,"author":{"gitId":"itsleeqian"},"content":"Input syntax:","lastModifiedDate":"2021-11-04"},{"lineNumber":692,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":693,"author":{"gitId":"yeezao"},"content":"```","lastModifiedDate":"2021-11-12"},{"lineNumber":694,"author":{"gitId":"itsleeqian"},"content":"help","lastModifiedDate":"2021-11-04"},{"lineNumber":695,"author":{"gitId":"yeezao"},"content":"```","lastModifiedDate":"2021-11-12"},{"lineNumber":696,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":697,"author":{"gitId":"itsleeqian"},"content":"For example,","lastModifiedDate":"2021-11-04"},{"lineNumber":698,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":699,"author":{"gitId":"itsleeqian"},"content":"Input:","lastModifiedDate":"2021-11-04"},{"lineNumber":700,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":701,"author":{"gitId":"itsleeqian"},"content":"```","lastModifiedDate":"2021-11-04"},{"lineNumber":702,"author":{"gitId":"itsleeqian"},"content":"help","lastModifiedDate":"2021-11-04"},{"lineNumber":703,"author":{"gitId":"itsleeqian"},"content":"```","lastModifiedDate":"2021-11-04"},{"lineNumber":704,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":705,"author":{"gitId":"itsleeqian"},"content":"Output for if no trip is open:","lastModifiedDate":"2021-11-04"},{"lineNumber":706,"author":{"gitId":"itsleeqian"},"content":"````","lastModifiedDate":"2021-11-04"},{"lineNumber":707,"author":{"gitId":"itsleeqian"},"content":"Type \"open [trip number]\" to open your trip","lastModifiedDate":"2021-11-04"},{"lineNumber":708,"author":{"gitId":"itsleeqian"},"content":"While a trip is open, type \"expense\" to create an expense for that trip","lastModifiedDate":"2021-11-04"},{"lineNumber":709,"author":{"gitId":"itsleeqian"},"content":"Type \"quit\" to exit","lastModifiedDate":"2021-11-04"},{"lineNumber":710,"author":{"gitId":"itsleeqian"},"content":"````","lastModifiedDate":"2021-11-04"},{"lineNumber":711,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":712,"author":{"gitId":"yeezao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":713,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":714,"author":{"gitId":"itsleeqian"},"content":"Output for if trip is open:","lastModifiedDate":"2021-11-04"},{"lineNumber":715,"author":{"gitId":"itsleeqian"},"content":"````","lastModifiedDate":"2021-11-04"},{"lineNumber":716,"author":{"gitId":"itsleeqian"},"content":"You are inside a trip. Trip specific commands:","lastModifiedDate":"2021-11-04"},{"lineNumber":717,"author":{"gitId":"yeezao"},"content":"\t\u003cmore help information will be displayed here\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":718,"author":{"gitId":"itsleeqian"},"content":"````","lastModifiedDate":"2021-11-04"},{"lineNumber":719,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":720,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2021-11-06"},{"lineNumber":721,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":722,"author":{"gitId":"lixiyuan416"},"content":"**Q**: How do I transfer my data to another computer?","lastModifiedDate":"2021-11-06"},{"lineNumber":723,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":724,"author":{"gitId":"yeezao"},"content":"**A**: To transfer your data to another device, simply copy over the \"trips.json\" file in the same directory as this","lastModifiedDate":"2021-11-06"},{"lineNumber":725,"author":{"gitId":"yeezao"},"content":"app to the device you wish to use. Ensure that the save file is stored in the same directory as the PayMeBack","lastModifiedDate":"2021-11-06"},{"lineNumber":726,"author":{"gitId":"yeezao"},"content":"app on your destination device before starting the program.","lastModifiedDate":"2021-11-06"},{"lineNumber":727,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":728,"author":{"gitId":"yeezao"},"content":"**IMPORTANT!** Before transferring data to the destination device, please ensure that the app is not running on the destination device.","lastModifiedDate":"2021-11-08"},{"lineNumber":729,"author":{"gitId":"yeezao"},"content":"If the app is running when the save file is pasted, you may accidentally overwrite the data in the save file when you run a command.","lastModifiedDate":"2021-11-08"},{"lineNumber":730,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":731,"author":{"gitId":"yeezao"},"content":"**Q**: There was an error loading my save file. What should I do?","lastModifiedDate":"2021-11-06"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":733,"author":{"gitId":"yeezao"},"content":"**A**: If you see an error message when starting up the app, it is likely that your save file is corrupted. If you have modified the save file directly using another","lastModifiedDate":"2021-11-08"},{"lineNumber":734,"author":{"gitId":"yeezao"},"content":"application, you should try to undo those changes. Also ensure that your save file is in the same directory as ","lastModifiedDate":"2021-11-06"},{"lineNumber":735,"author":{"gitId":"yeezao"},"content":"the jar file.","lastModifiedDate":"2021-11-06"},{"lineNumber":736,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":737,"author":{"gitId":"yeezao"},"content":"If the file cannot be recovered, we recommend that you run the app again. When prompted to overwrite the","lastModifiedDate":"2021-11-06"},{"lineNumber":738,"author":{"gitId":"yeezao"},"content":"corrupted save file, enter `y`. You may then proceed to re-enter your data.","lastModifiedDate":"2021-11-06"},{"lineNumber":739,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":740,"author":{"gitId":"yeezao"},"content":"**Q**: I made a mistake while entering a command. How can I exit the process and start again?","lastModifiedDate":"2021-11-06"},{"lineNumber":741,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":742,"author":{"gitId":"yeezao"},"content":"**A**: If the app is asking you to correct an erroneous input, but you wish to cancel the process, ","lastModifiedDate":"2021-11-06"},{"lineNumber":743,"author":{"gitId":"yeezao"},"content":"type `-cancel`. This will return you to the preceding state of the program, allowing you to enter ","lastModifiedDate":"2021-11-06"},{"lineNumber":744,"author":{"gitId":"yeezao"},"content":"any command.","lastModifiedDate":"2021-11-06"},{"lineNumber":745,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":746,"author":{"gitId":"yeezao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":748,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2021-11-06"},{"lineNumber":749,"author":{"gitId":"lixiyuan416"},"content":"Hyphen before square brackets (eg `summary -[name]`) denotes optional arguments","lastModifiedDate":"2021-11-06"},{"lineNumber":750,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":751,"author":{"gitId":"lixiyuan416"},"content":"### General commands","lastModifiedDate":"2021-11-06"},{"lineNumber":752,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":753,"author":{"gitId":"lixiyuan416"},"content":"Action | Command syntax","lastModifiedDate":"2021-11-06"},{"lineNumber":754,"author":{"gitId":"lixiyuan416"},"content":"---|---","lastModifiedDate":"2021-11-06"},{"lineNumber":755,"author":{"gitId":"lixiyuan416"},"content":"Display help|`help`","lastModifiedDate":"2021-11-06"},{"lineNumber":756,"author":{"gitId":"lixiyuan416"},"content":"Quit|`quit`","lastModifiedDate":"2021-11-06"},{"lineNumber":757,"author":{"gitId":"yeezao"},"content":"Cancel operation ([see FAQ](#faq)) | `-cancel`","lastModifiedDate":"2021-11-12"},{"lineNumber":758,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":759,"author":{"gitId":"lixiyuan416"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":760,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":761,"author":{"gitId":"lixiyuan416"},"content":"### Trip commands","lastModifiedDate":"2021-11-06"},{"lineNumber":762,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":763,"author":{"gitId":"lixiyuan416"},"content":"Action | Command syntax | Example","lastModifiedDate":"2021-11-06"},{"lineNumber":764,"author":{"gitId":"lixiyuan416"},"content":"---|---|---","lastModifiedDate":"2021-11-06"},{"lineNumber":765,"author":{"gitId":"lixiyuan416"},"content":"Create trip | `create /[location] /[date] /[foreign-currency-ISO-code] /[exchange-rate] /[persons-in-trip]`|`create /America /02-02-2021 /USD /0.74 /Ben, Jerry, Tom`","lastModifiedDate":"2021-11-06"},{"lineNumber":766,"author":{"gitId":"lixiyuan416"},"content":"Open trip | `open [trip-number]` | `open 1`","lastModifiedDate":"2021-11-06"},{"lineNumber":767,"author":{"gitId":"lixiyuan416"},"content":"Close trip | `close` | `close`","lastModifiedDate":"2021-11-06"},{"lineNumber":768,"author":{"gitId":"lixiyuan416"},"content":"List trips | `list` when no trip is opened| `list`","lastModifiedDate":"2021-11-06"},{"lineNumber":769,"author":{"gitId":"lixiyuan416"},"content":"List persons involved in a trip | `people` | `people`","lastModifiedDate":"2021-11-06"},{"lineNumber":770,"author":{"gitId":"lixiyuan416"},"content":"Delete trip | `delete [trip-number]`|`delete 1`","lastModifiedDate":"2021-11-06"},{"lineNumber":771,"author":{"gitId":"itsleeqian"},"content":"Edit trip | `edit [trip num] [attribute] [new value]` \u003cbr /\u003e\u003cbr /\u003e attributes: -location, -date, -exchangerate, -forcur, -homecur  | `edit 1 -location Afghanistan`","lastModifiedDate":"2021-11-06"},{"lineNumber":772,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":773,"author":{"gitId":"lixiyuan416"},"content":"\u003cbr /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":774,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":775,"author":{"gitId":"yeezao"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-12"},{"lineNumber":776,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-12"},{"lineNumber":777,"author":{"gitId":"lixiyuan416"},"content":"### Expense commands","lastModifiedDate":"2021-11-06"},{"lineNumber":778,"author":{"gitId":"lixiyuan416"},"content":"Open a trip to use","lastModifiedDate":"2021-11-06"},{"lineNumber":779,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":780,"author":{"gitId":"lixiyuan416"},"content":"Action | Command syntax | Example","lastModifiedDate":"2021-11-06"},{"lineNumber":781,"author":{"gitId":"lixiyuan416"},"content":"---|---|---","lastModifiedDate":"2021-11-06"},{"lineNumber":782,"author":{"gitId":"lixiyuan416"},"content":"Create expense|`expense [amount] [category] [people] /[description]`|`expense 30 food Ben, Jerry /In-and-Out Burgers`","lastModifiedDate":"2021-11-06"},{"lineNumber":783,"author":{"gitId":"lixiyuan416"},"content":"List expenses |`list` when inside a trip| `list`","lastModifiedDate":"2021-11-06"},{"lineNumber":784,"author":{"gitId":"lixiyuan416"},"content":"View an expense in detail |`view [expense-number]`| `view 1`","lastModifiedDate":"2021-11-06"},{"lineNumber":785,"author":{"gitId":"lixiyuan416"},"content":"View filtered expenses in detail | `view filter [expense-attribute] [search-keyword]` \u003cbr /\u003e\u003cbr /\u003e `expense-attribute: category, payer, person, description`|`view filter category food`","lastModifiedDate":"2021-11-06"},{"lineNumber":786,"author":{"gitId":"lixiyuan416"},"content":"Delete expense|`delete [expense-number]`|`delete 1`","lastModifiedDate":"2021-11-06"},{"lineNumber":787,"author":{"gitId":"lixiyuan416"},"content":"View list of expense| `summary -[name]` \u003cbr /\u003e If name is not provided, displays all expenses like `list`| `summary` or `summary Ben`","lastModifiedDate":"2021-11-06"},{"lineNumber":788,"author":{"gitId":"lixiyuan416"},"content":"View expense settlement actions of a person| `amount [person-in-trip]` | `amount Ben`","lastModifiedDate":"2021-11-06"},{"lineNumber":789,"author":{"gitId":"lixiyuan416"},"content":"View optimized settlement actions for everyone in the trip|`optimize`|`optimize`","lastModifiedDate":"2021-11-06"},{"lineNumber":790,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":791,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":792,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":794,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"yeezao":151,"joshualeeky":279,"-":41,"lixiyuan416":94,"itsleeqian":183,"leeyikai":47}},{"path":"docs/diagrams/ArchitecturalDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"itsleeqian"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"itsleeqian"},"content":"!include style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"itsleeqian"},"content":"!include \u003coffice/Concepts/globe_internet\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"itsleeqian"},"content":"!include \u003coffice/Concepts/documents\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"itsleeqian"},"content":"!include \u003coffice/Users/user\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"itsleeqian"},"content":"Package \" \"\u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"itsleeqian"},"content":"    Class Ui COLOR_DARK_GREEN","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"itsleeqian"},"content":"    Class Parser LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"itsleeqian"},"content":"    Class Storage STORAGE_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"itsleeqian"},"content":"    Class Main #grey","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"itsleeqian"},"content":"    Class Commons LOGIC_COLOR_T2","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"itsleeqian"},"content":"}","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"itsleeqian"},"content":"Class \"\u003c$user\u003e\" as User COLOR_BROWN","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"itsleeqian"},"content":"Class \"\u003c$documents\u003e\" as File UI_COLOR_T2","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"itsleeqian"},"content":"User ..\u003e Ui","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"itsleeqian"},"content":"Ui -[#green]\u003e Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"itsleeqian"},"content":"Parser -[#blue]-\u003e Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"itsleeqian"},"content":"Main -[#grey]-\u003e Ui","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"itsleeqian"},"content":"Main -[#grey]-\u003e Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"itsleeqian"},"content":"Main -[#grey]-\u003e Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"itsleeqian"},"content":"Main -down[hidden]-\u003e Commons","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"itsleeqian"},"content":"Storage .right[STORAGE_COLOR].\u003eFile","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"itsleeqian"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"itsleeqian":31}},{"path":"docs/diagrams/ArchitecturalSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"itsleeqian"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"itsleeqian"},"content":"!include style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"itsleeqian"},"content":"!include \u003coffice/Users/user\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"itsleeqian"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"itsleeqian"},"content":"autonumber","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"itsleeqian"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"itsleeqian"},"content":"Participant \"Ui\" as ui UI_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"itsleeqian"},"content":"Participant \"Parser\" as parser LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"itsleeqian"},"content":"Participant \"Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"itsleeqian"},"content":"user -[USER_COLOR]\u003e ui : readUserInput(\"create ...\")","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"itsleeqian"},"content":"activate ui UI_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"itsleeqian"},"content":"ui -[UI_COLOR]\u003e parser : parseUserInput(\"create...\")","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"itsleeqian"},"content":"activate parser LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"itsleeqian"},"content":"parser -[LOGIC_COLOR_T2]\u003e parser : handleValidCommand()","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"itsleeqian"},"content":"activate parser LOGIC_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"itsleeqian"},"content":"parser -[LOGIC_COLOR]\u003e storage : addNewTrip()","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"itsleeqian"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"itsleeqian"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"itsleeqian"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"itsleeqian"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"itsleeqian"},"content":"deactivate storage","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"itsleeqian"},"content":"storage --[STORAGE_COLOR]\u003e parser","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"itsleeqian"},"content":"deactivate storage","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"itsleeqian"},"content":"parser --[LOGIC_COLOR_T2]\u003e parser","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"itsleeqian"},"content":"deactivate parser","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"itsleeqian"},"content":"parser --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"itsleeqian"},"content":"deactivate parser","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"itsleeqian"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"itsleeqian"},"content":"deactivate ui","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"itsleeqian"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"itsleeqian":40}},{"path":"docs/diagrams/ExpenseClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"leeyikai"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"leeyikai"},"content":"hide circle","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"leeyikai"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"leeyikai"},"content":"class \"Expense\"{","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"leeyikai"},"content":"    - amountSpent : double","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"leeyikai"},"content":"    - description : String","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"leeyikai"},"content":"    - personsList : ArrayList\u003cPerson\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"leeyikai"},"content":"    - category : String","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"leeyikai"},"content":"    - date : LocalDate","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"leeyikai"},"content":"    - payer : Person","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"leeyikai"},"content":"    - amountSplit : HashMap\u003cString, Double\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"leeyikai"},"content":"    - {static} inputPattern : DateTimeFormatter","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"leeyikai"},"content":"    - {static} outputPattern : DateTimeFormatter","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"leeyikai"},"content":"    + Expense(in : String)","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"leeyikai"},"content":"    + promptDate() : LocalDate","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"leeyikai"},"content":"    + toString() : String","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"leeyikai"},"content":"    + getPersonExpense() : String","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"leeyikai"},"content":"    + setAmountSpent(in : String)","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"leeyikai"},"content":"    - checkValidPersons(in : String) : ArrayList\u003cPerson\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"leeyikai"},"content":"    - isDateValid(in : String) : Boolean","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"leeyikai"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"leeyikai"},"content":"interface \"\u003c\u003cinterface\u003e\u003e \\n ExpenseSummarizer\" {","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"leeyikai"},"content":"    + {static} getIndividualExpenseSummary(in : Person)","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"leeyikai"},"content":"    - {static} roundToLocal(amount : double, currTrip : Trip, categories : HashMap\u003cString, Double\u003e)","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"leeyikai"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"leeyikai"},"content":"class \"Person\" {","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"leeyikai"},"content":"    - name : String","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"leeyikai"},"content":"    - moneyOwed :  HashMap\u003cString, Double\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"leeyikai"},"content":"    - optimizedMoneyOwed : HashMap\u003cString, Double\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"leeyikai"},"content":"    + setMoneyOwed(inPerson : Person, amount : double)","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"leeyikai"},"content":"    + getMoneyOwed() : HashMap\u003cString, Double\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"leeyikai"},"content":"    + setOptimizedMoneyOwed(inPerson : Person)","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"leeyikai"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"leeyikai"},"content":"\"Expense\" ..|\u003e \"\u003c\u003cinterface\u003e\u003e \\n ExpenseSummarizer\"","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"leeyikai"},"content":"\"Expense\" o-- \"Person\"","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"leeyikai"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"leeyikai":46}},{"path":"docs/diagrams/ExpenseSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"leeyikai"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"leeyikai"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"leeyikai"},"content":"participant \"{abstract}\\n:CommandExecutor\" as CommandExecutor","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"leeyikai"},"content":"participant \"\\n:Trip\" as Trip","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"leeyikai"},"content":"participant \"\\n:Storage\" as Storage","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"leeyikai"},"content":"participant \"\\n:Expense\" as Expense","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"leeyikai"},"content":"participant \"\\n:Ui\" as Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"leeyikai"},"content":"participant \"\\n:LocalDate\" as LocalDate","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"leeyikai"},"content":"participant \"{abstract}\\n:ExpenseSplitter\" as ExpenseSplitter","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"leeyikai"},"content":"activate Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"leeyikai"},"content":"activate Trip","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"leeyikai"},"content":"activate CommandExecutor","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"leeyikai"},"content":"activate Storage","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"leeyikai"},"content":"CommandExecutor -\u003e Trip : executeCreateExpense()","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"leeyikai"},"content":"Trip -\u003e Storage","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"leeyikai"},"content":"Storage -\u003e Storage : checkOpenTrip()","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"leeyikai"},"content":"Storage --\u003e Trip","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"leeyikai"},"content":"Trip --\u003e CommandExecutor","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"leeyikai"},"content":"CommandExecutor -\u003e Expense : Expense()","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"leeyikai"},"content":"Activate Expense","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"leeyikai"},"content":"Expense -\u003e Expense : setAmountSpent","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"leeyikai"},"content":"activate Expense","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"leeyikai"},"content":"Expense --\u003e Expense","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"leeyikai"},"content":"deactivate Expense","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"leeyikai"},"content":"Expense -\u003e Expense : setCategory","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"leeyikai"},"content":"activate Expense","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"leeyikai"},"content":"Expense --\u003e Expense","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"leeyikai"},"content":"deactivate Expense","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"leeyikai"},"content":"Expense -\u003e Expense : promptDate","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"leeyikai"},"content":"activate Expense","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"leeyikai"},"content":"loop Date not valid","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"leeyikai"},"content":"Expense -\u003e Ui : receiveUserInput()","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"leeyikai"},"content":"Ui --\u003e Expense","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"leeyikai"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"leeyikai"},"content":"alt input date is empty","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"leeyikai"},"content":"activate LocalDate","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"leeyikai"},"content":"Expense -\u003e LocalDate : now()","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"leeyikai"},"content":"LocalDate --\u003e Expense","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"leeyikai"},"content":"else input date not empty","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"leeyikai"},"content":"Expense -\u003e LocalDate : parse()","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"leeyikai"},"content":"LocalDate --\u003e Expense","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"leeyikai"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"leeyikai"},"content":"deactivate LocalDate","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"leeyikai"},"content":"activate ExpenseSplitter","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"leeyikai"},"content":"alt only 1 person involved","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"leeyikai"},"content":"Expense -\u003e ExpenseSplitter : updateOnePersonSpending()","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"leeyikai"},"content":"ExpenseSplitter --\u003e Expense","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"leeyikai"},"content":"else more than 1 person involved","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"leeyikai"},"content":"Expense -\u003e ExpenseSplitter : updateIndividualSpending()","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"leeyikai"},"content":"ExpenseSplitter --\u003e Expense","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"leeyikai"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"leeyikai"},"content":"deactivate ExpenseSplitter","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"leeyikai"},"content":"Expense --\u003e CommandExecutor","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"leeyikai"},"content":"CommandExecutor -\u003e Trip : addExpense()","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"leeyikai"},"content":"CommandExecutor -\u003e Trip : setLastExpense()","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"leeyikai"},"content":"CommandExecutor -\u003e Ui : printExpenseAddedSuccess()","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"leeyikai"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"leeyikai":66}},{"path":"docs/diagrams/ParserClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joshualeeky"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"joshualeeky"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"joshualeeky"},"content":"hide circle","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"joshualeeky"},"content":"class Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"joshualeeky"},"content":"class Expense","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"joshualeeky"},"content":"interface \"\u003c\u003cinterface\u003e\u003e \\n ExpenseSummary\" as ExpenseSummary","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"joshualeeky"},"content":"interface \"\u003c\u003cinterface\u003e\u003e \\n PaymentOptimizer\" as PaymentOptimizer","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"joshualeeky"},"content":"class Trip","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"joshualeeky"},"content":"interface \"\u003c\u003cinterface\u003e\u003e \\n FilterFinder\" as FilterFinder","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"joshualeeky"},"content":"abstract \"{abstract} \\n CommandHandler\" as CommandHandler {","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"joshualeeky"},"content":"handleCreateTrip(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"joshualeeky"},"content":"handleEditTrip(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"joshualeeky"},"content":"handleOpenTrip(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"joshualeeky"},"content":"handleTripSummary(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"joshualeeky"},"content":"handleViewTrip(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"joshualeeky"},"content":"handleDelete(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"joshualeeky"},"content":"handleList()","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"joshualeeky"},"content":"handleCreateExpense(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"joshualeeky"},"content":"handleAmount(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"joshualeeky"},"content":"handlePeople()","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"joshualeeky"},"content":"handleOptimize()","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"joshualeeky"},"content":"}","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"joshualeeky"},"content":"abstract \"{abstract} \\n CommandExecutor\" as CommandExecutor {","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"joshualeeky"},"content":"executeCreateTrip(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"joshualeeky"},"content":"executeEditTrip(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"joshualeeky"},"content":"executeOpen(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"joshualeeky"},"content":"executeSummary(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"joshualeeky"},"content":"executeView(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"joshualeeky"},"content":"executeDelete(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"joshualeeky"},"content":"executeList()","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"joshualeeky"},"content":"executeCreateExpense(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"joshualeeky"},"content":"executeAmount(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"joshualeeky"},"content":"executePeople()","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"joshualeeky"},"content":"executeOptimize()","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"joshualeeky"},"content":"}","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"joshualeeky"},"content":"CommandHandler \u003c|-up- Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"joshualeeky"},"content":"CommandExecutor \u003c|-up- CommandHandler","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"joshualeeky"},"content":"CommandExecutor -[dashed]-\u003e Expense","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"joshualeeky"},"content":"CommandExecutor -[dashed]-\u003e ExpenseSummary","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"joshualeeky"},"content":"CommandExecutor -[dashed]-\u003e PaymentOptimizer","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"joshualeeky"},"content":"CommandExecutor -[dashed]-\u003e Trip","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"joshualeeky"},"content":"CommandExecutor -[dashed]-\u003e FilterFinder","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"joshualeeky"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"joshualeeky":49}},{"path":"docs/diagrams/ParserSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joshualeeky"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"joshualeeky"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"joshualeeky"},"content":"actor User","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"joshualeeky"},"content":"participant \":Parser\" as Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"joshualeeky"},"content":"participant \"{abstract}\\n:CommandHandler\" as CommandHandler","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"joshualeeky"},"content":"participant \"{abstract}\\n:CommandExecutor\" as CommandExecutor","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"joshualeeky"},"content":"\u0027Parser check for valid input","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"joshualeeky"},"content":"loop userInput !\u003d Quit","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"joshualeeky"},"content":"User -\u003e Parser: userInput","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"joshualeeky"},"content":"activate Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"joshualeeky"},"content":"Parser -\u003e Parser: parseUserInput","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"joshualeeky"},"content":"activate Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"joshualeeky"},"content":"Parser -\u003e Parser: checkValidInput","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"joshualeeky"},"content":"alt ValidInput","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"joshualeeky"},"content":"activate Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"joshualeeky"},"content":"Parser -\u003e CommandHandler: handleCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"joshualeeky"},"content":"activate CommandHandler","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"joshualeeky"},"content":"else userInput \u003d\u003d Quit || Help || Close","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"joshualeeky"},"content":"User \u003c-- Parser: Show relevant output","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"joshualeeky"},"content":"else","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"joshualeeky"},"content":"User \u003c-- Parser: Request for command again","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"joshualeeky"},"content":"deactivate Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"joshualeeky"},"content":"deactivate Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"joshualeeky"},"content":"deactivate Parser","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"joshualeeky"},"content":"end ValidInput","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"joshualeeky"},"content":"CommandHandler -\u003e CommandExecutor: executeCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"joshualeeky"},"content":"activate CommandExecutor","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"joshualeeky"},"content":"alt invalidInputParameters","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"joshualeeky"},"content":"CommandHandler \u003c-- CommandExecutor: Error with input parameters","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"joshualeeky"},"content":"User \u003c-- CommandHandler: Error message","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"joshualeeky"},"content":"else","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"joshualeeky"},"content":"CommandExecutor -\u003e : Call relevant functions","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"joshualeeky"},"content":"alt invalidParameters","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"joshualeeky"},"content":"CommandExecutor \u003c-- : Error with input parameters","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"joshualeeky"},"content":"CommandHandler \u003c-- CommandExecutor: Error with input parameters","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"joshualeeky"},"content":"deactivate CommandExecutor","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"joshualeeky"},"content":"User \u003c-- CommandHandler: Error message","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"joshualeeky"},"content":"deactivate CommandHandler","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"joshualeeky"},"content":"else","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"joshualeeky"},"content":"User \u003c--  : Show relevant output","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"joshualeeky"},"content":"end invalidInputParameters","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"joshualeeky"},"content":"end invalidParameters","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"joshualeeky"},"content":"end loop","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"joshualeeky"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"joshualeeky":56}},{"path":"docs/diagrams/PersonDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"itsleeqian"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"itsleeqian"},"content":"!include style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"itsleeqian"},"content":"\u0027https://plantuml.com/component-diagram","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"itsleeqian"},"content":"Class Expense COLOR_BROWN","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"itsleeqian"},"content":"Class Person LOGIC_COLOR_T2 {","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"itsleeqian"},"content":"name:String","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"itsleeqian"},"content":"moneyOwed: HashMap\u003cString, Double\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"itsleeqian"},"content":"optimizedMoneyOwed: HashMap\u003cString, Double\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"itsleeqian"},"content":"{method} + setMoneyOwed(Person, double)","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"itsleeqian"},"content":"{method} + setOptimizedMoneyOwed(Person)","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"itsleeqian"},"content":"}","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"itsleeqian"},"content":"Class Trip COLOR_ORANGE","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"itsleeqian"},"content":"show Person members","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"itsleeqian"},"content":"Expense -right[COLOR_BROWN]-\u003e \"*\"Person","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"itsleeqian"},"content":"Trip -left[COLOR_ORANGE]-\u003e \"*\"Person","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"itsleeqian"},"content":"note top","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"itsleeqian"},"content":" Persons in an expense","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"itsleeqian"},"content":"  is a subset of Persons in a Trip.","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"itsleeqian"},"content":"end note","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"itsleeqian"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"itsleeqian":28}},{"path":"docs/diagrams/ReadFromFileSeqDiag.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yeezao"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"yeezao"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"yeezao"},"content":"\u0027autonumber","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"yeezao"},"content":"activate Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"yeezao"},"content":"-\u003e Storage: readFromFile(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"yeezao"},"content":"Storage -\u003e FileStorage: readFromFile(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"yeezao"},"content":"activate FileStorage","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"yeezao"},"content":"break FileNotFoundException","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"yeezao"},"content":"    FileStorage --\u003e Storage: FileNotFoundException","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"yeezao"},"content":"    Storage -\u003e Storage: createNewFile(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"yeezao"},"content":"    activate Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"yeezao"},"content":"    Storage -\u003e FileStorage: newBlankFile(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"yeezao"},"content":"    FileStorage --\u003e Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"yeezao"},"content":"    Storage --\u003e Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"yeezao"},"content":"    deactivate Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"yeezao"},"content":"end","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"yeezao"},"content":"break NoSuchElementException","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"yeezao"},"content":"    FileStorage --\u003e Storage: NoSuchElementException","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"yeezao"},"content":"end","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"yeezao"},"content":"FileStorage --\u003e Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"yeezao"},"content":"Storage -\u003e FileStorage: getGson()","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"yeezao"},"content":"FileStorage --\u003e Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"yeezao"},"content":"Storage -\u003e Storage: fromJson(String, Type)","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"yeezao"},"content":"activate Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"yeezao"},"content":"break JsonParseException","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"yeezao"},"content":"    Storage -\u003e Storage: askOverwriteOrClose()","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"yeezao"},"content":"    activate Storage","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"yeezao"},"content":"        alt overwrite","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"yeezao"},"content":"            Storage -\u003e Storage: createNewFile(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"yeezao"},"content":"            activate Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"yeezao"},"content":"            Storage -\u003e FileStorage: newBlankFile(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"yeezao"},"content":"            FileStorage --\u003e Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"yeezao"},"content":"            Storage --\u003e Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"yeezao"},"content":"            deactivate Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"yeezao"},"content":"        else close","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"yeezao"},"content":"            \u003c-- Storage: System.exit(1)","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"yeezao"},"content":"        end","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"yeezao"},"content":"        Storage --\u003e Storage","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"yeezao"},"content":"    deactivate Storage","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"yeezao"},"content":"end","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"yeezao"},"content":"Storage --\u003e Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"yeezao"},"content":"deactivate Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"yeezao"},"content":"\u003c-- Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"yeezao"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"yeezao":63}},{"path":"docs/diagrams/StorageCompClassDiag.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yeezao"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"yeezao"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"yeezao"},"content":"hide circle","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"yeezao"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"yeezao"},"content":"class Storage","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"yeezao"},"content":"class FileStorage","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"yeezao"},"content":"Storage --\u003e FileStorage","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"yeezao"},"content":"class Storage {","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"yeezao"},"content":"    - {static} listOfTrips : ArrayList\u003cTrip\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"yeezao"},"content":"    - {static} openTrip : Trip","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"yeezao"},"content":"    - {static} lastTrip : Trip","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"yeezao"},"content":"    - {static} validCommands : ArrayList\u003cString\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"yeezao"},"content":"    - {static} availableCurrency : Hashmap\u003cString, String[]\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"yeezao"},"content":"    + {static} writeToFile()","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"yeezao"},"content":"    + {static} readFromFile()","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"yeezao"},"content":"    + {static} createNewFile()","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"yeezao"},"content":"    - {static} askOverwriteOrClose()","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"yeezao"},"content":"    + {static} getOpenTrip() : Trip","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"yeezao"},"content":"    + {static} setOpenTrip()","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"yeezao"},"content":"    + {static} closeTrip()","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"yeezao"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"yeezao"},"content":"class FileStorage {","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"yeezao"},"content":"    - {static} gson : Gson","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"yeezao"},"content":"    + {static} writeToFile()","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"yeezao"},"content":"    + {static} readFromFile() : String","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"yeezao"},"content":"    + {static} newBlankFile()","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"yeezao"},"content":"    - {static} initializeFileWriter() : FileWriter","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"yeezao"},"content":"    + {static} initializeGson()","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"yeezao"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"yeezao"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"yeezao":38}},{"path":"docs/diagrams/WriteToFileSeqDiag.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yeezao"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"yeezao"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"yeezao"},"content":"\u0027autonumber","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"yeezao"},"content":"activate Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"yeezao"},"content":"-\u003e Storage: writeToFile(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"yeezao"},"content":"Storage -\u003e FileStorage: getGson()","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"yeezao"},"content":"activate FileStorage","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"yeezao"},"content":"FileStorage --\u003e Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"yeezao"},"content":"Storage -\u003e Storage: toJson(ArrayList\u003cTrip\u003e)","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"yeezao"},"content":"activate Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"yeezao"},"content":"Storage --\u003e Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"yeezao"},"content":"deactivate Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"yeezao"},"content":"Storage -\u003e FileStorage: writeToFile(String, String)","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"yeezao"},"content":"FileStorage -\u003e FileStorage: initializeFileWriter(String)","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"yeezao"},"content":"activate FileStorage","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"yeezao"},"content":"FileStorage --\u003e FileStorage","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"yeezao"},"content":"deactivate FileStorage","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"yeezao"},"content":"FileStorage --\u003e Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"yeezao"},"content":"deactivate FileStorage","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"yeezao"},"content":"\u003c-- Storage","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"yeezao"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"yeezao":29}},{"path":"docs/diagrams/classDiagTrip.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lixiyuan416"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"lixiyuan416"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"lixiyuan416"},"content":"hide circle","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"lixiyuan416"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"lixiyuan416"},"content":"class Trip","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"lixiyuan416"},"content":"class Expense","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"lixiyuan416"},"content":"class Person","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"lixiyuan416"},"content":"class Storage","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"lixiyuan416"},"content":"class CommandExecutor","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"lixiyuan416"},"content":"class Ui","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"lixiyuan416"},"content":"class Trip {","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"lixiyuan416"},"content":"    -location : String","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"lixiyuan416"},"content":"    -dateOfTrip : LocalDate","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"lixiyuan416"},"content":"    -exchangeRate : double","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"lixiyuan416"},"content":"    -foreignCurrency : String","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"lixiyuan416"},"content":"    -foreignCurrencyFormat : String","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"lixiyuan416"},"content":"    -foreignCurrencySymbol : String","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"lixiyuan416"},"content":"    -listOfExpenses : ArrayList\u003cExpense\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"lixiyuan416"},"content":"    -listOfPersons : ArrayList\u003cPerson\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"lixiyuan416"},"content":"    +getFilteredExpenses(expenseCategory : String, expenseAttribute : String)","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"lixiyuan416"},"content":"    +getDateOfTripString() : String","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"lixiyuan416"},"content":"    +setDateOfTrip(dateOfTrip : String)","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"lixiyuan416"},"content":"    +setExchangeRate(exchangeRateString : String)","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"lixiyuan416"},"content":"    +setForeignCurrency(foreignCurrency : String)","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"lixiyuan416"},"content":"    +setListOfPersons(listOfPersons : ArrayList\u003cPerson\u003e)","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"lixiyuan416"},"content":"    +addExpense(expense : Expense)","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"lixiyuan416"},"content":"    -splitPeople(peopleChained : String) : ArrayList\u003cPerson\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"lixiyuan416"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"lixiyuan416"},"content":"Trip --* \"*\" Expense : contains the list of \u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"lixiyuan416"},"content":"Trip --* \"*\" Person : contains the list of \u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"lixiyuan416"},"content":"Storage \u003c--\u003e \"*\" Trip : contains the list of \u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"lixiyuan416"},"content":"Trip --\u003e Ui : prints messages \u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"lixiyuan416"},"content":"Ui --\u003e Trip : receives user input \u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"lixiyuan416"},"content":"Note left of Ui : Receiving user input only occurs when\\nthere is erroneous user input in the\\noriginal input","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"lixiyuan416"},"content":"CommandExecutor --\u003e Trip : can create, edit and delete \u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"lixiyuan416"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"lixiyuan416":47}},{"path":"docs/diagrams/colors.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"itsleeqian"},"content":"!define COLOR_WHITE #FFFFFF","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"itsleeqian"},"content":"!define COLOR_SILVER #C0C0C0","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"itsleeqian"},"content":"!define COLOR_GREY #A5A8AC","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"itsleeqian"},"content":"!define COLOR_BLACK #000000","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"itsleeqian"},"content":"!define COLOR_BROWN #800000","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"itsleeqian"},"content":"!define COLOR_RED #FF0000","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"itsleeqian"},"content":"!define COLOR_YELLOW #FFFF00","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"itsleeqian"},"content":"!define COLOR_BRIGHT_GREEN #00FF00","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"itsleeqian"},"content":"!define COLOR_DARK_GREEN #008000","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"itsleeqian"},"content":"!define COLOR_LIGHT_BLUE #00FFFF","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"itsleeqian"},"content":"!define COLOR_TEAL #008080","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"itsleeqian"},"content":"!define COLOR_DARK_BLUE #0000FF","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"itsleeqian"},"content":"!define COLOR_PINK #FF00FF","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"itsleeqian"},"content":"!define COLOR_PURPLE #800080","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"itsleeqian"},"content":"!define COLOR_FAINT_TEAL #BBF1F1","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"itsleeqian"},"content":"!define COLOR_FAINT_GREEN #C2F5CC","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"itsleeqian"},"content":"!define COLOR_LIGHT_PURPLE #CBC3E3","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"itsleeqian"},"content":"!define COLOR_LIGHT_BROWN #C89D7C","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"itsleeqian"},"content":"!define COLOR_ORANGE #CF5300","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"itsleeqian"},"content":"!define COLOR_FAINT_ORANGE #FFD580","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"itsleeqian":20}},{"path":"docs/diagrams/helpState.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lixiyuan416"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"lixiyuan416"},"content":"title Help Command States","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"lixiyuan416"},"content":"start","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"lixiyuan416"},"content":"if (Are there any trips that exist?) then (Yes)","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"lixiyuan416"},"content":"  if (Is trip opened?) then (Yes)","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"lixiyuan416"},"content":"  :[In trip] Help;","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"lixiyuan416"},"content":"  stop","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"lixiyuan416"},"content":"  else (No)","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"lixiyuan416"},"content":"  :[Not Opened] Help;","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"lixiyuan416"},"content":"  stop","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"lixiyuan416"},"content":"  endif","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"lixiyuan416"},"content":"else (No)","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"lixiyuan416"},"content":"  :[No Trips] Help;","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"lixiyuan416"},"content":"endif","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"lixiyuan416"},"content":"stop","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"lixiyuan416"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"lixiyuan416":20}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"itsleeqian"},"content":"!include colors.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"itsleeqian"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"itsleeqian"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"itsleeqian"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"itsleeqian"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"itsleeqian"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"itsleeqian"},"content":"!define LOGIC_COLOR COLOR_DARK_BLUE","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"itsleeqian"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"itsleeqian"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"itsleeqian"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"itsleeqian"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"itsleeqian"},"content":"!define STORAGE_COLOR COLOR_ORANGE","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"itsleeqian"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"itsleeqian"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"itsleeqian"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"itsleeqian"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"itsleeqian"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"itsleeqian"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"itsleeqian"},"content":"skinparam Shadowing false","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"itsleeqian"},"content":"skinparam Class {","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"itsleeqian"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"itsleeqian"},"content":"    BorderThickness 1","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"itsleeqian"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"itsleeqian"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"itsleeqian"},"content":"    FontName Arial","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"itsleeqian"},"content":"}","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"itsleeqian"},"content":"skinparam Actor {","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"itsleeqian"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"itsleeqian"},"content":"    Color USER_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"itsleeqian"},"content":"    FontName Arial","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"itsleeqian"},"content":"}","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"itsleeqian"},"content":"skinparam Sequence {","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"itsleeqian"},"content":"    MessageAlign center","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"itsleeqian"},"content":"    BoxFontSize 15","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"itsleeqian"},"content":"    BoxPadding 0","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"itsleeqian"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"itsleeqian"},"content":"    FontName Arial","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"itsleeqian"},"content":"}","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"itsleeqian"},"content":"skinparam Participant {","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"itsleeqian"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"itsleeqian"},"content":"    Padding 20","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"itsleeqian"},"content":"}","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"itsleeqian"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"itsleeqian"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"itsleeqian"},"content":"skinparam Shadowing false","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"itsleeqian"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"itsleeqian"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"itsleeqian"},"content":"hide footbox","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"itsleeqian"},"content":"hide members","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"itsleeqian"},"content":"hide circle","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"itsleeqian":62}},{"path":"docs/diagrams/tripSeq.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lixiyuan416"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"lixiyuan416"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"lixiyuan416"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nDuke\" as d","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"lixiyuan416"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nParser\" as p","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"lixiyuan416"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nUi\" as ui","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"lixiyuan416"},"content":"loop until user inputs \u0027quit\u0027","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"lixiyuan416"},"content":"activate d","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"lixiyuan416"},"content":"d-\u003ep : parserUserInput(userInput)","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"lixiyuan416"},"content":"activate p","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"lixiyuan416"},"content":"p-\u003ep: handleValidCommand(\"create\", inputParams)","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"lixiyuan416"},"content":"activate p","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"lixiyuan416"},"content":"return","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"lixiyuan416"},"content":"p-\u003ep: handleCreateTrip(inputParams)","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"lixiyuan416"},"content":"activate p","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"lixiyuan416"},"content":"return","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"lixiyuan416"},"content":"p-\u003ep: executeCreateTrip(inputParams)","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"lixiyuan416"},"content":"activate p","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"lixiyuan416"},"content":"alt inputParams syntax valid","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"lixiyuan416"},"content":"    opt Trip is Duplicate \u0026\\nUser does not want to add","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"lixiyuan416"},"content":"    p--\u003ed","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"lixiyuan416"},"content":"    end","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"lixiyuan416"},"content":"create participant \":Trip\" as t","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"lixiyuan416"},"content":"p-\u003et++","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"lixiyuan416"},"content":"return","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"lixiyuan416"},"content":"else inputParams syntax Invalid","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"lixiyuan416"},"content":"p-\u003eui: printCreateFormatError()","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"lixiyuan416"},"content":"activate ui","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"lixiyuan416"},"content":"return","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"lixiyuan416"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"lixiyuan416"},"content":"return","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"lixiyuan416"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"lixiyuan416"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"lixiyuan416":38}},{"path":"docs/team/itsleeqian.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"itsleeqian"},"content":"# Lee Qi An - Project Portfolio Page","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"itsleeqian"},"content":"## Overview","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"itsleeqian"},"content":"PayMeBack is a CLI based app that helps individuals manage their expenses when travelling or going out with others.","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"itsleeqian"},"content":"### Summary of Contributions","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"itsleeqian"},"content":"The following sections summarize my contributions to my team\u0027s project.","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"itsleeqian"},"content":"#### Code","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"itsleeqian"},"content":"Detailed code contribution information can be viewed via RepoSense [here](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003ditsleeqian\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003ditsleeqian\u0026tabRepo\u003dAY2122S1-CS2113T-T12-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse).","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"itsleeqian"},"content":"#### Enhancements implemented","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"itsleeqian"},"content":"I have contributed the following to our project PayMeBack:","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"itsleeqian"},"content":"1. The `summary` command, which allows users to view the summary of expenses of any individual (or everyone) throughout the trip.","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"itsleeqian"},"content":"2. The `list` command, which handles listing of all trips and expenses.","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"itsleeqian"},"content":"3. The `people` command, which lists all individuals in a trip.","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"itsleeqian"},"content":"4. Reminding the user of the correct syntax whenever the user enters something wrongly.","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"itsleeqian"},"content":"#### UG Contributions","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"itsleeqian"},"content":"I added and maintained the following UG sections: List, Summary of Expenses, View people and the Table of Contents.","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"itsleeqian"},"content":"Additionally, I was also in charge of finalizing the formatting and readability of the UG, standardizing various aspects of every section.","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"itsleeqian"},"content":"#### DG Contribution","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"itsleeqian"},"content":"I have contributed the following to the DG:","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"itsleeqian"},"content":"1. The whole of the Architecture section, including the Architectural diagram and architectural sequence diagram.","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"itsleeqian"},"content":"2. The UML diagram for Person","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"itsleeqian"},"content":"#### Team based tasks Contribution","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"itsleeqian"},"content":"1. I helped to review my members\u0027 pull requests into our team repository, ensuring that the incoming code has no conflicts with the existing code. I would also discuss with the relevant members for any further improvements on the incoming code, and clarify any misunderstandings that appear.","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"itsleeqian"},"content":"2. Throughout the project, I helped to spot and rectify various bugs and issues that popped up.","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"itsleeqian"},"content":"3. I have also contributed significantly to cleaning up PE-D issues (closing duplicate issues and non issues)","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"itsleeqian"},"content":"#### Review/mentoring contributions","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"itsleeqian"},"content":"Throughout the team project, I made sure that I was fully aware of all the different functions and enhancements added by my teammates.","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"itsleeqian"},"content":"By doing so, I was then able to review the code properly and guide my teammates on any possible improvements. ","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"itsleeqian"},"content":"Having complete understanding of the code also allowed me to help clarify any doubts and misunderstandings from my teammates regarding our project.","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"itsleeqian":38}},{"path":"docs/team/joshualeeky.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joshualeeky"},"content":"# Project Portfolio Page - Joshua Lee","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"joshualeeky"},"content":"## Overview","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"joshualeeky"},"content":"_PayMeBack_ is an expense tracker targeted at groups travelling overseas. It aims to help groups simplify the process of","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"joshualeeky"},"content":"repayment for overseas expenses, by consolidating all expenses and issuing a summary report at the end, so users can easily","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"joshualeeky"},"content":"identify who they need to pay.","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"joshualeeky"},"content":"## Summary of Contributions","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"joshualeeky"},"content":"The following section provides a summary of what I have contributed to the project.","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"joshualeeky"},"content":"### Code Contributed","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"joshualeeky"},"content":"I have contributed over 1800 lines of code, split among documentation, test and functional code. \u003cbr /\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"joshualeeky"},"content":"My code contributions can be found via this ","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"joshualeeky"},"content":"[link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003djoshualeeky). ","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"joshualeeky"},"content":"I have contributed the following features to PayMeBack:","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"joshualeeky"},"content":"1. The Person class in its entirety.","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"joshualeeky"},"content":"2. Part of the Expense class constructor that helps determine if the names that have been entered are valid.","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"joshualeeky"},"content":"3. The ExpenseSplitter interface which helps keep track of how much the people involved in the expense owe the payer.","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"joshualeeky"},"content":"4. The `amount` command which gives a brief overview of the amount of money that is owed between the specified person ","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"joshualeeky"},"content":"and the other people involved in the trip.","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"joshualeeky"},"content":"### Enhancements implemented","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"joshualeeky"},"content":"I have contributed the following enhancements to PayMeBack:","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"joshualeeky"},"content":"1. The refactoring of the Parser class to help with overall neatness of the project.","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"joshualeeky"},"content":"2. The printing of currency in a user-friendly manner including the HashMap of the various currency ISO-codes and symbols.","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"joshualeeky"},"content":"3. Implementation of `last` for expenses to allow users to delete or view their most recently added expense.","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"joshualeeky"},"content":"4. Implemented a check to ensure that the people added into a trip or expense do not contain people with the same name.","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"joshualeeky"},"content":"5. Implementation of the command `-cancel` which allows users to abort a process when asked to correct an erroneous ","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"joshualeeky"},"content":"input (completed in collaboration with @yeezao).","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"joshualeeky"},"content":"### Contributions to the UG","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"joshualeeky"},"content":"For the user guide, I contributed mainly to the features that I had implemented, which includes the section on the command ","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"joshualeeky"},"content":"`amount` as well as the entirety of the section regarding the command `expense`. I also aided in the creation of ","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"joshualeeky"},"content":"the table of available currencies. The user guide can be found ","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"joshualeeky"},"content":"[here](https://ay2122s1-cs2113t-t12-2.github.io/tp/UserGuide.html).","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"joshualeeky"},"content":"### Contributions to the DG","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"joshualeeky"},"content":"For the developer guide, I contributed to the sequence as well as the class diagram of the `parser` class and the class\u0027 ","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"joshualeeky"},"content":"overall description. The developer guide can be found ","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"joshualeeky"},"content":"[here](https://ay2122s1-cs2113t-t12-2.github.io/tp/DeveloperGuide.html).","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"joshualeeky"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"joshualeeky"},"content":"In terms of contributions to team-based tasks, I feel like I have contributed most significantly in the following areas:","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"joshualeeky"},"content":"1. I helped to review members\u0027 pull requests into the GitHub repository while ensuring that whatever is being pulled is ","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"joshualeeky"},"content":"in line with the proposed intent.","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"joshualeeky"},"content":"2. I assisted in the refactoring of functions to help with the overall neatness of the project.","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"joshualeeky"},"content":"3. I openly reached out to help any teammate who may have any bugs in their code with whatever tips and advice","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"joshualeeky"},"content":"I could offer.","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"joshualeeky"},"content":"4. I actively sought out bugs in the program and placed them on the issue tracker on GitHub to be addressed by the team.","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"joshualeeky"},"content":"### Review/mentoring contributions","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"joshualeeky"},"content":"Throughout the project I ensured I was fully aware of the different functions and enhancements each member was adding ","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"joshualeeky"},"content":"into the project. This allowed me to understand the scope and capabilities of the program so that I would be able to","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"joshualeeky"},"content":"guide the team in areas of improvement if needed. This also allowed me to help with any misunderstandings a member may ","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"joshualeeky"},"content":"have with the overall structure of the program.","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"joshualeeky"},"content":"### Contributions beyond the project team","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"joshualeeky"},"content":"I took part in peer review exercises seriously to give sincere and meaningful feedback to other teams to help them ","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"joshualeeky"},"content":"improve their projects.","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"joshualeeky":61}},{"path":"docs/team/leeyikai.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"leeyikai"},"content":"# Lee Yi Kai - Project Portfolio Page","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"leeyikai"},"content":"## Overview","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"leeyikai"},"content":"PayMeBack helps travellers who are on a budget manage their finances when travelling with friends.","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"leeyikai"},"content":"## Summary of Contributions","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"leeyikai"},"content":"This section documents the summary of the contributions that I have done in this project.","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"leeyikai"},"content":"### Code Contributed","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"leeyikai"},"content":"I have contributed over 900 lines of code that is split among functional code, tests and documentation. My code can be ","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"leeyikai"},"content":"found at this [link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dleeyikai)","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"leeyikai"},"content":"### Enhancements Implemented","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"leeyikai"},"content":"I have implemented the following enhancements","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"leeyikai"},"content":"- Filtering of expenses by category, payer, description, which allows the user to search for expenses based on their","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"leeyikai"},"content":"   specific requirements. ","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"leeyikai"},"content":"- Payment optimization, where the number of transactions required to ensure that everyone is paid back is reduced.","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"leeyikai"},"content":"### Contributions to the UG","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"leeyikai"},"content":"I have contributed to these sections in the UG","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"leeyikai"},"content":"- `view` section, where I have contributed most of the initial content, before my teammates helped to refine it to","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"leeyikai"},"content":"    make it clearer for the users.","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"leeyikai"},"content":"- `optimize` section, where I help write the explanations so that the user can have a clearer understanding of what the","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"leeyikai"},"content":"   function does.","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"leeyikai"},"content":"### Contributions to the DG","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"leeyikai"},"content":"I have contributed to these sections in the DG","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"leeyikai"},"content":"- `Expense` section, where I wrote the majority of the explanation and did up 2 diagrams, one to show the interactions","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"leeyikai"},"content":"    the `Expense` and other classes and interfaces. I also did up a comprehensive sequence diagram that illustrated clearly the flow of the initialization of an `Expense`.","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"leeyikai"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"leeyikai"},"content":"I contributed in these areas for team-based tasks","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"leeyikai"},"content":"- Code enhancements: I ensured that the code that people were requesting to merge in were neat, and I recommended multiple ways for the code to be neatened such as removing magic numbers/strings.","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"leeyikai"},"content":"### Review/Mentoring Contributions","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"leeyikai"},"content":"I contributed in review/mentoring in these areas","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"leeyikai"},"content":"- I suggested ways for the code to be refactored so that our overall readability can be improved. This was largely done during our meetings.","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"leeyikai"},"content":"- I thoroughly tested other team\u0027s code and gave them valuable inputs to improve their interface.","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"leeyikai":43}},{"path":"docs/team/lixiyuan416.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lixiyuan416"},"content":"# Project Portfolio Page - Li Xi Yuan","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"lixiyuan416"},"content":"## Summary of Contributions","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"lixiyuan416"},"content":"### Code","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"lixiyuan416"},"content":"[Reposense Link](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003dlixiyuan416\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-25\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse)","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"lixiyuan416"},"content":"### Enhancements implemented","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"lixiyuan416"},"content":"- **Ui**","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"lixiyuan416"},"content":"    - Added and maintained the `help` command","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"lixiyuan416"},"content":"    - Added, maintained, and debugged user prompts on screen when wrong command syntax is input by the user, for a large majority of the functionalities.","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"lixiyuan416"},"content":"    ","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"lixiyuan416"},"content":"- **Expenses**","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"lixiyuan416"},"content":"    - Added `expense` class","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"lixiyuan416"},"content":"    - Added date input and validation when creating an expense","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"lixiyuan416"},"content":"    - Added initial expense split confirmation in [#143](https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/143)","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"lixiyuan416"},"content":"        - This is so that users are aware some people in the expense don\u0027t need to pay","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"lixiyuan416"},"content":"    ","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"lixiyuan416"},"content":"- **Trips**","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"lixiyuan416"},"content":"    - Added expense filtering by date and person involved","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"lixiyuan416"},"content":"    - Justification: Helpful filter options for users when viewing expenses in a trip","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"lixiyuan416"},"content":"    ","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"lixiyuan416"},"content":"- **Testing**","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"lixiyuan416"},"content":"    - Added tests for view filter methods in `ExpenseTest`","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"lixiyuan416"},"content":"    - Added `ParserTest`","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"lixiyuan416"},"content":"### UG Contribution","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"lixiyuan416"},"content":"- **Initial Draft**","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"lixiyuan416"},"content":"  - Added expense section","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"lixiyuan416"},"content":"- **Improved UG**","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"lixiyuan416"},"content":"    - Proofread and added missing functionalities (edit trip, settling expenses, view/delete last)","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"lixiyuan416"},"content":"- **Added Command summary section**","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"lixiyuan416"},"content":"- **Added FAQ section**","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"lixiyuan416"},"content":"### DG Contribution","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"lixiyuan416"},"content":"- **Initial Draft**","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"lixiyuan416"},"content":"  - Added `Expense` section, with [sequence diagram](../images/Expense%20Sequence%20Diagram.jpeg)","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"lixiyuan416"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"lixiyuan416"},"content":"- **Final Submission**","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"lixiyuan416"},"content":"  - Ui section - [Link to diagram](../images/HelpCommandStates.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"lixiyuan416"},"content":"  - Added appendixes, completed Appendixes A-B","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"lixiyuan416"},"content":"  - Added [sequence diagram](../images/tripSeq.png) and [class diagram](../images/classDiagTrip.png) for Trip","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"lixiyuan416"},"content":"### Team based tasks Contribution","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"lixiyuan416"},"content":"- **Added bug report in Issues**","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"lixiyuan416"},"content":"    - [#247](https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/247)","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"lixiyuan416"},"content":"    ","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"lixiyuan416"},"content":"- **Bug fixes**","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"lixiyuan416"},"content":"    - View index [#144](https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/144)","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"lixiyuan416"},"content":"    ","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"lixiyuan416"},"content":"- **Issued request to improve code quality**","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"lixiyuan416"},"content":"    - [#62](https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/62)","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"lixiyuan416"},"content":"    ","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"lixiyuan416"},"content":"### Review/mentoring contributions","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"lixiyuan416"},"content":"- **Non trivial PR reviews with comments**","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"lixiyuan416"},"content":"    - [#219](https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/219), [#146](https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/146), [#141](https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/141)","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"lixiyuan416":58}},{"path":"docs/team/yeezao.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yeezao"},"content":"# Liang Yuzhao - Project Portfolio Page","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"yeezao"},"content":"## Overview of Project","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"yeezao"},"content":"_PayMeBack_ is an expense tracker targeted at groups travelling overseas. It aims to help groups simplify the process of","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"yeezao"},"content":"repayment for overseas expenses, by consolidating all expenses and issuing a summary report at the end, so users can easily","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"yeezao"},"content":"identify who they need to pay.","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"yeezao"},"content":"_PayMeBack_ is a greenfield project. My main responsibilities in this project included:","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"yeezao"},"content":"- As the team member most proficient in Java, to provide guidance and mentorship to other team members on Java.","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"yeezao"},"content":"- To manage the team organisation and repository.","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"yeezao"},"content":"- To implement and test new features in the program.","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"yeezao"},"content":"- To maintain high quality of code and workflows in collaboration with other members of the team.","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"yeezao"},"content":"### Summary of Contributions","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"yeezao"},"content":"#### Code Contributions","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"yeezao"},"content":"I have contributed over \u003e1800 lines of code and documentation in total.","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"yeezao"},"content":"Detailed code contribution information can be viewed via RepoSense [here](https://nus-cs2113-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-25\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dyeezao\u0026tabRepo\u003dAY2122S1-CS2113T-T12-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse).","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"yeezao"},"content":"- Provided basic skeleton for `Ui`, `Parser`, `Trip`, `Expense`, `Person` classes.","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"yeezao"},"content":"- Implemented and tested `FileStorage` class, and some of `Ui`, `Trip`, `Storage`, `Parser`, and `ForceCancelException` classes.","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"yeezao"},"content":"- Wrote a large part, or the entirety, of `FileTest`, `TripTest`, and `ValidityCheckerTest`.","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"yeezao"},"content":"#### Enhancements and Features Implemented:","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"yeezao"},"content":"- **New**: Using `last` to get the trip which the user last interacted with.","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"yeezao"},"content":"- **New**: Reading from and writing to a save file using the JSON format (through serialisation/deserialisation with Google Gson).","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"yeezao"},"content":"- **Enhancement**: Adding custom serialiser/deserialiser to Gson for LocalDate objects.","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"yeezao"},"content":"- **Enhancement**: Ability to assist user in detecting and overwriting a corrupted save file.","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"yeezao"},"content":"- **New**: Allowing users to abort a process when asked to correct an erroneous input (completed in collaboration with @joshualeeky)","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"yeezao"},"content":"#### Contributions to User Guide:","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"yeezao"},"content":"The following sections in the [User Guide](https://ay2122s1-cs2113t-t12-2.github.io/tp/UserGuide.html) were largely or wholly written by me:","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"yeezao"},"content":"- Saving your data, Loading your saved data","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"yeezao"},"content":"- Create Trip, Open Trip, Close Trip, Delete Trip, Edit Trip","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"yeezao"},"content":"- FAQ #2 and #3","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"yeezao"},"content":"In addition, I made contributions to the following sections:","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"yeezao"},"content":"- Introduction, Using this guide, Quick Start","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"yeezao"},"content":"- FAQ #1","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"yeezao"},"content":"#### Contributions to Developer Guide:","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"yeezao"},"content":"The following sections in the [Developer Guide](https://ay2122s1-cs2113t-t12-2.github.io/tp/DeveloperGuide.html) were largely or wholly written by me:","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"yeezao"},"content":"- `Storage` component, and its related diagrams","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"yeezao"},"content":"- Non-functional Requirements","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"yeezao"},"content":"In addition, I made contributions to the following sections:","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"yeezao"},"content":"- Some text in `Trip` class","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"yeezao"},"content":"- Manual testing instructions for trip-related features","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"yeezao"},"content":"#### Contributions to Team Tasks:","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"yeezao"},"content":"- Setup and administration of organisation and team repository, and reviewing pull requests","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"yeezao"},"content":"- Adding templates for User Stories and Bug Reporting in Issues","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"yeezao"},"content":"- Gradle modifications (for enabling assertions and adding Gson dependency)","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"yeezao"},"content":"- Managed `v2.0` and `v2.1` release","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"yeezao"},"content":"- Cleanup of PE-D issues (marking duplicates, rejecting non-issues)","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"yeezao"},"content":"- General maintenance of issue tracker (milestone and label assignment)","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"yeezao"},"content":"#### Review and Mentoring contributions","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"yeezao"},"content":"- Comments on PRs - [#31](https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/31#discussion_r723066635),","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"yeezao"},"content":"  [#42](https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/42#discussion_r725532182), [#55](https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/55#discussion_r726785554)","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"yeezao"},"content":"- Bug reports - [#135](https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/135), [#49](https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/49), [#45](https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/45), ","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"yeezao"},"content":"- Mentoring on JUnit tests to simulate and test user inputs and outputs","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"yeezao"},"content":"#### Contributions beyond the team","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"yeezao"},"content":"- Replying to module forum posts ([#74](https://github.com/nus-cs2113-AY2122S1/forum/issues/74#issuecomment-922768286))","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"yeezao"},"content":"- Reporting of bugs on module website ([#93](https://github.com/nus-cs2113-AY2122S1/forum/issues/93))","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"yeezao":78}},{"path":"settings.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"joshualeeky"},"content":"rootProject.name \u003d \u0027tp\u0027","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"joshualeeky":2}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.duke;","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"yeezao"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"yeezao"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2020-05-24"},{"lineNumber":9,"author":{"gitId":"lixiyuan416"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"yeezao"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"yeezao"},"content":"    private static boolean isProgramRunning \u003d true;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"yeezao"},"content":"     * Prints the welcome message and initializes {@link Scanner}, {@link Logger}, and {@link Gson},","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"yeezao"},"content":"     * and reads the user\u0027s save file.","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"yeezao"},"content":"    private static void beginWelcome() {","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"yeezao"},"content":"        Ui.printWelcome();","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"yeezao"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"yeezao"},"content":"        Storage.setScanner(in);","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"yeezao"},"content":"        Logger logger \u003d Logger.getLogger(\"ProgramLogger\");","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"lixiyuan416"},"content":"        //Temporary disable logger","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"lixiyuan416"},"content":"        logger.setLevel(Level.OFF);","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"yeezao"},"content":"        Storage.setLogger(logger);","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"yeezao"},"content":"        FileStorage.initializeGson();","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"yeezao"},"content":"        Storage.readFromFile(Storage.FILE_PATH);","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"yeezao"},"content":"     * Reads and returns user input with leading and trailing whitespaces removed.","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"yeezao"},"content":"     * @param in {@link Scanner} to read user input","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"yeezao"},"content":"     * @return user input with leading and trailing whitespaces removed","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"yeezao"},"content":"    private static String readUserInput(Scanner in) {","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"yeezao"},"content":"        Ui.printPendingCommand();","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"yeezao"},"content":"        return in.nextLine().strip();","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Main entry-point for the java.duke.Duke application.","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":52,"author":{"gitId":"yeezao"},"content":"        beginWelcome();","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"yeezao"},"content":"        while (isProgramRunning) {","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"yeezao"},"content":"            isProgramRunning \u003d Parser.parseUserInput(readUserInput(Storage.getScanner()));","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"yeezao"},"content":"            try {","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"yeezao"},"content":"                Storage.writeToFile(Storage.FILE_PATH);","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"yeezao"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"yeezao"},"content":"                Ui.printCouldNotSaveMessage();","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"yeezao"},"content":"                //e.printStackTrace();","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"yeezao"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"joshualeeky":2,"yeezao":49,"-":12,"lixiyuan416":3}},{"path":"src/main/java/seedu/duke/FileStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yeezao"},"content":"//@@author yeezao","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"yeezao"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"yeezao"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"yeezao"},"content":"import com.google.gson.GsonBuilder;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"yeezao"},"content":"import com.google.gson.JsonDeserializationContext;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"yeezao"},"content":"import com.google.gson.JsonDeserializer;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"yeezao"},"content":"import com.google.gson.JsonElement;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"yeezao"},"content":"import com.google.gson.JsonParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"yeezao"},"content":"import com.google.gson.JsonPrimitive;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"yeezao"},"content":"import com.google.gson.JsonSerializationContext;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"yeezao"},"content":"import com.google.gson.JsonSerializer;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"yeezao"},"content":"import java.io.File;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"yeezao"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"yeezao"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"yeezao"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"yeezao"},"content":"import java.lang.reflect.Type;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"yeezao"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"yeezao"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"yeezao"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"yeezao"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"yeezao"},"content":"public class FileStorage {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"yeezao"},"content":"    private static Gson gson;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"yeezao"},"content":"     * Gets the {@link FileWriter} from {@link FileStorage#initializeFileWriter(String)}, and writes the","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"yeezao"},"content":"     * JSON String to the file.","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"yeezao"},"content":"     * @param jsonString parsed JSON string containing all data from the program.","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"yeezao"},"content":"     * @throws IOException if writing to file fails.","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"yeezao"},"content":"    public static void writeToFile(String jsonString, String filePath) throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"yeezao"},"content":"        Storage.getLogger().log(Level.INFO, \"starting write to save file\");","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"yeezao"},"content":"        FileWriter fileWriter \u003d initializeFileWriter(filePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"yeezao"},"content":"        fileWriter.write(jsonString);","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"yeezao"},"content":"        fileWriter.close();","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"yeezao"},"content":"     * Reads the raw JSON String from the indicated save file.","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"yeezao"},"content":"     * @param filePath path of the JSON file to be read from.","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"yeezao"},"content":"     * @return JSON String from the file.","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"yeezao"},"content":"     * @throws FileNotFoundException if there is no file corresponding to the \u003ccode\u003efilePath\u003c/code\u003e.","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"yeezao"},"content":"    public static String readFromFile(String filePath) throws FileNotFoundException {","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"yeezao"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"yeezao"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"yeezao"},"content":"        return scanner.nextLine();","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"yeezao"},"content":"     * Creates a new blank file at the given \u003ccode\u003efilePath\u003c/code\u003e.","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"yeezao"},"content":"     * @param filePath path location to create the file at","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"yeezao"},"content":"     * @throws IOException if file creation fails (thrown from {@link FileWriter}).","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"yeezao"},"content":"    public static void newBlankFile(String filePath) throws IOException {","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"yeezao"},"content":"        FileWriter fileWriter \u003d initializeFileWriter(filePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"yeezao"},"content":"        fileWriter.close();","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"yeezao"},"content":"     * Initializes a new instance of {@link FileWriter} with the given \u003ccode\u003efilePath\u003c/code\u003e.","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"yeezao"},"content":"     * @param filePath path location to create the file at.","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"yeezao"},"content":"     * @return instance of {@link FileWriter}.","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"yeezao"},"content":"     * @throws IOException if the FileWriter could not be created.","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"yeezao"},"content":"     * @see FileStorage#newBlankFile(String)","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"yeezao"},"content":"     * @see FileStorage#writeToFile(String, String)","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"yeezao"},"content":"    private static FileWriter initializeFileWriter(String filePath) throws IOException {","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"yeezao"},"content":"        return new FileWriter(filePath);","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"yeezao"},"content":"     * Registers the custom serializers and deserializers for {@link LocalDate} type, and creates an","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"yeezao"},"content":"     * instance of {@link Gson} stored in {@link FileStorage}.","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"yeezao"},"content":"    public static void initializeGson() {","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"yeezao"},"content":"        GsonBuilder gsonBuilder \u003d new GsonBuilder();","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"yeezao"},"content":"        gsonBuilder.registerTypeAdapter(LocalDate.class, new LocalDateSerializer());","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"yeezao"},"content":"        gsonBuilder.registerTypeAdapter(LocalDate.class, new LocalDateDeserializer());","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"yeezao"},"content":"        FileStorage.gson \u003d gsonBuilder.create();","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"yeezao"},"content":"    public static Gson getGson() {","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"yeezao"},"content":"        return gson;","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"yeezao"},"content":"    private static class LocalDateSerializer implements JsonSerializer\u003cLocalDate\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"yeezao"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"yeezao"},"content":"        public JsonElement serialize(LocalDate src, Type typeOfSrc, JsonSerializationContext context) {","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"yeezao"},"content":"            return new JsonPrimitive(src.toString());","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"yeezao"},"content":"    private static class LocalDateDeserializer implements JsonDeserializer\u003cLocalDate\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"yeezao"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"yeezao"},"content":"        public LocalDate deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"yeezao"},"content":"                throws JsonParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"yeezao"},"content":"            String dateInString \u003d json.getAsJsonPrimitive().getAsString();","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"yeezao"},"content":"            DateTimeFormatter pattern \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"yeezao"},"content":"            return LocalDate.parse(dateInString, pattern);","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"yeezao"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"yeezao":115}},{"path":"src/main/java/seedu/duke/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yeezao"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"joshualeeky"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"joshualeeky"},"content":"//@@author joshualeeky","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"joshualeeky"},"content":"public class Person {","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"joshualeeky"},"content":"    private String name;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"joshualeeky"},"content":"    private HashMap\u003cString, Double\u003e moneyOwed \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"joshualeeky"},"content":"    private HashMap\u003cString, Double\u003e optimizedMoneyOwed \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"joshualeeky"},"content":"    public Person(String name) {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"joshualeeky"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"joshualeeky"},"content":"    public String getName() {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"joshualeeky"},"content":"        return name;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"joshualeeky"},"content":"    public void setMoneyOwed(Person person, double amount) {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"joshualeeky"},"content":"        double originalAmount \u003d moneyOwed.get(person.getName());","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"joshualeeky"},"content":"        moneyOwed.put(person.getName(), originalAmount + amount);","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"joshualeeky"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"joshualeeky"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"joshualeeky"},"content":"    public HashMap\u003cString, Double\u003e getMoneyOwed() {","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"joshualeeky"},"content":"        return this.moneyOwed;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"joshualeeky"},"content":"    public HashMap\u003cString, Double\u003e getOptimizedMoneyOwed() {","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"joshualeeky"},"content":"        return this.optimizedMoneyOwed;","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"joshualeeky"},"content":"    public void setOptimizedMoneyOwed(Person person) {","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"joshualeeky"},"content":"        optimizedMoneyOwed.put(person.getName(), 0.0);","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"joshualeeky"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"joshualeeky"},"content":"    public String toString() {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"joshualeeky"},"content":"        return this.getName();","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"joshualeeky"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"yeezao":2,"joshualeeky":44}},{"path":"src/main/java/seedu/duke/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yeezao"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"yeezao"},"content":"import com.google.gson.Gson;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"yeezao"},"content":"import com.google.gson.JsonParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"yeezao"},"content":"import com.google.gson.reflect.TypeToken;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.exceptions.ForceCancelException;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.trip.Trip;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"yeezao"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"yeezao"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"yeezao"},"content":"import java.lang.reflect.Type;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"yeezao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"leeyikai"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"yeezao"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"yeezao"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"yeezao"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"yeezao"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"yeezao"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"yeezao"},"content":"public class Storage {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"yeezao"},"content":"    public static final String FILE_PATH \u003d \"trips.json\";","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"yeezao"},"content":"    public static final String LAST_INTERACTED \u003d \"last\";","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"yeezao"},"content":"    private static ArrayList\u003cTrip\u003e listOfTrips \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"yeezao"},"content":"    private static Trip openTrip \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"yeezao"},"content":"    private static Trip lastTrip \u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"yeezao"},"content":"    private static Scanner scanner;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"yeezao"},"content":"    private static Logger logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"joshualeeky"},"content":"    //@@author joshualeeky","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"joshualeeky"},"content":"    private static final ArrayList\u003cString\u003e validCommands \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"joshualeeky"},"content":"            Arrays.asList(\"create\", \"edit\", \"view\", \"open\", \"list\", \"summary\",","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"joshualeeky"},"content":"                    \"delete\", \"expense\", \"quit\", \"help\", \"amount\", \"people\", \"close\", \"optimize\"));","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"joshualeeky"},"content":"    private static final HashMap\u003cString, String[]\u003e availableCurrency \u003d new HashMap\u003c\u003e() {{","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"joshualeeky"},"content":"            put(\"USD\", new String[]{\"$\", \"%.02f\"});","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"joshualeeky"},"content":"            put(\"SGD\", new String[]{\"$\", \"%.02f\"});","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"joshualeeky"},"content":"            put(\"AUD\", new String[]{\"$\", \"%.02f\"});","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"joshualeeky"},"content":"            put(\"CAD\", new String[]{\"$\", \"%.02f\"});","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"joshualeeky"},"content":"            put(\"NZD\", new String[]{\"$\", \"%.02f\"});","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"joshualeeky"},"content":"            put(\"EUR\", new String[]{\"\", \"%.02f\"}); //€","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"joshualeeky"},"content":"            put(\"GBP\", new String[]{\"\", \"%.02f\"}); //£","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"joshualeeky"},"content":"            put(\"MYR\", new String[]{\"RM\", \"%.02f\"});","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"joshualeeky"},"content":"            put(\"HKD\", new String[]{\"$\", \"%.02f\"});","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"joshualeeky"},"content":"            put(\"THB\", new String[]{\"\", \"%.02f\"}); //฿","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"joshualeeky"},"content":"            put(\"RUB\", new String[]{\"\", \"%.02f\"}); //₽","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"joshualeeky"},"content":"            put(\"ZAR\", new String[]{\"R\", \"%.02f\"});","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"joshualeeky"},"content":"            put(\"TRY\", new String[]{\"\", \"%.02f\"}); //₺","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"joshualeeky"},"content":"            put(\"BRL\", new String[]{\"R$\", \"%.02f\"});","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"joshualeeky"},"content":"            put(\"DKK\", new String[]{\"Kr.\", \"%.02f\"});","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"joshualeeky"},"content":"            put(\"PLN\", new String[]{\"\", \"%.02f\"}); //zł","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"joshualeeky"},"content":"            put(\"ILS\", new String[]{\"\", \"%.02f\"}); //₪","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"joshualeeky"},"content":"            put(\"SAR\", new String[]{\"SR\", \"%.02f\"});","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"joshualeeky"},"content":"            put(\"CNY\", new String[]{\"\", \"%.0f\"}); //¥","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"joshualeeky"},"content":"            put(\"JPY\", new String[]{\"\", \"%.0f\"}); //¥","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"joshualeeky"},"content":"            put(\"KRW\", new String[]{\"\", \"%.0f\"}); //₩","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"joshualeeky"},"content":"            put(\"IDR\", new String[]{\"Rp\", \"%.0f\"});","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"joshualeeky"},"content":"            put(\"INR\", new String[]{\"Rs\", \"%.0f\"});","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"joshualeeky"},"content":"            put(\"CHF\", new String[]{\"SFr.\", \"%.0f\"});","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"joshualeeky"},"content":"            put(\"SEK\", new String[]{\"kr\", \"%.0f\"});","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"joshualeeky"},"content":"            put(\"NOK\", new String[]{\"kr\", \"%.0f\"});","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"joshualeeky"},"content":"            put(\"MXN\", new String[]{\"$\", \"%.0f\"});","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"joshualeeky"},"content":"            put(\"TWD\", new String[]{\"NT$\", \"%.0f\"});","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"joshualeeky"},"content":"            put(\"HUF\", new String[]{\"Ft\", \"%.0f\"});","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"joshualeeky"},"content":"            put(\"CZK\", new String[]{\"Kc\", \"%.0f\"});","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"joshualeeky"},"content":"            put(\"CLP\", new String[]{\"$\", \"%.0f\"});","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"joshualeeky"},"content":"            put(\"PHP\", new String[]{\"\", \"%.0f\"}); //₱","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"joshualeeky"},"content":"            put(\"AED\", new String[]{\"\", \"%.0f\"}); //د.إ","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"joshualeeky"},"content":"            put(\"COP\", new String[]{\"$\", \"%.0f\"});","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"joshualeeky"},"content":"            put(\"RON\", new String[]{\"lei\", \"%.0f\"});","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"joshualeeky"},"content":"        }};","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"joshualeeky"},"content":"    public static HashMap\u003cString, String[]\u003e getAvailableCurrency() {","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"joshualeeky"},"content":"        return availableCurrency;","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"joshualeeky"},"content":"    public static double formatForeignMoneyDouble(double money) throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"joshualeeky"},"content":"        return Double.parseDouble(String.format(Storage.getOpenTrip().getForeignCurrencyFormat(), money));","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"joshualeeky"},"content":"    public static double formatRepaymentMoneyDouble(double money) throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"joshualeeky"},"content":"        return Double.parseDouble(String.format(Storage.getOpenTrip().getRepaymentCurrencyFormat(), money));","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"joshualeeky"},"content":"    //@@author","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"yeezao"},"content":"    //@@author yeezao","lastModifiedDate":"2021-11-06"},{"lineNumber":89,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"yeezao"},"content":"     * Serializes the {@link Storage#listOfTrips} into a JSON String using {@link Gson}","lastModifiedDate":"2021-10-30"},{"lineNumber":91,"author":{"gitId":"yeezao"},"content":"     * to be written to the save file.","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"yeezao"},"content":"     * @throws IOException if {@link FileStorage#writeToFile(String, String)} fails","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"yeezao"},"content":"     * @see FileStorage#writeToFile(String, String)","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"yeezao"},"content":"    public static void writeToFile(String filePath) throws IOException {","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"yeezao"},"content":"        String jsonString \u003d FileStorage.getGson().toJson(listOfTrips);","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"yeezao"},"content":"        FileStorage.writeToFile(jsonString, filePath);","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"yeezao"},"content":"     * Parsers the JSON string returned from {@link FileStorage#readFromFile(String)}","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"yeezao"},"content":"     * to populate the {@link Storage#listOfTrips}.","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"yeezao"},"content":"     * @see FileStorage#readFromFile(String)","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"yeezao"},"content":"    public static void readFromFile(String filePath) {","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"yeezao"},"content":"        try {","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"yeezao"},"content":"            String jsonString \u003d FileStorage.readFromFile(filePath);","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"yeezao"},"content":"            Type tripType \u003d new TypeToken\u003cArrayList\u003cTrip\u003e\u003e(){}.getType();","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"yeezao"},"content":"            listOfTrips \u003d FileStorage.getGson().fromJson(jsonString, tripType);","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"yeezao"},"content":"            Ui.printFileLoadedSuccessfully();","lastModifiedDate":"2021-10-30"},{"lineNumber":114,"author":{"gitId":"yeezao"},"content":"        } catch (JsonParseException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"yeezao"},"content":"            Ui.printJsonParseError();","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"yeezao"},"content":"            askOverwriteOrClose();","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"yeezao"},"content":"        } catch (NoSuchElementException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"yeezao"},"content":"            Ui.printEmptyFileWarning();","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"yeezao"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"yeezao"},"content":"            Ui.printFileNotFoundError();","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"yeezao"},"content":"            createNewFile(FILE_PATH);","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"yeezao"},"content":"    private static final int EXIT_ERROR_CODE \u003d 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":126,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"yeezao"},"content":"     * Creates a new blank file at the specified file path ({@link Storage#FILE_PATH}).","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"yeezao"},"content":"     * @see FileStorage#newBlankFile(String)","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"yeezao"},"content":"    public static void createNewFile(String filePath) {","lastModifiedDate":"2021-10-29"},{"lineNumber":133,"author":{"gitId":"yeezao"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"yeezao"},"content":"            FileStorage.newBlankFile(filePath);","lastModifiedDate":"2021-10-29"},{"lineNumber":135,"author":{"gitId":"yeezao"},"content":"            Ui.newFileSuccessfullyCreated();","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"yeezao"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"yeezao"},"content":"            Ui.printCreateFileFailure();","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"yeezao"},"content":"            System.exit(EXIT_ERROR_CODE);","lastModifiedDate":"2021-10-29"},{"lineNumber":139,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"yeezao"},"content":"     * If {@link Storage#readFromFile(String)} throws a {@link JsonParseException}, asks the user whether to overwrite","lastModifiedDate":"2021-10-29"},{"lineNumber":144,"author":{"gitId":"yeezao"},"content":"     * the corrupted file or close the program.","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"yeezao"},"content":"     * @see Storage#createNewFile(String)","lastModifiedDate":"2021-10-29"},{"lineNumber":147,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"yeezao"},"content":"    private static void askOverwriteOrClose() {","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":150,"author":{"gitId":"yeezao"},"content":"        while (true) {","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"yeezao"},"content":"            Ui.printJsonParseUserInputPrompt();","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"yeezao"},"content":"            String input \u003d scanner.nextLine().strip();","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"yeezao"},"content":"            if (input.contains(Ui.USER_QUIT)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":154,"author":{"gitId":"yeezao"},"content":"                Ui.goodBye();","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"yeezao"},"content":"                Storage.getLogger().log(Level.WARNING, \"JSON Parse failed, user requests program end\");","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"yeezao"},"content":"                System.exit(EXIT_ERROR_CODE);","lastModifiedDate":"2021-10-29"},{"lineNumber":157,"author":{"gitId":"yeezao"},"content":"                return;","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"yeezao"},"content":"            } else if (input.contains(Ui.USER_CONTINUE)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":159,"author":{"gitId":"yeezao"},"content":"                createNewFile(FILE_PATH);","lastModifiedDate":"2021-10-29"},{"lineNumber":160,"author":{"gitId":"yeezao"},"content":"                return;","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"yeezao"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"yeezao"},"content":"    public static Scanner getScanner() {","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"yeezao"},"content":"        return scanner;","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"yeezao"},"content":"    public static void setScanner(Scanner scanner) {","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"yeezao"},"content":"        Storage.scanner \u003d scanner;","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"yeezao"},"content":"    //@@author","lastModifiedDate":"2021-11-06"},{"lineNumber":174,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"joshualeeky"},"content":"    public static ArrayList\u003cString\u003e getValidCommands() {","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"joshualeeky"},"content":"        return validCommands;","lastModifiedDate":"2021-10-11"},{"lineNumber":177,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"yeezao"},"content":"    //@@author yeezao","lastModifiedDate":"2021-11-06"},{"lineNumber":180,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"yeezao"},"content":"     * Gets the currently open trip. If no trip is open, asks the user to enter a trip index to open that trip.","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"yeezao"},"content":"     * @return the currently opened trip","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"yeezao"},"content":"    public static Trip getOpenTrip() throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":186,"author":{"gitId":"yeezao"},"content":"        if (openTrip \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"yeezao"},"content":"            Ui.printNoOpenTripError();","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"yeezao"},"content":"            promptUserForValidTrip();","lastModifiedDate":"2021-10-13"},{"lineNumber":189,"author":{"gitId":"yeezao"},"content":"            Ui.printOpenTripMessage(openTrip);","lastModifiedDate":"2021-11-04"},{"lineNumber":190,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":191,"author":{"gitId":"yeezao"},"content":"        lastTrip \u003d openTrip;","lastModifiedDate":"2021-10-29"},{"lineNumber":192,"author":{"gitId":"yeezao"},"content":"        return openTrip;","lastModifiedDate":"2021-10-13"},{"lineNumber":193,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":194,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":195,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"yeezao"},"content":"     * If the user enters an invalid trip number, asks the user to re-enter a valid trip number.","lastModifiedDate":"2021-10-26"},{"lineNumber":197,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"yeezao"},"content":"     * @see Storage#getOpenTrip()","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"yeezao"},"content":"    private static void promptUserForValidTrip() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":201,"author":{"gitId":"yeezao"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"yeezao"},"content":"            System.out.print(\"Please enter the trip you would like to open: \");","lastModifiedDate":"2021-10-28"},{"lineNumber":203,"author":{"gitId":"yeezao"},"content":"            String input \u003d Ui.receiveUserInput();","lastModifiedDate":"2021-11-04"},{"lineNumber":204,"author":{"gitId":"yeezao"},"content":"            int tripIndex \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"yeezao"},"content":"            setOpenTrip(tripIndex);","lastModifiedDate":"2021-11-01"},{"lineNumber":206,"author":{"gitId":"yeezao"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"yeezao"},"content":"            Ui.argNotNumber();","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"yeezao"},"content":"            Ui.promptForTripIndex();","lastModifiedDate":"2021-10-26"},{"lineNumber":209,"author":{"gitId":"yeezao"},"content":"            promptUserForValidTrip();","lastModifiedDate":"2021-10-26"},{"lineNumber":210,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"yeezao"},"content":"     * Checks if there is an open trip or not.","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"yeezao"},"content":"     * @return true if there is an open trip","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"yeezao"},"content":"    public static boolean checkOpenTrip() {","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"yeezao"},"content":"        return openTrip !\u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":222,"author":{"gitId":"yeezao"},"content":"     * Opens the trip at the specified \u003ccode\u003etripIndex\u003c/code\u003e, and sets that trip as the last modified trip.","lastModifiedDate":"2021-11-01"},{"lineNumber":223,"author":{"gitId":"yeezao"},"content":"     * @param tripIndex index of the trip inside {@link Storage#listOfTrips} to be opened","lastModifiedDate":"2021-11-01"},{"lineNumber":224,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":225,"author":{"gitId":"yeezao"},"content":"    public static void setOpenTrip(int tripIndex) {","lastModifiedDate":"2021-11-01"},{"lineNumber":226,"author":{"gitId":"yeezao"},"content":"        openTrip \u003d listOfTrips.get(tripIndex);","lastModifiedDate":"2021-11-01"},{"lineNumber":227,"author":{"gitId":"yeezao"},"content":"        lastTrip \u003d openTrip;","lastModifiedDate":"2021-10-29"},{"lineNumber":228,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":231,"author":{"gitId":"yeezao"},"content":"     * Closes the currently active trip, sets it as the last trip,  and sets the open trip as null.","lastModifiedDate":"2021-10-30"},{"lineNumber":232,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":233,"author":{"gitId":"yeezao"},"content":"    public static void closeTrip() {","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"yeezao"},"content":"        Trip tripToBeClosed \u003d openTrip;","lastModifiedDate":"2021-10-25"},{"lineNumber":235,"author":{"gitId":"yeezao"},"content":"        openTrip \u003d null;","lastModifiedDate":"2021-10-29"},{"lineNumber":236,"author":{"gitId":"yeezao"},"content":"        lastTrip \u003d tripToBeClosed;","lastModifiedDate":"2021-10-29"},{"lineNumber":237,"author":{"gitId":"yeezao"},"content":"        Ui.printTripClosed(tripToBeClosed);","lastModifiedDate":"2021-10-25"},{"lineNumber":238,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"yeezao"},"content":"    public static Logger getLogger() {","lastModifiedDate":"2021-10-13"},{"lineNumber":241,"author":{"gitId":"yeezao"},"content":"        return logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":242,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":243,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":244,"author":{"gitId":"yeezao"},"content":"    public static void setLogger(Logger logger) {","lastModifiedDate":"2021-10-13"},{"lineNumber":245,"author":{"gitId":"yeezao"},"content":"        Storage.logger \u003d logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":246,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":247,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":248,"author":{"gitId":"yeezao"},"content":"    public static ArrayList\u003cTrip\u003e getListOfTrips() {","lastModifiedDate":"2021-10-23"},{"lineNumber":249,"author":{"gitId":"yeezao"},"content":"        return listOfTrips;","lastModifiedDate":"2021-10-23"},{"lineNumber":250,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":251,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":252,"author":{"gitId":"yeezao"},"content":"    public static Trip getLastTrip() {","lastModifiedDate":"2021-10-23"},{"lineNumber":253,"author":{"gitId":"yeezao"},"content":"        return lastTrip;","lastModifiedDate":"2021-10-23"},{"lineNumber":254,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":255,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":256,"author":{"gitId":"yeezao"},"content":"    public static void setLastTrip(Trip lastTrip) {","lastModifiedDate":"2021-10-23"},{"lineNumber":257,"author":{"gitId":"yeezao"},"content":"        Storage.lastTrip \u003d lastTrip;","lastModifiedDate":"2021-10-23"},{"lineNumber":258,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":259,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":260,"author":{"gitId":"yeezao"},"content":"    public static void setListOfTrips(ArrayList\u003cTrip\u003e listOfTrips) {","lastModifiedDate":"2021-10-26"},{"lineNumber":261,"author":{"gitId":"yeezao"},"content":"        Storage.listOfTrips \u003d listOfTrips;","lastModifiedDate":"2021-10-26"},{"lineNumber":262,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":263,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":264,"author":{"gitId":"yeezao"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"yeezao":201,"joshualeeky":60,"leeyikai":3}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yeezao"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.exceptions.ForceCancelException;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.expense.Expense;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.trip.Trip;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"joshualeeky"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"leeyikai"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"yeezao"},"content":"public class Ui {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"yeezao"},"content":"    public static final String USER_CONTINUE \u003d \"y\";","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"yeezao"},"content":"    public static final String USER_QUIT \u003d \"n\";","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"joshualeeky"},"content":"    public static void printOptimizedAmounts() throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"leeyikai"},"content":"        boolean isAllPaid \u003d true;","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"leeyikai"},"content":"        Trip openTrip \u003d Storage.getOpenTrip();","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"leeyikai"},"content":"        ArrayList\u003cPerson\u003e listOfPersons \u003d openTrip.getListOfPersons();","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"leeyikai"},"content":"        HashMap\u003cString, Double\u003e currentHashMap;","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"leeyikai"},"content":"        String nameOfPersonPaying;","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"leeyikai"},"content":"        String nameOfPersonReceiving;","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"leeyikai"},"content":"        Double amountOwed;","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"leeyikai"},"content":"        for (Person personPaying : listOfPersons) {","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"leeyikai"},"content":"            for (Person personReceiving : listOfPersons) {","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"leeyikai"},"content":"                nameOfPersonPaying \u003d personPaying.getName();","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"leeyikai"},"content":"                nameOfPersonReceiving \u003d personReceiving.getName();","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"leeyikai"},"content":"                currentHashMap \u003d personPaying.getOptimizedMoneyOwed();","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"leeyikai"},"content":"                amountOwed \u003d currentHashMap.get(nameOfPersonReceiving);","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"leeyikai"},"content":"                if (!personPaying.equals(personReceiving) \u0026\u0026 amountOwed \u003c 0) {","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"leeyikai"},"content":"                    if (isAllPaid) {","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"leeyikai"},"content":"                        System.out.println(\"Here are the optimized payment transactions:\");","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"leeyikai"},"content":"                    }","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"leeyikai"},"content":"                    System.out.println(nameOfPersonPaying + \" needs to pay \"","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"leeyikai"},"content":"                            + stringForeignMoney(-amountOwed)","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"leeyikai"},"content":"                            + \" (\" + stringRepaymentMoney(-amountOwed) + \")\"","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"leeyikai"},"content":"                            + \" to \" + personReceiving);","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"leeyikai"},"content":"                    isAllPaid \u003d false;","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"leeyikai"},"content":"                }","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"leeyikai"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"leeyikai"},"content":"        if (isAllPaid) {","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"leeyikai"},"content":"            System.out.println(\"All are paid! :)\");","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"yeezao"},"content":"    public static String receiveUserInput() throws ForceCancelException {","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"yeezao"},"content":"        String userInput \u003d Storage.getScanner().nextLine().strip();","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"yeezao"},"content":"        if (Parser.doesUserWantToForceCancel(userInput)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"yeezao"},"content":"            throw new ForceCancelException();","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"yeezao"},"content":"        return userInput;","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"yeezao"},"content":"    public static void printPendingCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"yeezao"},"content":"        System.out.print(\"Enter your command: \");","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"yeezao"},"content":"    public static void printWelcome() {","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"joshualeeky"},"content":"        String logo \u003d System.lineSeparator()","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"joshualeeky"},"content":"                + \"    ____              __  ___     ____             __  \" + System.lineSeparator()","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"joshualeeky"},"content":"                + \"   / __ \\\\____ ___  __/  |/  ___  / __ )____ ______/ /__\" + System.lineSeparator()","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"joshualeeky"},"content":"                + \"  / /_/ / __ `/ / / / /|_/ / _ \\\\/ __  / __ `/ ___/ //_/\" + System.lineSeparator()","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"joshualeeky"},"content":"                + \" / ____/ /_/ / /_/ / /  / /  __/ /_/ / /_/ / /__/ ,\u003c   \" + System.lineSeparator()","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"joshualeeky"},"content":"                + \"/_/    \\\\__,_/\\\\__, /_/  /_/\\\\___/_____/\\\\__,_/\\\\___/_/|_|  \" + System.lineSeparator()","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"joshualeeky"},"content":"                + \"            /____/                                     \" + System.lineSeparator();","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"joshualeeky"},"content":"        System.out.println(\"Welcome to\" + logo);","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"yeezao"},"content":"    public static void goodBye() {","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"Exiting the program now. Goodbye!\");","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"yeezao"},"content":"    public static void newTripSuccessfullyCreated(Trip newTrip) {","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"Your trip to \" + newTrip.getLocation() + \" on \"","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"yeezao"},"content":"                + newTrip.getDateOfTripString() + \" has been successfully added!\");","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"joshualeeky"},"content":"    //@@author joshualeeky","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"joshualeeky"},"content":"    public static String stringForeignMoney(double val) {","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"joshualeeky"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"joshualeeky"},"content":"            return Storage.getOpenTrip().getForeignCurrency() + \" \"","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"joshualeeky"},"content":"                    + Storage.getOpenTrip().getForeignCurrencySymbol()","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"joshualeeky"},"content":"                    + String.format(Storage.getOpenTrip().getForeignCurrencyFormat(), val);","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"joshualeeky"},"content":"        } catch (ForceCancelException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"joshualeeky"},"content":"            printForceCancelled();","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"joshualeeky"},"content":"            return null;","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"joshualeeky"},"content":"    public static String stringRepaymentMoney(double val) {","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"joshualeeky"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"joshualeeky"},"content":"            return Storage.getOpenTrip().getRepaymentCurrency() + \" \"","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"joshualeeky"},"content":"                    + Storage.getOpenTrip().getRepaymentCurrencySymbol()","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"joshualeeky"},"content":"                    + String.format(Storage.getOpenTrip().getRepaymentCurrencyFormat(),","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"joshualeeky"},"content":"                    val / Storage.getOpenTrip().getExchangeRate());","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"joshualeeky"},"content":"        } catch (ForceCancelException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"joshualeeky"},"content":"            printForceCancelled();","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"joshualeeky"},"content":"            return null;","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"joshualeeky"},"content":"    public static void askAutoAssignRemainder(Person person, double remainder) {","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"joshualeeky"},"content":"        System.out.print(\"Assign the remaining \" + stringForeignMoney(remainder)","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"joshualeeky"},"content":"                + \" to \" + person.getName() + \"? (y/n): \");","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"joshualeeky"},"content":"    //@@author","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"joshualeeky"},"content":"    public static void printListOfPeople(ArrayList\u003cPerson\u003e people) {","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"joshualeeky"},"content":"        for (Person person : people) {","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"joshualeeky"},"content":"            System.out.println(\"\\t\" + person.getName());","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"itsleeqian"},"content":"    public static void printExpenseDetails(Expense e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"itsleeqian"},"content":"        System.out.println(e);","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"leeyikai"},"content":"    public static void printFilteredExpenses(Expense e, int index) {","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"joshualeeky"},"content":"        System.out.println((index + 1) + \". \" + e);","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"leeyikai"},"content":"    public static void printExpenseAddedSuccess() {","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"joshualeeky"},"content":"        System.out.println(\"Your expense has been added successfully!\");","lastModifiedDate":"2021-11-07"},{"lineNumber":129,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"joshualeeky"},"content":"    public static void printExpensesInList(ArrayList\u003cExpense\u003e listOfExpenses) {","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"joshualeeky"},"content":"        if (listOfExpenses.isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"joshualeeky"},"content":"            printNoExpensesError();","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"joshualeeky"},"content":"            return;","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"joshualeeky"},"content":"        System.out.println(\"List of Expenses: \");","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"joshualeeky"},"content":"        for (int i \u003d 0; i \u003c listOfExpenses.size(); i++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"joshualeeky"},"content":"            System.out.print(\"\\t\");","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"joshualeeky"},"content":"            System.out.println(i + 1 + \". \"","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"joshualeeky"},"content":"                    + listOfExpenses.get(i).getDescription() + \" | \"","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"joshualeeky"},"content":"                    + listOfExpenses.get(i).getStringDate());","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"itsleeqian"},"content":"    public static void printOpenTripMessage(Trip trip) {","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"itsleeqian"},"content":"        System.out.println(\"You have opened the following trip: \"","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"itsleeqian"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"itsleeqian"},"content":"                + trip.getLocation() + \" | \" + trip.getDateOfTripString());","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"lixiyuan416"},"content":"        System.out.println();","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"itsleeqian"},"content":"    public static void printCreateFormatError() {","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"itsleeqian"},"content":"        System.out.println(\"Please format your inputs as follows: \"","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"itsleeqian"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"lixiyuan416"},"content":"                + \"create /[place] /[date DD-MM-YYYY] /[currency ISO] /[exchange rate] /[persons-in-trip].\");","lastModifiedDate":"2021-11-06"},{"lineNumber":156,"author":{"gitId":"lixiyuan416"},"content":"        System.out.println(\"Separate person-in-trip with commas\");","lastModifiedDate":"2021-11-06"},{"lineNumber":157,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"itsleeqian"},"content":"    public static void printExpenseFormatError() {","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"itsleeqian"},"content":"        System.out.println(\"Please format your inputs as follows: \"","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"itsleeqian"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"itsleeqian"},"content":"                + \"expense [amount] [category] [people] /[description].\");","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"itsleeqian"},"content":"    public static void printEditFormatError() {","lastModifiedDate":"2021-11-06"},{"lineNumber":166,"author":{"gitId":"itsleeqian"},"content":"        System.out.println(\"Please format your inputs as follows: \"","lastModifiedDate":"2021-11-06"},{"lineNumber":167,"author":{"gitId":"itsleeqian"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-11-06"},{"lineNumber":168,"author":{"gitId":"itsleeqian"},"content":"                + \"edit [trip num] [attribute] [new value]\"","lastModifiedDate":"2021-11-06"},{"lineNumber":169,"author":{"gitId":"itsleeqian"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-11-06"},{"lineNumber":170,"author":{"gitId":"itsleeqian"},"content":"                + \"attributes: -location, -date, -exchangerate, -forcur, -homecur\"","lastModifiedDate":"2021-11-06"},{"lineNumber":171,"author":{"gitId":"itsleeqian"},"content":"                + System.lineSeparator());","lastModifiedDate":"2021-11-06"},{"lineNumber":172,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":173,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":174,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":175,"author":{"gitId":"leeyikai"},"content":"    public static void printFilterFormatError() {","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"leeyikai"},"content":"        System.out.println(\"Please format your inputs as follows: \"","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"leeyikai"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"lixiyuan416"},"content":"                + \"view filter [category, description, payer, person, date] [search keyword]\");","lastModifiedDate":"2021-11-06"},{"lineNumber":179,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"yeezao"},"content":"    public static void printExchangeRateFormatError() {","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"yeezao"},"content":"        System.out.print(\"Please re-enter your exchange rate as a decimal number (e.g. 1.32): \");","lastModifiedDate":"2021-10-11"},{"lineNumber":184,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":185,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":186,"author":{"gitId":"itsleeqian"},"content":"    public static void printInvalidAmountError() {","lastModifiedDate":"2021-11-01"},{"lineNumber":187,"author":{"gitId":"itsleeqian"},"content":"        System.out.print(\"Please re-enter your expense amount as a positive number (i.e \u003e 0): \");","lastModifiedDate":"2021-11-01"},{"lineNumber":188,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":189,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":190,"author":{"gitId":"yeezao"},"content":"    public static void printDateTimeFormatError() {","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"yeezao"},"content":"        System.out.print(\"The entered date is invalid. Please enter the date again: \");","lastModifiedDate":"2021-11-02"},{"lineNumber":192,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":193,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":194,"author":{"gitId":"yeezao"},"content":"    public static void dateInvalidError() {","lastModifiedDate":"2021-11-01"},{"lineNumber":195,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"Sorry, the date you entered is invalid. Please enter the date again: \");","lastModifiedDate":"2021-11-02"},{"lineNumber":196,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":197,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":198,"author":{"gitId":"itsleeqian"},"content":"    public static void printIsoFormatError() {","lastModifiedDate":"2021-10-28"},{"lineNumber":199,"author":{"gitId":"itsleeqian"},"content":"        System.out.print(\"Please re-enter your currency ISO (e.g. JPY, USD): \");","lastModifiedDate":"2021-10-28"},{"lineNumber":200,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":202,"author":{"gitId":"joshualeeky"},"content":"    public static void printUnknownCommandError() {","lastModifiedDate":"2021-10-11"},{"lineNumber":203,"author":{"gitId":"lixiyuan416"},"content":"        System.out.println(\"Sorry, we didn\u0027t recognize your entry. Please try again, or enter help \"","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"joshualeeky"},"content":"                + \"to learn more.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":205,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":206,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"yeezao"},"content":"    public static void printSingleUnknownTripIndexError() {","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"lixiyuan416"},"content":"        System.out.println(\"Invalid trip number, try again\");","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"lixiyuan416"},"content":"        System.out.println(\"Syntax: open [trip number]\");","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"lixiyuan416"},"content":"        System.out.println(\"--------------------------\");","lastModifiedDate":"2021-10-25"},{"lineNumber":211,"author":{"gitId":"lixiyuan416"},"content":"        printAllTrips();","lastModifiedDate":"2021-10-25"},{"lineNumber":212,"author":{"gitId":"lixiyuan416"},"content":"        System.out.println(\"--------------------------\");","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"yeezao"},"content":"    public static void printUnknownTripIndexError() {","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"Sorry, no such trip number exists. Please check your trip number and try again.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"leeyikai"},"content":"    public static void printUnknownExpenseIndexError() {","lastModifiedDate":"2021-10-13"},{"lineNumber":220,"author":{"gitId":"leeyikai"},"content":"        System.out.println(\"Sorry, no such expense number exists. Please check your expense number and try again.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":221,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":222,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":223,"author":{"gitId":"joshualeeky"},"content":"    public static void printNoTripError() {","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"joshualeeky"},"content":"        System.out.println(\"You have not created a trip yet. Please create a trip using the keyword \u0027create\u0027.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"yeezao"},"content":"    public static void printDeleteTripSuccessful(Trip tripDeleted) {","lastModifiedDate":"2021-10-27"},{"lineNumber":228,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"Your trip to \" + tripDeleted.getLocation() + \" on \"","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"yeezao"},"content":"                + tripDeleted.getDateOfTripString() + \" has been successfully removed.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":230,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"leeyikai"},"content":"    public static void printDeleteExpenseSuccessful(Double expenseAmount) {","lastModifiedDate":"2021-10-13"},{"lineNumber":233,"author":{"gitId":"itsleeqian"},"content":"        System.out.println(\"Your expense of \" + stringForeignMoney(expenseAmount) + \" has been successfully removed.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":234,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":235,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":236,"author":{"gitId":"joshualeeky"},"content":"    public static void printNoExpensesError() {","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"joshualeeky"},"content":"        System.out.println(\"There are no expenses in your trip, please add an expense using the keyword \u0027expense\u0027.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"itsleeqian"},"content":"    public static void printNoPersonFound(String string) {","lastModifiedDate":"2021-10-24"},{"lineNumber":241,"author":{"gitId":"itsleeqian"},"content":"        System.out.println(\"There are no persons with the name of [\" + string + \"] in this trip.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":242,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":243,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":244,"author":{"gitId":"itsleeqian"},"content":"    public static void printSummaryFormatError() {","lastModifiedDate":"2021-10-24"},{"lineNumber":245,"author":{"gitId":"itsleeqian"},"content":"        System.out.println(\"Please format your inputs as follows: \"","lastModifiedDate":"2021-10-24"},{"lineNumber":246,"author":{"gitId":"itsleeqian"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-24"},{"lineNumber":247,"author":{"gitId":"itsleeqian"},"content":"                + \"\\\"summary\\\" or \\\"summary [person name]\\\".\");","lastModifiedDate":"2021-10-24"},{"lineNumber":248,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":249,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"itsleeqian"},"content":"    public static void printNoMatchingExpenseError() {","lastModifiedDate":"2021-10-23"},{"lineNumber":251,"author":{"gitId":"itsleeqian"},"content":"        System.out.println(\"No matching expenses found.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":252,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":253,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":254,"author":{"gitId":"yeezao"},"content":"    public static void printNoOpenTripError() {","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"itsleeqian"},"content":"        System.out.println(\"You have not opened any trip yet. Please open a trip to proceed further.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":256,"author":{"gitId":"joshualeeky"},"content":"        printAllTrips();","lastModifiedDate":"2021-10-13"},{"lineNumber":257,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":258,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"itsleeqian"},"content":"    //@@author itsleeqian","lastModifiedDate":"2021-11-06"},{"lineNumber":260,"author":{"gitId":"itsleeqian"},"content":"    public static void printAllTrips() {","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"itsleeqian"},"content":"        System.out.println(\"List of Trips: \");","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"itsleeqian"},"content":"        ArrayList\u003cTrip\u003e listOfTrips \u003d Storage.getListOfTrips();","lastModifiedDate":"2021-10-23"},{"lineNumber":263,"author":{"gitId":"itsleeqian"},"content":"        for (int i \u003d 0; i \u003c listOfTrips.size(); i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":264,"author":{"gitId":"itsleeqian"},"content":"            System.out.print(\"\\t\");","lastModifiedDate":"2021-10-13"},{"lineNumber":265,"author":{"gitId":"itsleeqian"},"content":"            System.out.println(i + 1 + \". \"","lastModifiedDate":"2021-10-13"},{"lineNumber":266,"author":{"gitId":"itsleeqian"},"content":"                    + listOfTrips.get(i).getLocation() + \" | \"","lastModifiedDate":"2021-10-25"},{"lineNumber":267,"author":{"gitId":"itsleeqian"},"content":"                    + listOfTrips.get(i).getDateOfTripString());","lastModifiedDate":"2021-10-23"},{"lineNumber":268,"author":{"gitId":"itsleeqian"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":270,"author":{"gitId":"itsleeqian"},"content":"    //@@author","lastModifiedDate":"2021-11-06"},{"lineNumber":271,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":272,"author":{"gitId":"lixiyuan416"},"content":"    public static void emptyArgForOpenCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":273,"author":{"gitId":"lixiyuan416"},"content":"        System.out.println();","lastModifiedDate":"2021-10-12"},{"lineNumber":274,"author":{"gitId":"lixiyuan416"},"content":"        System.out.println(\"Which trip to open?\");","lastModifiedDate":"2021-10-12"},{"lineNumber":275,"author":{"gitId":"lixiyuan416"},"content":"        System.out.println(\"Syntax: open [trip number]\");","lastModifiedDate":"2021-10-12"},{"lineNumber":276,"author":{"gitId":"joshualeeky"},"content":"        System.out.println(\"--------------------------\");","lastModifiedDate":"2021-10-13"},{"lineNumber":277,"author":{"gitId":"lixiyuan416"},"content":"        printAllTrips();","lastModifiedDate":"2021-10-12"},{"lineNumber":278,"author":{"gitId":"joshualeeky"},"content":"        System.out.println(\"--------------------------\");","lastModifiedDate":"2021-10-13"},{"lineNumber":279,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":280,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":281,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":282,"author":{"gitId":"lixiyuan416"},"content":"    public static void argNotNumber() {","lastModifiedDate":"2021-10-12"},{"lineNumber":283,"author":{"gitId":"lixiyuan416"},"content":"        System.out.println(\"Input is not a number\");","lastModifiedDate":"2021-10-12"},{"lineNumber":284,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":285,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":286,"author":{"gitId":"joshualeeky"},"content":"    public static void promptForTripIndex() {","lastModifiedDate":"2021-10-26"},{"lineNumber":287,"author":{"gitId":"joshualeeky"},"content":"        System.out.print(\"The number you entered is not valid, \");","lastModifiedDate":"2021-11-04"},{"lineNumber":288,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":289,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":290,"author":{"gitId":"yeezao"},"content":"    public static void emptyArgForDeleteTripCommand() {","lastModifiedDate":"2021-11-04"},{"lineNumber":291,"author":{"gitId":"lixiyuan416"},"content":"        System.out.println();","lastModifiedDate":"2021-10-12"},{"lineNumber":292,"author":{"gitId":"lixiyuan416"},"content":"        System.out.println(\"Which trip to delete?\");","lastModifiedDate":"2021-10-12"},{"lineNumber":293,"author":{"gitId":"lixiyuan416"},"content":"        System.out.println(\"Syntax: delete [trip number]\");","lastModifiedDate":"2021-10-12"},{"lineNumber":294,"author":{"gitId":"joshualeeky"},"content":"        System.out.println(\"---------------------------\");","lastModifiedDate":"2021-10-13"},{"lineNumber":295,"author":{"gitId":"lixiyuan416"},"content":"        printAllTrips();","lastModifiedDate":"2021-10-12"},{"lineNumber":296,"author":{"gitId":"joshualeeky"},"content":"        System.out.println(\"---------------------------\");","lastModifiedDate":"2021-10-13"},{"lineNumber":297,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":298,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":299,"author":{"gitId":"yeezao"},"content":"    public static void emptyArgForDeleteExpenseCommand() throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":300,"author":{"gitId":"yeezao"},"content":"        System.out.println();","lastModifiedDate":"2021-11-04"},{"lineNumber":301,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"Which expense to delete?\");","lastModifiedDate":"2021-11-04"},{"lineNumber":302,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"Syntax: delete [expense number]\");","lastModifiedDate":"2021-11-04"},{"lineNumber":303,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"---------------------------\");","lastModifiedDate":"2021-11-04"},{"lineNumber":304,"author":{"gitId":"yeezao"},"content":"        printExpensesInList(Storage.getOpenTrip().getListOfExpenses());","lastModifiedDate":"2021-11-04"},{"lineNumber":305,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"---------------------------\");","lastModifiedDate":"2021-11-04"},{"lineNumber":306,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":307,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":308,"author":{"gitId":"joshualeeky"},"content":"    public static void invalidAmountFormat() {","lastModifiedDate":"2021-11-04"},{"lineNumber":309,"author":{"gitId":"joshualeeky"},"content":"        System.out.println(\"The syntax for amount you have entered is invalid. \"","lastModifiedDate":"2021-11-04"},{"lineNumber":310,"author":{"gitId":"joshualeeky"},"content":"                + \"Please format as follows: amount [person].\");","lastModifiedDate":"2021-11-04"},{"lineNumber":311,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":312,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":313,"author":{"gitId":"joshualeeky"},"content":"    public static void invalidArgForAmount() throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":314,"author":{"gitId":"joshualeeky"},"content":"        Trip currTrip \u003d Storage.getOpenTrip();","lastModifiedDate":"2021-11-04"},{"lineNumber":315,"author":{"gitId":"joshualeeky"},"content":"        System.out.println(\"The person you entered is not in the opened trip.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":316,"author":{"gitId":"lixiyuan416"},"content":"        System.out.println(\"These are the people involved in this trip:\");","lastModifiedDate":"2021-10-26"},{"lineNumber":317,"author":{"gitId":"joshualeeky"},"content":"        Ui.printListOfPeople(currTrip.getListOfPersons());","lastModifiedDate":"2021-11-04"},{"lineNumber":318,"author":{"gitId":"lixiyuan416"},"content":"        System.out.println();","lastModifiedDate":"2021-10-26"},{"lineNumber":319,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":320,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":321,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":322,"author":{"gitId":"joshualeeky"},"content":"    public static void printGetPersonPaid() {","lastModifiedDate":"2021-10-20"},{"lineNumber":323,"author":{"gitId":"joshualeeky"},"content":"        System.out.print(\"Who paid for the expense?: \");","lastModifiedDate":"2021-10-20"},{"lineNumber":324,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":325,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":326,"author":{"gitId":"joshualeeky"},"content":"    public static void printHowMuchDidPersonSpend(String name, double amountRemaining) {","lastModifiedDate":"2021-10-23"},{"lineNumber":327,"author":{"gitId":"joshualeeky"},"content":"        System.out.print(\"There is \" + stringForeignMoney(amountRemaining) + \" left to be assigned.\"","lastModifiedDate":"2021-10-23"},{"lineNumber":328,"author":{"gitId":"joshualeeky"},"content":"                + \" How much did \" + name + \" spend?: \");","lastModifiedDate":"2021-10-23"},{"lineNumber":329,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":330,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":331,"author":{"gitId":"joshualeeky"},"content":"    public static void printPersonNotInExpense() {","lastModifiedDate":"2021-10-20"},{"lineNumber":332,"author":{"gitId":"joshualeeky"},"content":"        System.out.println(\"The person you entered is not in the expense, please try again.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":333,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":334,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":335,"author":{"gitId":"joshualeeky"},"content":"    //@@author joshualeeky","lastModifiedDate":"2021-11-07"},{"lineNumber":336,"author":{"gitId":"joshualeeky"},"content":"    public static void printAmount(Person person, Trip trip) {","lastModifiedDate":"2021-11-03"},{"lineNumber":337,"author":{"gitId":"joshualeeky"},"content":"        System.out.println(person.getName() + \" spent \"","lastModifiedDate":"2021-10-25"},{"lineNumber":338,"author":{"gitId":"joshualeeky"},"content":"                + stringForeignMoney(person.getMoneyOwed().get(person.getName()))","lastModifiedDate":"2021-11-04"},{"lineNumber":339,"author":{"gitId":"joshualeeky"},"content":"                + \" (\" + stringRepaymentMoney(person.getMoneyOwed().get(person.getName())) + \") on the trip so far\");","lastModifiedDate":"2021-11-03"},{"lineNumber":340,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":341,"author":{"gitId":"joshualeeky"},"content":"        for (Person otherPerson : trip.getListOfPersons()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":342,"author":{"gitId":"joshualeeky"},"content":"            if (otherPerson !\u003d person) {","lastModifiedDate":"2021-10-21"},{"lineNumber":343,"author":{"gitId":"joshualeeky"},"content":"                if (person.getMoneyOwed().get(otherPerson.getName()) \u003e 0) {","lastModifiedDate":"2021-11-03"},{"lineNumber":344,"author":{"gitId":"joshualeeky"},"content":"                    System.out.println(otherPerson.getName() + \" owes \"","lastModifiedDate":"2021-10-23"},{"lineNumber":345,"author":{"gitId":"joshualeeky"},"content":"                            + stringForeignMoney(person.getMoneyOwed().get(otherPerson.getName()))","lastModifiedDate":"2021-11-03"},{"lineNumber":346,"author":{"gitId":"joshualeeky"},"content":"                            + \" (\" + stringRepaymentMoney(person.getMoneyOwed().get(otherPerson.getName())) + \")\"","lastModifiedDate":"2021-11-03"},{"lineNumber":347,"author":{"gitId":"joshualeeky"},"content":"                            + \" to \" + person.getName());","lastModifiedDate":"2021-10-23"},{"lineNumber":348,"author":{"gitId":"joshualeeky"},"content":"                } else if (person.getMoneyOwed().get(otherPerson.getName()) \u003c 0) {","lastModifiedDate":"2021-11-03"},{"lineNumber":349,"author":{"gitId":"joshualeeky"},"content":"                    System.out.println(person.getName() + \" owes \"","lastModifiedDate":"2021-10-23"},{"lineNumber":350,"author":{"gitId":"joshualeeky"},"content":"                            + stringForeignMoney(-person.getMoneyOwed().get(otherPerson.getName()))","lastModifiedDate":"2021-11-03"},{"lineNumber":351,"author":{"gitId":"joshualeeky"},"content":"                            + \" (\" + stringRepaymentMoney(-person.getMoneyOwed().get(otherPerson.getName())) + \")\"","lastModifiedDate":"2021-11-03"},{"lineNumber":352,"author":{"gitId":"joshualeeky"},"content":"                            + \" to \" + otherPerson.getName());","lastModifiedDate":"2021-10-23"},{"lineNumber":353,"author":{"gitId":"joshualeeky"},"content":"                } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":354,"author":{"gitId":"joshualeeky"},"content":"                    System.out.println(person.getName() + \" does not owe anything to \" + otherPerson.getName());","lastModifiedDate":"2021-10-21"},{"lineNumber":355,"author":{"gitId":"joshualeeky"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":356,"author":{"gitId":"joshualeeky"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":357,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":358,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":359,"author":{"gitId":"joshualeeky"},"content":"    //@@author","lastModifiedDate":"2021-11-07"},{"lineNumber":360,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":361,"author":{"gitId":"joshualeeky"},"content":"    public static void printIncorrectAmount(double amount) {","lastModifiedDate":"2021-10-20"},{"lineNumber":362,"author":{"gitId":"joshualeeky"},"content":"        System.out.println(\"The amount you have entered is not possible. The total \"","lastModifiedDate":"2021-11-08"},{"lineNumber":363,"author":{"gitId":"joshualeeky"},"content":"                + \"of the expense should equal \" + stringForeignMoney(amount));","lastModifiedDate":"2021-10-27"},{"lineNumber":364,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":365,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":366,"author":{"gitId":"joshualeeky"},"content":"    public static void printPeopleInvolved(ArrayList\u003cPerson\u003e personArrayList) {","lastModifiedDate":"2021-10-20"},{"lineNumber":367,"author":{"gitId":"joshualeeky"},"content":"        System.out.println(\"These are the people who are involved in the expense: \");","lastModifiedDate":"2021-10-20"},{"lineNumber":368,"author":{"gitId":"joshualeeky"},"content":"        printListOfPeople(personArrayList);","lastModifiedDate":"2021-10-25"},{"lineNumber":369,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":370,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":371,"author":{"gitId":"lixiyuan416"},"content":"    //@@author lixiyuan416","lastModifiedDate":"2021-10-26"},{"lineNumber":372,"author":{"gitId":"lixiyuan416"},"content":"    public static void displayHelp() {","lastModifiedDate":"2021-10-19"},{"lineNumber":373,"author":{"gitId":"lixiyuan416"},"content":"        if (Storage.getListOfTrips().isEmpty()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":374,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"You have no trips! Create one to get started!\");","lastModifiedDate":"2021-11-06"},{"lineNumber":375,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println();","lastModifiedDate":"2021-11-06"},{"lineNumber":376,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"Syntax: create /[location] /[date dd-mm-yyyy] \"","lastModifiedDate":"2021-11-06"},{"lineNumber":377,"author":{"gitId":"lixiyuan416"},"content":"                    + \"/[foreign-currency-ISO-code] /[exchange-rate] /[persons-in-trip]\");","lastModifiedDate":"2021-11-06"},{"lineNumber":378,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"\\t Separate each person-in-trip with commas\");","lastModifiedDate":"2021-11-06"},{"lineNumber":379,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println();","lastModifiedDate":"2021-11-06"},{"lineNumber":380,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"quit: exit the program\");","lastModifiedDate":"2021-11-06"},{"lineNumber":381,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println();","lastModifiedDate":"2021-11-06"},{"lineNumber":382,"author":{"gitId":"lixiyuan416"},"content":"        } else if (!Storage.checkOpenTrip()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":383,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"You have trips, but have not opened any\");","lastModifiedDate":"2021-11-06"},{"lineNumber":384,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println();","lastModifiedDate":"2021-11-06"},{"lineNumber":385,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"list: list all your trips\");","lastModifiedDate":"2021-11-06"},{"lineNumber":386,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"open [trip number]: Open a trip\");","lastModifiedDate":"2021-11-06"},{"lineNumber":387,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"delete [trip number]: Delete a trip\");","lastModifiedDate":"2021-11-06"},{"lineNumber":388,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println();","lastModifiedDate":"2021-11-06"},{"lineNumber":389,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"create /[location] /[date dd-mm-yyyy] \"","lastModifiedDate":"2021-11-06"},{"lineNumber":390,"author":{"gitId":"lixiyuan416"},"content":"                    + \"/[foreign-currency-ISO-code] /[exchange-rate] /[persons-in-trip]: Creates a trip\");","lastModifiedDate":"2021-11-06"},{"lineNumber":391,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"Separate persons-in-trip with commas\");","lastModifiedDate":"2021-11-06"},{"lineNumber":392,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println();","lastModifiedDate":"2021-11-06"},{"lineNumber":393,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"edit [trip num] [attribute] [new value]: edit trip attributes\");","lastModifiedDate":"2021-11-06"},{"lineNumber":394,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"\\tattributes: -location, -date, -exchangerate, -forcur, -homecur\");","lastModifiedDate":"2021-11-06"},{"lineNumber":395,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"\\tNote the hyphen in the attribute\");","lastModifiedDate":"2021-11-06"},{"lineNumber":396,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"\\tlast can be used for [trip num]\");","lastModifiedDate":"2021-11-06"},{"lineNumber":397,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println();","lastModifiedDate":"2021-11-06"},{"lineNumber":398,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"quit: exit the program\");","lastModifiedDate":"2021-11-06"},{"lineNumber":399,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println();","lastModifiedDate":"2021-10-19"},{"lineNumber":400,"author":{"gitId":"lixiyuan416"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":401,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"You are inside a trip. Here is a list of what you can do:\");","lastModifiedDate":"2021-11-06"},{"lineNumber":402,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println();","lastModifiedDate":"2021-11-06"},{"lineNumber":403,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"\\texpense: creates an expense\");","lastModifiedDate":"2021-10-25"},{"lineNumber":404,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"\\t\\texpense [amount] [category] [people] /[description]\");","lastModifiedDate":"2021-11-06"},{"lineNumber":405,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"\\t\\t Separate each person with a comma\");","lastModifiedDate":"2021-11-06"},{"lineNumber":406,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println();","lastModifiedDate":"2021-11-06"},{"lineNumber":407,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"\\tlist: List all expenses of the trip\");","lastModifiedDate":"2021-11-06"},{"lineNumber":408,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println();","lastModifiedDate":"2021-11-06"},{"lineNumber":409,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"\\tpeople: List of persons in the trip\");","lastModifiedDate":"2021-11-06"},{"lineNumber":410,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println();","lastModifiedDate":"2021-11-06"},{"lineNumber":411,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"\\tdelete [expense num]: delete an expense\");","lastModifiedDate":"2021-11-06"},{"lineNumber":412,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"\\t\\t\\\"delete last\\\" to delete last expense\");","lastModifiedDate":"2021-11-06"},{"lineNumber":413,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println();","lastModifiedDate":"2021-11-06"},{"lineNumber":414,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"\\tview filter [options] [search keyword]: list filtered expenses.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":415,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"\\t\\tfilter options: [category, description, payer, person, date]\");","lastModifiedDate":"2021-10-26"},{"lineNumber":416,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println();","lastModifiedDate":"2021-11-06"},{"lineNumber":417,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"\\tview -[index]: View expense in detail\");","lastModifiedDate":"2021-11-06"},{"lineNumber":418,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"\\t\\tViews all expenses if index not provided. \\\"view last\\\" to view last expense\");","lastModifiedDate":"2021-11-06"},{"lineNumber":419,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println();","lastModifiedDate":"2021-11-06"},{"lineNumber":420,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"\\tsummary -[name]: Shows all much a person has spent on this trip in total.\");","lastModifiedDate":"2021-11-06"},{"lineNumber":421,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"\\t\\tDisplays summary for everyone in the trip if index not provided\");","lastModifiedDate":"2021-11-06"},{"lineNumber":422,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println();","lastModifiedDate":"2021-11-06"},{"lineNumber":423,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"\\toptimize: Displays who-pays-who instructions to \"","lastModifiedDate":"2021-11-06"},{"lineNumber":424,"author":{"gitId":"lixiyuan416"},"content":"                    + \"settle expense repayment at the end of the trip\");","lastModifiedDate":"2021-11-06"},{"lineNumber":425,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"\\tamount [person]: Displays who-pays-who instructions for one person, unoptimized\");","lastModifiedDate":"2021-11-06"},{"lineNumber":426,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println();","lastModifiedDate":"2021-11-06"},{"lineNumber":427,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"\\tclose: Closes the current trip\");","lastModifiedDate":"2021-11-06"},{"lineNumber":428,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"\\topen [trip num]: Closes the current trip, opens another trip\");","lastModifiedDate":"2021-11-06"},{"lineNumber":429,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println();","lastModifiedDate":"2021-11-06"},{"lineNumber":430,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"\\tYou can also create or edit a trip, \"","lastModifiedDate":"2021-11-08"},{"lineNumber":431,"author":{"gitId":"lixiyuan416"},"content":"                    + \"but it\u0027s recommended to close the current trip first\");","lastModifiedDate":"2021-11-08"},{"lineNumber":432,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println(\"\\tquit: exit the program\");","lastModifiedDate":"2021-10-25"},{"lineNumber":433,"author":{"gitId":"lixiyuan416"},"content":"            System.out.println();","lastModifiedDate":"2021-10-20"},{"lineNumber":434,"author":{"gitId":"lixiyuan416"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":435,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":436,"author":{"gitId":"lixiyuan416"},"content":"    //@@author","lastModifiedDate":"2021-10-26"},{"lineNumber":437,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":438,"author":{"gitId":"leeyikai"},"content":"    public static void printInvalidFilterError() {","lastModifiedDate":"2021-10-22"},{"lineNumber":439,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"Please filter using the following valid filter attributes: \"","lastModifiedDate":"2021-10-23"},{"lineNumber":440,"author":{"gitId":"yeezao"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-23"},{"lineNumber":441,"author":{"gitId":"joshualeeky"},"content":"                + \"[category], [description], [payer], [person]\");","lastModifiedDate":"2021-10-26"},{"lineNumber":442,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":443,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":444,"author":{"gitId":"itsleeqian"},"content":"    public static void printFileNotFoundError() {","lastModifiedDate":"2021-10-23"},{"lineNumber":445,"author":{"gitId":"itsleeqian"},"content":"        System.out.println(\"No preloaded data found! We have created a file for you.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":446,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":447,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":448,"author":{"gitId":"itsleeqian"},"content":"    public static void printJsonParseError() {","lastModifiedDate":"2021-10-23"},{"lineNumber":449,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"We couldn\u0027t read your save file. It may be corrupted, \"","lastModifiedDate":"2021-10-24"},{"lineNumber":450,"author":{"gitId":"yeezao"},"content":"                + \"or may have been wrongly modified outside the program.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":451,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"To overwrite your current save file and start with a new save file, enter \u0027y\u0027. \"","lastModifiedDate":"2021-11-08"},{"lineNumber":452,"author":{"gitId":"yeezao"},"content":"                + \"Otherwise, enter \u0027n\u0027 to exit the program.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":453,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"IMPORTANT: if you start with a new save file, your previous data will be erased. \"","lastModifiedDate":"2021-11-08"},{"lineNumber":454,"author":{"gitId":"yeezao"},"content":"                + \"This operation is irreversible.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":455,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":456,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":457,"author":{"gitId":"yeezao"},"content":"    public static void printJsonParseUserInputPrompt() {","lastModifiedDate":"2021-10-24"},{"lineNumber":458,"author":{"gitId":"yeezao"},"content":"        System.out.print(\"Would you like to overwrite your save file? (y/n): \");","lastModifiedDate":"2021-10-24"},{"lineNumber":459,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":460,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":461,"author":{"gitId":"joshualeeky"},"content":"    public static void printErrorWithInitialAmount() {","lastModifiedDate":"2021-11-03"},{"lineNumber":462,"author":{"gitId":"joshualeeky"},"content":"        System.out.println(\"Please check the amount you entered for the expense or \"","lastModifiedDate":"2021-11-03"},{"lineNumber":463,"author":{"gitId":"joshualeeky"},"content":"                + \"the amount you allocated to each person again.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":464,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":465,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":466,"author":{"gitId":"joshualeeky"},"content":"    public static void sameNameInTripError() {","lastModifiedDate":"2021-11-04"},{"lineNumber":467,"author":{"gitId":"joshualeeky"},"content":"        System.out.println(\"You have entered people with the same name, please recreate the trip ensuring there are no \"","lastModifiedDate":"2021-11-04"},{"lineNumber":468,"author":{"gitId":"joshualeeky"},"content":"                + \"repeated names for the trip.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":469,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":470,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":471,"author":{"gitId":"joshualeeky"},"content":"    public static void sameNameInExpenseError() {","lastModifiedDate":"2021-11-04"},{"lineNumber":472,"author":{"gitId":"joshualeeky"},"content":"        System.out.println(\"You have entered people with the same name.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":473,"author":{"gitId":"joshualeeky"},"content":"        System.out.println(\"Please reenter the names of the participants of the expense, \"","lastModifiedDate":"2021-11-04"},{"lineNumber":474,"author":{"gitId":"joshualeeky"},"content":"                + \"ensuring there are no repeats:\");","lastModifiedDate":"2021-11-04"},{"lineNumber":475,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":476,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":477,"author":{"gitId":"yeezao"},"content":"    public static void printNoLastTripError() {","lastModifiedDate":"2021-10-23"},{"lineNumber":478,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"You may have deleted the most recently modified trip. \"","lastModifiedDate":"2021-10-23"},{"lineNumber":479,"author":{"gitId":"yeezao"},"content":"                + \"Please try again with the trip number of the trip you wish to edit.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":480,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":481,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":482,"author":{"gitId":"yeezao"},"content":"    public static void printCreateFileFailure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":483,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"The save file could not be created. Exiting the program now...\");","lastModifiedDate":"2021-10-24"},{"lineNumber":484,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":485,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":486,"author":{"gitId":"yeezao"},"content":"    public static void newFileSuccessfullyCreated() {","lastModifiedDate":"2021-10-26"},{"lineNumber":487,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"A new save file has been created!\");","lastModifiedDate":"2021-10-26"},{"lineNumber":488,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":489,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":490,"author":{"gitId":"yeezao"},"content":"    public static void printEmptyFileWarning() {","lastModifiedDate":"2021-10-26"},{"lineNumber":491,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"A save file was found, but it is empty.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":492,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"If you wish to recover the contents of your save file, please exit the program now.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":493,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"Otherwise, you may continue to use the program.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":494,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":495,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":496,"author":{"gitId":"joshualeeky"},"content":"    public static void printInvalidPeople(ArrayList\u003cString\u003e names) throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":497,"author":{"gitId":"joshualeeky"},"content":"        final Trip currTrip \u003d Storage.getOpenTrip();","lastModifiedDate":"2021-11-04"},{"lineNumber":498,"author":{"gitId":"joshualeeky"},"content":"        for (String name : names) {","lastModifiedDate":"2021-11-01"},{"lineNumber":499,"author":{"gitId":"joshualeeky"},"content":"            if (names.indexOf(name) \u003d\u003d names.size() - 1) {","lastModifiedDate":"2021-11-01"},{"lineNumber":500,"author":{"gitId":"leeyikai"},"content":"                System.out.print(name);","lastModifiedDate":"2021-11-03"},{"lineNumber":501,"author":{"gitId":"joshualeeky"},"content":"            } else if (names.indexOf(name) \u003d\u003d names.size() - 2) {","lastModifiedDate":"2021-11-01"},{"lineNumber":502,"author":{"gitId":"joshualeeky"},"content":"                System.out.print(name + \" and \");","lastModifiedDate":"2021-11-01"},{"lineNumber":503,"author":{"gitId":"joshualeeky"},"content":"            } else if (names.indexOf(name) \u003c names.size() - 2) {","lastModifiedDate":"2021-11-01"},{"lineNumber":504,"author":{"gitId":"joshualeeky"},"content":"                System.out.print(name + \", \");","lastModifiedDate":"2021-11-01"},{"lineNumber":505,"author":{"gitId":"joshualeeky"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":506,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":507,"author":{"gitId":"joshualeeky"},"content":"        if (names.size() \u003d\u003d 1) {","lastModifiedDate":"2021-11-03"},{"lineNumber":508,"author":{"gitId":"joshualeeky"},"content":"            System.out.print(\" is \");","lastModifiedDate":"2021-11-03"},{"lineNumber":509,"author":{"gitId":"joshualeeky"},"content":"        } else {","lastModifiedDate":"2021-11-03"},{"lineNumber":510,"author":{"gitId":"joshualeeky"},"content":"            System.out.print(\" are \");","lastModifiedDate":"2021-11-03"},{"lineNumber":511,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":512,"author":{"gitId":"joshualeeky"},"content":"        System.out.println(\"not part of the trip.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":513,"author":{"gitId":"joshualeeky"},"content":"        System.out.println(\"These are the names of the people who are part of the trip:\");","lastModifiedDate":"2021-10-25"},{"lineNumber":514,"author":{"gitId":"joshualeeky"},"content":"        printListOfPeople(currTrip.getListOfPersons());","lastModifiedDate":"2021-11-04"},{"lineNumber":515,"author":{"gitId":"joshualeeky"},"content":"        System.out.println(\"Please enter the names of the people who are involved in this expense again, \"","lastModifiedDate":"2021-11-01"},{"lineNumber":516,"author":{"gitId":"joshualeeky"},"content":"                + \"separated by a comma:\");","lastModifiedDate":"2021-11-01"},{"lineNumber":517,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":518,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":519,"author":{"gitId":"joshualeeky"},"content":"    public static void printTripClosed(Trip trip) {","lastModifiedDate":"2021-10-25"},{"lineNumber":520,"author":{"gitId":"joshualeeky"},"content":"        System.out.println(\"You have closed the following trip:\"","lastModifiedDate":"2021-10-25"},{"lineNumber":521,"author":{"gitId":"joshualeeky"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-25"},{"lineNumber":522,"author":{"gitId":"joshualeeky"},"content":"                + trip.getLocation() + \" | \" + trip.getDateOfTripString());","lastModifiedDate":"2021-10-25"},{"lineNumber":523,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":524,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":525,"author":{"gitId":"lixiyuan416"},"content":"    //@@author lixiyuan416","lastModifiedDate":"2021-10-26"},{"lineNumber":526,"author":{"gitId":"lixiyuan416"},"content":"    public static void equalSplitPrompt() {","lastModifiedDate":"2021-10-25"},{"lineNumber":527,"author":{"gitId":"lixiyuan416"},"content":"        System.out.println(\"Enter \\\"equal\\\" if expense is to be evenly split, enter individual spending otherwise\");","lastModifiedDate":"2021-10-25"},{"lineNumber":528,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":529,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":530,"author":{"gitId":"lixiyuan416"},"content":"    public static void askUserToConfirm() {","lastModifiedDate":"2021-10-26"},{"lineNumber":531,"author":{"gitId":"lixiyuan416"},"content":"        System.out.print(\"There will be people involved that don\u0027t need to pay, are you sure? (y/n): \");","lastModifiedDate":"2021-10-27"},{"lineNumber":532,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":533,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":534,"author":{"gitId":"lixiyuan416"},"content":"    public static void expenseDateInvalid() {","lastModifiedDate":"2021-10-26"},{"lineNumber":535,"author":{"gitId":"lixiyuan416"},"content":"        System.out.println(\"\\tPlease enter date as DD-MM-YYYY, or enter nothing to use today\u0027s date\");","lastModifiedDate":"2021-10-26"},{"lineNumber":536,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":537,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":538,"author":{"gitId":"lixiyuan416"},"content":"    public static void expensePromptDate() {","lastModifiedDate":"2021-10-26"},{"lineNumber":539,"author":{"gitId":"lixiyuan416"},"content":"        System.out.println(\"Enter date of expense:\");","lastModifiedDate":"2021-10-26"},{"lineNumber":540,"author":{"gitId":"lixiyuan416"},"content":"        System.out.println(\"\\tPress enter to use today\u0027s date\");","lastModifiedDate":"2021-10-26"},{"lineNumber":541,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":542,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":543,"author":{"gitId":"lixiyuan416"},"content":"    public static void noRecentExpenseError() {","lastModifiedDate":"2021-11-04"},{"lineNumber":544,"author":{"gitId":"lixiyuan416"},"content":"        System.out.println(\"You have not recently added an expense.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":545,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":546,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":547,"author":{"gitId":"lixiyuan416"},"content":"    public static void viewFilterDateFormatInvalid() {","lastModifiedDate":"2021-11-02"},{"lineNumber":548,"author":{"gitId":"lixiyuan416"},"content":"        System.out.println(\"\\tPlease enter date as DD-MM-YYYY\");","lastModifiedDate":"2021-10-26"},{"lineNumber":549,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":550,"author":{"gitId":"lixiyuan416"},"content":"    //@@author","lastModifiedDate":"2021-10-26"},{"lineNumber":551,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":552,"author":{"gitId":"yeezao"},"content":"    public static void changeForeignCurrencySuccessful(Trip tripToEdit, String original) {","lastModifiedDate":"2021-10-28"},{"lineNumber":553,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"Your foreign spending currency has been changed from \"","lastModifiedDate":"2021-10-28"},{"lineNumber":554,"author":{"gitId":"itsleeqian"},"content":"                + original + \" to \" + tripToEdit.getForeignCurrency() + \".\");","lastModifiedDate":"2021-11-06"},{"lineNumber":555,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":556,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":557,"author":{"gitId":"yeezao"},"content":"    public static void changeHomeCurrencySuccessful(Trip tripToEdit, String original) {","lastModifiedDate":"2021-10-28"},{"lineNumber":558,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"Your home currency has been changed from \"","lastModifiedDate":"2021-10-28"},{"lineNumber":559,"author":{"gitId":"itsleeqian"},"content":"                + original + \" to \" + tripToEdit.getRepaymentCurrency() + \".\");","lastModifiedDate":"2021-11-06"},{"lineNumber":560,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":561,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":562,"author":{"gitId":"yeezao"},"content":"    public static void changeExchangeRateSuccessful(Trip tripToEdit, double original) {","lastModifiedDate":"2021-10-28"},{"lineNumber":563,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"The exchange rate has been changed from \"","lastModifiedDate":"2021-10-28"},{"lineNumber":564,"author":{"gitId":"itsleeqian"},"content":"                + original + \" to \" + tripToEdit.getExchangeRate() + \".\");","lastModifiedDate":"2021-11-06"},{"lineNumber":565,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":566,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":567,"author":{"gitId":"yeezao"},"content":"    public static void changeDateSuccessful(Trip tripToEdit, String original) {","lastModifiedDate":"2021-10-28"},{"lineNumber":568,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"The date of your trip has been changed from \"","lastModifiedDate":"2021-10-28"},{"lineNumber":569,"author":{"gitId":"itsleeqian"},"content":"                + original + \" to \" + tripToEdit.getDateOfTripString() + \".\");","lastModifiedDate":"2021-11-06"},{"lineNumber":570,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":571,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":572,"author":{"gitId":"yeezao"},"content":"    public static void changeLocationSuccessful(Trip tripToEdit, String original) {","lastModifiedDate":"2021-10-28"},{"lineNumber":573,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"The location of your trip has been changed from \"","lastModifiedDate":"2021-10-28"},{"lineNumber":574,"author":{"gitId":"itsleeqian"},"content":"                + original + \" to \" + tripToEdit.getLocation() + \".\");","lastModifiedDate":"2021-11-06"},{"lineNumber":575,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":576,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":577,"author":{"gitId":"yeezao"},"content":"    public static void printCouldNotSaveMessage() {","lastModifiedDate":"2021-10-30"},{"lineNumber":578,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"Sorry, there was an error saving your data. We\u0027ll try to save your data again\"","lastModifiedDate":"2021-10-30"},{"lineNumber":579,"author":{"gitId":"yeezao"},"content":"                + \"the next time you enter a command.\");","lastModifiedDate":"2021-10-30"},{"lineNumber":580,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":581,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":582,"author":{"gitId":"yeezao"},"content":"    public static void printFileLoadedSuccessfully() {","lastModifiedDate":"2021-10-30"},{"lineNumber":583,"author":{"gitId":"yeezao"},"content":"        System.out.println();","lastModifiedDate":"2021-10-30"},{"lineNumber":584,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"Your saved data was successfully loaded!\");","lastModifiedDate":"2021-10-30"},{"lineNumber":585,"author":{"gitId":"yeezao"},"content":"        System.out.println();","lastModifiedDate":"2021-10-30"},{"lineNumber":586,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":587,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":588,"author":{"gitId":"yeezao"},"content":"    public static void printForceCancelled() {","lastModifiedDate":"2021-11-01"},{"lineNumber":589,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"You have chosen to cancel this operation.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":590,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":591,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":592,"author":{"gitId":"yeezao"},"content":"    public static void locationIsBlank() {","lastModifiedDate":"2021-11-02"},{"lineNumber":593,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"No location was entered. Please enter your trip location: \");","lastModifiedDate":"2021-11-02"},{"lineNumber":594,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":595,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":596,"author":{"gitId":"yeezao"},"content":"    public static void noPersonsAdded() {","lastModifiedDate":"2021-11-02"},{"lineNumber":597,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"No persons were added to this trip. Please enter the names of the people in this trip: \");","lastModifiedDate":"2021-11-02"},{"lineNumber":598,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":599,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":600,"author":{"gitId":"yeezao"},"content":"    public static void duplicateTripWarning() {","lastModifiedDate":"2021-11-04"},{"lineNumber":601,"author":{"gitId":"yeezao"},"content":"        System.out.println(\"A trip with similar information may already exist. Please confirm if you wish to proceed\"","lastModifiedDate":"2021-11-04"},{"lineNumber":602,"author":{"gitId":"yeezao"},"content":"                + \" with creating this trip.\");","lastModifiedDate":"2021-11-04"},{"lineNumber":603,"author":{"gitId":"yeezao"},"content":"        System.out.print(\"Enter \u0027y\u0027 if you wish to create this trip, or \u0027n\u0027 to cancel: \");","lastModifiedDate":"2021-11-04"},{"lineNumber":604,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":605,"author":{"gitId":"yeezao"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"yeezao":152,"joshualeeky":194,"itsleeqian":78,"lixiyuan416":124,"leeyikai":57}},{"path":"src/main/java/seedu/duke/exceptions/ForceCancelException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joshualeeky"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"yeezao"},"content":"public class ForceCancelException extends Exception {","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"yeezao"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"joshualeeky":1,"yeezao":3}},{"path":"src/main/java/seedu/duke/exceptions/InvalidAmountException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joshualeeky"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"joshualeeky"},"content":"public class InvalidAmountException extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"joshualeeky"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"joshualeeky":4}},{"path":"src/main/java/seedu/duke/exceptions/NoExpensesException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyikai"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-11-03"},{"lineNumber":2,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":3,"author":{"gitId":"leeyikai"},"content":"public class NoExpensesException extends Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":4,"author":{"gitId":"leeyikai"},"content":"}","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"leeyikai":4}},{"path":"src/main/java/seedu/duke/exceptions/SameNameException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joshualeeky"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"joshualeeky"},"content":"public class SameNameException extends Exception {","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"joshualeeky"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"joshualeeky":4}},{"path":"src/main/java/seedu/duke/exceptions/TripNotOpenException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joshualeeky"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"joshualeeky"},"content":"public class TripNotOpenException extends Exception {","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"joshualeeky"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"joshualeeky":4}},{"path":"src/main/java/seedu/duke/expense/Expense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joshualeeky"},"content":"package seedu.duke.expense;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.exceptions.ForceCancelException;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.exceptions.InvalidAmountException;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.Person;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.Storage;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"lixiyuan416"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"lixiyuan416"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"lixiyuan416"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"lixiyuan416"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"leeyikai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"joshualeeky"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"lixiyuan416"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"joshualeeky"},"content":"public class Expense implements ExpenseSplitter {","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"lixiyuan416"},"content":"    private double amountSpent;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"lixiyuan416"},"content":"    private String description;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"joshualeeky"},"content":"    private ArrayList\u003cPerson\u003e personsList;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"joshualeeky"},"content":"    private String category;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"lixiyuan416"},"content":"    private LocalDate date;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"joshualeeky"},"content":"    private Person payer;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"joshualeeky"},"content":"    private HashMap\u003cString, Double\u003e amountSplit \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"joshualeeky"},"content":"    private static final DateTimeFormatter inputPattern \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"joshualeeky"},"content":"    private static final DateTimeFormatter outputPattern \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"leeyikai"},"content":"    private static final int NUMBER_OF_INPUTS \u003d 3;","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"leeyikai"},"content":"    private static final int EXPENSE_INDEX \u003d 0;","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"leeyikai"},"content":"    private static final int CATEGORY_INDEX \u003d 1;","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"leeyikai"},"content":"    private static final int PERSONS_INDEX \u003d 2;","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"leeyikai"},"content":"    private static final int PERSONS_AND_DESCRIPTION_INDEX \u003d 2;","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"leeyikai"},"content":"    private static final int INDEX_OF_PERSON \u003d 0;","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"leeyikai"},"content":"     * Legacy constructor for Expense. Used as stub for testing. Does not include parsing.","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"leeyikai"},"content":"     * @param amountSpent amount spent in the expense.","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"leeyikai"},"content":"     * @param category category which is expense is being spent in.","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"leeyikai"},"content":"     * @param personsList list of people that were involved in the expense.","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"leeyikai"},"content":"     * @param description description of expense.","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"lixiyuan416"},"content":"    //@@author lixiyuan416","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"lixiyuan416"},"content":"    public Expense(double amountSpent, String description, ArrayList\u003cPerson\u003e personsList,","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"lixiyuan416"},"content":"                   String category, LocalDate date, Person payer, HashMap\u003cString, Double\u003e amountSplit) {","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"lixiyuan416"},"content":"        this.amountSpent \u003d amountSpent;","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"lixiyuan416"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"lixiyuan416"},"content":"        this.category \u003d category;","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"lixiyuan416"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"lixiyuan416"},"content":"        this.payer \u003d payer;","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"lixiyuan416"},"content":"        this.amountSplit \u003d amountSplit;","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"lixiyuan416"},"content":"        this.personsList \u003d personsList;","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"lixiyuan416"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"lixiyuan416"},"content":"     * Constructor for {@link Expense} class - contains parsing and amount assignment.","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"lixiyuan416"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"lixiyuan416"},"content":"     * @param inputDescription String of user input to be parsed and assigned to expense attributes","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"lixiyuan416"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"lixiyuan416"},"content":"    public Expense(String inputDescription) throws ForceCancelException {","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"lixiyuan416"},"content":"        String[] expenseInfo \u003d inputDescription.split(\" \", NUMBER_OF_INPUTS);","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"lixiyuan416"},"content":"        setAmountSpent(expenseInfo[EXPENSE_INDEX]);","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"lixiyuan416"},"content":"        setCategory(expenseInfo[CATEGORY_INDEX].toLowerCase());","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"lixiyuan416"},"content":"        this.description \u003d getDescriptionParse(expenseInfo[PERSONS_AND_DESCRIPTION_INDEX]);","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"lixiyuan416"},"content":"        this.personsList \u003d checkValidPersons(expenseInfo[PERSONS_INDEX]);","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"lixiyuan416"},"content":"        this.date \u003d promptDate();","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"lixiyuan416"},"content":"        if (personsList.size() \u003d\u003d 1) {","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"lixiyuan416"},"content":"            ExpenseSplitter.updateOnePersonSpending(this, personsList.get(INDEX_OF_PERSON));","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"lixiyuan416"},"content":"        } else {","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"lixiyuan416"},"content":"            ExpenseSplitter.updateIndividualSpending(this);","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"lixiyuan416"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"joshualeeky"},"content":"    //@@author joshualeeky","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"joshualeeky"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"joshualeeky"},"content":"     * Extracts the description of the expense from the user input.","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"joshualeeky"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"joshualeeky"},"content":"     * @param userInput the string that the user enters.","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"joshualeeky"},"content":"     * @return description of the expense.","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"joshualeeky"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"joshualeeky"},"content":"    private static String getDescriptionParse(String userInput) {","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"joshualeeky"},"content":"        return userInput.split(\"/\")[1].strip();","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"joshualeeky"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"joshualeeky"},"content":"     * Obtains a list of Person objects from a string of names separated by a comma. Also checks if there are repeated","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"joshualeeky"},"content":"     * names that were entered in the expense.","lastModifiedDate":"2021-11-06"},{"lineNumber":91,"author":{"gitId":"joshualeeky"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"joshualeeky"},"content":"     * @param userInput the string that the user enters.","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"joshualeeky"},"content":"     * @return ArrayList containing the Person objects included in the expense.","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"joshualeeky"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"joshualeeky"},"content":"    private static ArrayList\u003cPerson\u003e checkValidPersons(String userInput) throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"joshualeeky"},"content":"        String[] listOfPeople \u003d userInput.split(\"/\")[0].split(\",\");","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"joshualeeky"},"content":"        ArrayList\u003cString\u003e listOfPeopleNamesUpperCase \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"joshualeeky"},"content":"        ArrayList\u003cPerson\u003e validListOfPeople \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"joshualeeky"},"content":"        ArrayList\u003cString\u003e invalidListOfPeople \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"joshualeeky"},"content":"        if (listOfPeople.length \u003d\u003d 1 \u0026\u0026 listOfPeople[0].strip().equalsIgnoreCase(\"-all\")) {","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"joshualeeky"},"content":"            return Storage.getOpenTrip().getListOfPersons();","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"joshualeeky"},"content":"        boolean isThereRepeatedName \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"joshualeeky"},"content":"        for (String name : listOfPeople) {","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"joshualeeky"},"content":"            boolean isValidPerson \u003d false;","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"joshualeeky"},"content":"            for (Person person : Storage.getOpenTrip().getListOfPersons()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"joshualeeky"},"content":"                if (name.strip().equalsIgnoreCase(person.getName())) {","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"joshualeeky"},"content":"                    validListOfPeople.add(person);","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"joshualeeky"},"content":"                    isValidPerson \u003d true;","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"joshualeeky"},"content":"                    break;","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"joshualeeky"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"joshualeeky"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"joshualeeky"},"content":"            if (listOfPeopleNamesUpperCase.contains(name.strip().toUpperCase())) {","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"joshualeeky"},"content":"                isThereRepeatedName \u003d true;","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"joshualeeky"},"content":"            } else if (!isValidPerson) {","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"joshualeeky"},"content":"                invalidListOfPeople.add(name.strip());","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"joshualeeky"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":118,"author":{"gitId":"joshualeeky"},"content":"            listOfPeopleNamesUpperCase.add(name.strip().toUpperCase());","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":120,"author":{"gitId":"joshualeeky"},"content":"        if (!invalidListOfPeople.isEmpty()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":121,"author":{"gitId":"joshualeeky"},"content":"            Ui.printInvalidPeople(invalidListOfPeople);","lastModifiedDate":"2021-11-01"},{"lineNumber":122,"author":{"gitId":"joshualeeky"},"content":"            String newUserInput \u003d Ui.receiveUserInput();","lastModifiedDate":"2021-11-01"},{"lineNumber":123,"author":{"gitId":"joshualeeky"},"content":"            return checkValidPersons(newUserInput);","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"joshualeeky"},"content":"        } else if (isThereRepeatedName) {","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"joshualeeky"},"content":"            Ui.sameNameInExpenseError();","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"joshualeeky"},"content":"            String newUserInput \u003d Ui.receiveUserInput();","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"joshualeeky"},"content":"            return checkValidPersons(newUserInput);","lastModifiedDate":"2021-11-01"},{"lineNumber":128,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"joshualeeky"},"content":"        return validListOfPeople;","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"lixiyuan416"},"content":"    //@@author lixiyuan416","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":135,"author":{"gitId":"lixiyuan416"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"lixiyuan416"},"content":"     * Prompts user for date.","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"lixiyuan416"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"lixiyuan416"},"content":"     * @return today\u0027s date if user input is an empty string, otherwise keeps prompting user until a valid date is given","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"lixiyuan416"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"lixiyuan416"},"content":"    public LocalDate promptDate() throws ForceCancelException {","lastModifiedDate":"2021-11-01"},{"lineNumber":141,"author":{"gitId":"lixiyuan416"},"content":"        Ui.expensePromptDate();","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"lixiyuan416"},"content":"        String inputDate \u003d Ui.receiveUserInput();","lastModifiedDate":"2021-11-01"},{"lineNumber":143,"author":{"gitId":"lixiyuan416"},"content":"        while (!isDateValid(inputDate)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"lixiyuan416"},"content":"            inputDate \u003d Ui.receiveUserInput();","lastModifiedDate":"2021-11-01"},{"lineNumber":145,"author":{"gitId":"lixiyuan416"},"content":"            Storage.getLogger().log(Level.INFO, \"Invalid date format entered\");","lastModifiedDate":"2021-11-08"},{"lineNumber":146,"author":{"gitId":"lixiyuan416"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"lixiyuan416"},"content":"        if (inputDate.isEmpty()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":148,"author":{"gitId":"lixiyuan416"},"content":"            return LocalDate.now();","lastModifiedDate":"2021-11-08"},{"lineNumber":149,"author":{"gitId":"lixiyuan416"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":150,"author":{"gitId":"lixiyuan416"},"content":"        return LocalDate.parse(inputDate, inputPattern);","lastModifiedDate":"2021-11-01"},{"lineNumber":151,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"lixiyuan416"},"content":"    private Boolean isDateValid(String date) {","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"lixiyuan416"},"content":"        if (date.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"lixiyuan416"},"content":"            return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"lixiyuan416"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"lixiyuan416"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"lixiyuan416"},"content":"            LocalDate.parse(date, inputPattern);","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"lixiyuan416"},"content":"            //Additional check for weird dates like feb 31","lastModifiedDate":"2021-11-08"},{"lineNumber":160,"author":{"gitId":"lixiyuan416"},"content":"            if (!Parser.doesDateReallyExist(date)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":161,"author":{"gitId":"lixiyuan416"},"content":"                Ui.expenseDateInvalid();","lastModifiedDate":"2021-11-08"},{"lineNumber":162,"author":{"gitId":"lixiyuan416"},"content":"                return false;","lastModifiedDate":"2021-11-08"},{"lineNumber":163,"author":{"gitId":"lixiyuan416"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":164,"author":{"gitId":"lixiyuan416"},"content":"            return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"lixiyuan416"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"lixiyuan416"},"content":"            Ui.expenseDateInvalid();","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"lixiyuan416"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"lixiyuan416"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":171,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"lixiyuan416"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"lixiyuan416"},"content":"    public String toString() {","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"lixiyuan416"},"content":"        return (\"\\t\" + this.getDescription()","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"lixiyuan416"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"lixiyuan416"},"content":"                + \"\\t\" + \"Date: \" + this.getStringDate()","lastModifiedDate":"2021-10-28"},{"lineNumber":177,"author":{"gitId":"lixiyuan416"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"lixiyuan416"},"content":"                + \"\\t\" + \"Amount Spent: \" + Ui.stringForeignMoney(this.getAmountSpent())","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"lixiyuan416"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-11"},{"lineNumber":180,"author":{"gitId":"lixiyuan416"},"content":"                + \"\\t\" + \"People involved:\"","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"lixiyuan416"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"lixiyuan416"},"content":"                + getPersonExpense()","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"lixiyuan416"},"content":"                + \"\\t\" + \"Payer: \" + this.getPayer()","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"lixiyuan416"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"lixiyuan416"},"content":"                + \"\\t\" + \"Category: \" + this.category)","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"lixiyuan416"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":188,"author":{"gitId":"lixiyuan416"},"content":"    //@@author","lastModifiedDate":"2021-11-07"},{"lineNumber":189,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":190,"author":{"gitId":"leeyikai"},"content":"    public String getPersonExpense() {","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"leeyikai"},"content":"        StringBuilder returnString \u003d new StringBuilder();","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"joshualeeky"},"content":"        String name;","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"leeyikai"},"content":"        String formattedSpace \u003d \"\\t\";","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"leeyikai"},"content":"        for (Person p : personsList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"leeyikai"},"content":"            name \u003d p.getName();","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"leeyikai"},"content":"            returnString.append(formattedSpace);","lastModifiedDate":"2021-10-26"},{"lineNumber":197,"author":{"gitId":"joshualeeky"},"content":"            returnString.append(formattedSpace);","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"joshualeeky"},"content":"            returnString.append(personsList.indexOf(p) + 1).append(\") \");","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"joshualeeky"},"content":"            returnString.append(name).append(\", \");","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"joshualeeky"},"content":"            returnString.append(Ui.stringForeignMoney(getAmountSplit().get(name)));","lastModifiedDate":"2021-10-26"},{"lineNumber":201,"author":{"gitId":"leeyikai"},"content":"            returnString.append(System.lineSeparator());","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"leeyikai"},"content":"        return returnString.toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"itsleeqian"},"content":"    //@@author itsleeqian","lastModifiedDate":"2021-11-01"},{"lineNumber":207,"author":{"gitId":"itsleeqian"},"content":"    public void setAmountSpent(String amount) throws ForceCancelException {","lastModifiedDate":"2021-11-06"},{"lineNumber":208,"author":{"gitId":"itsleeqian"},"content":"        try {","lastModifiedDate":"2021-11-01"},{"lineNumber":209,"author":{"gitId":"itsleeqian"},"content":"            this.amountSpent \u003d Double.parseDouble(amount);","lastModifiedDate":"2021-11-01"},{"lineNumber":210,"author":{"gitId":"itsleeqian"},"content":"            if (this.amountSpent \u003c\u003d 0) {","lastModifiedDate":"2021-11-01"},{"lineNumber":211,"author":{"gitId":"itsleeqian"},"content":"                throw new InvalidAmountException();","lastModifiedDate":"2021-11-01"},{"lineNumber":212,"author":{"gitId":"itsleeqian"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":213,"author":{"gitId":"itsleeqian"},"content":"            this.amountSpent \u003d Double.parseDouble(amount);","lastModifiedDate":"2021-11-01"},{"lineNumber":214,"author":{"gitId":"itsleeqian"},"content":"            this.amountSpent \u003d Storage.formatForeignMoneyDouble(this.amountSpent);","lastModifiedDate":"2021-11-01"},{"lineNumber":215,"author":{"gitId":"itsleeqian"},"content":"        } catch (InvalidAmountException e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":216,"author":{"gitId":"itsleeqian"},"content":"            Ui.printInvalidAmountError();","lastModifiedDate":"2021-11-01"},{"lineNumber":217,"author":{"gitId":"itsleeqian"},"content":"            String newInput \u003d Ui.receiveUserInput();","lastModifiedDate":"2021-11-01"},{"lineNumber":218,"author":{"gitId":"itsleeqian"},"content":"            setAmountSpent(newInput);","lastModifiedDate":"2021-11-01"},{"lineNumber":219,"author":{"gitId":"itsleeqian"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":220,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":221,"author":{"gitId":"itsleeqian"},"content":"    //@@author","lastModifiedDate":"2021-11-01"},{"lineNumber":222,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":223,"author":{"gitId":"lixiyuan416"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-06"},{"lineNumber":224,"author":{"gitId":"lixiyuan416"},"content":"        return description;","lastModifiedDate":"2021-10-06"},{"lineNumber":225,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":226,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":227,"author":{"gitId":"leeyikai"},"content":"    public void setDate(String date) {","lastModifiedDate":"2021-11-07"},{"lineNumber":228,"author":{"gitId":"leeyikai"},"content":"        this.date \u003d LocalDate.parse(date, inputPattern);","lastModifiedDate":"2021-11-07"},{"lineNumber":229,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":230,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":231,"author":{"gitId":"itsleeqian"},"content":"    public void setCategory(String category) {","lastModifiedDate":"2021-11-01"},{"lineNumber":232,"author":{"gitId":"itsleeqian"},"content":"        this.category \u003d category;","lastModifiedDate":"2021-11-01"},{"lineNumber":233,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":234,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":235,"author":{"gitId":"joshualeeky"},"content":"    public String getCategory() {","lastModifiedDate":"2021-11-07"},{"lineNumber":236,"author":{"gitId":"joshualeeky"},"content":"        return category;","lastModifiedDate":"2021-11-07"},{"lineNumber":237,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":238,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":239,"author":{"gitId":"lixiyuan416"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-10-06"},{"lineNumber":240,"author":{"gitId":"lixiyuan416"},"content":"        return date;","lastModifiedDate":"2021-10-06"},{"lineNumber":241,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":242,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":243,"author":{"gitId":"joshualeeky"},"content":"    public String getStringDate() {","lastModifiedDate":"2021-10-25"},{"lineNumber":244,"author":{"gitId":"joshualeeky"},"content":"        return date.format(outputPattern);","lastModifiedDate":"2021-10-25"},{"lineNumber":245,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":246,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":247,"author":{"gitId":"joshualeeky"},"content":"    public ArrayList\u003cPerson\u003e getPersonsList() {","lastModifiedDate":"2021-11-07"},{"lineNumber":248,"author":{"gitId":"joshualeeky"},"content":"        return personsList;","lastModifiedDate":"2021-11-07"},{"lineNumber":249,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":250,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":251,"author":{"gitId":"joshualeeky"},"content":"    public double getAmountSpent() {","lastModifiedDate":"2021-11-07"},{"lineNumber":252,"author":{"gitId":"joshualeeky"},"content":"        return amountSpent;","lastModifiedDate":"2021-11-07"},{"lineNumber":253,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":254,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":255,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":256,"author":{"gitId":"joshualeeky"},"content":"    public void setPayer(Person person) {","lastModifiedDate":"2021-11-07"},{"lineNumber":257,"author":{"gitId":"joshualeeky"},"content":"        this.payer \u003d person;","lastModifiedDate":"2021-11-07"},{"lineNumber":258,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":259,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":260,"author":{"gitId":"joshualeeky"},"content":"    public Person getPayer() {","lastModifiedDate":"2021-11-07"},{"lineNumber":261,"author":{"gitId":"joshualeeky"},"content":"        return payer;","lastModifiedDate":"2021-11-07"},{"lineNumber":262,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":263,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":264,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":265,"author":{"gitId":"joshualeeky"},"content":"    public void setAmountSplit(Person person, double amount) {","lastModifiedDate":"2021-11-07"},{"lineNumber":266,"author":{"gitId":"joshualeeky"},"content":"        amountSplit.put(person.getName(), amount);","lastModifiedDate":"2021-11-07"},{"lineNumber":267,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":268,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":269,"author":{"gitId":"joshualeeky"},"content":"    public HashMap\u003cString, Double\u003e getAmountSplit() {","lastModifiedDate":"2021-11-07"},{"lineNumber":270,"author":{"gitId":"joshualeeky"},"content":"        return amountSplit;","lastModifiedDate":"2021-11-07"},{"lineNumber":271,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":272,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":273,"author":{"gitId":"yeezao"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"joshualeeky":111,"yeezao":5,"lixiyuan416":107,"itsleeqian":21,"leeyikai":29}},{"path":"src/main/java/seedu/duke/expense/ExpenseSplitter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joshualeeky"},"content":"package seedu.duke.expense;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.exceptions.ForceCancelException;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.Person;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.Storage;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"joshualeeky"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"lixiyuan416"},"content":"public interface ExpenseSplitter {","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"joshualeeky"},"content":"    double EPSILON \u003d 0.001;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"joshualeeky"},"content":"    //@@author joshualeeky","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"joshualeeky"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"joshualeeky"},"content":"     * If there is only one person that is part of the expense, the function automatically assigns the amount spent","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"joshualeeky"},"content":"     * on the expense to the person in the expense.","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"joshualeeky"},"content":"     * @param expense Expense that is being added into the current trip.","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"joshualeeky"},"content":"     * @param person Person who is part of the trip.","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"joshualeeky"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"joshualeeky"},"content":"    static void updateOnePersonSpending(Expense expense, Person person) {","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"joshualeeky"},"content":"        person.setMoneyOwed(person, expense.getAmountSpent());","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"joshualeeky"},"content":"        expense.setPayer(person);","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"joshualeeky"},"content":"        expense.setAmountSplit(person, expense.getAmountSpent());","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"joshualeeky"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"joshualeeky"},"content":"     * Updates the spending of each individual who is entered into the expense.","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"joshualeeky"},"content":"     * @param expense Expense that is being added.","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"joshualeeky"},"content":"     * @throws ForceCancelException Cancel the creation of the expense anytime an input is required by the user.","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"joshualeeky"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"joshualeeky"},"content":"    static void updateIndividualSpending(Expense expense) throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"joshualeeky"},"content":"        Person payer \u003d getValidPersonInExpenseFromString(expense);","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"joshualeeky"},"content":"        expense.setPayer(payer);","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"joshualeeky"},"content":"        HashMap\u003cPerson, Double\u003e amountBeingPaid \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"joshualeeky"},"content":"        Ui.equalSplitPrompt();","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"joshualeeky"},"content":"        double total \u003d 0.0;","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"joshualeeky"},"content":"        for (Person person : expense.getPersonsList()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"joshualeeky"},"content":"            double amountRemaining \u003d expense.getAmountSpent() - total;","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"joshualeeky"},"content":"            if (amountRemaining \u003c EPSILON) {","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"joshualeeky"},"content":"                assignZeroToRemaining(expense, amountBeingPaid, payer);","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"joshualeeky"},"content":"                return;","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"joshualeeky"},"content":"            } else if (checkLastPersonInExpense(expense, person)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"joshualeeky"},"content":"                assignRemainder(person, payer, amountRemaining, expense, amountBeingPaid);","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"joshualeeky"},"content":"                return;","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"joshualeeky"},"content":"            } else {","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"joshualeeky"},"content":"                amountBeingPaid \u003d assignNormal(person, payer, amountRemaining, total, amountBeingPaid, expense);","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"joshualeeky"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"joshualeeky"},"content":"            if (amountBeingPaid !\u003d null) {","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"joshualeeky"},"content":"                total +\u003d amountBeingPaid.get(person);","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"joshualeeky"},"content":"            } else {","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"joshualeeky"},"content":"                return;","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"joshualeeky"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"joshualeeky"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"joshualeeky"},"content":"     * Helper function for updateIndividualSpending(). Updates the amountBeingPaid HashMap while checking if the amount","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"joshualeeky"},"content":"     * entered is higher than the amount spent for the expense as well as checking if the value entered is valid.","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"joshualeeky"},"content":"     * @param person the current Person who is being assigned a value","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"joshualeeky"},"content":"     * @param payer the Person who paid for the Expense","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"joshualeeky"},"content":"     * @param amountRemaining the amount of money left to be assigned","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"joshualeeky"},"content":"     * @param total the total amount of money that has been assigned","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"joshualeeky"},"content":"     * @param amountBeingPaid HashMap of the amount each Person is assigned","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"joshualeeky"},"content":"     * @param expense the expense that is being added to the current Trip.","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"joshualeeky"},"content":"     * @return updated amountBeingPaid HashMap.","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"joshualeeky"},"content":"     * @throws ForceCancelException if the user chooses to cancel the operation.","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"joshualeeky"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"joshualeeky"},"content":"    private static HashMap\u003cPerson, Double\u003e assignNormal(Person person, Person payer, double amountRemaining,","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"joshualeeky"},"content":"            double total, HashMap\u003cPerson, Double\u003e amountBeingPaid, Expense expense) throws ForceCancelException {","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"joshualeeky"},"content":"        Ui.printHowMuchDidPersonSpend(person.getName(), amountRemaining);","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"joshualeeky"},"content":"        String amountString \u003d Ui.receiveUserInput();","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"joshualeeky"},"content":"        if (checkAssignEqual(amountBeingPaid, amountString)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"joshualeeky"},"content":"            assignEqualAmounts(payer, expense, amountBeingPaid);","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"joshualeeky"},"content":"            return null;","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"joshualeeky"},"content":"        } else {","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"joshualeeky"},"content":"            try {","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"joshualeeky"},"content":"                double amount \u003d Double.parseDouble(amountString);","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"joshualeeky"},"content":"                amount \u003d Storage.formatForeignMoneyDouble(amount);","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"joshualeeky"},"content":"                total +\u003d amount;","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"joshualeeky"},"content":"                if (total \u003e expense.getAmountSpent() || amount \u003c 0) {","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"joshualeeky"},"content":"                    Ui.printIncorrectAmount(expense.getAmountSpent());","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"joshualeeky"},"content":"                    updateIndividualSpending(expense);","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"joshualeeky"},"content":"                    return null;","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"joshualeeky"},"content":"                } else {","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"joshualeeky"},"content":"                    amountBeingPaid.put(person, amount);","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"joshualeeky"},"content":"                    return amountBeingPaid;","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"joshualeeky"},"content":"                }","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"joshualeeky"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"joshualeeky"},"content":"                Ui.argNotNumber();","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"joshualeeky"},"content":"                return assignNormal(person, payer, amountRemaining, total, amountBeingPaid, expense);","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"joshualeeky"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"joshualeeky"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"joshualeeky"},"content":"     * Helper function for updateIndividualSpending(). checks if the user input is \u0027equal\u0027 to indicate that the user","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"joshualeeky"},"content":"     * would like to split the expense equally among the people involved in the expense. Also checks to ensure that","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"joshualeeky"},"content":"     * the command being entered is before the user enters any amount for any person.","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"joshualeeky"},"content":"     * @param amountBeingPaid Hashmap containing the people who the user has assigned values to.","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"joshualeeky"},"content":"     * @param amountString the user input.","lastModifiedDate":"2021-11-02"},{"lineNumber":103,"author":{"gitId":"joshualeeky"},"content":"     * @return true or false boolean value to indicate if the user has used \u0027equal\u0027.","lastModifiedDate":"2021-11-02"},{"lineNumber":104,"author":{"gitId":"joshualeeky"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"joshualeeky"},"content":"    private static boolean checkAssignEqual(HashMap\u003cPerson, Double\u003e amountBeingPaid, String amountString) {","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"joshualeeky"},"content":"        return amountString.equalsIgnoreCase(\"equal\") \u0026\u0026 amountBeingPaid.isEmpty();","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"joshualeeky"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"joshualeeky"},"content":"     * Helper function for updateIndividualSpending(). Checks if a Person is the last to be assigned an amount","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"joshualeeky"},"content":"     * in the expense.","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"joshualeeky"},"content":"     * @param expense Expense that is being checked.","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"joshualeeky"},"content":"     * @param person Person to be checked.","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"joshualeeky"},"content":"     * @return true or false boolean value to indicate if it is the last person in the expense.","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"joshualeeky"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"joshualeeky"},"content":"    private static boolean checkLastPersonInExpense(Expense expense, Person person) {","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"joshualeeky"},"content":"        return expense.getPersonsList().indexOf(person) \u003d\u003d expense.getPersonsList().size() - 1;","lastModifiedDate":"2021-11-01"},{"lineNumber":118,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":119,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":120,"author":{"gitId":"joshualeeky"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"joshualeeky"},"content":"     * Helper function for updateIndividualSpending(). Assigns the rest of the Persons the amount 0 if the amount","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"joshualeeky"},"content":"     * for the expense has been fully paid for already. Requires user confirmation.","lastModifiedDate":"2021-11-02"},{"lineNumber":123,"author":{"gitId":"joshualeeky"},"content":"     * @param expense Expense that is being added to the current trip.","lastModifiedDate":"2021-11-02"},{"lineNumber":124,"author":{"gitId":"joshualeeky"},"content":"     * @param amountBeingPaid HashMap containing the people who the user has assigned values to.","lastModifiedDate":"2021-11-02"},{"lineNumber":125,"author":{"gitId":"joshualeeky"},"content":"     * @param payer Person who is paying for the expense.","lastModifiedDate":"2021-11-02"},{"lineNumber":126,"author":{"gitId":"joshualeeky"},"content":"     * @throws ForceCancelException Cancels the creation of the expense in the event the user wishes to","lastModifiedDate":"2021-11-02"},{"lineNumber":127,"author":{"gitId":"joshualeeky"},"content":"     *     stop creating the expense.","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"joshualeeky"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"joshualeeky"},"content":"    private static void assignZeroToRemaining(Expense expense, HashMap\u003cPerson, Double\u003e amountBeingPaid, Person payer)","lastModifiedDate":"2021-11-01"},{"lineNumber":130,"author":{"gitId":"joshualeeky"},"content":"            throws ForceCancelException {","lastModifiedDate":"2021-11-01"},{"lineNumber":131,"author":{"gitId":"joshualeeky"},"content":"        Ui.askUserToConfirm();","lastModifiedDate":"2021-11-01"},{"lineNumber":132,"author":{"gitId":"joshualeeky"},"content":"        if (Parser.getUserToConfirm()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":133,"author":{"gitId":"joshualeeky"},"content":"            for (Person person : expense.getPersonsList()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":134,"author":{"gitId":"joshualeeky"},"content":"                if (!amountBeingPaid.containsKey(person)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":135,"author":{"gitId":"joshualeeky"},"content":"                    amountBeingPaid.put(person, 0d);","lastModifiedDate":"2021-11-01"},{"lineNumber":136,"author":{"gitId":"joshualeeky"},"content":"                }","lastModifiedDate":"2021-11-01"},{"lineNumber":137,"author":{"gitId":"joshualeeky"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":138,"author":{"gitId":"joshualeeky"},"content":"            assignAmounts(payer, expense,amountBeingPaid);","lastModifiedDate":"2021-11-01"},{"lineNumber":139,"author":{"gitId":"joshualeeky"},"content":"        } else {","lastModifiedDate":"2021-11-01"},{"lineNumber":140,"author":{"gitId":"joshualeeky"},"content":"            Ui.printErrorWithInitialAmount();","lastModifiedDate":"2021-11-03"},{"lineNumber":141,"author":{"gitId":"joshualeeky"},"content":"            updateIndividualSpending(expense);","lastModifiedDate":"2021-11-01"},{"lineNumber":142,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":143,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":144,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":145,"author":{"gitId":"joshualeeky"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":146,"author":{"gitId":"joshualeeky"},"content":"     * Helper function for updateIndividualSpending(). Assigns the remaining amount of the expense to the last person","lastModifiedDate":"2021-11-06"},{"lineNumber":147,"author":{"gitId":"joshualeeky"},"content":"     * in the expense list after receiving approval from the user.","lastModifiedDate":"2021-11-06"},{"lineNumber":148,"author":{"gitId":"joshualeeky"},"content":"     * @param person the Person who is to be assigned the amount.","lastModifiedDate":"2021-11-06"},{"lineNumber":149,"author":{"gitId":"joshualeeky"},"content":"     * @param payer the Person who paid for the expense.","lastModifiedDate":"2021-11-06"},{"lineNumber":150,"author":{"gitId":"joshualeeky"},"content":"     * @param amountRemaining the amount to be assigned to the last person.","lastModifiedDate":"2021-11-06"},{"lineNumber":151,"author":{"gitId":"joshualeeky"},"content":"     * @param expense the expense that is being added.","lastModifiedDate":"2021-11-06"},{"lineNumber":152,"author":{"gitId":"joshualeeky"},"content":"     * @param amountBeingPaid the HashMap containing how much each Person spent on the expense.","lastModifiedDate":"2021-11-06"},{"lineNumber":153,"author":{"gitId":"joshualeeky"},"content":"     * @throws ForceCancelException allows the user to cancel the command.","lastModifiedDate":"2021-11-06"},{"lineNumber":154,"author":{"gitId":"joshualeeky"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":155,"author":{"gitId":"joshualeeky"},"content":"    private static void assignRemainder(Person person, Person payer, double amountRemaining, Expense expense,","lastModifiedDate":"2021-11-01"},{"lineNumber":156,"author":{"gitId":"joshualeeky"},"content":"                                        HashMap\u003cPerson, Double\u003e amountBeingPaid) throws ForceCancelException {","lastModifiedDate":"2021-11-01"},{"lineNumber":157,"author":{"gitId":"joshualeeky"},"content":"        Ui.askAutoAssignRemainder(person, amountRemaining);","lastModifiedDate":"2021-11-01"},{"lineNumber":158,"author":{"gitId":"joshualeeky"},"content":"        if (Parser.getUserToConfirm()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":159,"author":{"gitId":"joshualeeky"},"content":"            amountBeingPaid.put(person, Storage.formatForeignMoneyDouble(amountRemaining));","lastModifiedDate":"2021-11-01"},{"lineNumber":160,"author":{"gitId":"joshualeeky"},"content":"            assignAmounts(payer, expense, amountBeingPaid);","lastModifiedDate":"2021-11-01"},{"lineNumber":161,"author":{"gitId":"joshualeeky"},"content":"        } else {","lastModifiedDate":"2021-11-01"},{"lineNumber":162,"author":{"gitId":"joshualeeky"},"content":"            Ui.printErrorWithInitialAmount();","lastModifiedDate":"2021-11-03"},{"lineNumber":163,"author":{"gitId":"joshualeeky"},"content":"            updateIndividualSpending(expense);","lastModifiedDate":"2021-11-01"},{"lineNumber":164,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":165,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":166,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":167,"author":{"gitId":"joshualeeky"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":168,"author":{"gitId":"joshualeeky"},"content":"     * Helper function for updateIndividualSpending(). Checks the input String from the user to ensure that the name","lastModifiedDate":"2021-11-02"},{"lineNumber":169,"author":{"gitId":"joshualeeky"},"content":"     * entered is of a person who is part of the Expense.","lastModifiedDate":"2021-11-02"},{"lineNumber":170,"author":{"gitId":"joshualeeky"},"content":"     * @param expense Expense that is being checked.","lastModifiedDate":"2021-11-02"},{"lineNumber":171,"author":{"gitId":"joshualeeky"},"content":"     * @return Person who is associated to the String that was input by the user, if the user input is invalid and the","lastModifiedDate":"2021-11-02"},{"lineNumber":172,"author":{"gitId":"joshualeeky"},"content":"     *     String is not of a name of a Person in the Expense, the function will ask the user for an input again.","lastModifiedDate":"2021-11-02"},{"lineNumber":173,"author":{"gitId":"joshualeeky"},"content":"     * @throws ForceCancelException Allows the user to cancel anytime there is an input required by the user.","lastModifiedDate":"2021-11-02"},{"lineNumber":174,"author":{"gitId":"joshualeeky"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":175,"author":{"gitId":"joshualeeky"},"content":"    private static Person getValidPersonInExpenseFromString(Expense expense) throws ForceCancelException {","lastModifiedDate":"2021-11-01"},{"lineNumber":176,"author":{"gitId":"joshualeeky"},"content":"        Ui.printGetPersonPaid();","lastModifiedDate":"2021-11-01"},{"lineNumber":177,"author":{"gitId":"joshualeeky"},"content":"        String name \u003d Ui.receiveUserInput();","lastModifiedDate":"2021-11-01"},{"lineNumber":178,"author":{"gitId":"joshualeeky"},"content":"        for (Person person : expense.getPersonsList()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":179,"author":{"gitId":"joshualeeky"},"content":"            if (name.equalsIgnoreCase(person.getName())) {","lastModifiedDate":"2021-11-01"},{"lineNumber":180,"author":{"gitId":"joshualeeky"},"content":"                return person;","lastModifiedDate":"2021-11-01"},{"lineNumber":181,"author":{"gitId":"joshualeeky"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":182,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":183,"author":{"gitId":"joshualeeky"},"content":"        Ui.printPersonNotInExpense();","lastModifiedDate":"2021-11-01"},{"lineNumber":184,"author":{"gitId":"joshualeeky"},"content":"        Ui.printPeopleInvolved(expense.getPersonsList());","lastModifiedDate":"2021-11-01"},{"lineNumber":185,"author":{"gitId":"joshualeeky"},"content":"        return getValidPersonInExpenseFromString(expense);","lastModifiedDate":"2021-11-02"},{"lineNumber":186,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":187,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":188,"author":{"gitId":"joshualeeky"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":189,"author":{"gitId":"joshualeeky"},"content":"     * Helper function for updateIndividualSpending(). Divides the amount spent on the expense equally among all the","lastModifiedDate":"2021-11-02"},{"lineNumber":190,"author":{"gitId":"joshualeeky"},"content":"     * participants in the Expense. If there is a deficit or surplus, the payer will bear the extra or loss.","lastModifiedDate":"2021-11-02"},{"lineNumber":191,"author":{"gitId":"joshualeeky"},"content":"     * @param payer Person who is paying for the Expense.","lastModifiedDate":"2021-11-02"},{"lineNumber":192,"author":{"gitId":"joshualeeky"},"content":"     * @param expense Expense that is being added to the current Trip.","lastModifiedDate":"2021-11-02"},{"lineNumber":193,"author":{"gitId":"joshualeeky"},"content":"     * @param amountBeingPaid The amount that is being paid for the Expense.","lastModifiedDate":"2021-11-02"},{"lineNumber":194,"author":{"gitId":"joshualeeky"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":195,"author":{"gitId":"joshualeeky"},"content":"    private static void assignEqualAmounts(Person payer, Expense expense, HashMap\u003cPerson, Double\u003e amountBeingPaid)","lastModifiedDate":"2021-11-04"},{"lineNumber":196,"author":{"gitId":"joshualeeky"},"content":"            throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":197,"author":{"gitId":"joshualeeky"},"content":"        double total \u003d 0.0;","lastModifiedDate":"2021-11-01"},{"lineNumber":198,"author":{"gitId":"joshualeeky"},"content":"        double amount \u003d Storage.formatForeignMoneyDouble(expense.getAmountSpent() / expense.getPersonsList().size());","lastModifiedDate":"2021-11-01"},{"lineNumber":199,"author":{"gitId":"joshualeeky"},"content":"        for (Person people : expense.getPersonsList()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":200,"author":{"gitId":"joshualeeky"},"content":"            amountBeingPaid.put(people, amount);","lastModifiedDate":"2021-11-01"},{"lineNumber":201,"author":{"gitId":"joshualeeky"},"content":"            total +\u003d amount;","lastModifiedDate":"2021-11-01"},{"lineNumber":202,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":203,"author":{"gitId":"joshualeeky"},"content":"        if (total !\u003d expense.getAmountSpent()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":204,"author":{"gitId":"joshualeeky"},"content":"            double payerAmount \u003d amountBeingPaid.get(payer) + (expense.getAmountSpent() - total);","lastModifiedDate":"2021-11-01"},{"lineNumber":205,"author":{"gitId":"joshualeeky"},"content":"            amountBeingPaid.put(payer, payerAmount);","lastModifiedDate":"2021-11-01"},{"lineNumber":206,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":207,"author":{"gitId":"joshualeeky"},"content":"        assignAmounts(payer, expense, amountBeingPaid);","lastModifiedDate":"2021-11-01"},{"lineNumber":208,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":209,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":210,"author":{"gitId":"joshualeeky"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":211,"author":{"gitId":"joshualeeky"},"content":"     * Helper function for updateIndividualSpending(). Stores the value that each Person is assigned in their own Person","lastModifiedDate":"2021-11-02"},{"lineNumber":212,"author":{"gitId":"joshualeeky"},"content":"     * class to be used for other functions, also stores the value each Person owes the payer of the Expense.","lastModifiedDate":"2021-11-02"},{"lineNumber":213,"author":{"gitId":"joshualeeky"},"content":"     * @param payer Person who paid for the Expense.","lastModifiedDate":"2021-11-02"},{"lineNumber":214,"author":{"gitId":"joshualeeky"},"content":"     * @param expense The Expense that is being added to the current Trip.","lastModifiedDate":"2021-11-02"},{"lineNumber":215,"author":{"gitId":"joshualeeky"},"content":"     * @param amountBeingPaid HashMap containing the people who the user has assigned values to.","lastModifiedDate":"2021-11-02"},{"lineNumber":216,"author":{"gitId":"joshualeeky"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":217,"author":{"gitId":"joshualeeky"},"content":"    private static void assignAmounts(Person payer, Expense expense, HashMap\u003cPerson, Double\u003e amountBeingPaid) {","lastModifiedDate":"2021-11-01"},{"lineNumber":218,"author":{"gitId":"joshualeeky"},"content":"        for (Person person : expense.getPersonsList()) {","lastModifiedDate":"2021-11-01"},{"lineNumber":219,"author":{"gitId":"joshualeeky"},"content":"            if (person \u003d\u003d payer) {","lastModifiedDate":"2021-11-01"},{"lineNumber":220,"author":{"gitId":"joshualeeky"},"content":"                person.setMoneyOwed(person, amountBeingPaid.get(person));","lastModifiedDate":"2021-11-01"},{"lineNumber":221,"author":{"gitId":"joshualeeky"},"content":"                expense.setAmountSplit(person, amountBeingPaid.get(person));","lastModifiedDate":"2021-11-01"},{"lineNumber":222,"author":{"gitId":"joshualeeky"},"content":"                continue;","lastModifiedDate":"2021-11-01"},{"lineNumber":223,"author":{"gitId":"joshualeeky"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":224,"author":{"gitId":"joshualeeky"},"content":"            payer.setMoneyOwed(person, amountBeingPaid.get(person));","lastModifiedDate":"2021-11-01"},{"lineNumber":225,"author":{"gitId":"joshualeeky"},"content":"            person.setMoneyOwed(payer, -amountBeingPaid.get(person));","lastModifiedDate":"2021-11-01"},{"lineNumber":226,"author":{"gitId":"joshualeeky"},"content":"            person.setMoneyOwed(person, amountBeingPaid.get(person));","lastModifiedDate":"2021-11-01"},{"lineNumber":227,"author":{"gitId":"joshualeeky"},"content":"            expense.setAmountSplit(person, amountBeingPaid.get(person));","lastModifiedDate":"2021-11-01"},{"lineNumber":228,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":229,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":230,"author":{"gitId":"joshualeeky"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"joshualeeky":229,"lixiyuan416":1}},{"path":"src/main/java/seedu/duke/parser/CommandExecutor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joshualeeky"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.exceptions.ForceCancelException;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"leeyikai"},"content":"import seedu.duke.exceptions.NoExpensesException;","lastModifiedDate":"2021-11-03"},{"lineNumber":5,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.exceptions.SameNameException;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.exceptions.TripNotOpenException;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.trip.Trip;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.Storage;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.Person;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.expense.Expense;","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"joshualeeky"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"yeezao"},"content":"import static seedu.duke.Storage.LAST_INTERACTED;","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"leeyikai"},"content":"abstract class CommandExecutor extends PaymentOptimizer implements ExpenseSummarizer {","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"yeezao"},"content":"    private static final int EDIT_ATTR_COUNT \u003d 2;","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"joshualeeky"},"content":"    private static final int ATTRIBUTE_DATA \u003d 1;","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"joshualeeky"},"content":"    private static final int EDIT_ATTRIBUTE \u003d 0;","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"yeezao"},"content":"    private static final int EDIT_INDEX \u003d 0;","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"joshualeeky"},"content":"    private static final String EDIT_LOCATION \u003d \"-location\";","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"joshualeeky"},"content":"    private static final String EDIT_DATE \u003d \"-date\";","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"joshualeeky"},"content":"    private static final String EDIT_EXRATE \u003d \"-exchangerate\";","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"joshualeeky"},"content":"    private static final String EDIT_FORCUR \u003d \"-forcur\";","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"joshualeeky"},"content":"    private static final String EDIT_HOMECUR \u003d \"-homecur\";","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"joshualeeky"},"content":"    private static final int NEW_TRIP_ATTRIBUTES_COUNT \u003d 6;","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"leeyikai"},"content":"    private static final int NUMBER_OF_PARAMETERS \u003d 3;","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"leeyikai"},"content":"    private static final int INDEX_OF_SECOND_COMMAND \u003d 0;","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"leeyikai"},"content":"    private static final int INDEX_OF_CATEGORY \u003d 1;","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"leeyikai"},"content":"    private static final int INDEX_OF_EXPENSE_ATTRIBUTE \u003d 2;","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"leeyikai"},"content":"    private static final String LAST \u003d \"last\";","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"leeyikai"},"content":"    private static final String FILTER \u003d \"filter\";","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"yeezao"},"content":"    //@@author yeezao","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"yeezao"},"content":"     * Creates a new instance of {@link Trip}.","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"yeezao"},"content":"     * @param attributesInString attributes of the trip to be added (in a single {@link String}), before being parsed.","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"yeezao"},"content":"     * @throws ForceCancelException allows the user to cancel an operation when an input is required.","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"yeezao"},"content":"     * @throws IndexOutOfBoundsException if the user has not entered sufficient attributes to create a new trip.","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"yeezao"},"content":"     * @throws SameNameException if the user enters multiple persons with the same name.","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"yeezao"},"content":"    protected static void executeCreateTrip(String attributesInString)","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"yeezao"},"content":"            throws ForceCancelException, IndexOutOfBoundsException, SameNameException {","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"yeezao"},"content":"        String[] newTripInfo \u003d attributesInString.split(\"/\", NEW_TRIP_ATTRIBUTES_COUNT);","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"yeezao"},"content":"        if (newTripInfo.length \u003c NEW_TRIP_ATTRIBUTES_COUNT) {","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"yeezao"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"yeezao"},"content":"        Trip newTrip \u003d new Trip(newTripInfo);","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"yeezao"},"content":"        if (!isTripADuplicate(newTrip)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"yeezao"},"content":"            addNewTripToList(newTrip);","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"yeezao"},"content":"        } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"yeezao"},"content":"            if (doesUserWantToAddDuplicateTrip()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"yeezao"},"content":"                addNewTripToList(newTrip);","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"yeezao"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"yeezao"},"content":"     * Adds a newly-created {@link Trip} to the \u003ccode\u003elistOfTrips\u003c/code\u003e.","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"yeezao"},"content":"     * @param newTrip instance of a newly-created {@link Trip}.","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"yeezao"},"content":"    private static void addNewTripToList(Trip newTrip) {","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"yeezao"},"content":"        Storage.getListOfTrips().add(newTrip);","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"yeezao"},"content":"        Ui.newTripSuccessfullyCreated(newTrip);","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"yeezao"},"content":"        Storage.setLastTrip(newTrip);","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"yeezao"},"content":"     * Asks if the user wants to proceed with adding a trip that has been detected as a duplicate.","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"yeezao"},"content":"     * @return true if the user still wants to add the trip","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"yeezao"},"content":"     * @throws ForceCancelException if the user does not want to add the trip","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"yeezao"},"content":"    private static boolean doesUserWantToAddDuplicateTrip() throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"yeezao"},"content":"        Ui.duplicateTripWarning();","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"yeezao"},"content":"        while (true) {","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"yeezao"},"content":"            String userOption \u003d Ui.receiveUserInput();","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"yeezao"},"content":"            if (userOption.contains(Ui.USER_CONTINUE)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"yeezao"},"content":"                return true;","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"yeezao"},"content":"            } else if (userOption.contains(Ui.USER_QUIT)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"yeezao"},"content":"                Ui.printForceCancelled();","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"yeezao"},"content":"                return false;","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"yeezao"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"yeezao"},"content":"     * Checks if the trip might be a duplicate of an already existing trip.","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"yeezao"},"content":"     * The following attributes are checked: date, exchange rate, location, currency.","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"yeezao"},"content":"     * @param newTrip instance of newly-created {@link Trip} object","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"yeezao"},"content":"     * @return true if the trip is detected as a possible duplicate","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"yeezao"},"content":"    public static boolean isTripADuplicate(Trip newTrip) {","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"yeezao"},"content":"        for (Trip tripToCompare : Storage.getListOfTrips()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"yeezao"},"content":"            if (tripToCompare.getDateOfTrip().equals(newTrip.getDateOfTrip())","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"yeezao"},"content":"                    \u0026\u0026 tripToCompare.getExchangeRate() \u003d\u003d newTrip.getExchangeRate()","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"yeezao"},"content":"                    \u0026\u0026 tripToCompare.getForeignCurrency().equalsIgnoreCase(newTrip.getForeignCurrency())","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"yeezao"},"content":"                    \u0026\u0026 tripToCompare.getLocation().equalsIgnoreCase(newTrip.getLocation())) {","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"yeezao"},"content":"                return true;","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"yeezao"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"yeezao"},"content":"        return false;","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":112,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":113,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"yeezao"},"content":"     * Gets the trip to be edited and edits the specified attributes of the trip.","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"yeezao"},"content":"     * @param inputDescription - user input of trip index and trip attributes to edit.","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"yeezao"},"content":"     * @throws ForceCancelException allows the user to cancel an operation when an input is required.","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"yeezao"},"content":"     * @see Parser#editTripWithIndex(String)","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"yeezao"},"content":"     * @see Parser#editTripPerAttribute(Trip, String)","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":124,"author":{"gitId":"yeezao"},"content":"    protected static void executeEditTrip(String inputDescription) throws ForceCancelException {","lastModifiedDate":"2021-11-02"},{"lineNumber":125,"author":{"gitId":"yeezao"},"content":"        String[] tripToEditInfo \u003d inputDescription.split(\" \", EDIT_ATTR_COUNT);","lastModifiedDate":"2021-11-08"},{"lineNumber":126,"author":{"gitId":"yeezao"},"content":"        String attributesToEdit \u003d tripToEditInfo[ATTRIBUTE_DATA];","lastModifiedDate":"2021-11-08"},{"lineNumber":127,"author":{"gitId":"yeezao"},"content":"        Trip tripToEdit;","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"yeezao"},"content":"        if (tripToEditInfo[EDIT_INDEX].equals(LAST_INTERACTED)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":129,"author":{"gitId":"yeezao"},"content":"            tripToEdit \u003d Storage.getLastTrip();","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"yeezao"},"content":"            if (tripToEdit \u003d\u003d null) {","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"yeezao"},"content":"                Ui.printNoLastTripError();","lastModifiedDate":"2021-11-02"},{"lineNumber":132,"author":{"gitId":"yeezao"},"content":"                return;","lastModifiedDate":"2021-11-02"},{"lineNumber":133,"author":{"gitId":"yeezao"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":134,"author":{"gitId":"yeezao"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":135,"author":{"gitId":"yeezao"},"content":"            tripToEdit \u003d editTripWithIndex(tripToEditInfo[EDIT_INDEX].strip());","lastModifiedDate":"2021-11-08"},{"lineNumber":136,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"yeezao"},"content":"        editTripPerAttribute(tripToEdit, attributesToEdit);","lastModifiedDate":"2021-11-02"},{"lineNumber":138,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":139,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":140,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":141,"author":{"gitId":"yeezao"},"content":"     * Sets the user-specified trip as opened. Requires that the {@code listOfTrips} has at least one open trip.","lastModifiedDate":"2021-11-02"},{"lineNumber":142,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":143,"author":{"gitId":"yeezao"},"content":"     * @param indexAsString index of trip to open, as a {@link String} to be parsed.","lastModifiedDate":"2021-11-02"},{"lineNumber":144,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":145,"author":{"gitId":"yeezao"},"content":"     * @throws ForceCancelException allows the user to cancel an operation when an input is required.","lastModifiedDate":"2021-11-07"},{"lineNumber":146,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":147,"author":{"gitId":"yeezao"},"content":"    protected static void executeOpen(String indexAsString) throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"yeezao"},"content":"        //assumes that listOfTrips have at least 1 trip","lastModifiedDate":"2021-11-02"},{"lineNumber":149,"author":{"gitId":"yeezao"},"content":"        int indexToGet \u003d Integer.parseInt(indexAsString) - 1;","lastModifiedDate":"2021-11-02"},{"lineNumber":150,"author":{"gitId":"yeezao"},"content":"        if (Storage.checkOpenTrip()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":151,"author":{"gitId":"yeezao"},"content":"            Ui.printTripClosed(Storage.getOpenTrip());","lastModifiedDate":"2021-11-02"},{"lineNumber":152,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":153,"author":{"gitId":"yeezao"},"content":"        Storage.setOpenTrip(indexToGet);","lastModifiedDate":"2021-11-02"},{"lineNumber":154,"author":{"gitId":"yeezao"},"content":"        Ui.printOpenTripMessage(Storage.getOpenTrip());","lastModifiedDate":"2021-11-02"},{"lineNumber":155,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":156,"author":{"gitId":"yeezao"},"content":"    //@@author","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":158,"author":{"gitId":"itsleeqian"},"content":"    //@@author itsleeqian","lastModifiedDate":"2021-11-06"},{"lineNumber":159,"author":{"gitId":"itsleeqian"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":160,"author":{"gitId":"itsleeqian"},"content":"     * Prints out the summary of expenses of an individual or everyone.","lastModifiedDate":"2021-11-06"},{"lineNumber":161,"author":{"gitId":"itsleeqian"},"content":"     * @param inputParams the individual to view. Can also be null to print everyone.","lastModifiedDate":"2021-11-06"},{"lineNumber":162,"author":{"gitId":"itsleeqian"},"content":"     * @throws ForceCancelException allows the user to cancel an operation when an input is required.","lastModifiedDate":"2021-11-06"},{"lineNumber":163,"author":{"gitId":"itsleeqian"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":164,"author":{"gitId":"itsleeqian"},"content":"    protected static void executeSummary(String inputParams) throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"itsleeqian"},"content":"        Trip currentTrip \u003d Storage.getOpenTrip();","lastModifiedDate":"2021-11-02"},{"lineNumber":166,"author":{"gitId":"itsleeqian"},"content":"        if (inputParams \u003d\u003d null) {","lastModifiedDate":"2021-11-02"},{"lineNumber":167,"author":{"gitId":"itsleeqian"},"content":"            //list everybody\u0027s expense summary","lastModifiedDate":"2021-11-02"},{"lineNumber":168,"author":{"gitId":"itsleeqian"},"content":"            for (Person p : currentTrip.getListOfPersons()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":169,"author":{"gitId":"itsleeqian"},"content":"                ExpenseSummarizer.getIndividualExpenseSummary(p);","lastModifiedDate":"2021-11-04"},{"lineNumber":170,"author":{"gitId":"itsleeqian"},"content":"                System.out.println();","lastModifiedDate":"2021-11-02"},{"lineNumber":171,"author":{"gitId":"itsleeqian"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":172,"author":{"gitId":"itsleeqian"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":173,"author":{"gitId":"itsleeqian"},"content":"            //list only 1 person, if exists","lastModifiedDate":"2021-11-02"},{"lineNumber":174,"author":{"gitId":"itsleeqian"},"content":"            try {","lastModifiedDate":"2021-11-02"},{"lineNumber":175,"author":{"gitId":"itsleeqian"},"content":"                //returns null if no such person","lastModifiedDate":"2021-11-02"},{"lineNumber":176,"author":{"gitId":"itsleeqian"},"content":"                Person personToView \u003d getValidPersonInTripFromString(inputParams, currentTrip);","lastModifiedDate":"2021-11-02"},{"lineNumber":177,"author":{"gitId":"itsleeqian"},"content":"                if (personToView !\u003d null) {","lastModifiedDate":"2021-11-02"},{"lineNumber":178,"author":{"gitId":"itsleeqian"},"content":"                    ExpenseSummarizer.getIndividualExpenseSummary(personToView);","lastModifiedDate":"2021-11-04"},{"lineNumber":179,"author":{"gitId":"itsleeqian"},"content":"                } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":180,"author":{"gitId":"itsleeqian"},"content":"                    Ui.printNoPersonFound(inputParams);","lastModifiedDate":"2021-11-02"},{"lineNumber":181,"author":{"gitId":"itsleeqian"},"content":"                    Ui.printSummaryFormatError();","lastModifiedDate":"2021-11-02"},{"lineNumber":182,"author":{"gitId":"itsleeqian"},"content":"                }","lastModifiedDate":"2021-11-02"},{"lineNumber":183,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":184,"author":{"gitId":"itsleeqian"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":185,"author":{"gitId":"itsleeqian"},"content":"                Ui.printNoExpensesError();","lastModifiedDate":"2021-11-02"},{"lineNumber":186,"author":{"gitId":"itsleeqian"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":187,"author":{"gitId":"itsleeqian"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":188,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":189,"author":{"gitId":"itsleeqian"},"content":"    //@@author","lastModifiedDate":"2021-11-06"},{"lineNumber":190,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":191,"author":{"gitId":"leeyikai"},"content":"    //@@author leeyikai","lastModifiedDate":"2021-11-02"},{"lineNumber":192,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":193,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":194,"author":{"gitId":"leeyikai"},"content":"     * Checks to see which expenses user wants to see and calls the appropriate method.","lastModifiedDate":"2021-11-06"},{"lineNumber":195,"author":{"gitId":"leeyikai"},"content":"     * @param inputParams contains the information that determines what expenses user wants to see","lastModifiedDate":"2021-11-06"},{"lineNumber":196,"author":{"gitId":"leeyikai"},"content":"     * @throws ForceCancelException allows the user to cancel an operation when an input is required.","lastModifiedDate":"2021-11-06"},{"lineNumber":197,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":198,"author":{"gitId":"leeyikai"},"content":"    protected static void executeView(String inputParams) throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":199,"author":{"gitId":"leeyikai"},"content":"        Trip openTrip \u003d Storage.getOpenTrip();","lastModifiedDate":"2021-11-02"},{"lineNumber":200,"author":{"gitId":"leeyikai"},"content":"        if (inputParams \u003d\u003d null) {","lastModifiedDate":"2021-11-02"},{"lineNumber":201,"author":{"gitId":"leeyikai"},"content":"            openTrip.viewAllExpenses();","lastModifiedDate":"2021-11-02"},{"lineNumber":202,"author":{"gitId":"leeyikai"},"content":"        } else if (inputParams.equalsIgnoreCase(LAST_INTERACTED)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":203,"author":{"gitId":"leeyikai"},"content":"            if (openTrip.getLastExpense() \u003d\u003d null) {","lastModifiedDate":"2021-11-04"},{"lineNumber":204,"author":{"gitId":"leeyikai"},"content":"                Ui.noRecentExpenseError();","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"leeyikai"},"content":"            } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":206,"author":{"gitId":"leeyikai"},"content":"                System.out.println(openTrip.getLastExpense());","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"leeyikai"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":208,"author":{"gitId":"leeyikai"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":209,"author":{"gitId":"leeyikai"},"content":"            String[] paramString \u003d inputParams.split(\" \", NUMBER_OF_PARAMETERS);","lastModifiedDate":"2021-11-08"},{"lineNumber":210,"author":{"gitId":"leeyikai"},"content":"            String secondCommand \u003d paramString[INDEX_OF_SECOND_COMMAND];","lastModifiedDate":"2021-11-08"},{"lineNumber":211,"author":{"gitId":"leeyikai"},"content":"            String expenseCategory \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":212,"author":{"gitId":"leeyikai"},"content":"            String expenseAttribute \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":213,"author":{"gitId":"leeyikai"},"content":"            if (!isNumeric(secondCommand)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":214,"author":{"gitId":"leeyikai"},"content":"                expenseCategory \u003d paramString[INDEX_OF_CATEGORY];","lastModifiedDate":"2021-11-08"},{"lineNumber":215,"author":{"gitId":"leeyikai"},"content":"                expenseAttribute \u003d paramString[INDEX_OF_EXPENSE_ATTRIBUTE];","lastModifiedDate":"2021-11-08"},{"lineNumber":216,"author":{"gitId":"leeyikai"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":217,"author":{"gitId":"leeyikai"},"content":"            if (secondCommand.equalsIgnoreCase(FILTER)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":218,"author":{"gitId":"leeyikai"},"content":"                try {","lastModifiedDate":"2021-11-02"},{"lineNumber":219,"author":{"gitId":"leeyikai"},"content":"                    openTrip.getFilteredExpenses(expenseCategory, expenseAttribute);","lastModifiedDate":"2021-11-02"},{"lineNumber":220,"author":{"gitId":"leeyikai"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":221,"author":{"gitId":"leeyikai"},"content":"                    Ui.printNoExpensesError();","lastModifiedDate":"2021-11-02"},{"lineNumber":222,"author":{"gitId":"leeyikai"},"content":"                }","lastModifiedDate":"2021-11-02"},{"lineNumber":223,"author":{"gitId":"leeyikai"},"content":"            } else if (isNumeric(secondCommand)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":224,"author":{"gitId":"leeyikai"},"content":"                try {","lastModifiedDate":"2021-11-02"},{"lineNumber":225,"author":{"gitId":"leeyikai"},"content":"                    int index \u003d Integer.parseInt(secondCommand);","lastModifiedDate":"2021-11-02"},{"lineNumber":226,"author":{"gitId":"leeyikai"},"content":"                    System.out.println(openTrip.getExpenseAtIndex(index));","lastModifiedDate":"2021-11-02"},{"lineNumber":227,"author":{"gitId":"leeyikai"},"content":"                } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":228,"author":{"gitId":"leeyikai"},"content":"                    Ui.printUnknownExpenseIndexError();","lastModifiedDate":"2021-11-02"},{"lineNumber":229,"author":{"gitId":"leeyikai"},"content":"                }","lastModifiedDate":"2021-11-02"},{"lineNumber":230,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":231,"author":{"gitId":"leeyikai"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":232,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":233,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":234,"author":{"gitId":"leeyikai"},"content":"    //@@author","lastModifiedDate":"2021-11-06"},{"lineNumber":235,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":236,"author":{"gitId":"yeezao"},"content":"    //@@author yeezao","lastModifiedDate":"2021-11-04"},{"lineNumber":237,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":238,"author":{"gitId":"yeezao"},"content":"     * Checks whether to delete trip or delete expense (by determining if a trip is open),","lastModifiedDate":"2021-11-02"},{"lineNumber":239,"author":{"gitId":"yeezao"},"content":"     * and calls the appropriate method.","lastModifiedDate":"2021-11-02"},{"lineNumber":240,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":241,"author":{"gitId":"yeezao"},"content":"     * @param inputParams attributes of trip to be deleted (if valid, this should be the trip/expense index)","lastModifiedDate":"2021-11-02"},{"lineNumber":242,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":243,"author":{"gitId":"yeezao"},"content":"     * @throws ForceCancelException allows the user to cancel an operation when an input is required.","lastModifiedDate":"2021-11-07"},{"lineNumber":244,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":245,"author":{"gitId":"yeezao"},"content":"     * @see Parser#executeDeleteTrip(int)","lastModifiedDate":"2021-11-02"},{"lineNumber":246,"author":{"gitId":"yeezao"},"content":"     * @see Parser#executeDeleteExpense(int)","lastModifiedDate":"2021-11-02"},{"lineNumber":247,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":248,"author":{"gitId":"yeezao"},"content":"    protected static void executeDelete(String inputParams) throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":249,"author":{"gitId":"yeezao"},"content":"        int index;","lastModifiedDate":"2021-11-04"},{"lineNumber":250,"author":{"gitId":"yeezao"},"content":"        if (Storage.checkOpenTrip()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":251,"author":{"gitId":"yeezao"},"content":"            Trip currTrip \u003d Storage.getOpenTrip();","lastModifiedDate":"2021-11-04"},{"lineNumber":252,"author":{"gitId":"yeezao"},"content":"            if (inputParams.equalsIgnoreCase(LAST_INTERACTED)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":253,"author":{"gitId":"yeezao"},"content":"                index \u003d currTrip.getListOfExpenses().indexOf(currTrip.getLastExpense());","lastModifiedDate":"2021-11-04"},{"lineNumber":254,"author":{"gitId":"yeezao"},"content":"            } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":255,"author":{"gitId":"yeezao"},"content":"                index \u003d Integer.parseInt(inputParams) - 1;","lastModifiedDate":"2021-11-04"},{"lineNumber":256,"author":{"gitId":"yeezao"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":257,"author":{"gitId":"yeezao"},"content":"            executeDeleteExpense(index);","lastModifiedDate":"2021-11-02"},{"lineNumber":258,"author":{"gitId":"yeezao"},"content":"        } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":259,"author":{"gitId":"yeezao"},"content":"            if (inputParams.equalsIgnoreCase(LAST_INTERACTED)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":260,"author":{"gitId":"yeezao"},"content":"                index \u003d Storage.getListOfTrips().indexOf(Storage.getLastTrip());","lastModifiedDate":"2021-11-04"},{"lineNumber":261,"author":{"gitId":"yeezao"},"content":"            } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":262,"author":{"gitId":"yeezao"},"content":"                index \u003d Integer.parseInt(inputParams) - 1;","lastModifiedDate":"2021-11-04"},{"lineNumber":263,"author":{"gitId":"yeezao"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":264,"author":{"gitId":"yeezao"},"content":"            executeDeleteTrip(index);","lastModifiedDate":"2021-11-04"},{"lineNumber":265,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":266,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":267,"author":{"gitId":"yeezao"},"content":"    //@@author","lastModifiedDate":"2021-11-04"},{"lineNumber":268,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":269,"author":{"gitId":"itsleeqian"},"content":"    //@@author itsleeqian","lastModifiedDate":"2021-11-06"},{"lineNumber":270,"author":{"gitId":"itsleeqian"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":271,"author":{"gitId":"itsleeqian"},"content":"     * Lists either trips or expenses depending on if a trip is open or not.","lastModifiedDate":"2021-11-06"},{"lineNumber":272,"author":{"gitId":"itsleeqian"},"content":"     * @throws ForceCancelException allows the user to cancel an operation when an input is required","lastModifiedDate":"2021-11-06"},{"lineNumber":273,"author":{"gitId":"itsleeqian"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":274,"author":{"gitId":"itsleeqian"},"content":"    protected static void executeList() throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":275,"author":{"gitId":"itsleeqian"},"content":"        if (!Storage.checkOpenTrip()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":276,"author":{"gitId":"itsleeqian"},"content":"            Ui.printAllTrips();","lastModifiedDate":"2021-11-02"},{"lineNumber":277,"author":{"gitId":"itsleeqian"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":278,"author":{"gitId":"itsleeqian"},"content":"            Ui.printExpensesInList(Storage.getOpenTrip().getListOfExpenses());","lastModifiedDate":"2021-11-04"},{"lineNumber":279,"author":{"gitId":"itsleeqian"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":280,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":281,"author":{"gitId":"itsleeqian"},"content":"    //@@author","lastModifiedDate":"2021-11-06"},{"lineNumber":282,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":283,"author":{"gitId":"joshualeeky"},"content":"    //@@author joshualeeky","lastModifiedDate":"2021-11-06"},{"lineNumber":284,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":285,"author":{"gitId":"joshualeeky"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":286,"author":{"gitId":"joshualeeky"},"content":"     * Creates an Expense object in the current opened trip.","lastModifiedDate":"2021-11-06"},{"lineNumber":287,"author":{"gitId":"joshualeeky"},"content":"     * @param inputDescription the input of the user.","lastModifiedDate":"2021-11-06"},{"lineNumber":288,"author":{"gitId":"joshualeeky"},"content":"     * @throws ForceCancelException allows the user to cancel an operation when an input is required.","lastModifiedDate":"2021-11-06"},{"lineNumber":289,"author":{"gitId":"joshualeeky"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":290,"author":{"gitId":"joshualeeky"},"content":"    protected static void executeCreateExpense(String inputDescription) throws ForceCancelException {","lastModifiedDate":"2021-11-06"},{"lineNumber":291,"author":{"gitId":"joshualeeky"},"content":"        Trip currTrip \u003d Storage.getOpenTrip();","lastModifiedDate":"2021-11-02"},{"lineNumber":292,"author":{"gitId":"joshualeeky"},"content":"        assert Storage.checkOpenTrip();","lastModifiedDate":"2021-11-02"},{"lineNumber":293,"author":{"gitId":"joshualeeky"},"content":"        Expense newExpense \u003d new Expense(inputDescription);","lastModifiedDate":"2021-11-02"},{"lineNumber":294,"author":{"gitId":"joshualeeky"},"content":"        currTrip.addExpense(newExpense);","lastModifiedDate":"2021-11-02"},{"lineNumber":295,"author":{"gitId":"joshualeeky"},"content":"        currTrip.setLastExpense(newExpense);","lastModifiedDate":"2021-11-04"},{"lineNumber":296,"author":{"gitId":"joshualeeky"},"content":"        Ui.printExpenseAddedSuccess();","lastModifiedDate":"2021-11-02"},{"lineNumber":297,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":298,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":299,"author":{"gitId":"joshualeeky"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":300,"author":{"gitId":"joshualeeky"},"content":"     * Prints how much a Person object owe other Person object and/or how much other Person objects owe the Person","lastModifiedDate":"2021-11-06"},{"lineNumber":301,"author":{"gitId":"joshualeeky"},"content":"     * object.","lastModifiedDate":"2021-11-06"},{"lineNumber":302,"author":{"gitId":"joshualeeky"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":303,"author":{"gitId":"joshualeeky"},"content":"     * @param inputParams the input of the user.","lastModifiedDate":"2021-11-06"},{"lineNumber":304,"author":{"gitId":"joshualeeky"},"content":"     * @throws ForceCancelException allows the user to cancel an operation when an input is required.","lastModifiedDate":"2021-11-06"},{"lineNumber":305,"author":{"gitId":"joshualeeky"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":306,"author":{"gitId":"joshualeeky"},"content":"    protected static void executeAmount(String inputParams) throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":307,"author":{"gitId":"joshualeeky"},"content":"        Trip trip \u003d Storage.getOpenTrip();","lastModifiedDate":"2021-11-02"},{"lineNumber":308,"author":{"gitId":"joshualeeky"},"content":"        Person toBeChecked \u003d getValidPersonInTripFromString(inputParams, trip);","lastModifiedDate":"2021-11-02"},{"lineNumber":309,"author":{"gitId":"joshualeeky"},"content":"        if (toBeChecked \u003d\u003d null) {","lastModifiedDate":"2021-11-02"},{"lineNumber":310,"author":{"gitId":"joshualeeky"},"content":"            Ui.invalidArgForAmount();","lastModifiedDate":"2021-11-02"},{"lineNumber":311,"author":{"gitId":"joshualeeky"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":312,"author":{"gitId":"joshualeeky"},"content":"            Ui.printAmount(toBeChecked, trip);","lastModifiedDate":"2021-11-03"},{"lineNumber":313,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":314,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":315,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":316,"author":{"gitId":"joshualeeky"},"content":"    //@@author","lastModifiedDate":"2021-11-06"},{"lineNumber":317,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":318,"author":{"gitId":"itsleeqian"},"content":"    //@@author itsleeqian","lastModifiedDate":"2021-11-06"},{"lineNumber":319,"author":{"gitId":"itsleeqian"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":320,"author":{"gitId":"itsleeqian"},"content":"     * Lists the people involved in a trip.","lastModifiedDate":"2021-11-06"},{"lineNumber":321,"author":{"gitId":"itsleeqian"},"content":"     * @throws TripNotOpenException cannot list people if no trip is open.","lastModifiedDate":"2021-11-06"},{"lineNumber":322,"author":{"gitId":"itsleeqian"},"content":"     * @throws ForceCancelException allows the user to cancel an operation when an input is required.","lastModifiedDate":"2021-11-06"},{"lineNumber":323,"author":{"gitId":"itsleeqian"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":324,"author":{"gitId":"itsleeqian"},"content":"    protected static void executePeople() throws TripNotOpenException, ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":325,"author":{"gitId":"itsleeqian"},"content":"        Trip currTrip \u003d Storage.getOpenTrip();","lastModifiedDate":"2021-11-04"},{"lineNumber":326,"author":{"gitId":"itsleeqian"},"content":"        if (Storage.checkOpenTrip()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":327,"author":{"gitId":"itsleeqian"},"content":"            System.out.println(\"These are the people involved in this trip:\");","lastModifiedDate":"2021-11-02"},{"lineNumber":328,"author":{"gitId":"itsleeqian"},"content":"            Ui.printListOfPeople(currTrip.getListOfPersons());","lastModifiedDate":"2021-11-04"},{"lineNumber":329,"author":{"gitId":"itsleeqian"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":330,"author":{"gitId":"itsleeqian"},"content":"            throw new TripNotOpenException();","lastModifiedDate":"2021-11-02"},{"lineNumber":331,"author":{"gitId":"itsleeqian"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":332,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":333,"author":{"gitId":"itsleeqian"},"content":"    //@@author","lastModifiedDate":"2021-11-06"},{"lineNumber":334,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":335,"author":{"gitId":"leeyikai"},"content":"    //@@author leeyikai","lastModifiedDate":"2021-11-06"},{"lineNumber":336,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":337,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":338,"author":{"gitId":"leeyikai"},"content":"     * Check that there are expenses in the current open trip. If there is, execute the optimization method.","lastModifiedDate":"2021-11-06"},{"lineNumber":339,"author":{"gitId":"leeyikai"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":340,"author":{"gitId":"leeyikai"},"content":"     * @throws NoExpensesException stops the optimize command when there is no expenses available to optimize.","lastModifiedDate":"2021-11-06"},{"lineNumber":341,"author":{"gitId":"leeyikai"},"content":"     * @throws ForceCancelException allows the user to cancel an operation when an input is required.","lastModifiedDate":"2021-11-06"},{"lineNumber":342,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":343,"author":{"gitId":"leeyikai"},"content":"    protected static void executeOptimize() throws NoExpensesException, ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":344,"author":{"gitId":"leeyikai"},"content":"        if (Storage.getOpenTrip().getListOfExpenses().size() \u003e 0) {","lastModifiedDate":"2021-11-03"},{"lineNumber":345,"author":{"gitId":"leeyikai"},"content":"            checkForOptimization();","lastModifiedDate":"2021-11-03"},{"lineNumber":346,"author":{"gitId":"leeyikai"},"content":"        } else {","lastModifiedDate":"2021-11-03"},{"lineNumber":347,"author":{"gitId":"leeyikai"},"content":"            throw new NoExpensesException();","lastModifiedDate":"2021-11-03"},{"lineNumber":348,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":349,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":350,"author":{"gitId":"leeyikai"},"content":"    //@@author","lastModifiedDate":"2021-11-06"},{"lineNumber":351,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":352,"author":{"gitId":"joshualeeky"},"content":"    //@@author joshualeeky","lastModifiedDate":"2021-11-06"},{"lineNumber":353,"author":{"gitId":"joshualeeky"},"content":"    private static void executeDeleteExpense(int expenseIndex) throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":354,"author":{"gitId":"joshualeeky"},"content":"        Trip currentTrip \u003d Storage.getOpenTrip();","lastModifiedDate":"2021-11-04"},{"lineNumber":355,"author":{"gitId":"joshualeeky"},"content":"        Expense expenseToDelete \u003d currentTrip.getListOfExpenses().get(expenseIndex);","lastModifiedDate":"2021-11-04"},{"lineNumber":356,"author":{"gitId":"joshualeeky"},"content":"        double expenseAmount \u003d expenseToDelete.getAmountSpent();","lastModifiedDate":"2021-11-04"},{"lineNumber":357,"author":{"gitId":"joshualeeky"},"content":"        correctBalances(expenseToDelete);","lastModifiedDate":"2021-11-04"},{"lineNumber":358,"author":{"gitId":"joshualeeky"},"content":"        currentTrip.removeExpense(expenseIndex);","lastModifiedDate":"2021-11-04"},{"lineNumber":359,"author":{"gitId":"joshualeeky"},"content":"        Ui.printDeleteExpenseSuccessful(expenseAmount);","lastModifiedDate":"2021-11-04"},{"lineNumber":360,"author":{"gitId":"joshualeeky"},"content":"        currentTrip.setLastExpense(null);","lastModifiedDate":"2021-11-04"},{"lineNumber":361,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":362,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":363,"author":{"gitId":"yeezao"},"content":"    //@@author yeezao","lastModifiedDate":"2021-11-04"},{"lineNumber":364,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":365,"author":{"gitId":"yeezao"},"content":"     * Deletes a trip from the \u003ccode\u003elistOfTrips\u003c/code\u003e.","lastModifiedDate":"2021-11-02"},{"lineNumber":366,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":367,"author":{"gitId":"yeezao"},"content":"     * @param tripIndex index of Trip to be applied to \u003ccode\u003elistOfTrips\u003c/code\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":368,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":369,"author":{"gitId":"yeezao"},"content":"    private static void executeDeleteTrip(int tripIndex) {","lastModifiedDate":"2021-11-02"},{"lineNumber":370,"author":{"gitId":"yeezao"},"content":"        ArrayList\u003cTrip\u003e listOfTrips \u003d Storage.getListOfTrips();","lastModifiedDate":"2021-11-02"},{"lineNumber":371,"author":{"gitId":"yeezao"},"content":"        Trip tripToDelete \u003d listOfTrips.get(tripIndex);","lastModifiedDate":"2021-11-02"},{"lineNumber":372,"author":{"gitId":"yeezao"},"content":"        listOfTrips.remove(tripIndex);","lastModifiedDate":"2021-11-02"},{"lineNumber":373,"author":{"gitId":"yeezao"},"content":"        Ui.printDeleteTripSuccessful(tripToDelete);","lastModifiedDate":"2021-11-02"},{"lineNumber":374,"author":{"gitId":"yeezao"},"content":"        Storage.setLastTrip(null);","lastModifiedDate":"2021-11-02"},{"lineNumber":375,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":376,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":377,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":378,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":379,"author":{"gitId":"yeezao"},"content":"     * Parses the user input to determine which attributes to edit,","lastModifiedDate":"2021-11-02"},{"lineNumber":380,"author":{"gitId":"yeezao"},"content":"     * and calls the relevant setters to edit those attributes.","lastModifiedDate":"2021-11-02"},{"lineNumber":381,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":382,"author":{"gitId":"yeezao"},"content":"     * @param tripToEdit user-specified trip to be edited","lastModifiedDate":"2021-11-02"},{"lineNumber":383,"author":{"gitId":"yeezao"},"content":"     * @param attributeToEdit String of all attributes to be added and their new values","lastModifiedDate":"2021-11-02"},{"lineNumber":384,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":385,"author":{"gitId":"yeezao"},"content":"     * @throws ForceCancelException allows the user to cancel an operation when an input is required.","lastModifiedDate":"2021-11-07"},{"lineNumber":386,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":387,"author":{"gitId":"yeezao"},"content":"    private static void editTripPerAttribute(Trip tripToEdit, String attributeToEdit) throws ForceCancelException {","lastModifiedDate":"2021-11-02"},{"lineNumber":388,"author":{"gitId":"yeezao"},"content":"        String[] splitCommandAndData \u003d attributeToEdit.split(\" \", EDIT_ATTR_COUNT);","lastModifiedDate":"2021-11-08"},{"lineNumber":389,"author":{"gitId":"yeezao"},"content":"        String data \u003d splitCommandAndData[ATTRIBUTE_DATA];","lastModifiedDate":"2021-11-02"},{"lineNumber":390,"author":{"gitId":"yeezao"},"content":"        switch (splitCommandAndData[EDIT_ATTRIBUTE]) {","lastModifiedDate":"2021-11-02"},{"lineNumber":391,"author":{"gitId":"yeezao"},"content":"        case EDIT_LOCATION:","lastModifiedDate":"2021-11-02"},{"lineNumber":392,"author":{"gitId":"yeezao"},"content":"            String originalLocation \u003d tripToEdit.getLocation();","lastModifiedDate":"2021-11-02"},{"lineNumber":393,"author":{"gitId":"yeezao"},"content":"            tripToEdit.setLocation(data);","lastModifiedDate":"2021-11-02"},{"lineNumber":394,"author":{"gitId":"yeezao"},"content":"            Ui.changeLocationSuccessful(tripToEdit, originalLocation);","lastModifiedDate":"2021-11-02"},{"lineNumber":395,"author":{"gitId":"yeezao"},"content":"            break;","lastModifiedDate":"2021-11-02"},{"lineNumber":396,"author":{"gitId":"yeezao"},"content":"        case EDIT_DATE:","lastModifiedDate":"2021-11-02"},{"lineNumber":397,"author":{"gitId":"yeezao"},"content":"            String originalDate \u003d tripToEdit.getDateOfTripString();","lastModifiedDate":"2021-11-02"},{"lineNumber":398,"author":{"gitId":"yeezao"},"content":"            tripToEdit.setDateOfTrip(data);","lastModifiedDate":"2021-11-02"},{"lineNumber":399,"author":{"gitId":"yeezao"},"content":"            Ui.changeDateSuccessful(tripToEdit, originalDate);","lastModifiedDate":"2021-11-02"},{"lineNumber":400,"author":{"gitId":"yeezao"},"content":"            break;","lastModifiedDate":"2021-11-02"},{"lineNumber":401,"author":{"gitId":"yeezao"},"content":"        case EDIT_EXRATE:","lastModifiedDate":"2021-11-02"},{"lineNumber":402,"author":{"gitId":"yeezao"},"content":"            double originalExRate \u003d tripToEdit.getExchangeRate();","lastModifiedDate":"2021-11-02"},{"lineNumber":403,"author":{"gitId":"yeezao"},"content":"            tripToEdit.setExchangeRate(data);","lastModifiedDate":"2021-11-02"},{"lineNumber":404,"author":{"gitId":"yeezao"},"content":"            Ui.changeExchangeRateSuccessful(tripToEdit, originalExRate);","lastModifiedDate":"2021-11-02"},{"lineNumber":405,"author":{"gitId":"yeezao"},"content":"            break;","lastModifiedDate":"2021-11-02"},{"lineNumber":406,"author":{"gitId":"yeezao"},"content":"        case EDIT_HOMECUR:","lastModifiedDate":"2021-11-02"},{"lineNumber":407,"author":{"gitId":"yeezao"},"content":"            String originalHomeCurrency \u003d tripToEdit.getRepaymentCurrency();","lastModifiedDate":"2021-11-02"},{"lineNumber":408,"author":{"gitId":"yeezao"},"content":"            tripToEdit.setRepaymentCurrency(data);","lastModifiedDate":"2021-11-02"},{"lineNumber":409,"author":{"gitId":"yeezao"},"content":"            Ui.changeHomeCurrencySuccessful(tripToEdit, originalHomeCurrency);","lastModifiedDate":"2021-11-02"},{"lineNumber":410,"author":{"gitId":"yeezao"},"content":"            break;","lastModifiedDate":"2021-11-02"},{"lineNumber":411,"author":{"gitId":"yeezao"},"content":"        case EDIT_FORCUR:","lastModifiedDate":"2021-11-02"},{"lineNumber":412,"author":{"gitId":"yeezao"},"content":"            String originalForeignCurrency \u003d tripToEdit.getForeignCurrency();","lastModifiedDate":"2021-11-02"},{"lineNumber":413,"author":{"gitId":"yeezao"},"content":"            tripToEdit.setForeignCurrency(data);","lastModifiedDate":"2021-11-02"},{"lineNumber":414,"author":{"gitId":"yeezao"},"content":"            Ui.changeForeignCurrencySuccessful(tripToEdit, originalForeignCurrency);","lastModifiedDate":"2021-11-02"},{"lineNumber":415,"author":{"gitId":"yeezao"},"content":"            break;","lastModifiedDate":"2021-11-02"},{"lineNumber":416,"author":{"gitId":"yeezao"},"content":"        default:","lastModifiedDate":"2021-11-02"},{"lineNumber":417,"author":{"gitId":"yeezao"},"content":"            System.out.println(splitCommandAndData[EDIT_ATTRIBUTE] + \" was not recognised. \"","lastModifiedDate":"2021-11-02"},{"lineNumber":418,"author":{"gitId":"yeezao"},"content":"                    + \"Please try again after this process is complete\");","lastModifiedDate":"2021-11-02"},{"lineNumber":419,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":420,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":421,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":422,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":423,"author":{"gitId":"yeezao"},"content":"     * Gets the trip to be edited from the user-entered index.","lastModifiedDate":"2021-11-02"},{"lineNumber":424,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":425,"author":{"gitId":"yeezao"},"content":"     * @param tripIndexInString index of trip to be edited, as a {@link String} to be parsed.","lastModifiedDate":"2021-11-02"},{"lineNumber":426,"author":{"gitId":"yeezao"},"content":"     * @return the {@link Trip} object to be edited.","lastModifiedDate":"2021-11-02"},{"lineNumber":427,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":428,"author":{"gitId":"yeezao"},"content":"    private static Trip editTripWithIndex(String tripIndexInString) {","lastModifiedDate":"2021-11-02"},{"lineNumber":429,"author":{"gitId":"yeezao"},"content":"        int indexToEdit \u003d Integer.parseInt(tripIndexInString) - 1;","lastModifiedDate":"2021-11-02"},{"lineNumber":430,"author":{"gitId":"yeezao"},"content":"        Trip tripToEdit \u003d Storage.getListOfTrips().get(indexToEdit);","lastModifiedDate":"2021-11-02"},{"lineNumber":431,"author":{"gitId":"yeezao"},"content":"        Storage.setLastTrip(tripToEdit);","lastModifiedDate":"2021-11-02"},{"lineNumber":432,"author":{"gitId":"yeezao"},"content":"        return tripToEdit;","lastModifiedDate":"2021-11-02"},{"lineNumber":433,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":434,"author":{"gitId":"yeezao"},"content":"    //@@author","lastModifiedDate":"2021-11-04"},{"lineNumber":435,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":436,"author":{"gitId":"joshualeeky"},"content":"    public static boolean isNumeric(String secondCommand) {","lastModifiedDate":"2021-11-02"},{"lineNumber":437,"author":{"gitId":"joshualeeky"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":438,"author":{"gitId":"joshualeeky"},"content":"            Integer.parseInt(secondCommand);","lastModifiedDate":"2021-11-04"},{"lineNumber":439,"author":{"gitId":"joshualeeky"},"content":"            return true;","lastModifiedDate":"2021-11-02"},{"lineNumber":440,"author":{"gitId":"joshualeeky"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":441,"author":{"gitId":"joshualeeky"},"content":"            return false;","lastModifiedDate":"2021-11-02"},{"lineNumber":442,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":443,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":444,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":445,"author":{"gitId":"joshualeeky"},"content":"    //@@author joshualeeky","lastModifiedDate":"2021-11-04"},{"lineNumber":446,"author":{"gitId":"joshualeeky"},"content":"    private static void correctBalances(Expense expense) {","lastModifiedDate":"2021-11-02"},{"lineNumber":447,"author":{"gitId":"joshualeeky"},"content":"        Person payer \u003d expense.getPayer();","lastModifiedDate":"2021-11-02"},{"lineNumber":448,"author":{"gitId":"joshualeeky"},"content":"        for (Person person : expense.getPersonsList()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":449,"author":{"gitId":"joshualeeky"},"content":"            if (person \u003d\u003d payer) {","lastModifiedDate":"2021-11-02"},{"lineNumber":450,"author":{"gitId":"joshualeeky"},"content":"                payer.setMoneyOwed(payer, -expense.getAmountSplit().get(person.getName()));","lastModifiedDate":"2021-11-02"},{"lineNumber":451,"author":{"gitId":"joshualeeky"},"content":"                continue;","lastModifiedDate":"2021-11-02"},{"lineNumber":452,"author":{"gitId":"joshualeeky"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":453,"author":{"gitId":"joshualeeky"},"content":"            payer.setMoneyOwed(person, -expense.getAmountSplit().get(person.getName()));","lastModifiedDate":"2021-11-02"},{"lineNumber":454,"author":{"gitId":"joshualeeky"},"content":"            person.setMoneyOwed(payer, expense.getAmountSplit().get(person.getName()));","lastModifiedDate":"2021-11-02"},{"lineNumber":455,"author":{"gitId":"joshualeeky"},"content":"            person.setMoneyOwed(person, -expense.getAmountSplit().get(person.getName()));","lastModifiedDate":"2021-11-02"},{"lineNumber":456,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":457,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":458,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":459,"author":{"gitId":"joshualeeky"},"content":"    private static Person getValidPersonInTripFromString(String name, Trip trip) {","lastModifiedDate":"2021-11-02"},{"lineNumber":460,"author":{"gitId":"joshualeeky"},"content":"        for (Person person : trip.getListOfPersons()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":461,"author":{"gitId":"joshualeeky"},"content":"            if (name.equalsIgnoreCase(person.getName())) {","lastModifiedDate":"2021-11-02"},{"lineNumber":462,"author":{"gitId":"joshualeeky"},"content":"                return person;","lastModifiedDate":"2021-11-02"},{"lineNumber":463,"author":{"gitId":"joshualeeky"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":464,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":465,"author":{"gitId":"joshualeeky"},"content":"        return null;","lastModifiedDate":"2021-11-02"},{"lineNumber":466,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":467,"author":{"gitId":"joshualeeky"},"content":"    //@@author","lastModifiedDate":"2021-11-03"},{"lineNumber":468,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":469,"author":{"gitId":"leeyikai"},"content":"    //@author leeyikai","lastModifiedDate":"2021-11-06"},{"lineNumber":470,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":471,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":472,"author":{"gitId":"leeyikai"},"content":"     * Gets the necessary information and carry out the optimized payment function. When finished optimizing,","lastModifiedDate":"2021-11-06"},{"lineNumber":473,"author":{"gitId":"yeezao"},"content":"     * this method will call the appropriate method in {@link Ui} and print the optimized transactions out.","lastModifiedDate":"2021-11-06"},{"lineNumber":474,"author":{"gitId":"leeyikai"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":475,"author":{"gitId":"leeyikai"},"content":"     * @throws ForceCancelException allows the user to cancel an operation when an input is required.","lastModifiedDate":"2021-11-06"},{"lineNumber":476,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":477,"author":{"gitId":"joshualeeky"},"content":"    private static void checkForOptimization() throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":478,"author":{"gitId":"leeyikai"},"content":"        Trip trip \u003d Storage.getOpenTrip();","lastModifiedDate":"2021-11-03"},{"lineNumber":479,"author":{"gitId":"joshualeeky"},"content":"        PaymentOptimizer.optimizePayments(trip);","lastModifiedDate":"2021-11-04"},{"lineNumber":480,"author":{"gitId":"leeyikai"},"content":"        Ui.printOptimizedAmounts();","lastModifiedDate":"2021-11-03"},{"lineNumber":481,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":482,"author":{"gitId":"-"},"content":"    //@@author","lastModifiedDate":"2021-11-06"},{"lineNumber":483,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"joshualeeky":108,"yeezao":231,"-":2,"itsleeqian":62,"leeyikai":80}},{"path":"src/main/java/seedu/duke/parser/CommandHandler.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joshualeeky"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.exceptions.ForceCancelException;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.exceptions.InvalidAmountException;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"leeyikai"},"content":"import seedu.duke.exceptions.NoExpensesException;","lastModifiedDate":"2021-11-03"},{"lineNumber":6,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.exceptions.SameNameException;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.exceptions.TripNotOpenException;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.Storage;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"yeezao"},"content":"import static seedu.duke.Storage.LAST_INTERACTED;","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"yeezao"},"content":"abstract class CommandHandler extends CommandExecutor {","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"yeezao"},"content":"    //@@author yeezao","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"yeezao"},"content":"     * Confirms that the user entered paramaters, and calls {@link Parser#executeCreateTrip(String)}.","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"yeezao"},"content":"     * @param inputParams attributes of the trip to be created.","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"yeezao"},"content":"    protected static void handleCreateTrip(String inputParams) throws ForceCancelException {","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"yeezao"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"yeezao"},"content":"            assert inputParams !\u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"yeezao"},"content":"            executeCreateTrip(inputParams);","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"yeezao"},"content":"        } catch (IndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"yeezao"},"content":"            Ui.printCreateFormatError();","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"yeezao"},"content":"        } catch (SameNameException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"yeezao"},"content":"            Ui.sameNameInTripError();","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"yeezao"},"content":"    protected static void handleEditTrip(String inputParams) throws ForceCancelException {","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"yeezao"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"yeezao"},"content":"            assert inputParams !\u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"yeezao"},"content":"            executeEditTrip(inputParams);","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"yeezao"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException | NullPointerException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"yeezao"},"content":"            Ui.printEditFormatError();","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"yeezao"},"content":"    protected static void handleOpenTrip(String inputParams) throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"yeezao"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"yeezao"},"content":"            assert inputParams !\u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"yeezao"},"content":"            executeOpen(inputParams);","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"yeezao"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"yeezao"},"content":"            Ui.printSingleUnknownTripIndexError();","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"yeezao"},"content":"            System.out.println();","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"yeezao"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"yeezao"},"content":"            Ui.emptyArgForOpenCommand();","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"yeezao"},"content":"    //@@author","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"joshualeeky"},"content":"    protected static void handleTripSummary(String inputParams) throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"joshualeeky"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"joshualeeky"},"content":"            executeSummary(inputParams);","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"joshualeeky"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"joshualeeky"},"content":"            Ui.printUnknownTripIndexError();","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"joshualeeky"},"content":"    protected static void handleViewTrip(String inputParams) throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"joshualeeky"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"joshualeeky"},"content":"            executeView(inputParams);","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"joshualeeky"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"joshualeeky"},"content":"            Ui.printFilterFormatError();","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"yeezao"},"content":"    //@@author yeezao","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"yeezao"},"content":"    protected static void handleDelete(String inputParams) throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"yeezao"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"yeezao"},"content":"            assert inputParams !\u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"yeezao"},"content":"            executeDelete(inputParams);","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"yeezao"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"yeezao"},"content":"            if (Storage.checkOpenTrip()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"yeezao"},"content":"                Ui.printUnknownExpenseIndexError();","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"yeezao"},"content":"            } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"yeezao"},"content":"                Ui.printUnknownTripIndexError();","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"yeezao"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"yeezao"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"yeezao"},"content":"            if (Storage.checkOpenTrip()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"yeezao"},"content":"                if (inputParams.equalsIgnoreCase(LAST_INTERACTED)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"yeezao"},"content":"                    Ui.noRecentExpenseError();","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"yeezao"},"content":"                } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"yeezao"},"content":"                    Ui.printUnknownExpenseIndexError();","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"yeezao"},"content":"                }","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"yeezao"},"content":"            } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"yeezao"},"content":"                if (inputParams.equalsIgnoreCase(LAST_INTERACTED)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"yeezao"},"content":"                    Ui.printNoLastTripError();","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"yeezao"},"content":"                } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"yeezao"},"content":"                    Ui.printUnknownTripIndexError();","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"yeezao"},"content":"                }","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"yeezao"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"yeezao"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"yeezao"},"content":"            if (!Storage.checkOpenTrip()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"yeezao"},"content":"                Ui.emptyArgForDeleteTripCommand();","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"yeezao"},"content":"            } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"yeezao"},"content":"                Ui.emptyArgForDeleteExpenseCommand();","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"yeezao"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":103,"author":{"gitId":"yeezao"},"content":"    //@@author","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"joshualeeky"},"content":"    protected static void handleList() throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"joshualeeky"},"content":"        executeList();","lastModifiedDate":"2021-11-02"},{"lineNumber":107,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"joshualeeky"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"joshualeeky"},"content":"     * Confirms that the user had entered parameters for creating a new expense, and redirects to","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"joshualeeky"},"content":"     * {@link Parser#executeCreateExpense(String)} to create the expense.","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"joshualeeky"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"joshualeeky"},"content":"     * @param inputParams attributes of expense to be created.","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"joshualeeky"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"joshualeeky"},"content":"    protected static void handleCreateExpense(String inputParams) throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"joshualeeky"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"joshualeeky"},"content":"            assert inputParams !\u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"joshualeeky"},"content":"            executeCreateExpense(inputParams);","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"joshualeeky"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":120,"author":{"gitId":"joshualeeky"},"content":"            Ui.printExpenseFormatError();","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":123,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":124,"author":{"gitId":"joshualeeky"},"content":"    protected static void handleAmount(String inputParams) throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"joshualeeky"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":126,"author":{"gitId":"joshualeeky"},"content":"            executeAmount(inputParams);","lastModifiedDate":"2021-11-02"},{"lineNumber":127,"author":{"gitId":"joshualeeky"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"joshualeeky"},"content":"            Ui.invalidAmountFormat();","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":132,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":133,"author":{"gitId":"joshualeeky"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":134,"author":{"gitId":"joshualeeky"},"content":"     * Prints out the list of people in the trip if trip is open.","lastModifiedDate":"2021-11-02"},{"lineNumber":135,"author":{"gitId":"joshualeeky"},"content":"     * Otherwise, informs the user no trip open.","lastModifiedDate":"2021-11-02"},{"lineNumber":136,"author":{"gitId":"joshualeeky"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"joshualeeky"},"content":"    protected static void handlePeople() throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"joshualeeky"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":139,"author":{"gitId":"joshualeeky"},"content":"            executePeople();","lastModifiedDate":"2021-11-02"},{"lineNumber":140,"author":{"gitId":"joshualeeky"},"content":"        } catch (TripNotOpenException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":141,"author":{"gitId":"joshualeeky"},"content":"            Ui.printNoOpenTripError();","lastModifiedDate":"2021-11-02"},{"lineNumber":142,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":143,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":144,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"joshualeeky"},"content":"    protected static void handleOptimize() throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"leeyikai"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"leeyikai"},"content":"            executeOptimize();","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"leeyikai"},"content":"        } catch (NoExpensesException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"leeyikai"},"content":"            Ui.printNoExpensesError();","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":152,"author":{"gitId":"joshualeeky"},"content":"}","lastModifiedDate":"2021-11-02"},{"lineNumber":153,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"joshualeeky":69,"yeezao":75,"leeyikai":9}},{"path":"src/main/java/seedu/duke/parser/ExpenseSummarizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joshualeeky"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.Person;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.Storage;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.exceptions.ForceCancelException;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.trip.Trip;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.expense.Expense;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"joshualeeky"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"joshualeeky"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"joshualeeky"},"content":"import java.util.Map;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"itsleeqian"},"content":"//@@author itsleeqian","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"itsleeqian"},"content":"public interface ExpenseSummarizer {","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"itsleeqian"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"itsleeqian"},"content":"     * Prints the summary of expenses in a trip for a Person.","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"itsleeqian"},"content":"     * @param person The person to print for.","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"itsleeqian"},"content":"     * @throws ForceCancelException allows the user to cancel an operation when an input is required.","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"itsleeqian"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"itsleeqian"},"content":"    static void getIndividualExpenseSummary(Person person) throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"itsleeqian"},"content":"        double currentAmount; //amount paid for current expense","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"itsleeqian"},"content":"        double totalAmountSpent \u003d 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"itsleeqian"},"content":"        double totalAmountSpentInLocalCurrency \u003d 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"itsleeqian"},"content":"        Trip currTrip \u003d Storage.getOpenTrip();","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"itsleeqian"},"content":"        ArrayList\u003cExpense\u003e listOfExpenses \u003d currTrip.getListOfExpenses();","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"itsleeqian"},"content":"        int expensesInvolved \u003d 0; //num of expenses involved","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"itsleeqian"},"content":"        HashMap\u003cString, Double\u003e categoriesSplit \u003d new HashMap\u003c\u003e(); //contains the amount spent in each category","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"itsleeqian"},"content":"        for (Expense e : listOfExpenses) {","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"itsleeqian"},"content":"            if (containsPerson(e.getPersonsList(), person.getName())) {","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"itsleeqian"},"content":"                currentAmount \u003d e.getAmountSplit().get(person.getName());","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"itsleeqian"},"content":"                String currentCategory \u003d e.getCategory();","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"itsleeqian"},"content":"                totalAmountSpent +\u003d currentAmount;","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"itsleeqian"},"content":"                expensesInvolved++;","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"itsleeqian"},"content":"                //the following if else is to update the category/amtSpent hashmap","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"itsleeqian"},"content":"                if (!categoriesSplit.containsKey(currentCategory)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"itsleeqian"},"content":"                    categoriesSplit.put(currentCategory, currentAmount);","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"itsleeqian"},"content":"                } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"itsleeqian"},"content":"                    double updatedValue \u003d categoriesSplit.get(currentCategory) + currentAmount;","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"itsleeqian"},"content":"                    categoriesSplit.put(currentCategory, updatedValue);","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"itsleeqian"},"content":"                }","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"itsleeqian"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"itsleeqian"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"itsleeqian"},"content":"        totalAmountSpentInLocalCurrency \u003d roundToLocal(totalAmountSpentInLocalCurrency, currTrip, categoriesSplit);","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"itsleeqian"},"content":"        System.out.println(person + \" has spent \"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"itsleeqian"},"content":"                + Ui.stringForeignMoney(totalAmountSpent)","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"itsleeqian"},"content":"                + \" (\" + currTrip.getRepaymentCurrency() + \" \"","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"itsleeqian"},"content":"                + currTrip.getRepaymentCurrencySymbol()","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"itsleeqian"},"content":"                + String.format(currTrip.getRepaymentCurrencyFormat(), totalAmountSpentInLocalCurrency) + \") on \"","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"itsleeqian"},"content":"                + expensesInvolved","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"itsleeqian"},"content":"                + \" expenses on the following categories:\");","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"itsleeqian"},"content":"        for (Map.Entry\u003cString, Double\u003e set : categoriesSplit.entrySet()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"itsleeqian"},"content":"            System.out.println(set.getKey() + \": \" + Ui.stringForeignMoney(set.getValue())","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"itsleeqian"},"content":"                    + \" (\" + Ui.stringRepaymentMoney(set.getValue()) + \")\");","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"itsleeqian"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"itsleeqian"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"itsleeqian"},"content":"     * Helper method for getIndividualExpenseSummary() method.","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"itsleeqian"},"content":"     * Returns the rounded and formatted total repayment amount spent.","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"itsleeqian"},"content":"     * @param totalAmount the amount before rounding","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"itsleeqian"},"content":"     * @param currTrip the Trip the user is in/computing","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"itsleeqian"},"content":"     * @param categoriesSplit the HashMap containing the category and the amount spent on said category","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"itsleeqian"},"content":"     * @return a rounded and formatted value for amount spent in local currency","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"itsleeqian"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"itsleeqian"},"content":"    private static double roundToLocal(double totalAmount, Trip currTrip, HashMap\u003cString, Double\u003e categoriesSplit)","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"itsleeqian"},"content":"            throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"itsleeqian"},"content":"        for (Map.Entry\u003cString, Double\u003e set : categoriesSplit.entrySet()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"itsleeqian"},"content":"            totalAmount +\u003d Storage.formatRepaymentMoneyDouble(","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"itsleeqian"},"content":"                    set.getValue() / currTrip.getExchangeRate());","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"itsleeqian"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"itsleeqian"},"content":"        return totalAmount;","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"itsleeqian"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"itsleeqian"},"content":"     * Returns true if personsList contains a person with a specific name.","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"itsleeqian"},"content":"     * This is to replace the list.contains() method due to bugs with json deserialization.","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"itsleeqian"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"itsleeqian"},"content":"     * @param personsList list of persons to check","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"itsleeqian"},"content":"     * @param name the name to check for","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"itsleeqian"},"content":"     * @return true if personsList contains a person with a specific name","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"itsleeqian"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"itsleeqian"},"content":"    private static boolean containsPerson(ArrayList\u003cPerson\u003e personsList, String name) {","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"itsleeqian"},"content":"        for (Person person : personsList) {","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"itsleeqian"},"content":"            if (person.getName().equals(name)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"itsleeqian"},"content":"                return true;","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"itsleeqian"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"itsleeqian"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"itsleeqian"},"content":"        return false;","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"itsleeqian"},"content":"    //@@author","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"joshualeeky"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"joshualeeky":14,"itsleeqian":79}},{"path":"src/main/java/seedu/duke/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joshualeeky"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.exceptions.ForceCancelException;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.Storage;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"joshualeeky"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"joshualeeky"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"joshualeeky"},"content":"public class Parser extends CommandHandler {","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"joshualeeky"},"content":"    private static final int SPLIT_COMMAND_FROM_INFO_LENGTH \u003d 2;","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"joshualeeky"},"content":"    private static final int INPUT_COMMAND \u003d 0;","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"joshualeeky"},"content":"    private static final int INPUT_INFO \u003d 1;","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"joshualeeky"},"content":"    private static final String QUIT_COMMAND \u003d \"quit\";","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"joshualeeky"},"content":"    private static final String CLOSE_COMMAND \u003d \"close\";","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"joshualeeky"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"joshualeeky"},"content":"     * Parses the user-entered command and additional information/flags.","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"joshualeeky"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"joshualeeky"},"content":"     * @param userInput the {@link String} containing the user input","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"joshualeeky"},"content":"     * @return whether the program should continue running after processing the given user input","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"joshualeeky"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"joshualeeky"},"content":"    public static boolean parseUserInput(String userInput) {","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"joshualeeky"},"content":"        String[] rawInput \u003d userInput.split(\" \", SPLIT_COMMAND_FROM_INFO_LENGTH);","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"joshualeeky"},"content":"        String inputCommand \u003d rawInput[INPUT_COMMAND].toLowerCase();","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"joshualeeky"},"content":"        String inputParams \u003d null;","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"joshualeeky"},"content":"        if (rawInput.length \u003d\u003d SPLIT_COMMAND_FROM_INFO_LENGTH) {","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"joshualeeky"},"content":"            inputParams \u003d rawInput[INPUT_INFO];","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"joshualeeky"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"joshualeeky"},"content":"            if (inputCommand.equals(QUIT_COMMAND)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"joshualeeky"},"content":"                Ui.goodBye();","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"joshualeeky"},"content":"                return false;","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"joshualeeky"},"content":"            } else if (inputCommand.equals(CLOSE_COMMAND)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"joshualeeky"},"content":"                Storage.closeTrip();","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"joshualeeky"},"content":"                return true;","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"itsleeqian"},"content":"            } else if (inputCommand.equals(HELP_COMMAND)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"itsleeqian"},"content":"                Ui.displayHelp();","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"itsleeqian"},"content":"                return true;","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"joshualeeky"},"content":"            } else if (!checkValidCommand(inputCommand)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"joshualeeky"},"content":"                Storage.getLogger().log(Level.WARNING, \"invalid user input\");","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"joshualeeky"},"content":"                Ui.printUnknownCommandError();","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"joshualeeky"},"content":"                return true;","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"leeyikai"},"content":"            } else if (Storage.getListOfTrips().isEmpty() \u0026\u0026 !inputCommand.equals(CREATE_COMMAND)) {","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"joshualeeky"},"content":"                Storage.getLogger().log(Level.WARNING, \"No trip created yet\");","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"joshualeeky"},"content":"                Ui.printNoTripError();","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"joshualeeky"},"content":"                return true;","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"joshualeeky"},"content":"            } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"joshualeeky"},"content":"                handleValidCommands(inputCommand, inputParams);","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"joshualeeky"},"content":"                return true;","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"joshualeeky"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"joshualeeky"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"joshualeeky"},"content":"            Ui.printNoOpenTripError();","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"joshualeeky"},"content":"            return true;","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"joshualeeky"},"content":"        } catch (ForceCancelException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"joshualeeky"},"content":"            Ui.printForceCancelled();","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"joshualeeky"},"content":"            return true;","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"joshualeeky"},"content":"    private static final String CREATE_COMMAND \u003d \"create\";","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"joshualeeky"},"content":"    private static final String EDIT_COMMAND \u003d \"edit\";","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"joshualeeky"},"content":"    private static final String OPEN_COMMAND \u003d \"open\";","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"joshualeeky"},"content":"    private static final String SUMMARY_COMMAND \u003d \"summary\";","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"joshualeeky"},"content":"    private static final String VIEW_COMMAND \u003d \"view\";","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"joshualeeky"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"joshualeeky"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"joshualeeky"},"content":"    private static final String EXPENSE_COMMAND \u003d \"expense\";","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"joshualeeky"},"content":"    private static final String AMOUNT_COMMAND \u003d \"amount\";","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"joshualeeky"},"content":"    private static final String HELP_COMMAND \u003d \"help\";","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"joshualeeky"},"content":"    private static final String PEOPLE_COMMAND \u003d \"people\";","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"leeyikai"},"content":"    private static final String OPTIMIZE_COMMAND \u003d \"optimize\";","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":79,"author":{"gitId":"joshualeeky"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"joshualeeky"},"content":"     * Handles commands entered by the user that are confirmed as valid, and redirects to the appropriate method","lastModifiedDate":"2021-11-02"},{"lineNumber":81,"author":{"gitId":"joshualeeky"},"content":"     * for further updates.","lastModifiedDate":"2021-11-02"},{"lineNumber":82,"author":{"gitId":"joshualeeky"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"joshualeeky"},"content":"     * @param inputCommand Valid command executed by the user.","lastModifiedDate":"2021-11-02"},{"lineNumber":84,"author":{"gitId":"joshualeeky"},"content":"     * @param inputParams  Additional information appended to the command by the user","lastModifiedDate":"2021-11-02"},{"lineNumber":85,"author":{"gitId":"joshualeeky"},"content":"     *                     (inputParams are not checked and may not be valid).","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"joshualeeky"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":87,"author":{"gitId":"joshualeeky"},"content":"     * @see Parser#parseUserInput(String)","lastModifiedDate":"2021-11-02"},{"lineNumber":88,"author":{"gitId":"joshualeeky"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":89,"author":{"gitId":"joshualeeky"},"content":"    private static void handleValidCommands(String inputCommand, String inputParams) throws ForceCancelException {","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":91,"author":{"gitId":"joshualeeky"},"content":"        switch (inputCommand) {","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"joshualeeky"},"content":"        case CREATE_COMMAND:","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"joshualeeky"},"content":"            handleCreateTrip(inputParams);","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"joshualeeky"},"content":"            break;","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"joshualeeky"},"content":"        case EDIT_COMMAND:","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"joshualeeky"},"content":"            handleEditTrip(inputParams);","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"joshualeeky"},"content":"            break;","lastModifiedDate":"2021-11-02"},{"lineNumber":99,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"joshualeeky"},"content":"        case OPEN_COMMAND:","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"joshualeeky"},"content":"            handleOpenTrip(inputParams);","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"joshualeeky"},"content":"            break;","lastModifiedDate":"2021-11-02"},{"lineNumber":103,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":104,"author":{"gitId":"joshualeeky"},"content":"        case SUMMARY_COMMAND:","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"joshualeeky"},"content":"            handleTripSummary(inputParams);","lastModifiedDate":"2021-11-02"},{"lineNumber":106,"author":{"gitId":"joshualeeky"},"content":"            break;","lastModifiedDate":"2021-11-02"},{"lineNumber":107,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"joshualeeky"},"content":"        case VIEW_COMMAND:","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"joshualeeky"},"content":"            handleViewTrip(inputParams);","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"joshualeeky"},"content":"            break;","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"joshualeeky"},"content":"        case DELETE_COMMAND:","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"joshualeeky"},"content":"            handleDelete(inputParams);","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"joshualeeky"},"content":"            break;","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"joshualeeky"},"content":"        case LIST_COMMAND:","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"joshualeeky"},"content":"            handleList();","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"joshualeeky"},"content":"            break;","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":120,"author":{"gitId":"joshualeeky"},"content":"        case EXPENSE_COMMAND:","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"joshualeeky"},"content":"            handleCreateExpense(inputParams);","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"joshualeeky"},"content":"            break;","lastModifiedDate":"2021-11-02"},{"lineNumber":123,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":124,"author":{"gitId":"joshualeeky"},"content":"        case AMOUNT_COMMAND:","lastModifiedDate":"2021-11-02"},{"lineNumber":125,"author":{"gitId":"joshualeeky"},"content":"            handleAmount(inputParams);","lastModifiedDate":"2021-11-02"},{"lineNumber":126,"author":{"gitId":"joshualeeky"},"content":"            break;","lastModifiedDate":"2021-11-02"},{"lineNumber":127,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":128,"author":{"gitId":"joshualeeky"},"content":"        case PEOPLE_COMMAND:","lastModifiedDate":"2021-11-02"},{"lineNumber":129,"author":{"gitId":"joshualeeky"},"content":"            handlePeople();","lastModifiedDate":"2021-11-02"},{"lineNumber":130,"author":{"gitId":"joshualeeky"},"content":"            break;","lastModifiedDate":"2021-11-02"},{"lineNumber":131,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":132,"author":{"gitId":"leeyikai"},"content":"        case OPTIMIZE_COMMAND:","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"leeyikai"},"content":"            handleOptimize();","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"leeyikai"},"content":"            break;","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"joshualeeky"},"content":"        default:","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"joshualeeky"},"content":"            Ui.printUnknownCommandError();","lastModifiedDate":"2021-11-02"},{"lineNumber":138,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":139,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":140,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":141,"author":{"gitId":"lixiyuan416"},"content":"    //@@author lixiyuan416","lastModifiedDate":"2021-11-02"},{"lineNumber":142,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":143,"author":{"gitId":"lixiyuan416"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":144,"author":{"gitId":"lixiyuan416"},"content":"     * Helper function to get user to confirm y/n.","lastModifiedDate":"2021-11-07"},{"lineNumber":145,"author":{"gitId":"lixiyuan416"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":146,"author":{"gitId":"lixiyuan416"},"content":"     * @return true if user agrees, false otherwise","lastModifiedDate":"2021-11-07"},{"lineNumber":147,"author":{"gitId":"lixiyuan416"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":148,"author":{"gitId":"lixiyuan416"},"content":"    public static boolean getUserToConfirm() {","lastModifiedDate":"2021-11-02"},{"lineNumber":149,"author":{"gitId":"lixiyuan416"},"content":"        boolean isValidInput \u003d false;","lastModifiedDate":"2021-11-02"},{"lineNumber":150,"author":{"gitId":"lixiyuan416"},"content":"        boolean doesUserAgree \u003d false;","lastModifiedDate":"2021-11-02"},{"lineNumber":151,"author":{"gitId":"lixiyuan416"},"content":"        while (!isValidInput) {","lastModifiedDate":"2021-11-02"},{"lineNumber":152,"author":{"gitId":"lixiyuan416"},"content":"            String userReply \u003d Storage.getScanner().nextLine();","lastModifiedDate":"2021-11-02"},{"lineNumber":153,"author":{"gitId":"lixiyuan416"},"content":"            if (userReply.strip().equalsIgnoreCase(Ui.USER_CONTINUE)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":154,"author":{"gitId":"lixiyuan416"},"content":"                isValidInput \u003d true;","lastModifiedDate":"2021-11-02"},{"lineNumber":155,"author":{"gitId":"lixiyuan416"},"content":"                doesUserAgree \u003d true;","lastModifiedDate":"2021-11-02"},{"lineNumber":156,"author":{"gitId":"lixiyuan416"},"content":"            } else if (userReply.strip().equalsIgnoreCase(Ui.USER_QUIT)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":157,"author":{"gitId":"lixiyuan416"},"content":"                isValidInput \u003d true;","lastModifiedDate":"2021-11-02"},{"lineNumber":158,"author":{"gitId":"lixiyuan416"},"content":"            } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":159,"author":{"gitId":"lixiyuan416"},"content":"                System.out.println(\"Enter y/n\");","lastModifiedDate":"2021-11-02"},{"lineNumber":160,"author":{"gitId":"lixiyuan416"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":161,"author":{"gitId":"lixiyuan416"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":162,"author":{"gitId":"lixiyuan416"},"content":"        return doesUserAgree;","lastModifiedDate":"2021-11-02"},{"lineNumber":163,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":164,"author":{"gitId":"lixiyuan416"},"content":"    //@@author","lastModifiedDate":"2021-11-02"},{"lineNumber":165,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":166,"author":{"gitId":"joshualeeky"},"content":"    private static boolean checkValidCommand(String inputCommand) {","lastModifiedDate":"2021-11-02"},{"lineNumber":167,"author":{"gitId":"joshualeeky"},"content":"        return Storage.getValidCommands().contains(inputCommand);","lastModifiedDate":"2021-11-02"},{"lineNumber":168,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":169,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":170,"author":{"gitId":"yeezao"},"content":"    //@@author yeezao","lastModifiedDate":"2021-11-06"},{"lineNumber":171,"author":{"gitId":"yeezao"},"content":"    public static boolean doesUserWantToForceCancel(String userInput) {","lastModifiedDate":"2021-11-02"},{"lineNumber":172,"author":{"gitId":"yeezao"},"content":"        return userInput.equals(\"-cancel\");","lastModifiedDate":"2021-11-02"},{"lineNumber":173,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":174,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":175,"author":{"gitId":"yeezao"},"content":"    private static final int DAYDD \u003d 0;","lastModifiedDate":"2021-11-02"},{"lineNumber":176,"author":{"gitId":"yeezao"},"content":"    private static final int MONTHMM \u003d 1;","lastModifiedDate":"2021-11-02"},{"lineNumber":177,"author":{"gitId":"yeezao"},"content":"    private static final int YEARYYYY \u003d 2;","lastModifiedDate":"2021-11-02"},{"lineNumber":178,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":179,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":180,"author":{"gitId":"yeezao"},"content":"     * Checks if the user-entered date is a date that actually exists.","lastModifiedDate":"2021-11-02"},{"lineNumber":181,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":182,"author":{"gitId":"yeezao"},"content":"     * @param dateInString the entire dd-mm-yyyy date as a single string.","lastModifiedDate":"2021-11-02"},{"lineNumber":183,"author":{"gitId":"yeezao"},"content":"     * @return true if the date actually exists.","lastModifiedDate":"2021-11-02"},{"lineNumber":184,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":185,"author":{"gitId":"yeezao"},"content":"    public static boolean doesDateReallyExist(String dateInString) {","lastModifiedDate":"2021-11-02"},{"lineNumber":186,"author":{"gitId":"yeezao"},"content":"        String[] dateSplitUp \u003d dateInString.split(\"-\");","lastModifiedDate":"2021-11-02"},{"lineNumber":187,"author":{"gitId":"yeezao"},"content":"        int day;","lastModifiedDate":"2021-11-02"},{"lineNumber":188,"author":{"gitId":"yeezao"},"content":"        int month;","lastModifiedDate":"2021-11-02"},{"lineNumber":189,"author":{"gitId":"yeezao"},"content":"        int year;","lastModifiedDate":"2021-11-02"},{"lineNumber":190,"author":{"gitId":"yeezao"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":191,"author":{"gitId":"yeezao"},"content":"            day \u003d Integer.parseInt(dateSplitUp[DAYDD]);","lastModifiedDate":"2021-11-02"},{"lineNumber":192,"author":{"gitId":"yeezao"},"content":"            month \u003d Integer.parseInt(dateSplitUp[MONTHMM]);","lastModifiedDate":"2021-11-02"},{"lineNumber":193,"author":{"gitId":"yeezao"},"content":"            year \u003d Integer.parseInt(dateSplitUp[YEARYYYY]);","lastModifiedDate":"2021-11-02"},{"lineNumber":194,"author":{"gitId":"yeezao"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":195,"author":{"gitId":"yeezao"},"content":"            return false;","lastModifiedDate":"2021-11-02"},{"lineNumber":196,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":197,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":198,"author":{"gitId":"yeezao"},"content":"        //definitely an invalid date","lastModifiedDate":"2021-11-02"},{"lineNumber":199,"author":{"gitId":"yeezao"},"content":"        if (day \u003c 1 || day \u003e 31 || month \u003c 1 || month \u003e 12) {","lastModifiedDate":"2021-11-02"},{"lineNumber":200,"author":{"gitId":"yeezao"},"content":"            return false;","lastModifiedDate":"2021-11-02"},{"lineNumber":201,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":202,"author":{"gitId":"yeezao"},"content":"        //for months with 30 days","lastModifiedDate":"2021-11-02"},{"lineNumber":203,"author":{"gitId":"yeezao"},"content":"        if ((month \u003c 7 \u0026\u0026 month % 2 \u003d\u003d 0) || (month \u003e\u003d 8 \u0026\u0026 month % 2 \u003d\u003d 1)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":204,"author":{"gitId":"yeezao"},"content":"            if (day \u003e 30) {","lastModifiedDate":"2021-11-02"},{"lineNumber":205,"author":{"gitId":"yeezao"},"content":"                return false;","lastModifiedDate":"2021-11-02"},{"lineNumber":206,"author":{"gitId":"yeezao"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":207,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":208,"author":{"gitId":"yeezao"},"content":"        //leap year checks","lastModifiedDate":"2021-11-02"},{"lineNumber":209,"author":{"gitId":"yeezao"},"content":"        if (month \u003d\u003d 2) {","lastModifiedDate":"2021-11-02"},{"lineNumber":210,"author":{"gitId":"yeezao"},"content":"            LocalDate leapYearCheck \u003d LocalDate.of(year, 1, 1);","lastModifiedDate":"2021-11-02"},{"lineNumber":211,"author":{"gitId":"yeezao"},"content":"            if (!leapYearCheck.isLeapYear() \u0026\u0026 day \u003e 28) {","lastModifiedDate":"2021-11-02"},{"lineNumber":212,"author":{"gitId":"yeezao"},"content":"                return false;","lastModifiedDate":"2021-11-02"},{"lineNumber":213,"author":{"gitId":"yeezao"},"content":"            } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":214,"author":{"gitId":"yeezao"},"content":"                return (!leapYearCheck.isLeapYear() || day \u003c\u003d 29);","lastModifiedDate":"2021-11-02"},{"lineNumber":215,"author":{"gitId":"yeezao"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":216,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":217,"author":{"gitId":"yeezao"},"content":"        return true;","lastModifiedDate":"2021-11-02"},{"lineNumber":218,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":219,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":220,"author":{"gitId":"yeezao"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"joshualeeky":135,"yeezao":51,"lixiyuan416":25,"itsleeqian":3,"leeyikai":6}},{"path":"src/main/java/seedu/duke/parser/PaymentOptimizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyikai"},"content":"//@@author leeyikai","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"leeyikai"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"leeyikai"},"content":"import seedu.duke.Person;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"leeyikai"},"content":"import seedu.duke.trip.Trip;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"leeyikai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"leeyikai"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"leeyikai"},"content":"class PaymentOptimizer {","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"leeyikai"},"content":"    static double EPSILON \u003d 0.001;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"leeyikai"},"content":"     * Calls different methods that helps to calculate the optimized payments.","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"leeyikai"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"leeyikai"},"content":"     * @param trip {@link Trip} that you want to optimize the payments for.","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"leeyikai"},"content":"    static void optimizePayments(Trip trip) {","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"leeyikai"},"content":"        ArrayList\u003cPerson\u003e listOfPersons \u003d trip.getListOfPersons();","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"leeyikai"},"content":"        ArrayList\u003cDouble\u003e totalExpenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"leeyikai"},"content":"        boolean isAllPaid \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"leeyikai"},"content":"        getTotalAmountForPerson(totalExpenses, listOfPersons);","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"leeyikai"},"content":"        int currentIndex;","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"leeyikai"},"content":"        while (!isAllPaid) {","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"leeyikai"},"content":"            for (Person person : listOfPersons) {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"leeyikai"},"content":"                currentIndex \u003d listOfPersons.indexOf(person);","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"leeyikai"},"content":"                if (totalExpenses.get(currentIndex) \u003c 0) {","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"leeyikai"},"content":"                    findNextPersonToPay(totalExpenses, currentIndex, listOfPersons);","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"leeyikai"},"content":"                }","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"leeyikai"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"leeyikai"},"content":"            isAllPaid \u003d checkIfAllPaid(totalExpenses);","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"leeyikai"},"content":"     * Checks if every {@link Person} in the currently opened {@link Trip} has been paid.","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"leeyikai"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"leeyikai"},"content":"     * @param totalExpenses {@link ArrayList} containing the net total expenses of each person.","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"leeyikai"},"content":"     * @return true if every {@link Person} in the current {@link Trip} has been paid.","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"leeyikai"},"content":"    private static boolean checkIfAllPaid(ArrayList\u003cDouble\u003e totalExpenses) {","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"leeyikai"},"content":"        for (Double i : totalExpenses) {","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"leeyikai"},"content":"            if (!isZero(i)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"leeyikai"},"content":"                return false;","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"leeyikai"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"leeyikai"},"content":"        return true;","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"leeyikai"},"content":"     * Finds the next {@link Person} to pay that is being owed money. Returns only when every single {@link Person}","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"leeyikai"},"content":"     * in the {@link Trip} has been paid.","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"leeyikai"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"leeyikai"},"content":"     * @param totalExpenses {@link ArrayList} containing the net total expenses of each person.","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"leeyikai"},"content":"     * @param indexOfPersonPaying index of the person who will be paying.","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"leeyikai"},"content":"     * @param listOfPersons list of persons in the currently opened trip","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"leeyikai"},"content":"    private static void findNextPersonToPay(ArrayList\u003cDouble\u003e totalExpenses, int indexOfPersonPaying,","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"leeyikai"},"content":"            ArrayList\u003cPerson\u003e listOfPersons) {","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"leeyikai"},"content":"        Double expensesOfCurrentPerson;","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"leeyikai"},"content":"        Double expensesOfPersonPaying;","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"leeyikai"},"content":"        Person personPaying;","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"leeyikai"},"content":"        Person personReceiving;","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"leeyikai"},"content":"        String nameOfPersonPaying;","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"leeyikai"},"content":"        String nameOfPersonReceiving;","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"leeyikai"},"content":"        for (Person person : listOfPersons) {","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"leeyikai"},"content":"            int indexOfPersonReceiving \u003d listOfPersons.indexOf(person);","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"leeyikai"},"content":"            expensesOfCurrentPerson \u003d totalExpenses.get(indexOfPersonReceiving);","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"leeyikai"},"content":"            expensesOfPersonPaying \u003d -totalExpenses.get(indexOfPersonPaying);","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"leeyikai"},"content":"            personPaying \u003d listOfPersons.get(indexOfPersonPaying);","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"leeyikai"},"content":"            personReceiving \u003d listOfPersons.get(indexOfPersonReceiving);","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"leeyikai"},"content":"            nameOfPersonPaying \u003d personPaying.getName();","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"leeyikai"},"content":"            nameOfPersonReceiving \u003d personReceiving.getName();","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"leeyikai"},"content":"            if (totalExpenses.get(indexOfPersonReceiving) \u003e 0) {","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"leeyikai"},"content":"                if (isMoreThanOrEqual(expensesOfPersonPaying, expensesOfCurrentPerson)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"leeyikai"},"content":"                    personPaying.getOptimizedMoneyOwed().put(nameOfPersonReceiving, -expensesOfCurrentPerson);","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"leeyikai"},"content":"                    personReceiving.getOptimizedMoneyOwed().put(nameOfPersonPaying, expensesOfCurrentPerson);","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"leeyikai"},"content":"                    totalExpenses.set(indexOfPersonReceiving, 0.0);","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"leeyikai"},"content":"                    totalExpenses.set(indexOfPersonPaying, -(expensesOfPersonPaying - expensesOfCurrentPerson));","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"leeyikai"},"content":"                } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"leeyikai"},"content":"                    personPaying.getOptimizedMoneyOwed().put(nameOfPersonReceiving, -expensesOfPersonPaying);","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"leeyikai"},"content":"                    personReceiving.getOptimizedMoneyOwed().put(nameOfPersonPaying, expensesOfPersonPaying);","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"leeyikai"},"content":"                    totalExpenses.set(indexOfPersonPaying, 0.0);","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"leeyikai"},"content":"                    totalExpenses.set(indexOfPersonReceiving, expensesOfCurrentPerson - expensesOfPersonPaying);","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"leeyikai"},"content":"                }","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"leeyikai"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"leeyikai"},"content":"            if (isZero(totalExpenses.get(indexOfPersonPaying))) {","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"leeyikai"},"content":"                return;","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"leeyikai"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"leeyikai"},"content":"     * Gets the net total of expenses for every {@link Person} in {@link Trip}.","lastModifiedDate":"2021-11-06"},{"lineNumber":96,"author":{"gitId":"leeyikai"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":97,"author":{"gitId":"leeyikai"},"content":"     * @param totalExpenses {@link ArrayList} containing the net total of each {@link Person} in the open {@link Trip}.","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"leeyikai"},"content":"     * @param listOfPersons {@link ArrayList} of {@link Person} in the currently open {@link Trip}.","lastModifiedDate":"2021-11-06"},{"lineNumber":99,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":100,"author":{"gitId":"leeyikai"},"content":"    private static void getTotalAmountForPerson(ArrayList\u003cDouble\u003e totalExpenses, ArrayList\u003cPerson\u003e listOfPersons) {","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"leeyikai"},"content":"        Double totalAmountPerPerson;","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"leeyikai"},"content":"        for (Person person : listOfPersons) {","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"leeyikai"},"content":"            totalAmountPerPerson \u003d 0.0;","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"leeyikai"},"content":"            HashMap\u003cString, Double\u003e personExpenses \u003d person.getMoneyOwed();","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"leeyikai"},"content":"            String otherPersonName;","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"leeyikai"},"content":"            for (Person otherPerson : listOfPersons) {","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"leeyikai"},"content":"                if (!otherPerson.equals(person)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"leeyikai"},"content":"                    otherPersonName \u003d otherPerson.getName();","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"leeyikai"},"content":"                    totalAmountPerPerson +\u003d personExpenses.get(otherPersonName);","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"leeyikai"},"content":"                    person.setOptimizedMoneyOwed(otherPerson);","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"leeyikai"},"content":"                }","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"leeyikai"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"leeyikai"},"content":"            totalExpenses.add(totalAmountPerPerson);","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":119,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":120,"author":{"gitId":"leeyikai"},"content":"     * Checks if {@param firstValue} is larger or equal to {@param secondValue}.","lastModifiedDate":"2021-11-06"},{"lineNumber":121,"author":{"gitId":"leeyikai"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":122,"author":{"gitId":"leeyikai"},"content":"     * @param firstValue bigger or equal value that we want to compare","lastModifiedDate":"2021-11-06"},{"lineNumber":123,"author":{"gitId":"leeyikai"},"content":"     * @param secondValue smaller or equal value that we want to compare","lastModifiedDate":"2021-11-06"},{"lineNumber":124,"author":{"gitId":"leeyikai"},"content":"     * @return {@link Boolean} that is true if {@param firstValue} is greater or equal to {@param secondValue}","lastModifiedDate":"2021-11-06"},{"lineNumber":125,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":126,"author":{"gitId":"leeyikai"},"content":"    private static boolean isMoreThanOrEqual(double firstValue, double secondValue) {","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"leeyikai"},"content":"        if (isEqual(firstValue, secondValue)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"leeyikai"},"content":"            return true;","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"leeyikai"},"content":"        return firstValue \u003e secondValue;","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":134,"author":{"gitId":"leeyikai"},"content":"     * Checks if {@param firstValue} is equal to {@param secondValue}.","lastModifiedDate":"2021-11-06"},{"lineNumber":135,"author":{"gitId":"leeyikai"},"content":"     * @param firstValue first value that we want to check.","lastModifiedDate":"2021-11-06"},{"lineNumber":136,"author":{"gitId":"leeyikai"},"content":"     * @param secondValue second value that we want to check against.","lastModifiedDate":"2021-11-06"},{"lineNumber":137,"author":{"gitId":"leeyikai"},"content":"     * @return true if {@param firstValue} is equals to {@param secondValue}.","lastModifiedDate":"2021-11-06"},{"lineNumber":138,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":139,"author":{"gitId":"leeyikai"},"content":"    private static boolean isEqual(double firstValue, double secondValue) {","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"leeyikai"},"content":"        double difference \u003d firstValue - secondValue;","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"leeyikai"},"content":"        return difference \u003c EPSILON \u0026\u0026 difference \u003e -EPSILON;","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":145,"author":{"gitId":"leeyikai"},"content":"     * Checks if {@param value} is zero.","lastModifiedDate":"2021-11-06"},{"lineNumber":146,"author":{"gitId":"leeyikai"},"content":"     * @param value value that we want to check.","lastModifiedDate":"2021-11-06"},{"lineNumber":147,"author":{"gitId":"leeyikai"},"content":"     * @return true if value is 0.","lastModifiedDate":"2021-11-06"},{"lineNumber":148,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":149,"author":{"gitId":"leeyikai"},"content":"    private static boolean isZero(double value) {","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"leeyikai"},"content":"        return value \u003c EPSILON \u0026\u0026 value \u003e -EPSILON;","lastModifiedDate":"2021-11-04"},{"lineNumber":151,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"leeyikai"},"content":"}","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"leeyikai"},"content":"//@@author","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"leeyikai":153}},{"path":"src/main/java/seedu/duke/trip/FilterFinder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joshualeeky"},"content":"package seedu.duke.trip;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.Person;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.Storage;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.exceptions.ForceCancelException;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.expense.Expense;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"joshualeeky"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"joshualeeky"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"joshualeeky"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"joshualeeky"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"joshualeeky"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"lixiyuan416"},"content":"public interface FilterFinder {","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"joshualeeky"},"content":"    DateTimeFormatter inputPattern \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"lixiyuan416"},"content":"    //@@author lixiyuan416","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"lixiyuan416"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"lixiyuan416"},"content":"     * Filters expenses inside a trip by date.","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"lixiyuan416"},"content":"     * See parent method {@link Trip#getFilteredExpenses(String, String)}","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"lixiyuan416"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"lixiyuan416"},"content":"     * @param listOfCurrentExpenses expense list of a trip","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"lixiyuan416"},"content":"     * @param expenseAttribute date to search for","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"lixiyuan416"},"content":"     * @throws ForceCancelException when user inputs command to cancel the view filter operation","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"lixiyuan416"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"lixiyuan416"},"content":"    static void findMatchingDateExpenses(ArrayList\u003cExpense\u003e listOfCurrentExpenses, String expenseAttribute)","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"lixiyuan416"},"content":"            throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"lixiyuan416"},"content":"        boolean areThereExpenses \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"lixiyuan416"},"content":"        String inputDate \u003d expenseAttribute;","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"lixiyuan416"},"content":"        while (!isDateValid(inputDate)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"lixiyuan416"},"content":"            inputDate \u003d Ui.receiveUserInput();","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"lixiyuan416"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"lixiyuan416"},"content":"        LocalDate dateToFind \u003d LocalDate.parse(inputDate, inputPattern);","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"lixiyuan416"},"content":"        for (Expense e : listOfCurrentExpenses) {","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"lixiyuan416"},"content":"            if (e.getDate().isEqual(dateToFind)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"lixiyuan416"},"content":"                int index \u003d listOfCurrentExpenses.indexOf(e);","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"lixiyuan416"},"content":"                Ui.printFilteredExpenses(e, index);","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"lixiyuan416"},"content":"                areThereExpenses \u003d true;","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"lixiyuan416"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"lixiyuan416"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"lixiyuan416"},"content":"        if (!areThereExpenses) {","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"lixiyuan416"},"content":"            Ui.printNoMatchingExpenseError();","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"lixiyuan416"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"lixiyuan416"},"content":"    //@@author","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"leeyikai"},"content":"    //@@author leeyikai","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"leeyikai"},"content":"     * Finds the {@link Expense} that has the same {@link Person} name as {@param expenseAttribute} and prints","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"leeyikai"},"content":"     * the expense. If there are no matching {@link Expense}, an error message will be printed.","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"leeyikai"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"leeyikai"},"content":"     * @param listOfCurrentExpenses {@link ArrayList} containing the list of expenses currently in the trip.","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"leeyikai"},"content":"     * @param expenseAttribute @{@link String} containing the name of the {@link Person} that we want to find.","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"leeyikai"},"content":"    static void findMatchingPayerExpenses(ArrayList\u003cExpense\u003e listOfCurrentExpenses, String expenseAttribute) {","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"leeyikai"},"content":"        boolean areThereExpenses \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"leeyikai"},"content":"        for (Expense e : listOfCurrentExpenses) {","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"leeyikai"},"content":"            if (e.getPayer().getName().equalsIgnoreCase(expenseAttribute)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"leeyikai"},"content":"                int index \u003d listOfCurrentExpenses.indexOf(e);","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"leeyikai"},"content":"                Ui.printFilteredExpenses(e, index);","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"leeyikai"},"content":"                areThereExpenses \u003d true;","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"leeyikai"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"leeyikai"},"content":"        if (!areThereExpenses) {","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"leeyikai"},"content":"            Ui.printNoMatchingExpenseError();","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"leeyikai"},"content":"     * Finds the {@link Expense} that contains the description as {@param expenseAttribute} and prints it out.","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"leeyikai"},"content":"     * If there are no matching {@link Expense}, an error message will be printed.","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"leeyikai"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"leeyikai"},"content":"     * @param listOfCurrentExpenses {@link ArrayList} containing the list of expenses currently in the trip.","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"leeyikai"},"content":"     * @param expenseAttribute @{@link String} containing the description that we want to find.","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"leeyikai"},"content":"    static void findMatchingDescriptionExpenses(ArrayList\u003cExpense\u003e listOfCurrentExpenses,","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"leeyikai"},"content":"                                                        String expenseAttribute) {","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"leeyikai"},"content":"        boolean areThereExpenses \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"leeyikai"},"content":"        String descriptionToLowerCase;","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"leeyikai"},"content":"        String attributeToLowerCase \u003d expenseAttribute.toLowerCase();","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"leeyikai"},"content":"        for (Expense e : listOfCurrentExpenses) {","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"leeyikai"},"content":"            descriptionToLowerCase \u003d e.getDescription().toLowerCase();","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"leeyikai"},"content":"            if (descriptionToLowerCase.contains(attributeToLowerCase)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"leeyikai"},"content":"                int index \u003d listOfCurrentExpenses.indexOf(e);","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"leeyikai"},"content":"                Ui.printFilteredExpenses(e, index);","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"leeyikai"},"content":"                areThereExpenses \u003d true;","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"leeyikai"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"leeyikai"},"content":"        if (!areThereExpenses) {","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"leeyikai"},"content":"            Ui.printNoMatchingExpenseError();","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":100,"author":{"gitId":"leeyikai"},"content":"     * Finds the {@link Expense} that contains the category as {@param expenseAttribute} and prints it out.","lastModifiedDate":"2021-11-06"},{"lineNumber":101,"author":{"gitId":"leeyikai"},"content":"     * If there are no matching {@link Expense}, an error message will be printed.","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"leeyikai"},"content":"     *","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"leeyikai"},"content":"     * @param listOfCurrentExpenses {@link ArrayList} containing the list of expenses currently in the trip.","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"leeyikai"},"content":"     * @param expenseAttribute @{@link String} containing the category that we want to find.","lastModifiedDate":"2021-11-06"},{"lineNumber":105,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":106,"author":{"gitId":"leeyikai"},"content":"    static void findMatchingCategoryExpenses(ArrayList\u003cExpense\u003e listOfCurrentExpenses,","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"leeyikai"},"content":"                                                     String expenseAttribute) {","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"leeyikai"},"content":"        boolean areThereExpenses \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"leeyikai"},"content":"        for (Expense e : listOfCurrentExpenses) {","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"leeyikai"},"content":"            if (e.getCategory().equalsIgnoreCase(expenseAttribute)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"leeyikai"},"content":"                int index \u003d listOfCurrentExpenses.indexOf(e);","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"leeyikai"},"content":"                Ui.printFilteredExpenses(e, index);","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"leeyikai"},"content":"                areThereExpenses \u003d true;","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"leeyikai"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"leeyikai"},"content":"        if (!areThereExpenses) {","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"leeyikai"},"content":"            Ui.printNoMatchingExpenseError();","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"leeyikai"},"content":"    //@@author","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"lixiyuan416"},"content":"    //@@author lixiyuan416","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"lixiyuan416"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"lixiyuan416"},"content":"     * Filters expenses inside a trip by person.","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"lixiyuan416"},"content":"     * See parent method {@link Trip#getFilteredExpenses(String, String)}","lastModifiedDate":"2021-11-07"},{"lineNumber":127,"author":{"gitId":"lixiyuan416"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":128,"author":{"gitId":"lixiyuan416"},"content":"     * @param listOfCurrentExpenses list of expenses of a trip","lastModifiedDate":"2021-11-07"},{"lineNumber":129,"author":{"gitId":"lixiyuan416"},"content":"     * @param personToSearchFor name of person","lastModifiedDate":"2021-11-07"},{"lineNumber":130,"author":{"gitId":"lixiyuan416"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":131,"author":{"gitId":"lixiyuan416"},"content":"    static void findMatchingPersonExpenses(ArrayList\u003cExpense\u003e listOfCurrentExpenses,","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"lixiyuan416"},"content":"                                                   String personToSearchFor) {","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"lixiyuan416"},"content":"        boolean areThereExpenses \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"lixiyuan416"},"content":"        for (Expense e : listOfCurrentExpenses) {","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"lixiyuan416"},"content":"            boolean isExpenseToBeAdded \u003d false;","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"lixiyuan416"},"content":"            ArrayList\u003cPerson\u003e personList \u003d e.getPersonsList();","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"lixiyuan416"},"content":"            for (Person p : personList) {","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"lixiyuan416"},"content":"                if (p.getName().equalsIgnoreCase(personToSearchFor)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"lixiyuan416"},"content":"                    isExpenseToBeAdded \u003d true;","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"lixiyuan416"},"content":"                    break;","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"lixiyuan416"},"content":"                }","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"lixiyuan416"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"lixiyuan416"},"content":"            if (isExpenseToBeAdded) {","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"lixiyuan416"},"content":"                int index \u003d listOfCurrentExpenses.indexOf(e);","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"lixiyuan416"},"content":"                Ui.printFilteredExpenses(e, index);","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"lixiyuan416"},"content":"                areThereExpenses \u003d true;","lastModifiedDate":"2021-11-04"},{"lineNumber":147,"author":{"gitId":"lixiyuan416"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"lixiyuan416"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"lixiyuan416"},"content":"        if (!areThereExpenses) {","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"lixiyuan416"},"content":"            Ui.printNoMatchingExpenseError();","lastModifiedDate":"2021-11-04"},{"lineNumber":151,"author":{"gitId":"lixiyuan416"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":154,"author":{"gitId":"lixiyuan416"},"content":"    private static boolean isDateValid(String inputDate) {","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"lixiyuan416"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"lixiyuan416"},"content":"            if (Parser.doesDateReallyExist(inputDate)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"lixiyuan416"},"content":"                LocalDate.parse(inputDate, inputPattern);","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"lixiyuan416"},"content":"                return true;","lastModifiedDate":"2021-11-04"},{"lineNumber":159,"author":{"gitId":"lixiyuan416"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":160,"author":{"gitId":"lixiyuan416"},"content":"            return false;","lastModifiedDate":"2021-11-07"},{"lineNumber":161,"author":{"gitId":"lixiyuan416"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"lixiyuan416"},"content":"            Storage.getLogger().log(Level.INFO, \"Invalid date format entered\");","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"lixiyuan416"},"content":"            Ui.viewFilterDateFormatInvalid();","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"lixiyuan416"},"content":"            return false;","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"lixiyuan416"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"lixiyuan416"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"joshualeeky":20,"lixiyuan416":77,"leeyikai":70}},{"path":"src/main/java/seedu/duke/trip/Trip.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joshualeeky"},"content":"package seedu.duke.trip;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.Person;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.Storage;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.exceptions.ForceCancelException;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.exceptions.SameNameException;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.expense.Expense;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"joshualeeky"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"joshualeeky"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"joshualeeky"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"joshualeeky"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"joshualeeky"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"joshualeeky"},"content":"import static seedu.duke.parser.Parser.isNumeric;","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"joshualeeky"},"content":"public class Trip implements FilterFinder {","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"joshualeeky"},"content":"    private LocalDate dateOfTrip;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"joshualeeky"},"content":"    private ArrayList\u003cExpense\u003e listOfExpenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"joshualeeky"},"content":"    private ArrayList\u003cPerson\u003e listOfPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"joshualeeky"},"content":"    private double exchangeRate;","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"joshualeeky"},"content":"    private String foreignCurrency;","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"joshualeeky"},"content":"    private String foreignCurrencyFormat;","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"joshualeeky"},"content":"    private String foreignCurrencySymbol;","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"joshualeeky"},"content":"    private String repaymentCurrency \u003d \"SGD\";","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"joshualeeky"},"content":"    private String repaymentCurrencyFormat \u003d \"%.02f\";","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"joshualeeky"},"content":"    private String repaymentCurrencySymbol \u003d \"$\";","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"joshualeeky"},"content":"    private String location;","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"joshualeeky"},"content":"    private Expense lastExpense \u003d null;","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"joshualeeky"},"content":"    private static final int ISO_LENGTH \u003d 3;","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"joshualeeky"},"content":"    private static final String CATEGORY \u003d \"category\";","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"joshualeeky"},"content":"    private static final String DESCRIPTION \u003d \"description\";","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"joshualeeky"},"content":"    private static final String PAYER \u003d \"payer\";","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"joshualeeky"},"content":"    private static final String PERSON \u003d \"person\";","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"joshualeeky"},"content":"    private static final String DATE \u003d \"date\";","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"yeezao"},"content":"    //@@author yeezao","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"yeezao"},"content":"     * Legacy constructor for Trip. Used as stub for testing.","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"yeezao"},"content":"    public Trip() {","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"yeezao"},"content":"        //empty constructor","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"yeezao"},"content":"    private static final int LOCATION_STRING \u003d 1;","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"yeezao"},"content":"    private static final int DATE_STRING \u003d 2;","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"yeezao"},"content":"    private static final int FORCUR_STRING \u003d 3;","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"yeezao"},"content":"    private static final int EXRATE_STRING \u003d 4;","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"yeezao"},"content":"    private static final int PERSONS_STRING \u003d 5;","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"yeezao"},"content":"     * Non-empty {@link Trip} constructor. Reads in a String array and processes it to set attributes for a given Trip.","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"yeezao"},"content":"     * @param newTripInfo array containing one attribute in each element","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"yeezao"},"content":"    public Trip(String[] newTripInfo) throws ForceCancelException, SameNameException {","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"yeezao"},"content":"        assert newTripInfo.length \u003d\u003d 6;","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"yeezao"},"content":"        setLocation(newTripInfo[LOCATION_STRING].strip());","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"yeezao"},"content":"        setDateOfTrip(newTripInfo[DATE_STRING].strip());","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"yeezao"},"content":"        setForeignCurrency(newTripInfo[FORCUR_STRING].strip().toUpperCase());","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"yeezao"},"content":"        setExchangeRate(newTripInfo[EXRATE_STRING].strip());","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"yeezao"},"content":"        setListOfPersons(splitPeople(newTripInfo[PERSONS_STRING]));","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"leeyikai"},"content":"    //@@author leeyikai","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"leeyikai"},"content":"    public void getFilteredExpenses(String expenseCategory, String expenseAttribute) {","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"leeyikai"},"content":"        if (listOfExpenses.isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"leeyikai"},"content":"            Ui.printNoExpensesError();","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"leeyikai"},"content":"            return;","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"leeyikai"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"leeyikai"},"content":"            switch (expenseCategory) {","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"leeyikai"},"content":"            case CATEGORY:","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"leeyikai"},"content":"                FilterFinder.findMatchingCategoryExpenses(listOfExpenses, expenseAttribute);","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"leeyikai"},"content":"                break;","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"leeyikai"},"content":"            case DESCRIPTION:","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"leeyikai"},"content":"                FilterFinder.findMatchingDescriptionExpenses(listOfExpenses, expenseAttribute);","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"leeyikai"},"content":"                break;","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"leeyikai"},"content":"            case PAYER:","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"leeyikai"},"content":"                FilterFinder.findMatchingPayerExpenses(listOfExpenses, expenseAttribute);","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"leeyikai"},"content":"                break;","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"leeyikai"},"content":"            case PERSON:","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"leeyikai"},"content":"                FilterFinder.findMatchingPersonExpenses(listOfExpenses, expenseAttribute);","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"leeyikai"},"content":"                break;","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"leeyikai"},"content":"            case DATE:","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"leeyikai"},"content":"                FilterFinder.findMatchingDateExpenses(listOfExpenses, expenseAttribute);","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"leeyikai"},"content":"                break;","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"leeyikai"},"content":"            default:","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"leeyikai"},"content":"                Ui.printInvalidFilterError();","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"leeyikai"},"content":"                break;","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"leeyikai"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"leeyikai"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"leeyikai"},"content":"            Ui.printFilterFormatError();","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"leeyikai"},"content":"        } catch (ForceCancelException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"leeyikai"},"content":"            Ui.printForceCancelled();","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"yeezao"},"content":"    //@@author yeezao","lastModifiedDate":"2021-11-06"},{"lineNumber":106,"author":{"gitId":"yeezao"},"content":"    public LocalDate getDateOfTrip() {","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"yeezao"},"content":"        return dateOfTrip;","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"yeezao"},"content":"     * Returns the {@link LocalDate} object as a formatted string (with the format dd MMMM yy).","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"yeezao"},"content":"     * @return the formatted date as a {@link String}.","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"yeezao"},"content":"    public String getDateOfTripString() {","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"yeezao"},"content":"        DateTimeFormatter pattern \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"yeezao"},"content":"        return getDateOfTrip().format(pattern);","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"yeezao"},"content":"     * Parses a user input (in {@link String}) into a {@link LocalDate}.","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"yeezao"},"content":"     * @param dateOfTrip user-entered date of trip as a String","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"yeezao"},"content":"    public void setDateOfTrip(String dateOfTrip) throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"yeezao"},"content":"        DateTimeFormatter pattern \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"yeezao"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"yeezao"},"content":"            LocalDate date \u003d LocalDate.parse(dateOfTrip, pattern);","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"yeezao"},"content":"            if (Parser.doesDateReallyExist(dateOfTrip)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"yeezao"},"content":"                if (date.isBefore(LocalDate.EPOCH)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"yeezao"},"content":"                    dateInvalid();","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"yeezao"},"content":"                } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"yeezao"},"content":"                    this.dateOfTrip \u003d date;","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"yeezao"},"content":"                }","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"yeezao"},"content":"            } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"yeezao"},"content":"                dateInvalid();","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"yeezao"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"yeezao"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"yeezao"},"content":"            Ui.printDateTimeFormatError();","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"yeezao"},"content":"            userInputDateError();","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"yeezao"},"content":"    private void dateInvalid() throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"yeezao"},"content":"        Ui.dateInvalidError();","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"yeezao"},"content":"        userInputDateError();","lastModifiedDate":"2021-11-04"},{"lineNumber":147,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"yeezao"},"content":"    private void userInputDateError() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":150,"author":{"gitId":"yeezao"},"content":"        String newInput \u003d Ui.receiveUserInput();","lastModifiedDate":"2021-11-04"},{"lineNumber":151,"author":{"gitId":"yeezao"},"content":"        setDateOfTrip(newInput);","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":154,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"yeezao"},"content":"    public double getExchangeRate() {","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"yeezao"},"content":"        return exchangeRate;","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":159,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":160,"author":{"gitId":"yeezao"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":161,"author":{"gitId":"yeezao"},"content":"     * Parses an exchange rate entered by the user (as a {@link String}) into a {@link Double}.","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"yeezao"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"yeezao"},"content":"     * @param exchangeRateString user-entered exchange rate (as a String)","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"yeezao"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"yeezao"},"content":"    public void setExchangeRate(String exchangeRateString) throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"yeezao"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"yeezao"},"content":"            this.exchangeRate \u003d Double.parseDouble(exchangeRateString);","lastModifiedDate":"2021-11-04"},{"lineNumber":168,"author":{"gitId":"yeezao"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":169,"author":{"gitId":"yeezao"},"content":"            Ui.printExchangeRateFormatError();","lastModifiedDate":"2021-11-04"},{"lineNumber":170,"author":{"gitId":"yeezao"},"content":"            String userInput \u003d Ui.receiveUserInput();","lastModifiedDate":"2021-11-04"},{"lineNumber":171,"author":{"gitId":"yeezao"},"content":"            setExchangeRate(userInput);","lastModifiedDate":"2021-11-04"},{"lineNumber":172,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":173,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":174,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":175,"author":{"gitId":"itsleeqian"},"content":"    //@@author itsleeqian","lastModifiedDate":"2021-11-04"},{"lineNumber":176,"author":{"gitId":"itsleeqian"},"content":"    public void setForeignCurrency(String foreignCurrency) throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"itsleeqian"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":178,"author":{"gitId":"itsleeqian"},"content":"            if (isNumeric(foreignCurrency) || foreignCurrency.length() !\u003d ISO_LENGTH) {","lastModifiedDate":"2021-11-04"},{"lineNumber":179,"author":{"gitId":"itsleeqian"},"content":"                throw new NumberFormatException();","lastModifiedDate":"2021-11-04"},{"lineNumber":180,"author":{"gitId":"itsleeqian"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":181,"author":{"gitId":"itsleeqian"},"content":"            this.foreignCurrency \u003d foreignCurrency;","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"itsleeqian"},"content":"            setForeignCurrencyFormat(this.foreignCurrency);","lastModifiedDate":"2021-11-04"},{"lineNumber":183,"author":{"gitId":"itsleeqian"},"content":"            setForeignCurrencySymbol(this.foreignCurrency);","lastModifiedDate":"2021-11-04"},{"lineNumber":184,"author":{"gitId":"itsleeqian"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":185,"author":{"gitId":"itsleeqian"},"content":"            Ui.printIsoFormatError();","lastModifiedDate":"2021-11-04"},{"lineNumber":186,"author":{"gitId":"itsleeqian"},"content":"            String userInput \u003d Ui.receiveUserInput();","lastModifiedDate":"2021-11-04"},{"lineNumber":187,"author":{"gitId":"itsleeqian"},"content":"            setForeignCurrency(userInput);","lastModifiedDate":"2021-11-04"},{"lineNumber":188,"author":{"gitId":"itsleeqian"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":189,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":190,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":191,"author":{"gitId":"joshualeeky"},"content":"    //@@author joshualeeky","lastModifiedDate":"2021-11-04"},{"lineNumber":192,"author":{"gitId":"joshualeeky"},"content":"    public String getForeignCurrency() {","lastModifiedDate":"2021-11-04"},{"lineNumber":193,"author":{"gitId":"joshualeeky"},"content":"        return foreignCurrency;","lastModifiedDate":"2021-11-04"},{"lineNumber":194,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":195,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":196,"author":{"gitId":"joshualeeky"},"content":"    private void setForeignCurrencyFormat(String input) {","lastModifiedDate":"2021-11-04"},{"lineNumber":197,"author":{"gitId":"joshualeeky"},"content":"        if (Storage.getAvailableCurrency().containsKey(input)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":198,"author":{"gitId":"joshualeeky"},"content":"            this.foreignCurrencyFormat \u003d Storage.getAvailableCurrency().get(input)[1];","lastModifiedDate":"2021-11-04"},{"lineNumber":199,"author":{"gitId":"joshualeeky"},"content":"        } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":200,"author":{"gitId":"joshualeeky"},"content":"            this.foreignCurrencyFormat \u003d \"%.02f\";","lastModifiedDate":"2021-11-04"},{"lineNumber":201,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":202,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":203,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":204,"author":{"gitId":"joshualeeky"},"content":"    private void setForeignCurrencySymbol(String input) {","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"joshualeeky"},"content":"        if (Storage.getAvailableCurrency().containsKey(input)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":206,"author":{"gitId":"joshualeeky"},"content":"            this.foreignCurrencySymbol \u003d Storage.getAvailableCurrency().get(input)[0];","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"joshualeeky"},"content":"        } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":208,"author":{"gitId":"joshualeeky"},"content":"            this.foreignCurrencySymbol \u003d \"\";","lastModifiedDate":"2021-11-04"},{"lineNumber":209,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":210,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":211,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":212,"author":{"gitId":"joshualeeky"},"content":"    public String getForeignCurrencyFormat() {","lastModifiedDate":"2021-11-04"},{"lineNumber":213,"author":{"gitId":"joshualeeky"},"content":"        return foreignCurrencyFormat;","lastModifiedDate":"2021-11-04"},{"lineNumber":214,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":215,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":216,"author":{"gitId":"joshualeeky"},"content":"    public String getForeignCurrencySymbol() {","lastModifiedDate":"2021-11-04"},{"lineNumber":217,"author":{"gitId":"joshualeeky"},"content":"        return foreignCurrencySymbol;","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":219,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":220,"author":{"gitId":"joshualeeky"},"content":"    public String getRepaymentCurrency() {","lastModifiedDate":"2021-11-04"},{"lineNumber":221,"author":{"gitId":"joshualeeky"},"content":"        return repaymentCurrency;","lastModifiedDate":"2021-11-04"},{"lineNumber":222,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":223,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":224,"author":{"gitId":"itsleeqian"},"content":"    //@@author itsleeqian","lastModifiedDate":"2021-11-08"},{"lineNumber":225,"author":{"gitId":"itsleeqian"},"content":"    public void setRepaymentCurrency(String repaymentCurrency) throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":226,"author":{"gitId":"itsleeqian"},"content":"        try {","lastModifiedDate":"2021-11-08"},{"lineNumber":227,"author":{"gitId":"itsleeqian"},"content":"            if (isNumeric(repaymentCurrency) || repaymentCurrency.length() !\u003d ISO_LENGTH) {","lastModifiedDate":"2021-11-08"},{"lineNumber":228,"author":{"gitId":"itsleeqian"},"content":"                throw new NumberFormatException();","lastModifiedDate":"2021-11-08"},{"lineNumber":229,"author":{"gitId":"itsleeqian"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":230,"author":{"gitId":"itsleeqian"},"content":"            this.repaymentCurrency \u003d repaymentCurrency.toUpperCase();","lastModifiedDate":"2021-11-04"},{"lineNumber":231,"author":{"gitId":"itsleeqian"},"content":"            setRepaymentCurrencyFormat(this.repaymentCurrency);","lastModifiedDate":"2021-11-04"},{"lineNumber":232,"author":{"gitId":"itsleeqian"},"content":"            setRepaymentCurrencySymbol(this.repaymentCurrency);","lastModifiedDate":"2021-11-04"},{"lineNumber":233,"author":{"gitId":"itsleeqian"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":234,"author":{"gitId":"itsleeqian"},"content":"            Ui.printIsoFormatError();","lastModifiedDate":"2021-11-08"},{"lineNumber":235,"author":{"gitId":"itsleeqian"},"content":"            String userInput \u003d Ui.receiveUserInput();","lastModifiedDate":"2021-11-08"},{"lineNumber":236,"author":{"gitId":"itsleeqian"},"content":"            setRepaymentCurrency(userInput);","lastModifiedDate":"2021-11-08"},{"lineNumber":237,"author":{"gitId":"itsleeqian"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":238,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":239,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":240,"author":{"gitId":"itsleeqian"},"content":"    private void setRepaymentCurrencyFormat(String input) {","lastModifiedDate":"2021-11-04"},{"lineNumber":241,"author":{"gitId":"itsleeqian"},"content":"        if (Storage.getAvailableCurrency().containsKey(input)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":242,"author":{"gitId":"itsleeqian"},"content":"            this.repaymentCurrencyFormat \u003d Storage.getAvailableCurrency().get(input)[1];","lastModifiedDate":"2021-11-04"},{"lineNumber":243,"author":{"gitId":"itsleeqian"},"content":"        } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":244,"author":{"gitId":"itsleeqian"},"content":"            this.repaymentCurrencyFormat \u003d \"%.02f\";","lastModifiedDate":"2021-11-04"},{"lineNumber":245,"author":{"gitId":"itsleeqian"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":246,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":247,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":248,"author":{"gitId":"itsleeqian"},"content":"    public String getRepaymentCurrencyFormat() {","lastModifiedDate":"2021-11-04"},{"lineNumber":249,"author":{"gitId":"itsleeqian"},"content":"        return repaymentCurrencyFormat;","lastModifiedDate":"2021-11-04"},{"lineNumber":250,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":251,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":252,"author":{"gitId":"itsleeqian"},"content":"    public String getRepaymentCurrencySymbol() {","lastModifiedDate":"2021-11-04"},{"lineNumber":253,"author":{"gitId":"itsleeqian"},"content":"        return repaymentCurrencySymbol;","lastModifiedDate":"2021-11-04"},{"lineNumber":254,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":255,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":256,"author":{"gitId":"itsleeqian"},"content":"    private void setRepaymentCurrencySymbol(String input) {","lastModifiedDate":"2021-11-04"},{"lineNumber":257,"author":{"gitId":"itsleeqian"},"content":"        if (Storage.getAvailableCurrency().containsKey(input)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":258,"author":{"gitId":"itsleeqian"},"content":"            this.repaymentCurrencySymbol \u003d Storage.getAvailableCurrency().get(input)[0];","lastModifiedDate":"2021-11-04"},{"lineNumber":259,"author":{"gitId":"itsleeqian"},"content":"        } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":260,"author":{"gitId":"itsleeqian"},"content":"            this.repaymentCurrencySymbol \u003d \"\";","lastModifiedDate":"2021-11-04"},{"lineNumber":261,"author":{"gitId":"itsleeqian"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":262,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":263,"author":{"gitId":"itsleeqian"},"content":"    //@@author","lastModifiedDate":"2021-11-04"},{"lineNumber":264,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":265,"author":{"gitId":"yeezao"},"content":"    //@@author yeezao","lastModifiedDate":"2021-11-06"},{"lineNumber":266,"author":{"gitId":"yeezao"},"content":"    public String getLocation() {","lastModifiedDate":"2021-11-04"},{"lineNumber":267,"author":{"gitId":"yeezao"},"content":"        return this.location;","lastModifiedDate":"2021-11-04"},{"lineNumber":268,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":269,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":270,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":271,"author":{"gitId":"yeezao"},"content":"    public void setListOfPersons(ArrayList\u003cPerson\u003e listOfPersons) throws ForceCancelException, SameNameException {","lastModifiedDate":"2021-11-04"},{"lineNumber":272,"author":{"gitId":"yeezao"},"content":"        if (listOfPersons.isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":273,"author":{"gitId":"yeezao"},"content":"            Ui.noPersonsAdded();","lastModifiedDate":"2021-11-04"},{"lineNumber":274,"author":{"gitId":"yeezao"},"content":"            String userInput \u003d Ui.receiveUserInput();","lastModifiedDate":"2021-11-04"},{"lineNumber":275,"author":{"gitId":"yeezao"},"content":"            setListOfPersons(splitPeople(userInput));","lastModifiedDate":"2021-11-04"},{"lineNumber":276,"author":{"gitId":"yeezao"},"content":"            return;","lastModifiedDate":"2021-11-04"},{"lineNumber":277,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":278,"author":{"gitId":"yeezao"},"content":"        this.listOfPersons \u003d listOfPersons;","lastModifiedDate":"2021-11-04"},{"lineNumber":279,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":280,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":281,"author":{"gitId":"yeezao"},"content":"    public ArrayList\u003cPerson\u003e getListOfPersons() {","lastModifiedDate":"2021-11-04"},{"lineNumber":282,"author":{"gitId":"yeezao"},"content":"        return listOfPersons;","lastModifiedDate":"2021-11-04"},{"lineNumber":283,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":284,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":285,"author":{"gitId":"yeezao"},"content":"    public void setLocation(String location) throws ForceCancelException {","lastModifiedDate":"2021-11-04"},{"lineNumber":286,"author":{"gitId":"yeezao"},"content":"        if (location.isBlank()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":287,"author":{"gitId":"yeezao"},"content":"            Ui.locationIsBlank();","lastModifiedDate":"2021-11-04"},{"lineNumber":288,"author":{"gitId":"yeezao"},"content":"            setLocation(Ui.receiveUserInput());","lastModifiedDate":"2021-11-04"},{"lineNumber":289,"author":{"gitId":"yeezao"},"content":"        } else {","lastModifiedDate":"2021-11-07"},{"lineNumber":290,"author":{"gitId":"yeezao"},"content":"            this.location \u003d location;","lastModifiedDate":"2021-11-04"},{"lineNumber":291,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":292,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":293,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":294,"author":{"gitId":"yeezao"},"content":"    public Expense getLastExpense() {","lastModifiedDate":"2021-11-04"},{"lineNumber":295,"author":{"gitId":"yeezao"},"content":"        return lastExpense;","lastModifiedDate":"2021-11-04"},{"lineNumber":296,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":297,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":298,"author":{"gitId":"yeezao"},"content":"    public void setLastExpense(Expense lastExpense) {","lastModifiedDate":"2021-11-04"},{"lineNumber":299,"author":{"gitId":"yeezao"},"content":"        this.lastExpense \u003d lastExpense;","lastModifiedDate":"2021-11-04"},{"lineNumber":300,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":301,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":302,"author":{"gitId":"yeezao"},"content":"    public void setPersonName(int indexOfPerson, String newName) {","lastModifiedDate":"2021-11-04"},{"lineNumber":303,"author":{"gitId":"yeezao"},"content":"        Person personToEdit \u003d listOfPersons.get(indexOfPerson);","lastModifiedDate":"2021-11-04"},{"lineNumber":304,"author":{"gitId":"yeezao"},"content":"        personToEdit.setName(newName);","lastModifiedDate":"2021-11-04"},{"lineNumber":305,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":306,"author":{"gitId":"yeezao"},"content":"    //@@author","lastModifiedDate":"2021-11-06"},{"lineNumber":307,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":308,"author":{"gitId":"joshualeeky"},"content":"    public void addExpense(Expense expense) {","lastModifiedDate":"2021-11-04"},{"lineNumber":309,"author":{"gitId":"joshualeeky"},"content":"        listOfExpenses.add(expense);","lastModifiedDate":"2021-11-04"},{"lineNumber":310,"author":{"gitId":"joshualeeky"},"content":"        listOfExpenses.sort(Comparator.comparing(Expense::getDate));","lastModifiedDate":"2021-11-04"},{"lineNumber":311,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":312,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":313,"author":{"gitId":"joshualeeky"},"content":"    public ArrayList\u003cExpense\u003e getListOfExpenses() {","lastModifiedDate":"2021-11-04"},{"lineNumber":314,"author":{"gitId":"joshualeeky"},"content":"        return listOfExpenses;","lastModifiedDate":"2021-11-04"},{"lineNumber":315,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":316,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":317,"author":{"gitId":"joshualeeky"},"content":"    public void removeExpense(Integer i) {","lastModifiedDate":"2021-11-04"},{"lineNumber":318,"author":{"gitId":"joshualeeky"},"content":"        listOfExpenses.remove(listOfExpenses.get(i));","lastModifiedDate":"2021-11-04"},{"lineNumber":319,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":320,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":321,"author":{"gitId":"joshualeeky"},"content":"    public void viewAllExpenses() {","lastModifiedDate":"2021-11-04"},{"lineNumber":322,"author":{"gitId":"joshualeeky"},"content":"        if (listOfExpenses.isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":323,"author":{"gitId":"joshualeeky"},"content":"            Ui.printNoExpensesError();","lastModifiedDate":"2021-11-04"},{"lineNumber":324,"author":{"gitId":"joshualeeky"},"content":"        } else {","lastModifiedDate":"2021-11-04"},{"lineNumber":325,"author":{"gitId":"joshualeeky"},"content":"            System.out.println(\"List of all Expenses in detail: \");","lastModifiedDate":"2021-11-04"},{"lineNumber":326,"author":{"gitId":"joshualeeky"},"content":"            for (Expense expense : listOfExpenses) {","lastModifiedDate":"2021-11-04"},{"lineNumber":327,"author":{"gitId":"joshualeeky"},"content":"                System.out.print(listOfExpenses.indexOf(expense) + 1 + \". \");","lastModifiedDate":"2021-11-04"},{"lineNumber":328,"author":{"gitId":"joshualeeky"},"content":"                Ui.printExpenseDetails(expense);","lastModifiedDate":"2021-11-04"},{"lineNumber":329,"author":{"gitId":"joshualeeky"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":330,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":331,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":332,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":333,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":334,"author":{"gitId":"joshualeeky"},"content":"    public Expense getExpenseAtIndex(Integer index) {","lastModifiedDate":"2021-11-04"},{"lineNumber":335,"author":{"gitId":"joshualeeky"},"content":"        return listOfExpenses.get(index - 1);","lastModifiedDate":"2021-11-04"},{"lineNumber":336,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":337,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":338,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":339,"author":{"gitId":"joshualeeky"},"content":"    //@@author joshualeeky","lastModifiedDate":"2021-11-04"},{"lineNumber":340,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":341,"author":{"gitId":"joshualeeky"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":342,"author":{"gitId":"joshualeeky"},"content":"     * Splits the user-entered {@link String} of people involved in a trip into a String array.","lastModifiedDate":"2021-11-04"},{"lineNumber":343,"author":{"gitId":"joshualeeky"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":344,"author":{"gitId":"joshualeeky"},"content":"     * @param peopleChained String of all persons involved in the trip","lastModifiedDate":"2021-11-04"},{"lineNumber":345,"author":{"gitId":"joshualeeky"},"content":"     * @return {@link String} array, each element of the array being a person involved in the trip","lastModifiedDate":"2021-11-04"},{"lineNumber":346,"author":{"gitId":"joshualeeky"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":347,"author":{"gitId":"joshualeeky"},"content":"    private ArrayList\u003cPerson\u003e splitPeople(String peopleChained) throws SameNameException {","lastModifiedDate":"2021-11-04"},{"lineNumber":348,"author":{"gitId":"joshualeeky"},"content":"        ArrayList\u003cString\u003e listOfPeopleNames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":349,"author":{"gitId":"joshualeeky"},"content":"        ArrayList\u003cString\u003e listOfPeopleNamesUpperCased \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":350,"author":{"gitId":"joshualeeky"},"content":"        ArrayList\u003cPerson\u003e listOfPeople \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":351,"author":{"gitId":"joshualeeky"},"content":"        for (String personName : peopleChained.split(\",\")) {","lastModifiedDate":"2021-11-04"},{"lineNumber":352,"author":{"gitId":"joshualeeky"},"content":"            if (listOfPeopleNamesUpperCased.contains(personName.strip().toUpperCase())) {","lastModifiedDate":"2021-11-04"},{"lineNumber":353,"author":{"gitId":"joshualeeky"},"content":"                throw new SameNameException();","lastModifiedDate":"2021-11-04"},{"lineNumber":354,"author":{"gitId":"joshualeeky"},"content":"            } else if (!personName.isBlank()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":355,"author":{"gitId":"joshualeeky"},"content":"                listOfPeopleNames.add(personName.strip());","lastModifiedDate":"2021-11-04"},{"lineNumber":356,"author":{"gitId":"joshualeeky"},"content":"                listOfPeopleNamesUpperCased.add(personName.strip().toUpperCase());","lastModifiedDate":"2021-11-04"},{"lineNumber":357,"author":{"gitId":"joshualeeky"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":358,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":359,"author":{"gitId":"joshualeeky"},"content":"        for (String name : listOfPeopleNames) {","lastModifiedDate":"2021-11-04"},{"lineNumber":360,"author":{"gitId":"joshualeeky"},"content":"            Person person \u003d new Person(name);","lastModifiedDate":"2021-11-04"},{"lineNumber":361,"author":{"gitId":"joshualeeky"},"content":"            listOfPeople.add(person);","lastModifiedDate":"2021-11-04"},{"lineNumber":362,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":363,"author":{"gitId":"joshualeeky"},"content":"        for (Person person : listOfPeople) {","lastModifiedDate":"2021-11-04"},{"lineNumber":364,"author":{"gitId":"joshualeeky"},"content":"            for (Person personToAdd : listOfPeople) {","lastModifiedDate":"2021-11-04"},{"lineNumber":365,"author":{"gitId":"joshualeeky"},"content":"                person.getMoneyOwed().put(personToAdd.getName(), 0.0);","lastModifiedDate":"2021-11-04"},{"lineNumber":366,"author":{"gitId":"joshualeeky"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":367,"author":{"gitId":"joshualeeky"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":368,"author":{"gitId":"joshualeeky"},"content":"        return listOfPeople;","lastModifiedDate":"2021-11-04"},{"lineNumber":369,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":370,"author":{"gitId":"joshualeeky"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"joshualeeky":137,"yeezao":140,"itsleeqian":56,"leeyikai":37}},{"path":"src/test/java/seedu/duke/ExpenseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lixiyuan416"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"lixiyuan416"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"lixiyuan416"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"lixiyuan416"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.exceptions.ForceCancelException;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.exceptions.SameNameException;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.expense.Expense;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"lixiyuan416"},"content":"import seedu.duke.trip.FilterFinder;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"joshualeeky"},"content":"import seedu.duke.trip.Trip;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"lixiyuan416"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"lixiyuan416"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"joshualeeky"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"joshualeeky"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"joshualeeky"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"joshualeeky"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"joshualeeky"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"lixiyuan416"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"joshualeeky"},"content":"//@@ joshualeeky","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"lixiyuan416"},"content":"class ExpenseTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"lixiyuan416"},"content":"    static Expense exp;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"lixiyuan416"},"content":"    static Trip trip;","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"lixiyuan416"},"content":"    @BeforeAll","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"joshualeeky"},"content":"    static void setUp() throws ForceCancelException, SameNameException {","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"joshualeeky"},"content":"        Logger logger \u003d Logger.getLogger(\"ProgramLogger\");","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"joshualeeky"},"content":"        logger.setLevel(Level.OFF);","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"joshualeeky"},"content":"        Storage.setLogger(logger);","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"joshualeeky"},"content":"        String[] stringArray \u003d {\"\", \"USA\", \"01-12-2020\", \"USD\", \"0.74\", \"Albert, Betty, Chris, Don, Evan\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"lixiyuan416"},"content":"        trip \u003d new Trip(stringArray);","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"joshualeeky"},"content":"        Storage.getListOfTrips().add(trip);","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"joshualeeky"},"content":"        Storage.setOpenTrip(Storage.getListOfTrips().indexOf(trip));","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"joshualeeky"},"content":"        String input \u003d \"02-12-2020\" + System.lineSeparator() + \"Chris\" + System.lineSeparator() + \"100\"","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"joshualeeky"},"content":"                + System.lineSeparator() + \"200\" + System.lineSeparator() + \"y\";","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"joshualeeky"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"joshualeeky"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"joshualeeky"},"content":"        exp \u003d new Expense(\"600 food Albert, Betty, Chris /Dinner at fancy restaurant\");","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"joshualeeky"},"content":"        trip.addExpense(exp);","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"lixiyuan416"},"content":"        System.setOut(System.out);","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"joshualeeky"},"content":"    void testSetDate() {","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"joshualeeky"},"content":"        exp.setDate(\"21-01-2113\");","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(\"21 Jan 2113\", exp.getStringDate());","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"joshualeeky"},"content":"    void testGetAmountSpent() {","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(600.0, exp.getAmountSpent());","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"joshualeeky"},"content":"    void testGetPersonExpense() {","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(\"\\t\\t1) Albert, USD $100.00\" + System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"joshualeeky"},"content":"                + \"\\t\\t2) Betty, USD $200.00\" + System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"joshualeeky"},"content":"                + \"\\t\\t3) Chris, USD $300.00\" + System.lineSeparator(), exp.getPersonExpense());","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"joshualeeky"},"content":"    void testGetDescription() {","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(\"Dinner at fancy restaurant\", exp.getDescription());","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"lixiyuan416"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"joshualeeky"},"content":"    void testSetCategory() {","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"joshualeeky"},"content":"        exp.setCategory(\"f\u0026b\");","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(\"f\u0026b\", exp.getCategory());","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"joshualeeky"},"content":"    void testGetStringDate() {","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(\"02 Dec 2020\", exp.getStringDate());","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"joshualeeky"},"content":"    void testSetPayer() {","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"joshualeeky"},"content":"        Person person2 \u003d new Person(\"Betty\");","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"joshualeeky"},"content":"        exp.setPayer(person2);","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(\"Betty\", exp.getPayer().getName());","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"joshualeeky"},"content":"    void testGetPersonsList() {","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(\"[Albert, Betty, Chris]\", exp.getPersonsList().toString());","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"joshualeeky"},"content":"    void testGetAmountSplit() {","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(\"{Chris\u003d300.0, Betty\u003d200.0, Albert\u003d100.0}\", exp.getAmountSplit().toString());","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"joshualeeky"},"content":"    void testNormalAssign() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"joshualeeky"},"content":"        String input \u003d \"02-12-2020\" + System.lineSeparator() + \"Evan\" + System.lineSeparator() + \"1010\"","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"joshualeeky"},"content":"                + System.lineSeparator() + \"1010\" + System.lineSeparator() + \"y\";","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"joshualeeky"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"joshualeeky"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":103,"author":{"gitId":"joshualeeky"},"content":"        Expense testExpense \u003d new Expense(\"2113 category Chris, Don, Evan /description\");","lastModifiedDate":"2021-11-08"},{"lineNumber":104,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(\"Evan\", testExpense.getPayer().getName());","lastModifiedDate":"2021-11-08"},{"lineNumber":105,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(1010, testExpense.getAmountSplit().get(\"Chris\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":106,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(1010.0, testExpense.getAmountSplit().get(\"Don\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":107,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(93.0, testExpense.getAmountSplit().get(\"Evan\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":108,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":109,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":110,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":111,"author":{"gitId":"joshualeeky"},"content":"    void testAddAllToExpense() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":112,"author":{"gitId":"joshualeeky"},"content":"        String input \u003d \"02-12-2020\"","lastModifiedDate":"2021-11-08"},{"lineNumber":113,"author":{"gitId":"joshualeeky"},"content":"                + System.lineSeparator() + \"Albert\" + System.lineSeparator() + \"100\" + System.lineSeparator()","lastModifiedDate":"2021-11-08"},{"lineNumber":114,"author":{"gitId":"joshualeeky"},"content":"                + \"200\" + System.lineSeparator() + \"300\" + System.lineSeparator() + \"400\" + System.lineSeparator()","lastModifiedDate":"2021-11-08"},{"lineNumber":115,"author":{"gitId":"joshualeeky"},"content":"                + \"y\";","lastModifiedDate":"2021-11-08"},{"lineNumber":116,"author":{"gitId":"joshualeeky"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":117,"author":{"gitId":"joshualeeky"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":118,"author":{"gitId":"joshualeeky"},"content":"        Expense testExpense \u003d new Expense(\"1500 category -all /description\");","lastModifiedDate":"2021-11-08"},{"lineNumber":119,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(\"Albert\", testExpense.getPayer().getName());","lastModifiedDate":"2021-11-08"},{"lineNumber":120,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(100.0, testExpense.getAmountSplit().get(\"Albert\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":121,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(200.0, testExpense.getAmountSplit().get(\"Betty\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":122,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(300.0, testExpense.getAmountSplit().get(\"Chris\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":123,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(400.0, testExpense.getAmountSplit().get(\"Don\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":124,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(500.0, testExpense.getAmountSplit().get(\"Evan\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":125,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":126,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":127,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":128,"author":{"gitId":"joshualeeky"},"content":"    void testDuplicatePeopleInExpense() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":129,"author":{"gitId":"joshualeeky"},"content":"        String input \u003d \"Betty, Betty\" + System.lineSeparator() + \"Albert, Betty, Evan\"","lastModifiedDate":"2021-11-08"},{"lineNumber":130,"author":{"gitId":"joshualeeky"},"content":"                + System.lineSeparator() + \"02-12-2020\"","lastModifiedDate":"2021-11-08"},{"lineNumber":131,"author":{"gitId":"joshualeeky"},"content":"                + System.lineSeparator() + \"Evan\" + System.lineSeparator() + \"1010\"","lastModifiedDate":"2021-11-08"},{"lineNumber":132,"author":{"gitId":"joshualeeky"},"content":"                + System.lineSeparator() + \"1010\" + System.lineSeparator() + \"y\";","lastModifiedDate":"2021-11-08"},{"lineNumber":133,"author":{"gitId":"joshualeeky"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":134,"author":{"gitId":"joshualeeky"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":135,"author":{"gitId":"joshualeeky"},"content":"        Expense testExpense \u003d new Expense(\"3000 category Albert, Albert, Evan /description\");","lastModifiedDate":"2021-11-08"},{"lineNumber":136,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(\"Evan\", testExpense.getPayer().getName());","lastModifiedDate":"2021-11-08"},{"lineNumber":137,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(1010.0, testExpense.getAmountSplit().get(\"Albert\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":138,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(1010.0, testExpense.getAmountSplit().get(\"Betty\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":139,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(980.0, testExpense.getAmountSplit().get(\"Evan\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":140,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":141,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":142,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":143,"author":{"gitId":"joshualeeky"},"content":"    void testCurrentDate() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":144,"author":{"gitId":"joshualeeky"},"content":"        String input \u003d System.lineSeparator();","lastModifiedDate":"2021-11-08"},{"lineNumber":145,"author":{"gitId":"joshualeeky"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":146,"author":{"gitId":"joshualeeky"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":147,"author":{"gitId":"joshualeeky"},"content":"        Expense testExpense \u003d new Expense(\"3000 category Albert /description\");","lastModifiedDate":"2021-11-08"},{"lineNumber":148,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(LocalDate.now(), testExpense.getDate());","lastModifiedDate":"2021-11-08"},{"lineNumber":149,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":150,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":151,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":152,"author":{"gitId":"joshualeeky"},"content":"    void testInvalidDates() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":153,"author":{"gitId":"joshualeeky"},"content":"        String input \u003d \"29-02-2021\" + System.lineSeparator()","lastModifiedDate":"2021-11-08"},{"lineNumber":154,"author":{"gitId":"joshualeeky"},"content":"                + \"00-11-2021\" + System.lineSeparator()","lastModifiedDate":"2021-11-08"},{"lineNumber":155,"author":{"gitId":"joshualeeky"},"content":"                + \"25-00-2021\" + System.lineSeparator()","lastModifiedDate":"2021-11-08"},{"lineNumber":156,"author":{"gitId":"joshualeeky"},"content":"                + \"16-23-2021\" + System.lineSeparator()","lastModifiedDate":"2021-11-08"},{"lineNumber":157,"author":{"gitId":"joshualeeky"},"content":"                + System.lineSeparator() + \"Albert\" + System.lineSeparator() + \"equal\";","lastModifiedDate":"2021-11-08"},{"lineNumber":158,"author":{"gitId":"joshualeeky"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":159,"author":{"gitId":"joshualeeky"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":160,"author":{"gitId":"joshualeeky"},"content":"        Expense testExpense \u003d new Expense(\"3000 category Albert, Betty, Evan /description\");","lastModifiedDate":"2021-11-08"},{"lineNumber":161,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(\"Albert\", testExpense.getPayer().getName());","lastModifiedDate":"2021-11-08"},{"lineNumber":162,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(1000.0, testExpense.getAmountSplit().get(\"Albert\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":163,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(1000.0, testExpense.getAmountSplit().get(\"Betty\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":164,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(1000.0, testExpense.getAmountSplit().get(\"Evan\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":165,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":166,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":167,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":168,"author":{"gitId":"joshualeeky"},"content":"    void testInvalidAmountNotNumber() {","lastModifiedDate":"2021-11-08"},{"lineNumber":169,"author":{"gitId":"joshualeeky"},"content":"        ByteArrayOutputStream actualOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-08"},{"lineNumber":170,"author":{"gitId":"joshualeeky"},"content":"        System.setOut(new PrintStream(actualOutput));","lastModifiedDate":"2021-11-08"},{"lineNumber":171,"author":{"gitId":"joshualeeky"},"content":"        String expectedOutput \u003d \"Please format your inputs as follows: \"","lastModifiedDate":"2021-11-08"},{"lineNumber":172,"author":{"gitId":"joshualeeky"},"content":"                + System.lineSeparator() + \"expense [amount] [category] [people] /[description].\"","lastModifiedDate":"2021-11-08"},{"lineNumber":173,"author":{"gitId":"joshualeeky"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-11-08"},{"lineNumber":174,"author":{"gitId":"joshualeeky"},"content":"        Parser.parseUserInput(\"expense notNumber category Albert, Betty, Evan /description\");","lastModifiedDate":"2021-11-08"},{"lineNumber":175,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(actualOutput.toString(), expectedOutput);","lastModifiedDate":"2021-11-08"},{"lineNumber":176,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":177,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":178,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":179,"author":{"gitId":"joshualeeky"},"content":"    void testInvalidAmountNotPositiveNumber() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":180,"author":{"gitId":"joshualeeky"},"content":"        String input \u003d \"0\" + System.lineSeparator() + \"2113\" + System.lineSeparator() + \"02-12-2020\";","lastModifiedDate":"2021-11-08"},{"lineNumber":181,"author":{"gitId":"joshualeeky"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":182,"author":{"gitId":"joshualeeky"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":183,"author":{"gitId":"joshualeeky"},"content":"        Expense testExpense \u003d new Expense(\"-2113 category Evan /description\");","lastModifiedDate":"2021-11-08"},{"lineNumber":184,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(2113.0, testExpense.getAmountSplit().get(\"Evan\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":185,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":186,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":187,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":188,"author":{"gitId":"joshualeeky"},"content":"    void testNormalAssignUserNo() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":189,"author":{"gitId":"joshualeeky"},"content":"        String input \u003d \"02-12-2020\" + System.lineSeparator() + \"Evan\" + System.lineSeparator() + \"1010\"","lastModifiedDate":"2021-11-08"},{"lineNumber":190,"author":{"gitId":"joshualeeky"},"content":"                + System.lineSeparator() + \"1010\" + System.lineSeparator() + \"n\"","lastModifiedDate":"2021-11-08"},{"lineNumber":191,"author":{"gitId":"joshualeeky"},"content":"                + System.lineSeparator() + \"Evan\" + System.lineSeparator() + \"equal\";","lastModifiedDate":"2021-11-08"},{"lineNumber":192,"author":{"gitId":"joshualeeky"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":193,"author":{"gitId":"joshualeeky"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":194,"author":{"gitId":"joshualeeky"},"content":"        Expense testExpense \u003d new Expense(\"3000 category Albert, Betty, Evan /description\");","lastModifiedDate":"2021-11-08"},{"lineNumber":195,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(\"Evan\", testExpense.getPayer().getName());","lastModifiedDate":"2021-11-08"},{"lineNumber":196,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(1000.0, testExpense.getAmountSplit().get(\"Albert\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":197,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(1000.0, testExpense.getAmountSplit().get(\"Betty\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":198,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(1000.0, testExpense.getAmountSplit().get(\"Evan\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":199,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":200,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":201,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":202,"author":{"gitId":"joshualeeky"},"content":"    void testAmountAssignedTooHigh() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":203,"author":{"gitId":"joshualeeky"},"content":"        String input \u003d \"02-12-2020\" + System.lineSeparator() + \"Betty\" + System.lineSeparator() + \"2114\"","lastModifiedDate":"2021-11-08"},{"lineNumber":204,"author":{"gitId":"joshualeeky"},"content":"                + System.lineSeparator() + \"Betty\" + System.lineSeparator() + \"1010\"","lastModifiedDate":"2021-11-08"},{"lineNumber":205,"author":{"gitId":"joshualeeky"},"content":"                + System.lineSeparator() + \"1010\" + System.lineSeparator() + \"y\";","lastModifiedDate":"2021-11-08"},{"lineNumber":206,"author":{"gitId":"joshualeeky"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":207,"author":{"gitId":"joshualeeky"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":208,"author":{"gitId":"joshualeeky"},"content":"        Expense testExpense \u003d new Expense(\"2113 category Albert, Betty, Evan /description\");","lastModifiedDate":"2021-11-08"},{"lineNumber":209,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(\"Betty\", testExpense.getPayer().getName());","lastModifiedDate":"2021-11-08"},{"lineNumber":210,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(1010.0, testExpense.getAmountSplit().get(\"Albert\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":211,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(1010.0, testExpense.getAmountSplit().get(\"Betty\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":212,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(93.0, testExpense.getAmountSplit().get(\"Evan\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":213,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":214,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":215,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":216,"author":{"gitId":"joshualeeky"},"content":"    void testInvalidPersonInExpense() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":217,"author":{"gitId":"joshualeeky"},"content":"        String input \u003d \"Don\" + System.lineSeparator() + \"02-12-2020\" + System.lineSeparator();","lastModifiedDate":"2021-11-08"},{"lineNumber":218,"author":{"gitId":"joshualeeky"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":219,"author":{"gitId":"joshualeeky"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":220,"author":{"gitId":"joshualeeky"},"content":"        Expense testExpense \u003d new Expense(\"2113 category Duke /description\");","lastModifiedDate":"2021-11-08"},{"lineNumber":221,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(\"Don\", testExpense.getPayer().getName());","lastModifiedDate":"2021-11-08"},{"lineNumber":222,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(2113.0, testExpense.getAmountSplit().get(\"Don\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":223,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":224,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":225,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":226,"author":{"gitId":"joshualeeky"},"content":"    void testInvalidAssignAmountNotNumber() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":227,"author":{"gitId":"joshualeeky"},"content":"        String input \u003d \"02-12-2020\" + System.lineSeparator() + \"Betty\"","lastModifiedDate":"2021-11-08"},{"lineNumber":228,"author":{"gitId":"joshualeeky"},"content":"                + System.lineSeparator() + \"NotANumber\" + System.lineSeparator() + \"1010\"","lastModifiedDate":"2021-11-08"},{"lineNumber":229,"author":{"gitId":"joshualeeky"},"content":"                + System.lineSeparator() + \"1010\" + System.lineSeparator() + \"y\";","lastModifiedDate":"2021-11-08"},{"lineNumber":230,"author":{"gitId":"joshualeeky"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":231,"author":{"gitId":"joshualeeky"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":232,"author":{"gitId":"joshualeeky"},"content":"        Expense testExpense \u003d new Expense(\"2113 category Albert, Betty, Evan /description\");","lastModifiedDate":"2021-11-08"},{"lineNumber":233,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(\"Betty\", testExpense.getPayer().getName());","lastModifiedDate":"2021-11-08"},{"lineNumber":234,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(1010.0, testExpense.getAmountSplit().get(\"Albert\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":235,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(1010.0, testExpense.getAmountSplit().get(\"Betty\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":236,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(93.0, testExpense.getAmountSplit().get(\"Evan\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":237,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":238,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":239,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":240,"author":{"gitId":"joshualeeky"},"content":"    void testInvalidAssignAmountNegativeNumber() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":241,"author":{"gitId":"joshualeeky"},"content":"        String input \u003d \"02-12-2020\" + System.lineSeparator() + \"Betty\"","lastModifiedDate":"2021-11-08"},{"lineNumber":242,"author":{"gitId":"joshualeeky"},"content":"                + System.lineSeparator() + \"-2113\" + System.lineSeparator() + \"Betty\" + System.lineSeparator() + \"1010\"","lastModifiedDate":"2021-11-08"},{"lineNumber":243,"author":{"gitId":"joshualeeky"},"content":"                + System.lineSeparator() + \"1010\" + System.lineSeparator() + \"y\";","lastModifiedDate":"2021-11-08"},{"lineNumber":244,"author":{"gitId":"joshualeeky"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":245,"author":{"gitId":"joshualeeky"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":246,"author":{"gitId":"joshualeeky"},"content":"        Expense testExpense \u003d new Expense(\"2113 category Albert, Betty, Evan /description\");","lastModifiedDate":"2021-11-08"},{"lineNumber":247,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(\"Betty\", testExpense.getPayer().getName());","lastModifiedDate":"2021-11-08"},{"lineNumber":248,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(1010.0, testExpense.getAmountSplit().get(\"Albert\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":249,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(1010.0, testExpense.getAmountSplit().get(\"Betty\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":250,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(93.0, testExpense.getAmountSplit().get(\"Evan\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":251,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":252,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":253,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":254,"author":{"gitId":"joshualeeky"},"content":"    void testInvalidPayer() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":255,"author":{"gitId":"joshualeeky"},"content":"        String input \u003d \"02-12-2020\" + System.lineSeparator() + \"Chris\" + System.lineSeparator() + \"Albert\"","lastModifiedDate":"2021-11-08"},{"lineNumber":256,"author":{"gitId":"joshualeeky"},"content":"                + System.lineSeparator() + \"equal\";","lastModifiedDate":"2021-11-08"},{"lineNumber":257,"author":{"gitId":"joshualeeky"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":258,"author":{"gitId":"joshualeeky"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":259,"author":{"gitId":"joshualeeky"},"content":"        Expense testExpense \u003d new Expense(\"3000 category Albert, Don, Betty /description\");","lastModifiedDate":"2021-11-08"},{"lineNumber":260,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(\"Albert\", testExpense.getPayer().getName());","lastModifiedDate":"2021-11-08"},{"lineNumber":261,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(1000.0, testExpense.getAmountSplit().get(\"Albert\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":262,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(1000.0, testExpense.getAmountSplit().get(\"Betty\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":263,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(1000.0, testExpense.getAmountSplit().get(\"Don\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":264,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":265,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":266,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":267,"author":{"gitId":"joshualeeky"},"content":"    void testUpdateOnePersonSpending() throws ForceCancelException {","lastModifiedDate":"2021-11-07"},{"lineNumber":268,"author":{"gitId":"joshualeeky"},"content":"        System.setIn(new ByteArrayInputStream(\"08-12-2010\".getBytes()));","lastModifiedDate":"2021-11-07"},{"lineNumber":269,"author":{"gitId":"joshualeeky"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-07"},{"lineNumber":270,"author":{"gitId":"joshualeeky"},"content":"        Expense testExpense \u003d new Expense(\"2113 category Albert /description\");","lastModifiedDate":"2021-11-07"},{"lineNumber":271,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(\"Albert\", testExpense.getPayer().getName());","lastModifiedDate":"2021-11-07"},{"lineNumber":272,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(2113.0, testExpense.getAmountSplit().get(\"Albert\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":273,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(2213.0, trip.getListOfPersons().get(0).getMoneyOwed().get(\"Albert\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":274,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":275,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":276,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":277,"author":{"gitId":"joshualeeky"},"content":"    void testUpdateIndividualSpendingAssignZero() throws ForceCancelException {","lastModifiedDate":"2021-11-07"},{"lineNumber":278,"author":{"gitId":"joshualeeky"},"content":"        String input \u003d \"02-12-2020\" + System.lineSeparator() + \"Albert\" + System.lineSeparator() + \"1234\"","lastModifiedDate":"2021-11-07"},{"lineNumber":279,"author":{"gitId":"joshualeeky"},"content":"                + System.lineSeparator() + \"y\";","lastModifiedDate":"2021-11-07"},{"lineNumber":280,"author":{"gitId":"joshualeeky"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-07"},{"lineNumber":281,"author":{"gitId":"joshualeeky"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-07"},{"lineNumber":282,"author":{"gitId":"joshualeeky"},"content":"        Expense testExpense \u003d new Expense(\"1234 category Albert, Evan, Don /description\");","lastModifiedDate":"2021-11-07"},{"lineNumber":283,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(1234.0, testExpense.getAmountSplit().get(\"Albert\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":284,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(0.0, testExpense.getAmountSplit().get(\"Evan\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":285,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(0.0, testExpense.getAmountSplit().get(\"Don\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":286,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":287,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":288,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":289,"author":{"gitId":"joshualeeky"},"content":"    void testUpdateIndividualSpendingAssignZeroUserNo() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":290,"author":{"gitId":"joshualeeky"},"content":"        String input \u003d \"02-12-2020\" + System.lineSeparator() + \"Albert\" + System.lineSeparator() + \"1200\"","lastModifiedDate":"2021-11-08"},{"lineNumber":291,"author":{"gitId":"joshualeeky"},"content":"                + System.lineSeparator() + \"n\" + System.lineSeparator() + \"Albert\" + System.lineSeparator() + \"equal\";","lastModifiedDate":"2021-11-08"},{"lineNumber":292,"author":{"gitId":"joshualeeky"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":293,"author":{"gitId":"joshualeeky"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":294,"author":{"gitId":"joshualeeky"},"content":"        Expense testExpense \u003d new Expense(\"1200 category Albert, Evan, Don /description\");","lastModifiedDate":"2021-11-08"},{"lineNumber":295,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(400.0, testExpense.getAmountSplit().get(\"Albert\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":296,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(400.0, testExpense.getAmountSplit().get(\"Evan\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":297,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(400.0, testExpense.getAmountSplit().get(\"Don\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":298,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":299,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":300,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":301,"author":{"gitId":"joshualeeky"},"content":"    void testUpdateIndividualSpendingEqual() throws ForceCancelException {","lastModifiedDate":"2021-11-07"},{"lineNumber":302,"author":{"gitId":"joshualeeky"},"content":"        String input \u003d \"02-12-2020\" + System.lineSeparator() + \"Evan\" + System.lineSeparator() + \"equal\";","lastModifiedDate":"2021-11-07"},{"lineNumber":303,"author":{"gitId":"joshualeeky"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-07"},{"lineNumber":304,"author":{"gitId":"joshualeeky"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-07"},{"lineNumber":305,"author":{"gitId":"joshualeeky"},"content":"        Expense testExpense \u003d new Expense(\"900 category Don, Evan, Betty /description\");","lastModifiedDate":"2021-11-07"},{"lineNumber":306,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(300.0, testExpense.getAmountSplit().get(\"Don\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":307,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(300.0, testExpense.getAmountSplit().get(\"Evan\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":308,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(300.0, testExpense.getAmountSplit().get(\"Betty\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":309,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":310,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":311,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":312,"author":{"gitId":"joshualeeky"},"content":"    void testUpdateIndividualSpendingInvalidEqual() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":313,"author":{"gitId":"joshualeeky"},"content":"        String input \u003d \"02-12-2020\" + System.lineSeparator() + \"Evan\" + System.lineSeparator() + \"200\"","lastModifiedDate":"2021-11-08"},{"lineNumber":314,"author":{"gitId":"joshualeeky"},"content":"                + System.lineSeparator() + \"equal\" + System.lineSeparator() + \"400\" + System.lineSeparator() + \"y\";","lastModifiedDate":"2021-11-08"},{"lineNumber":315,"author":{"gitId":"joshualeeky"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":316,"author":{"gitId":"joshualeeky"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":317,"author":{"gitId":"joshualeeky"},"content":"        Expense testExpense \u003d new Expense(\"900 category Albert, Evan, Betty /description\");","lastModifiedDate":"2021-11-08"},{"lineNumber":318,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(200.0, testExpense.getAmountSplit().get(\"Albert\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":319,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(400.0, testExpense.getAmountSplit().get(\"Evan\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":320,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(300.0, testExpense.getAmountSplit().get(\"Betty\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":321,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":322,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":323,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":324,"author":{"gitId":"joshualeeky"},"content":"    void testUpdateIndividualSpendingMoreThanEqual() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":325,"author":{"gitId":"joshualeeky"},"content":"        String input \u003d \"02-12-2020\" + System.lineSeparator() + \"Albert\" + System.lineSeparator() + \"equal\";","lastModifiedDate":"2021-11-07"},{"lineNumber":326,"author":{"gitId":"joshualeeky"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-07"},{"lineNumber":327,"author":{"gitId":"joshualeeky"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-07"},{"lineNumber":328,"author":{"gitId":"joshualeeky"},"content":"        Expense testExpense \u003d new Expense(\"901 category Albert, Don, Betty /description\");","lastModifiedDate":"2021-11-07"},{"lineNumber":329,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(300.34, testExpense.getAmountSplit().get(\"Albert\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":330,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(300.33, testExpense.getAmountSplit().get(\"Don\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":331,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(300.33, testExpense.getAmountSplit().get(\"Betty\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":332,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":333,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":334,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":335,"author":{"gitId":"joshualeeky"},"content":"    void testUpdateIndividualSpendingLessThanEqual() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":336,"author":{"gitId":"joshualeeky"},"content":"        String input \u003d \"02-12-2020\" + System.lineSeparator() + \"Albert\" + System.lineSeparator() + \"equal\";","lastModifiedDate":"2021-11-08"},{"lineNumber":337,"author":{"gitId":"joshualeeky"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":338,"author":{"gitId":"joshualeeky"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":339,"author":{"gitId":"joshualeeky"},"content":"        Expense testExpense \u003d new Expense(\"899 category Albert, Don, Betty /description\");","lastModifiedDate":"2021-11-08"},{"lineNumber":340,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(299.66, testExpense.getAmountSplit().get(\"Albert\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":341,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(299.67, testExpense.getAmountSplit().get(\"Don\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":342,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(299.67, testExpense.getAmountSplit().get(\"Betty\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":343,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":344,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":345,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":346,"author":{"gitId":"joshualeeky"},"content":"    void testDeleteExpense() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":347,"author":{"gitId":"joshualeeky"},"content":"        String input \u003d \"02-12-2020\" + System.lineSeparator() + \"Albert\" + System.lineSeparator() + \"equal\";","lastModifiedDate":"2021-11-08"},{"lineNumber":348,"author":{"gitId":"joshualeeky"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":349,"author":{"gitId":"joshualeeky"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":350,"author":{"gitId":"joshualeeky"},"content":"        Expense testExpense \u003d new Expense(\"899 category Albert, Don, Betty /description\");","lastModifiedDate":"2021-11-08"},{"lineNumber":351,"author":{"gitId":"joshualeeky"},"content":"        trip.addExpense(testExpense);","lastModifiedDate":"2021-11-08"},{"lineNumber":352,"author":{"gitId":"joshualeeky"},"content":"        Parser.parseUserInput(\"delete 2\");","lastModifiedDate":"2021-11-08"},{"lineNumber":353,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(1, trip.getListOfExpenses().size());","lastModifiedDate":"2021-11-08"},{"lineNumber":354,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(\"Dinner at fancy restaurant\", trip.getListOfExpenses().get(0).getDescription());","lastModifiedDate":"2021-11-08"},{"lineNumber":355,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":356,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":357,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":358,"author":{"gitId":"joshualeeky"},"content":"    void testDeleteLastExpense() {","lastModifiedDate":"2021-11-08"},{"lineNumber":359,"author":{"gitId":"joshualeeky"},"content":"        String input \u003d \"02-12-2020\" + System.lineSeparator() + \"Albert\" + System.lineSeparator() + \"equal\";","lastModifiedDate":"2021-11-08"},{"lineNumber":360,"author":{"gitId":"joshualeeky"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":361,"author":{"gitId":"joshualeeky"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":362,"author":{"gitId":"joshualeeky"},"content":"        Parser.parseUserInput(\"expense 899 category Albert, Don, Betty /description\");","lastModifiedDate":"2021-11-08"},{"lineNumber":363,"author":{"gitId":"joshualeeky"},"content":"        Parser.parseUserInput(\"delete last\");","lastModifiedDate":"2021-11-08"},{"lineNumber":364,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(1, trip.getListOfExpenses().size());","lastModifiedDate":"2021-11-08"},{"lineNumber":365,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(\"Dinner at fancy restaurant\", trip.getListOfExpenses().get(0).getDescription());","lastModifiedDate":"2021-11-08"},{"lineNumber":366,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":367,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":368,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":369,"author":{"gitId":"joshualeeky"},"content":"    void testInvalidDeleteLastExpense() {","lastModifiedDate":"2021-11-08"},{"lineNumber":370,"author":{"gitId":"joshualeeky"},"content":"        ByteArrayOutputStream actualOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-08"},{"lineNumber":371,"author":{"gitId":"joshualeeky"},"content":"        System.setOut(new PrintStream(actualOutput));","lastModifiedDate":"2021-11-08"},{"lineNumber":372,"author":{"gitId":"joshualeeky"},"content":"        String expectedOutput \u003d \"You have not recently added an expense.\" + System.lineSeparator();","lastModifiedDate":"2021-11-08"},{"lineNumber":373,"author":{"gitId":"joshualeeky"},"content":"        Parser.parseUserInput(\"delete last\");","lastModifiedDate":"2021-11-08"},{"lineNumber":374,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(expectedOutput, actualOutput.toString());","lastModifiedDate":"2021-11-08"},{"lineNumber":375,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":376,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":377,"author":{"gitId":"lixiyuan416"},"content":"    //@@author lixiyuan416","lastModifiedDate":"2021-11-07"},{"lineNumber":378,"author":{"gitId":"lixiyuan416"},"content":"    //Tests expense filtering methods","lastModifiedDate":"2021-11-07"},{"lineNumber":379,"author":{"gitId":"lixiyuan416"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":380,"author":{"gitId":"lixiyuan416"},"content":"    void findMatchingPersonExpenses_validName_printExpense() {","lastModifiedDate":"2021-11-07"},{"lineNumber":381,"author":{"gitId":"lixiyuan416"},"content":"        ByteArrayOutputStream bo \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-07"},{"lineNumber":382,"author":{"gitId":"lixiyuan416"},"content":"        System.setOut(new PrintStream(bo));","lastModifiedDate":"2021-11-07"},{"lineNumber":383,"author":{"gitId":"lixiyuan416"},"content":"        String correctOutput \u003d \"1. \\tDinner at fancy restaurant\" + System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":384,"author":{"gitId":"lixiyuan416"},"content":"                + \"\\tDate: 02 Dec 2020\" + System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":385,"author":{"gitId":"lixiyuan416"},"content":"                + \"\\tAmount Spent: USD $600.00\" + System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":386,"author":{"gitId":"lixiyuan416"},"content":"                + \"\\tPeople involved:\" + System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":387,"author":{"gitId":"lixiyuan416"},"content":"                + \"\\t\\t1) Albert, USD $100.00\" + System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":388,"author":{"gitId":"lixiyuan416"},"content":"                + \"\\t\\t2) Betty, USD $200.00\" + System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":389,"author":{"gitId":"lixiyuan416"},"content":"                + \"\\t\\t3) Chris, USD $300.00\" + System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":390,"author":{"gitId":"lixiyuan416"},"content":"                + \"\\tPayer: Chris\" + System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":391,"author":{"gitId":"lixiyuan416"},"content":"                + \"\\tCategory: food\";","lastModifiedDate":"2021-11-07"},{"lineNumber":392,"author":{"gitId":"lixiyuan416"},"content":"        FilterFinder.findMatchingPersonExpenses(trip.getListOfExpenses(), \"Chris\");","lastModifiedDate":"2021-11-07"},{"lineNumber":393,"author":{"gitId":"lixiyuan416"},"content":"        assertEquals(bo.toString().trim(), correctOutput);","lastModifiedDate":"2021-11-07"},{"lineNumber":394,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":395,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":396,"author":{"gitId":"lixiyuan416"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":397,"author":{"gitId":"lixiyuan416"},"content":"    void findMatchingPersonExpenses_invalidName_printNotFound() {","lastModifiedDate":"2021-11-07"},{"lineNumber":398,"author":{"gitId":"lixiyuan416"},"content":"        ByteArrayOutputStream bo \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-07"},{"lineNumber":399,"author":{"gitId":"lixiyuan416"},"content":"        System.setOut(new PrintStream(bo));","lastModifiedDate":"2021-11-07"},{"lineNumber":400,"author":{"gitId":"lixiyuan416"},"content":"        FilterFinder.findMatchingPersonExpenses(trip.getListOfExpenses(), \"Mr Muscle\");","lastModifiedDate":"2021-11-07"},{"lineNumber":401,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":402,"author":{"gitId":"lixiyuan416"},"content":"        assertEquals(bo.toString().trim(), \"No matching expenses found.\");","lastModifiedDate":"2021-11-07"},{"lineNumber":403,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":404,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":405,"author":{"gitId":"lixiyuan416"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":406,"author":{"gitId":"lixiyuan416"},"content":"    void findMatchingDateExpensesReturnsEmpty() {","lastModifiedDate":"2021-11-07"},{"lineNumber":407,"author":{"gitId":"lixiyuan416"},"content":"        ByteArrayOutputStream bo \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-07"},{"lineNumber":408,"author":{"gitId":"lixiyuan416"},"content":"        System.setOut(new PrintStream(bo));","lastModifiedDate":"2021-11-07"},{"lineNumber":409,"author":{"gitId":"lixiyuan416"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":410,"author":{"gitId":"lixiyuan416"},"content":"            FilterFinder.findMatchingDateExpenses(trip.getListOfExpenses(), \"01-12-4000\");","lastModifiedDate":"2021-11-07"},{"lineNumber":411,"author":{"gitId":"lixiyuan416"},"content":"        } catch (ForceCancelException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":412,"author":{"gitId":"lixiyuan416"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-07"},{"lineNumber":413,"author":{"gitId":"lixiyuan416"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":414,"author":{"gitId":"lixiyuan416"},"content":"        assertEquals(bo.toString().trim(), \"No matching expenses found.\");","lastModifiedDate":"2021-11-07"},{"lineNumber":415,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":416,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":417,"author":{"gitId":"lixiyuan416"},"content":"    @AfterAll","lastModifiedDate":"2021-11-07"},{"lineNumber":418,"author":{"gitId":"lixiyuan416"},"content":"    static void restoreSystemOut() {","lastModifiedDate":"2021-11-07"},{"lineNumber":419,"author":{"gitId":"lixiyuan416"},"content":"        System.setOut(System.out);","lastModifiedDate":"2021-11-07"},{"lineNumber":420,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":421,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":422,"author":{"gitId":"lixiyuan416"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"joshualeeky":355,"lixiyuan416":67}},{"path":"src/test/java/seedu/duke/FileTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yeezao"},"content":"//@@author yeezao","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"yeezao"},"content":"package seedu.duke;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"yeezao"},"content":"import com.google.gson.JsonParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"yeezao"},"content":"import com.google.gson.reflect.TypeToken;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"yeezao"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"yeezao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"yeezao"},"content":"import seedu.duke.trip.Trip;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"yeezao"},"content":"import java.io.File;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"yeezao"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"yeezao"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"yeezao"},"content":"import java.lang.reflect.Type;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"yeezao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"yeezao"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"yeezao"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"yeezao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"yeezao"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"yeezao"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"yeezao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"yeezao"},"content":"class FileTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"yeezao"},"content":"    @BeforeAll","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"yeezao"},"content":"    static void setUp() throws IOException {","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"yeezao"},"content":"        ArrayList\u003cTrip\u003e listOfTrips \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"yeezao"},"content":"        listOfTrips.add(new Trip());","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"yeezao"},"content":"        listOfTrips.add(new Trip());","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"yeezao"},"content":"        Storage.setListOfTrips(listOfTrips);","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"yeezao"},"content":"        FileStorage.initializeGson();","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"yeezao"},"content":"        Storage.setLogger(Logger.getLogger(\"logger\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"yeezao"},"content":"        Storage.createNewFile(Storage.FILE_PATH);","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"yeezao"},"content":"        Storage.writeToFile(Storage.FILE_PATH);","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"yeezao"},"content":"    void testRegularFileReadDirect() throws FileNotFoundException {","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"yeezao"},"content":"        File file \u003d new File(\"trips.json\");","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"yeezao"},"content":"        assertTrue(file.canRead());","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"yeezao"},"content":"        String jsonString \u003d FileStorage.readFromFile(\"trips.json\");","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"yeezao"},"content":"        assertFalse(jsonString.isEmpty());","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"yeezao"},"content":"        Type tripType \u003d new TypeToken\u003cArrayList\u003cTrip\u003e\u003e(){}.getType();","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"yeezao"},"content":"        FileStorage.initializeGson();","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"yeezao"},"content":"        assertNotNull(FileStorage.getGson());","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"yeezao"},"content":"        ArrayList\u003cTrip\u003e listOfTrips \u003d FileStorage.getGson().fromJson(jsonString, tripType);","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"yeezao"},"content":"        assertNotNull(listOfTrips);","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"yeezao"},"content":"        assertFalse(listOfTrips.isEmpty());","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"yeezao"},"content":"    void testRegularFileRead() {","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"yeezao"},"content":"        Storage.readFromFile(\"trips.json\");","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"yeezao"},"content":"        assertNotNull(Storage.getListOfTrips());","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"yeezao"},"content":"        assertFalse(Storage.getListOfTrips().isEmpty());","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"yeezao"},"content":"    void testNoFileDuringReadDirect() {","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"yeezao"},"content":"        assertThrows(FileNotFoundException.class, () -\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"yeezao"},"content":"                FileStorage.readFromFile(\"randomfile.json\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"yeezao"},"content":"    void testReadEmptyFileDirect() {","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"yeezao"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"yeezao"},"content":"            FileStorage.newBlankFile(\"tripsempty.json\");","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"yeezao"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"yeezao"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"yeezao"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"yeezao"},"content":"        assertThrows(NoSuchElementException.class, () -\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"yeezao"},"content":"                FileStorage.readFromFile(\"tripsempty.json\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"yeezao"},"content":"    void testReadCorruptedFile() {","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"yeezao"},"content":"        assertThrows(JsonParseException.class, () -\u003e {","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"yeezao"},"content":"            String jsonString \u003d FileStorage.readFromFile(\"tripscorrupted.json\");","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"yeezao"},"content":"            Type tripType \u003d new TypeToken\u003cArrayList\u003cTrip\u003e\u003e(){}.getType();","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"yeezao"},"content":"            FileStorage.getGson().fromJson(jsonString, tripType);","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"yeezao"},"content":"        });","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"yeezao"},"content":"    void testWriteFile() throws IOException {","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"yeezao"},"content":"        Storage.readFromFile(\"tripsextra.json\");","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"yeezao"},"content":"        Storage.writeToFile(\"trips.json\");","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"yeezao"},"content":"        String jsonString \u003d FileStorage.readFromFile(\"trips.json\");","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"yeezao"},"content":"        assertFalse(jsonString.isBlank());","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"yeezao"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"yeezao":93}},{"path":"src/test/java/seedu/duke/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lixiyuan416"},"content":"package seedu.duke;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"lixiyuan416"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"lixiyuan416"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"lixiyuan416"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"lixiyuan416"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"lixiyuan416"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"lixiyuan416"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"lixiyuan416"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"lixiyuan416"},"content":"class ParserTest {","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"lixiyuan416"},"content":"    @BeforeAll","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"lixiyuan416"},"content":"    static void setup() {","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"lixiyuan416"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"lixiyuan416"},"content":"    void getUserToConfirm_yWithExtraSpaces_success() {","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"lixiyuan416"},"content":"        String input \u003d \"   Y  \";","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"lixiyuan416"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"lixiyuan416"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"lixiyuan416"},"content":"        assertTrue(Parser.getUserToConfirm());","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"lixiyuan416"},"content":"    void getUserToConfirm_garbageInputFollowedByn_success() {","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"lixiyuan416"},"content":"        String input \u003d \"abcd  \" + System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"lixiyuan416"},"content":"                + \"help\" + System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"lixiyuan416"},"content":"                + \"n\";","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"lixiyuan416"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"lixiyuan416"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"lixiyuan416"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"lixiyuan416"},"content":"        assertFalse(Parser.getUserToConfirm());","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"lixiyuan416"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"lixiyuan416"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"lixiyuan416":37}},{"path":"src/test/java/seedu/duke/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joshualeeky"},"content":"package seedu.duke;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"joshualeeky"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"joshualeeky"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"joshualeeky"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"joshualeeky"},"content":"class PersonTest {","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"joshualeeky"},"content":"    static Person testPerson;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"joshualeeky"},"content":"    @BeforeAll","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"joshualeeky"},"content":"    static void setUp() {","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"joshualeeky"},"content":"        testPerson \u003d new Person(\"Test Person\");","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"joshualeeky"},"content":"    void testSetName() {","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"joshualeeky"},"content":"        testPerson.setName(\"Test\");","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(\"Test\", testPerson.getName());","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"joshualeeky"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"joshualeeky"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"joshualeeky"},"content":"    void testSetMoneyOwed() {","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"joshualeeky"},"content":"        Person albert \u003d new Person(\"Albert\");","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"joshualeeky"},"content":"        testPerson.getMoneyOwed().put(\"Albert\", 0.0);","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"joshualeeky"},"content":"        testPerson.setMoneyOwed(albert, 200.00);","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"joshualeeky"},"content":"        assertEquals(200.00, testPerson.getMoneyOwed().get(\"Albert\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"joshualeeky"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"joshualeeky"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"joshualeeky":30}},{"path":"src/test/java/seedu/duke/TripTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yeezao"},"content":"package seedu.duke;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"yeezao"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"yeezao"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"yeezao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"yeezao"},"content":"import seedu.duke.exceptions.ForceCancelException;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"yeezao"},"content":"import seedu.duke.exceptions.SameNameException;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"yeezao"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"yeezao"},"content":"import seedu.duke.trip.Trip;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"yeezao"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"yeezao"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"yeezao"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"yeezao"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"yeezao"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"yeezao"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"yeezao"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"yeezao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"yeezao"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"yeezao"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"yeezao"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"yeezao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"yeezao"},"content":"class TripTest {","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"yeezao"},"content":"    private static Trip testTrip1;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"yeezao"},"content":"    private static InputStream origIn;","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"yeezao"},"content":"    private static PrintStream origOut;","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"yeezao"},"content":"    @BeforeAll","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"yeezao"},"content":"    static void setUp() throws SameNameException, ForceCancelException {","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"yeezao"},"content":"        origIn \u003d System.in;","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"yeezao"},"content":"        origOut \u003d System.out;","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"yeezao"},"content":"        String[] stringArray \u003d {\"\", \"Canada\", \"02-03-2021\", \"cad\", \"0.123\", \"ben,jerry,tom\"};","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"yeezao"},"content":"        testTrip1 \u003d new Trip(stringArray);","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"yeezao"},"content":"    public void testNewTrip() throws ForceCancelException, SameNameException {","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"yeezao"},"content":"        String[] stringArray \u003d {\"\", \"Canada\", \"02-03-2021\", \"cad\", \"0.123\", \"ben,jerry,tom\"};","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"yeezao"},"content":"        Trip trip \u003d new Trip(stringArray);","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"Canada\", trip.getLocation());","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"02 Mar 2021\", trip.getDateOfTripString());","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"2021-03-02\", trip.getDateOfTrip().toString());","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"CAD\", trip.getForeignCurrency());","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"yeezao"},"content":"        assertEquals(0.123, trip.getExchangeRate());","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"yeezao"},"content":"        assertEquals(3, trip.getListOfPersons().size());","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"ben\", trip.getListOfPersons().get(0).getName());","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"jerry\", trip.getListOfPersons().get(1).getName());","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"tom\", trip.getListOfPersons().get(2).getName());","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"yeezao"},"content":"    //@author yeezao","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"yeezao"},"content":"    public void testNewTripUsingUserInput() {","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"yeezao"},"content":"        ArrayList\u003cTrip\u003e newListOfTrips \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"yeezao"},"content":"        Storage.setListOfTrips(newListOfTrips);","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"yeezao"},"content":"        createNewTripForTest();","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"yeezao"},"content":"        Trip createdTrip \u003d Storage.getListOfTrips().get(0);","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"yeezao"},"content":"        assertNotNull(createdTrip);","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"United States of America\", createdTrip.getLocation());","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"02 Feb 2021\", createdTrip.getDateOfTripString());","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"USD\", createdTrip.getForeignCurrency());","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"$\", createdTrip.getForeignCurrencySymbol());","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"SGD\", createdTrip.getRepaymentCurrency());","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"yeezao"},"content":"        assertEquals(0.74, createdTrip.getExchangeRate());","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"yeezao"},"content":"        ArrayList\u003cPerson\u003e personArrayList \u003d createdTrip.getListOfPersons();","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"yeezao"},"content":"        assertNotNull(personArrayList);","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"yeezao"},"content":"        assertEquals(5, personArrayList.size());","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"Ben\", personArrayList.get(0).getName());","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"Jerry\", personArrayList.get(1).getName());","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"Tom\", personArrayList.get(2).getName());","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"Harry\", personArrayList.get(3).getName());","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"Dick\", personArrayList.get(4).getName());","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"yeezao"},"content":"    public void testNewTripsWithDuplicates() {","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"yeezao"},"content":"        String wholeUserInput \u003d \"a\" + System.lineSeparator() + \"n\" + System.lineSeparator() + \"y\";","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"yeezao"},"content":"        System.setIn(new ByteArrayInputStream(wholeUserInput.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"yeezao"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"yeezao"},"content":"        createNewTripForTest();","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"yeezao"},"content":"        assertEquals(1, Storage.getListOfTrips().size());","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"yeezao"},"content":"        String userInput2 \u003d \"create /United States of America /02-02-2021 /USD /0.74 /Ben, Jerry, Tom, Harry, Dick\";","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(userInput2);","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"yeezao"},"content":"        assertEquals(1, Storage.getListOfTrips().size());","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(userInput2);","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"yeezao"},"content":"        assertEquals(2, Storage.getListOfTrips().size());","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"yeezao"},"content":"    public void testNewTrip_CheckPerAttributeDuplicate() {","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"yeezao"},"content":"        createNewTripForTest();","lastModifiedDate":"2021-11-08"},{"lineNumber":95,"author":{"gitId":"yeezao"},"content":"        assertEquals(1, Storage.getListOfTrips().size());","lastModifiedDate":"2021-11-08"},{"lineNumber":96,"author":{"gitId":"yeezao"},"content":"        String userInput \u003d \"create /United of America /02-02-2021 /USD /0.74 /Ben, Jerry, Tom, Harry, Dick\";","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(userInput);","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"yeezao"},"content":"        assertEquals(2, Storage.getListOfTrips().size());","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"yeezao"},"content":"        userInput \u003d \"create /United of America /03-02-2021 /USD /0.74 /Ben, Jerry, Tom, Harry, Dick\";","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(userInput);","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"yeezao"},"content":"        assertEquals(3, Storage.getListOfTrips().size());","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"yeezao"},"content":"        userInput \u003d \"create /United of America /03-02-2021 /UAD /0.74 /Ben, Jerry, Tom, Harry, Dick\";","lastModifiedDate":"2021-11-08"},{"lineNumber":103,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(userInput);","lastModifiedDate":"2021-11-08"},{"lineNumber":104,"author":{"gitId":"yeezao"},"content":"        assertEquals(4, Storage.getListOfTrips().size());","lastModifiedDate":"2021-11-08"},{"lineNumber":105,"author":{"gitId":"yeezao"},"content":"        userInput \u003d \"create /United of America /03-02-2021 /USD /0.75 /Ben, Jerry, Tom, Harry, Dick\";","lastModifiedDate":"2021-11-08"},{"lineNumber":106,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(userInput);","lastModifiedDate":"2021-11-08"},{"lineNumber":107,"author":{"gitId":"yeezao"},"content":"        assertEquals(5, Storage.getListOfTrips().size());","lastModifiedDate":"2021-11-08"},{"lineNumber":108,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":109,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":110,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":111,"author":{"gitId":"yeezao"},"content":"    public void testNewTripInsufficientAttributes() {","lastModifiedDate":"2021-11-08"},{"lineNumber":112,"author":{"gitId":"yeezao"},"content":"        Storage.setListOfTrips(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-11-08"},{"lineNumber":113,"author":{"gitId":"yeezao"},"content":"        String userInput \u003d \"create /United States of America /USD /0.74 /Ben, Jerry, Tom, Harry, Dick\";","lastModifiedDate":"2021-11-08"},{"lineNumber":114,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(userInput);","lastModifiedDate":"2021-11-08"},{"lineNumber":115,"author":{"gitId":"yeezao"},"content":"        assertEquals(0, Storage.getListOfTrips().size());","lastModifiedDate":"2021-11-08"},{"lineNumber":116,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":117,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":118,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":119,"author":{"gitId":"yeezao"},"content":"    public void testNewTripBlankName() throws SameNameException, ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":120,"author":{"gitId":"yeezao"},"content":"        String[] input \u003d {\" \", \"somewhere\", \"02-02-2021\", \"USD\", \"0.22\", \"Ben, , Jerry\"};","lastModifiedDate":"2021-11-08"},{"lineNumber":121,"author":{"gitId":"yeezao"},"content":"        Trip trip \u003d new Trip(input);","lastModifiedDate":"2021-11-08"},{"lineNumber":122,"author":{"gitId":"yeezao"},"content":"        assertEquals(2, trip.getListOfPersons().size());","lastModifiedDate":"2021-11-08"},{"lineNumber":123,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":124,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":125,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":126,"author":{"gitId":"yeezao"},"content":"    public void testNewTripSameName() {","lastModifiedDate":"2021-11-08"},{"lineNumber":127,"author":{"gitId":"yeezao"},"content":"        String[] input \u003d {\" \", \"somewhere\", \"02-02-2021\", \"USD\", \"0.22\", \"Ben, Ben\"};","lastModifiedDate":"2021-11-08"},{"lineNumber":128,"author":{"gitId":"yeezao"},"content":"        assertThrows(SameNameException.class, () -\u003e new Trip(input));","lastModifiedDate":"2021-11-08"},{"lineNumber":129,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":130,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":131,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":132,"author":{"gitId":"yeezao"},"content":"    public void testNewTripSameNameFull() {","lastModifiedDate":"2021-11-08"},{"lineNumber":133,"author":{"gitId":"yeezao"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-08"},{"lineNumber":134,"author":{"gitId":"yeezao"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2021-11-08"},{"lineNumber":135,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(\"create /United States of America /02-02-2021 /USD /0.74 /Ben, Ben\");","lastModifiedDate":"2021-11-08"},{"lineNumber":136,"author":{"gitId":"yeezao"},"content":"        String errorString \u003d \"You have entered people with the same name, please recreate the trip ensuring \"","lastModifiedDate":"2021-11-08"},{"lineNumber":137,"author":{"gitId":"yeezao"},"content":"                + \"there are no repeated names for the trip.\" + System.lineSeparator();","lastModifiedDate":"2021-11-08"},{"lineNumber":138,"author":{"gitId":"yeezao"},"content":"        assertEquals(errorString, outputStream.toString());","lastModifiedDate":"2021-11-08"},{"lineNumber":139,"author":{"gitId":"yeezao"},"content":"        System.setOut(origOut);","lastModifiedDate":"2021-11-08"},{"lineNumber":140,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":141,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":142,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":143,"author":{"gitId":"yeezao"},"content":"    public void testEditLocation() throws ForceCancelException {","lastModifiedDate":"2021-11-06"},{"lineNumber":144,"author":{"gitId":"yeezao"},"content":"        testTrip1.setLocation(\"under the rainbow\");","lastModifiedDate":"2021-11-06"},{"lineNumber":145,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"under the rainbow\", testTrip1.getLocation());","lastModifiedDate":"2021-11-06"},{"lineNumber":146,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":147,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":148,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":149,"author":{"gitId":"yeezao"},"content":"    public void testEditLocation_BlankInput() throws ForceCancelException {","lastModifiedDate":"2021-11-07"},{"lineNumber":150,"author":{"gitId":"yeezao"},"content":"        System.setIn(new ByteArrayInputStream(\"in our favourite rocket ship\".getBytes()));","lastModifiedDate":"2021-11-07"},{"lineNumber":151,"author":{"gitId":"yeezao"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-07"},{"lineNumber":152,"author":{"gitId":"yeezao"},"content":"        testTrip1.setLocation(\"\");","lastModifiedDate":"2021-11-07"},{"lineNumber":153,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"in our favourite rocket ship\", testTrip1.getLocation());","lastModifiedDate":"2021-11-07"},{"lineNumber":154,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":155,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":156,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":157,"author":{"gitId":"yeezao"},"content":"    public void testEditLocationFull() {","lastModifiedDate":"2021-11-06"},{"lineNumber":158,"author":{"gitId":"yeezao"},"content":"        Storage.setListOfTrips(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-11-07"},{"lineNumber":159,"author":{"gitId":"yeezao"},"content":"        createNewTripForTest();","lastModifiedDate":"2021-11-06"},{"lineNumber":160,"author":{"gitId":"yeezao"},"content":"        String userInput \u003d \"edit last -location going on a trip\";","lastModifiedDate":"2021-11-06"},{"lineNumber":161,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(userInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":162,"author":{"gitId":"yeezao"},"content":"        Trip tripToCheck \u003d Storage.getLastTrip();","lastModifiedDate":"2021-11-06"},{"lineNumber":163,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"going on a trip\", tripToCheck.getLocation());","lastModifiedDate":"2021-11-06"},{"lineNumber":164,"author":{"gitId":"yeezao"},"content":"        userInput \u003d \"edit 1 -location going on the trip\";","lastModifiedDate":"2021-11-08"},{"lineNumber":165,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(userInput);","lastModifiedDate":"2021-11-08"},{"lineNumber":166,"author":{"gitId":"yeezao"},"content":"        tripToCheck \u003d Storage.getListOfTrips().get(0);","lastModifiedDate":"2021-11-08"},{"lineNumber":167,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"going on the trip\", tripToCheck.getLocation());","lastModifiedDate":"2021-11-08"},{"lineNumber":168,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":169,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":170,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":171,"author":{"gitId":"yeezao"},"content":"    public void testEditDate() throws ForceCancelException {","lastModifiedDate":"2021-11-06"},{"lineNumber":172,"author":{"gitId":"yeezao"},"content":"        testTrip1.setDateOfTrip(\"08-08-2020\");","lastModifiedDate":"2021-11-06"},{"lineNumber":173,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"08 Aug 2020\", testTrip1.getDateOfTripString());","lastModifiedDate":"2021-11-06"},{"lineNumber":174,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":175,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":176,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":177,"author":{"gitId":"yeezao"},"content":"    public void testEditDateNotParsable() throws ForceCancelException {","lastModifiedDate":"2021-11-07"},{"lineNumber":178,"author":{"gitId":"yeezao"},"content":"        System.setIn(new ByteArrayInputStream(\"08-12-2010\".getBytes()));","lastModifiedDate":"2021-11-07"},{"lineNumber":179,"author":{"gitId":"yeezao"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-07"},{"lineNumber":180,"author":{"gitId":"yeezao"},"content":"        testTrip1.setDateOfTrip(\"something\");","lastModifiedDate":"2021-11-07"},{"lineNumber":181,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"08 Dec 2010\", testTrip1.getDateOfTripString());","lastModifiedDate":"2021-11-07"},{"lineNumber":182,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":183,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":184,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":185,"author":{"gitId":"yeezao"},"content":"    public void testEditDateBeforeEpoch() throws ForceCancelException {","lastModifiedDate":"2021-11-07"},{"lineNumber":186,"author":{"gitId":"yeezao"},"content":"        System.setIn(new ByteArrayInputStream(\"08-12-2010\".getBytes()));","lastModifiedDate":"2021-11-07"},{"lineNumber":187,"author":{"gitId":"yeezao"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-07"},{"lineNumber":188,"author":{"gitId":"yeezao"},"content":"        testTrip1.setDateOfTrip(\"01-01-1969\");","lastModifiedDate":"2021-11-07"},{"lineNumber":189,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"08 Dec 2010\", testTrip1.getDateOfTripString());","lastModifiedDate":"2021-11-07"},{"lineNumber":190,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":191,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":192,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":193,"author":{"gitId":"yeezao"},"content":"    public void testEditDateWhichDoesNotExist() throws ForceCancelException {","lastModifiedDate":"2021-11-07"},{"lineNumber":194,"author":{"gitId":"yeezao"},"content":"        String scannerInputs \u003d \"35-02-2021\" + System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":195,"author":{"gitId":"yeezao"},"content":"                + \"00-11-2021\" + System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":196,"author":{"gitId":"yeezao"},"content":"                + \"25-00-2021\" + System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":197,"author":{"gitId":"yeezao"},"content":"                + \"16-23-2021\" + System.lineSeparator()","lastModifiedDate":"2021-11-07"},{"lineNumber":198,"author":{"gitId":"yeezao"},"content":"                + \"08-12-2020\";","lastModifiedDate":"2021-11-07"},{"lineNumber":199,"author":{"gitId":"yeezao"},"content":"        System.setIn(new ByteArrayInputStream(scannerInputs.getBytes()));","lastModifiedDate":"2021-11-07"},{"lineNumber":200,"author":{"gitId":"yeezao"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-07"},{"lineNumber":201,"author":{"gitId":"yeezao"},"content":"        testTrip1.setDateOfTrip(\"29-02-2021\");","lastModifiedDate":"2021-11-07"},{"lineNumber":202,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"08 Dec 2020\", testTrip1.getDateOfTripString());","lastModifiedDate":"2021-11-07"},{"lineNumber":203,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":204,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":205,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":206,"author":{"gitId":"yeezao"},"content":"    public void testEditDateFull() {","lastModifiedDate":"2021-11-06"},{"lineNumber":207,"author":{"gitId":"yeezao"},"content":"        createNewTripForTest();","lastModifiedDate":"2021-11-07"},{"lineNumber":208,"author":{"gitId":"yeezao"},"content":"        String userInput \u003d \"edit last -date 09-01-1990\";","lastModifiedDate":"2021-11-06"},{"lineNumber":209,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(userInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":210,"author":{"gitId":"yeezao"},"content":"        Trip tripToCheck \u003d Storage.getLastTrip();","lastModifiedDate":"2021-11-06"},{"lineNumber":211,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"09 Jan 1990\", tripToCheck.getDateOfTripString());","lastModifiedDate":"2021-11-06"},{"lineNumber":212,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":213,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":214,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":215,"author":{"gitId":"yeezao"},"content":"    public void testEditExrate() throws ForceCancelException {","lastModifiedDate":"2021-11-07"},{"lineNumber":216,"author":{"gitId":"yeezao"},"content":"        testTrip1.setExchangeRate(\"12.0\");","lastModifiedDate":"2021-11-07"},{"lineNumber":217,"author":{"gitId":"yeezao"},"content":"        assertEquals(12.0, testTrip1.getExchangeRate());","lastModifiedDate":"2021-11-07"},{"lineNumber":218,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":219,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":220,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":221,"author":{"gitId":"yeezao"},"content":"    public void testEditExRateNotParsable() throws ForceCancelException {","lastModifiedDate":"2021-11-07"},{"lineNumber":222,"author":{"gitId":"yeezao"},"content":"        System.setIn(new ByteArrayInputStream(\"6.1\".getBytes()));","lastModifiedDate":"2021-11-07"},{"lineNumber":223,"author":{"gitId":"yeezao"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-07"},{"lineNumber":224,"author":{"gitId":"yeezao"},"content":"        testTrip1.setExchangeRate(\"something\");","lastModifiedDate":"2021-11-07"},{"lineNumber":225,"author":{"gitId":"yeezao"},"content":"        assertEquals(6.1, testTrip1.getExchangeRate());","lastModifiedDate":"2021-11-07"},{"lineNumber":226,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":227,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":228,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":229,"author":{"gitId":"yeezao"},"content":"    public void testEditExRateNotParsableWithForceCancel() {","lastModifiedDate":"2021-11-07"},{"lineNumber":230,"author":{"gitId":"yeezao"},"content":"        assertThrows(ForceCancelException.class, () -\u003e {","lastModifiedDate":"2021-11-08"},{"lineNumber":231,"author":{"gitId":"yeezao"},"content":"            System.setIn(new ByteArrayInputStream(\"-cancel\".getBytes()));","lastModifiedDate":"2021-11-07"},{"lineNumber":232,"author":{"gitId":"yeezao"},"content":"            Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-07"},{"lineNumber":233,"author":{"gitId":"yeezao"},"content":"            testTrip1.setExchangeRate(\"something\");","lastModifiedDate":"2021-11-08"},{"lineNumber":234,"author":{"gitId":"yeezao"},"content":"        });","lastModifiedDate":"2021-11-08"},{"lineNumber":235,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":236,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":237,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":238,"author":{"gitId":"yeezao"},"content":"    public void testEditExrateFull() {","lastModifiedDate":"2021-11-07"},{"lineNumber":239,"author":{"gitId":"yeezao"},"content":"        String userInput \u003d \"edit last -exchangerate 0.01\";","lastModifiedDate":"2021-11-07"},{"lineNumber":240,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":241,"author":{"gitId":"yeezao"},"content":"        Trip tripToCheck \u003d Storage.getLastTrip();","lastModifiedDate":"2021-11-07"},{"lineNumber":242,"author":{"gitId":"yeezao"},"content":"        assertEquals(0.01, tripToCheck.getExchangeRate());","lastModifiedDate":"2021-11-07"},{"lineNumber":243,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":244,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":245,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":246,"author":{"gitId":"yeezao"},"content":"    public void testEditTripExceptions() {","lastModifiedDate":"2021-11-08"},{"lineNumber":247,"author":{"gitId":"yeezao"},"content":"        createNewTripForTest();","lastModifiedDate":"2021-11-08"},{"lineNumber":248,"author":{"gitId":"yeezao"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-08"},{"lineNumber":249,"author":{"gitId":"yeezao"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2021-11-08"},{"lineNumber":250,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(\"edit dfg -location somewhere\");","lastModifiedDate":"2021-11-08"},{"lineNumber":251,"author":{"gitId":"yeezao"},"content":"        String errorString \u003d \"Please format your inputs as follows: \"","lastModifiedDate":"2021-11-08"},{"lineNumber":252,"author":{"gitId":"yeezao"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-11-08"},{"lineNumber":253,"author":{"gitId":"yeezao"},"content":"                + \"edit [trip num] [attribute] [new value]\"","lastModifiedDate":"2021-11-08"},{"lineNumber":254,"author":{"gitId":"yeezao"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-11-08"},{"lineNumber":255,"author":{"gitId":"yeezao"},"content":"                + \"attributes: -location, -date, -exchangerate, -forcur, -homecur\"","lastModifiedDate":"2021-11-08"},{"lineNumber":256,"author":{"gitId":"yeezao"},"content":"                + System.lineSeparator() + System.lineSeparator();","lastModifiedDate":"2021-11-08"},{"lineNumber":257,"author":{"gitId":"yeezao"},"content":"        assertEquals(errorString, outputStream.toString());","lastModifiedDate":"2021-11-08"},{"lineNumber":258,"author":{"gitId":"yeezao"},"content":"        outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-08"},{"lineNumber":259,"author":{"gitId":"yeezao"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2021-11-08"},{"lineNumber":260,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(\"edit 15 -location somewhere\");","lastModifiedDate":"2021-11-08"},{"lineNumber":261,"author":{"gitId":"yeezao"},"content":"        assertEquals(errorString, outputStream.toString());","lastModifiedDate":"2021-11-08"},{"lineNumber":262,"author":{"gitId":"yeezao"},"content":"        System.setOut(origOut);","lastModifiedDate":"2021-11-08"},{"lineNumber":263,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":264,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":265,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":266,"author":{"gitId":"yeezao"},"content":"    public void testOpenTripByIndex() throws ForceCancelException {","lastModifiedDate":"2021-11-07"},{"lineNumber":267,"author":{"gitId":"yeezao"},"content":"        createNewTripForTest();","lastModifiedDate":"2021-11-07"},{"lineNumber":268,"author":{"gitId":"yeezao"},"content":"        Storage.setOpenTrip(0);","lastModifiedDate":"2021-11-07"},{"lineNumber":269,"author":{"gitId":"yeezao"},"content":"        assertTrue(Storage.checkOpenTrip());","lastModifiedDate":"2021-11-07"},{"lineNumber":270,"author":{"gitId":"yeezao"},"content":"        assertEquals(Storage.getOpenTrip(), Storage.getListOfTrips().get(0));","lastModifiedDate":"2021-11-07"},{"lineNumber":271,"author":{"gitId":"yeezao"},"content":"        assertEquals(Storage.getLastTrip(), Storage.getListOfTrips().get(0));","lastModifiedDate":"2021-11-07"},{"lineNumber":272,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":273,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":274,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":275,"author":{"gitId":"yeezao"},"content":"    public void testOpenTripWithAlreadyOpenTrip() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":276,"author":{"gitId":"yeezao"},"content":"        createNewTripForTest();","lastModifiedDate":"2021-11-08"},{"lineNumber":277,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(\"create /United of America /02-02-2021 /USD /0.74 /Ben, Jerry, Tom, Harry, Dick\");","lastModifiedDate":"2021-11-08"},{"lineNumber":278,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(\"open 1\");","lastModifiedDate":"2021-11-08"},{"lineNumber":279,"author":{"gitId":"yeezao"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-08"},{"lineNumber":280,"author":{"gitId":"yeezao"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2021-11-08"},{"lineNumber":281,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(\"open 2\");","lastModifiedDate":"2021-11-08"},{"lineNumber":282,"author":{"gitId":"yeezao"},"content":"        String outputMsgClose \u003d \"You have closed the following trip:\"","lastModifiedDate":"2021-11-08"},{"lineNumber":283,"author":{"gitId":"yeezao"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-11-08"},{"lineNumber":284,"author":{"gitId":"yeezao"},"content":"                + Storage.getListOfTrips().get(0).getLocation() + \" | \"","lastModifiedDate":"2021-11-08"},{"lineNumber":285,"author":{"gitId":"yeezao"},"content":"                + Storage.getListOfTrips().get(0).getDateOfTripString();","lastModifiedDate":"2021-11-08"},{"lineNumber":286,"author":{"gitId":"yeezao"},"content":"        String outputMsgOpen \u003d \"You have opened the following trip: \"","lastModifiedDate":"2021-11-08"},{"lineNumber":287,"author":{"gitId":"yeezao"},"content":"                + System.lineSeparator()","lastModifiedDate":"2021-11-08"},{"lineNumber":288,"author":{"gitId":"yeezao"},"content":"                + Storage.getListOfTrips().get(1).getLocation() + \" | \"","lastModifiedDate":"2021-11-08"},{"lineNumber":289,"author":{"gitId":"yeezao"},"content":"                + Storage.getListOfTrips().get(1).getDateOfTripString();","lastModifiedDate":"2021-11-08"},{"lineNumber":290,"author":{"gitId":"yeezao"},"content":"        String fullOutput \u003d outputMsgClose + System.lineSeparator() + outputMsgOpen","lastModifiedDate":"2021-11-08"},{"lineNumber":291,"author":{"gitId":"yeezao"},"content":"                + System.lineSeparator() + System.lineSeparator();","lastModifiedDate":"2021-11-08"},{"lineNumber":292,"author":{"gitId":"yeezao"},"content":"        assertEquals(fullOutput, outputStream.toString());","lastModifiedDate":"2021-11-08"},{"lineNumber":293,"author":{"gitId":"yeezao"},"content":"        assertEquals(Storage.getListOfTrips().get(1), Storage.getOpenTrip());","lastModifiedDate":"2021-11-08"},{"lineNumber":294,"author":{"gitId":"yeezao"},"content":"        System.setOut(origOut);","lastModifiedDate":"2021-11-08"},{"lineNumber":295,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":296,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":297,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":298,"author":{"gitId":"yeezao"},"content":"    public void testCloseTrip() throws ForceCancelException {","lastModifiedDate":"2021-11-07"},{"lineNumber":299,"author":{"gitId":"yeezao"},"content":"        Storage.setOpenTrip(0);","lastModifiedDate":"2021-11-07"},{"lineNumber":300,"author":{"gitId":"yeezao"},"content":"        Trip trip \u003d Storage.getOpenTrip();","lastModifiedDate":"2021-11-07"},{"lineNumber":301,"author":{"gitId":"yeezao"},"content":"        Storage.closeTrip();","lastModifiedDate":"2021-11-07"},{"lineNumber":302,"author":{"gitId":"yeezao"},"content":"        assertFalse(Storage.checkOpenTrip());","lastModifiedDate":"2021-11-07"},{"lineNumber":303,"author":{"gitId":"yeezao"},"content":"        assertEquals(Storage.getLastTrip(), trip);","lastModifiedDate":"2021-11-07"},{"lineNumber":304,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":305,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":306,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":307,"author":{"gitId":"yeezao"},"content":"    public void testOpenTripFull() throws ForceCancelException {","lastModifiedDate":"2021-11-07"},{"lineNumber":308,"author":{"gitId":"yeezao"},"content":"        createNewTripForTest();","lastModifiedDate":"2021-11-07"},{"lineNumber":309,"author":{"gitId":"yeezao"},"content":"        String userInput \u003d \"open 1\";","lastModifiedDate":"2021-11-07"},{"lineNumber":310,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":311,"author":{"gitId":"yeezao"},"content":"        assertTrue(Storage.checkOpenTrip());","lastModifiedDate":"2021-11-07"},{"lineNumber":312,"author":{"gitId":"yeezao"},"content":"        assertEquals(Storage.getOpenTrip(), Storage.getListOfTrips().get(0));","lastModifiedDate":"2021-11-07"},{"lineNumber":313,"author":{"gitId":"yeezao"},"content":"        assertEquals(Storage.getLastTrip(), Storage.getListOfTrips().get(0));","lastModifiedDate":"2021-11-07"},{"lineNumber":314,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":315,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":316,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":317,"author":{"gitId":"yeezao"},"content":"    public void testCloseTripFull() throws ForceCancelException {","lastModifiedDate":"2021-11-07"},{"lineNumber":318,"author":{"gitId":"yeezao"},"content":"        Storage.setOpenTrip(0);","lastModifiedDate":"2021-11-07"},{"lineNumber":319,"author":{"gitId":"yeezao"},"content":"        Trip trip \u003d Storage.getOpenTrip();","lastModifiedDate":"2021-11-07"},{"lineNumber":320,"author":{"gitId":"yeezao"},"content":"        String userInput \u003d \"close\";","lastModifiedDate":"2021-11-07"},{"lineNumber":321,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":322,"author":{"gitId":"yeezao"},"content":"        assertFalse(Storage.checkOpenTrip());","lastModifiedDate":"2021-11-07"},{"lineNumber":323,"author":{"gitId":"yeezao"},"content":"        assertEquals(Storage.getLastTrip(), trip);","lastModifiedDate":"2021-11-07"},{"lineNumber":324,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":325,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":326,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":327,"author":{"gitId":"yeezao"},"content":"    public void testOpenTripNull() throws ForceCancelException {","lastModifiedDate":"2021-11-07"},{"lineNumber":328,"author":{"gitId":"yeezao"},"content":"        System.setIn(new ByteArrayInputStream(\"1\".getBytes()));","lastModifiedDate":"2021-11-07"},{"lineNumber":329,"author":{"gitId":"yeezao"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-07"},{"lineNumber":330,"author":{"gitId":"yeezao"},"content":"        createNewTripForTest();","lastModifiedDate":"2021-11-07"},{"lineNumber":331,"author":{"gitId":"yeezao"},"content":"        Storage.setOpenTrip(0);","lastModifiedDate":"2021-11-07"},{"lineNumber":332,"author":{"gitId":"yeezao"},"content":"        Storage.closeTrip();","lastModifiedDate":"2021-11-07"},{"lineNumber":333,"author":{"gitId":"yeezao"},"content":"        assertFalse(Storage.checkOpenTrip());","lastModifiedDate":"2021-11-07"},{"lineNumber":334,"author":{"gitId":"yeezao"},"content":"        Storage.getOpenTrip();","lastModifiedDate":"2021-11-07"},{"lineNumber":335,"author":{"gitId":"yeezao"},"content":"        assertEquals(Storage.getOpenTrip(), Storage.getListOfTrips().get(0));","lastModifiedDate":"2021-11-07"},{"lineNumber":336,"author":{"gitId":"yeezao"},"content":"        assertEquals(Storage.getLastTrip(), Storage.getListOfTrips().get(0));","lastModifiedDate":"2021-11-07"},{"lineNumber":337,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":338,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":339,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":340,"author":{"gitId":"yeezao"},"content":"    public void testDeleteTripFullByIndex() {","lastModifiedDate":"2021-11-08"},{"lineNumber":341,"author":{"gitId":"yeezao"},"content":"        createNewTripForTest();","lastModifiedDate":"2021-11-07"},{"lineNumber":342,"author":{"gitId":"yeezao"},"content":"        Storage.closeTrip();","lastModifiedDate":"2021-11-07"},{"lineNumber":343,"author":{"gitId":"yeezao"},"content":"        String userInput \u003d \"delete 1\";","lastModifiedDate":"2021-11-07"},{"lineNumber":344,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(userInput);","lastModifiedDate":"2021-11-07"},{"lineNumber":345,"author":{"gitId":"yeezao"},"content":"        assertEquals(0, Storage.getListOfTrips().size());","lastModifiedDate":"2021-11-07"},{"lineNumber":346,"author":{"gitId":"yeezao"},"content":"        assertNull(Storage.getLastTrip());","lastModifiedDate":"2021-11-07"},{"lineNumber":347,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":348,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":349,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":350,"author":{"gitId":"yeezao"},"content":"    public void testDeleteTripFullByLast() {","lastModifiedDate":"2021-11-08"},{"lineNumber":351,"author":{"gitId":"yeezao"},"content":"        createNewTripForTest();","lastModifiedDate":"2021-11-08"},{"lineNumber":352,"author":{"gitId":"yeezao"},"content":"        String userInput \u003d \"delete last\";","lastModifiedDate":"2021-11-08"},{"lineNumber":353,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(userInput);","lastModifiedDate":"2021-11-08"},{"lineNumber":354,"author":{"gitId":"yeezao"},"content":"        assertEquals(0, Storage.getListOfTrips().size());","lastModifiedDate":"2021-11-08"},{"lineNumber":355,"author":{"gitId":"yeezao"},"content":"        assertNull(Storage.getLastTrip());","lastModifiedDate":"2021-11-08"},{"lineNumber":356,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":357,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":358,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":359,"author":{"gitId":"yeezao"},"content":"    public void testLastTripNull() {","lastModifiedDate":"2021-11-08"},{"lineNumber":360,"author":{"gitId":"yeezao"},"content":"        createNewTripForTest();","lastModifiedDate":"2021-11-08"},{"lineNumber":361,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(\"create /United of America /03-02-2021 /USD /0.74 /Ben, Jerry, Tom, Harry, Dick\");","lastModifiedDate":"2021-11-08"},{"lineNumber":362,"author":{"gitId":"yeezao"},"content":"        Storage.closeTrip();","lastModifiedDate":"2021-11-08"},{"lineNumber":363,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(\"delete 1\");","lastModifiedDate":"2021-11-08"},{"lineNumber":364,"author":{"gitId":"yeezao"},"content":"        assertEquals(1, Storage.getListOfTrips().size());","lastModifiedDate":"2021-11-08"},{"lineNumber":365,"author":{"gitId":"yeezao"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-08"},{"lineNumber":366,"author":{"gitId":"yeezao"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2021-11-08"},{"lineNumber":367,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(\"edit last -location somewhere\");","lastModifiedDate":"2021-11-08"},{"lineNumber":368,"author":{"gitId":"yeezao"},"content":"        String errorMsg \u003d \"You may have deleted the most recently modified trip. \"","lastModifiedDate":"2021-11-08"},{"lineNumber":369,"author":{"gitId":"yeezao"},"content":"                + \"Please try again with the trip number of the trip you wish to edit.\";","lastModifiedDate":"2021-11-08"},{"lineNumber":370,"author":{"gitId":"yeezao"},"content":"        assertEquals(errorMsg + System.lineSeparator(), outputStream.toString());","lastModifiedDate":"2021-11-08"},{"lineNumber":371,"author":{"gitId":"yeezao"},"content":"        System.setOut(origOut);","lastModifiedDate":"2021-11-08"},{"lineNumber":372,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":373,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":374,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":375,"author":{"gitId":"yeezao"},"content":"    public void setListOfPersons_EmptyList() throws SameNameException, ForceCancelException {","lastModifiedDate":"2021-11-07"},{"lineNumber":376,"author":{"gitId":"yeezao"},"content":"        System.setIn(new ByteArrayInputStream(\"me, someone\".getBytes()));","lastModifiedDate":"2021-11-07"},{"lineNumber":377,"author":{"gitId":"yeezao"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-07"},{"lineNumber":378,"author":{"gitId":"yeezao"},"content":"        Trip trip \u003d new Trip();","lastModifiedDate":"2021-11-07"},{"lineNumber":379,"author":{"gitId":"yeezao"},"content":"        trip.setListOfPersons(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-11-07"},{"lineNumber":380,"author":{"gitId":"yeezao"},"content":"        ArrayList\u003cPerson\u003e listOfPersons \u003d trip.getListOfPersons();","lastModifiedDate":"2021-11-07"},{"lineNumber":381,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"me\", listOfPersons.get(0).getName());","lastModifiedDate":"2021-11-07"},{"lineNumber":382,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"someone\", listOfPersons.get(1).getName());","lastModifiedDate":"2021-11-07"},{"lineNumber":383,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":384,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":385,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":386,"author":{"gitId":"yeezao"},"content":"    public void testSetLocation() throws ForceCancelException {","lastModifiedDate":"2021-11-06"},{"lineNumber":387,"author":{"gitId":"yeezao"},"content":"        Trip trip \u003d new Trip();","lastModifiedDate":"2021-11-06"},{"lineNumber":388,"author":{"gitId":"yeezao"},"content":"        trip.setLocation(\"America\");","lastModifiedDate":"2021-11-06"},{"lineNumber":389,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"America\", trip.getLocation());","lastModifiedDate":"2021-11-06"},{"lineNumber":390,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":391,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":392,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":393,"author":{"gitId":"yeezao"},"content":"    public void testSetName() {","lastModifiedDate":"2021-11-06"},{"lineNumber":394,"author":{"gitId":"yeezao"},"content":"        Person person \u003d new Person(\"CS2113T\");","lastModifiedDate":"2021-11-06"},{"lineNumber":395,"author":{"gitId":"yeezao"},"content":"        person.setName(\"Duke\");","lastModifiedDate":"2021-11-06"},{"lineNumber":396,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"Duke\", person.getName());","lastModifiedDate":"2021-11-06"},{"lineNumber":397,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":398,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":399,"author":{"gitId":"itsleeqian"},"content":"    //@@author itsleeqian","lastModifiedDate":"2021-11-08"},{"lineNumber":400,"author":{"gitId":"itsleeqian"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":401,"author":{"gitId":"itsleeqian"},"content":"    public void testSetForeignCurrency() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":402,"author":{"gitId":"itsleeqian"},"content":"        Trip trip1 \u003d new Trip();","lastModifiedDate":"2021-11-08"},{"lineNumber":403,"author":{"gitId":"itsleeqian"},"content":"        trip1.setForeignCurrency(\"USD\");","lastModifiedDate":"2021-11-08"},{"lineNumber":404,"author":{"gitId":"itsleeqian"},"content":"        assertEquals(\"USD\", trip1.getForeignCurrency());","lastModifiedDate":"2021-11-08"},{"lineNumber":405,"author":{"gitId":"itsleeqian"},"content":"        Trip trip2 \u003d new Trip();","lastModifiedDate":"2021-11-08"},{"lineNumber":406,"author":{"gitId":"itsleeqian"},"content":"        trip2.setForeignCurrency(\"EUR\");","lastModifiedDate":"2021-11-08"},{"lineNumber":407,"author":{"gitId":"itsleeqian"},"content":"        assertEquals(\"EUR\", trip2.getForeignCurrency());","lastModifiedDate":"2021-11-08"},{"lineNumber":408,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":409,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":410,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":411,"author":{"gitId":"itsleeqian"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":412,"author":{"gitId":"itsleeqian"},"content":"    public void testEditForeignCurrency() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":413,"author":{"gitId":"itsleeqian"},"content":"        testTrip1.setForeignCurrency(\"CNY\");","lastModifiedDate":"2021-11-08"},{"lineNumber":414,"author":{"gitId":"itsleeqian"},"content":"        assertEquals(\"CNY\", testTrip1.getForeignCurrency());","lastModifiedDate":"2021-11-08"},{"lineNumber":415,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":416,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":417,"author":{"gitId":"itsleeqian"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":418,"author":{"gitId":"itsleeqian"},"content":"    public void testEditForeignCurrency_InvalidCurrency() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":419,"author":{"gitId":"itsleeqian"},"content":"        String scannerInputs \u003d \"123\" + System.lineSeparator()","lastModifiedDate":"2021-11-08"},{"lineNumber":420,"author":{"gitId":"itsleeqian"},"content":"                + \"test currency\" + System.lineSeparator()","lastModifiedDate":"2021-11-08"},{"lineNumber":421,"author":{"gitId":"itsleeqian"},"content":"                + \"Galleon\" + System.lineSeparator()","lastModifiedDate":"2021-11-08"},{"lineNumber":422,"author":{"gitId":"itsleeqian"},"content":"                + \"KRW\";","lastModifiedDate":"2021-11-08"},{"lineNumber":423,"author":{"gitId":"itsleeqian"},"content":"        System.setIn(new ByteArrayInputStream(scannerInputs.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":424,"author":{"gitId":"itsleeqian"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":425,"author":{"gitId":"itsleeqian"},"content":"        testTrip1.setForeignCurrency(\"hello\");","lastModifiedDate":"2021-11-08"},{"lineNumber":426,"author":{"gitId":"itsleeqian"},"content":"        assertEquals(\"KRW\", testTrip1.getForeignCurrency());","lastModifiedDate":"2021-11-08"},{"lineNumber":427,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":428,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":429,"author":{"gitId":"itsleeqian"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":430,"author":{"gitId":"itsleeqian"},"content":"    public void testEditForeignCurrency_BlankInput() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":431,"author":{"gitId":"itsleeqian"},"content":"        System.setIn(new ByteArrayInputStream(\"KRW\".getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":432,"author":{"gitId":"itsleeqian"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":433,"author":{"gitId":"itsleeqian"},"content":"        testTrip1.setForeignCurrency(\"\");","lastModifiedDate":"2021-11-08"},{"lineNumber":434,"author":{"gitId":"itsleeqian"},"content":"        assertEquals(\"KRW\", testTrip1.getForeignCurrency());","lastModifiedDate":"2021-11-08"},{"lineNumber":435,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":436,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":437,"author":{"gitId":"itsleeqian"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":438,"author":{"gitId":"itsleeqian"},"content":"    public void testEditForeignCurrencyFull() {","lastModifiedDate":"2021-11-08"},{"lineNumber":439,"author":{"gitId":"itsleeqian"},"content":"        createNewTripForTest();","lastModifiedDate":"2021-11-08"},{"lineNumber":440,"author":{"gitId":"itsleeqian"},"content":"        String userInput \u003d \"edit last -forcur TWD\";","lastModifiedDate":"2021-11-08"},{"lineNumber":441,"author":{"gitId":"itsleeqian"},"content":"        Parser.parseUserInput(userInput);","lastModifiedDate":"2021-11-08"},{"lineNumber":442,"author":{"gitId":"itsleeqian"},"content":"        Trip tripToCheck \u003d Storage.getLastTrip();","lastModifiedDate":"2021-11-08"},{"lineNumber":443,"author":{"gitId":"itsleeqian"},"content":"        assertEquals(\"TWD\", tripToCheck.getForeignCurrency());","lastModifiedDate":"2021-11-08"},{"lineNumber":444,"author":{"gitId":"itsleeqian"},"content":"        assertEquals(\"NT$\", tripToCheck.getForeignCurrencySymbol());","lastModifiedDate":"2021-11-08"},{"lineNumber":445,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":446,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":447,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":448,"author":{"gitId":"itsleeqian"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":449,"author":{"gitId":"itsleeqian"},"content":"    public void testSetHomeCurrency() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":450,"author":{"gitId":"itsleeqian"},"content":"        Trip trip1 \u003d new Trip();","lastModifiedDate":"2021-11-08"},{"lineNumber":451,"author":{"gitId":"itsleeqian"},"content":"        trip1.setRepaymentCurrency(\"SGD\");","lastModifiedDate":"2021-11-08"},{"lineNumber":452,"author":{"gitId":"itsleeqian"},"content":"        assertEquals(\"SGD\", trip1.getRepaymentCurrency());","lastModifiedDate":"2021-11-08"},{"lineNumber":453,"author":{"gitId":"itsleeqian"},"content":"        Trip trip2 \u003d new Trip();","lastModifiedDate":"2021-11-08"},{"lineNumber":454,"author":{"gitId":"itsleeqian"},"content":"        trip2.setRepaymentCurrency(\"MYR\");","lastModifiedDate":"2021-11-08"},{"lineNumber":455,"author":{"gitId":"itsleeqian"},"content":"        assertEquals(\"MYR\", trip2.getRepaymentCurrency());","lastModifiedDate":"2021-11-08"},{"lineNumber":456,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":457,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":458,"author":{"gitId":"itsleeqian"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":459,"author":{"gitId":"itsleeqian"},"content":"    public void testEditHomeCurrency() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":460,"author":{"gitId":"itsleeqian"},"content":"        testTrip1.setRepaymentCurrency(\"SAR\");","lastModifiedDate":"2021-11-08"},{"lineNumber":461,"author":{"gitId":"itsleeqian"},"content":"        assertEquals(\"SAR\", testTrip1.getRepaymentCurrency());","lastModifiedDate":"2021-11-08"},{"lineNumber":462,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":463,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":464,"author":{"gitId":"itsleeqian"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":465,"author":{"gitId":"itsleeqian"},"content":"    public void testEditHomeCurrency_InvalidCurrency() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":466,"author":{"gitId":"itsleeqian"},"content":"        String scannerInputs \u003d \"456\" + System.lineSeparator()","lastModifiedDate":"2021-11-08"},{"lineNumber":467,"author":{"gitId":"itsleeqian"},"content":"                + \"kekW\" + System.lineSeparator()","lastModifiedDate":"2021-11-08"},{"lineNumber":468,"author":{"gitId":"itsleeqian"},"content":"                + \"Galleon\" + System.lineSeparator()","lastModifiedDate":"2021-11-08"},{"lineNumber":469,"author":{"gitId":"itsleeqian"},"content":"                + \"JPY\";","lastModifiedDate":"2021-11-08"},{"lineNumber":470,"author":{"gitId":"itsleeqian"},"content":"        System.setIn(new ByteArrayInputStream(scannerInputs.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":471,"author":{"gitId":"itsleeqian"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":472,"author":{"gitId":"itsleeqian"},"content":"        testTrip1.setForeignCurrency(\"hello\");","lastModifiedDate":"2021-11-08"},{"lineNumber":473,"author":{"gitId":"itsleeqian"},"content":"        assertEquals(\"JPY\", testTrip1.getForeignCurrency());","lastModifiedDate":"2021-11-08"},{"lineNumber":474,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":475,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":476,"author":{"gitId":"itsleeqian"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":477,"author":{"gitId":"itsleeqian"},"content":"    public void testEditHomeCurrency_BlankInput() throws ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":478,"author":{"gitId":"itsleeqian"},"content":"        System.setIn(new ByteArrayInputStream(\"KRW\".getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":479,"author":{"gitId":"itsleeqian"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":480,"author":{"gitId":"itsleeqian"},"content":"        testTrip1.setRepaymentCurrency(\"\");","lastModifiedDate":"2021-11-08"},{"lineNumber":481,"author":{"gitId":"itsleeqian"},"content":"        assertEquals(\"KRW\", testTrip1.getRepaymentCurrency());","lastModifiedDate":"2021-11-08"},{"lineNumber":482,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":483,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":484,"author":{"gitId":"itsleeqian"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":485,"author":{"gitId":"itsleeqian"},"content":"    public void testEditHomeCurrencyFull() {","lastModifiedDate":"2021-11-08"},{"lineNumber":486,"author":{"gitId":"itsleeqian"},"content":"        createNewTripForTest();","lastModifiedDate":"2021-11-08"},{"lineNumber":487,"author":{"gitId":"itsleeqian"},"content":"        String userInput \u003d \"edit last -homecur IDR\";","lastModifiedDate":"2021-11-08"},{"lineNumber":488,"author":{"gitId":"itsleeqian"},"content":"        Parser.parseUserInput(userInput);","lastModifiedDate":"2021-11-08"},{"lineNumber":489,"author":{"gitId":"itsleeqian"},"content":"        Trip tripToCheck \u003d Storage.getLastTrip();","lastModifiedDate":"2021-11-08"},{"lineNumber":490,"author":{"gitId":"itsleeqian"},"content":"        assertEquals(\"IDR\", tripToCheck.getRepaymentCurrency());","lastModifiedDate":"2021-11-08"},{"lineNumber":491,"author":{"gitId":"itsleeqian"},"content":"        assertEquals(\"Rp\", tripToCheck.getRepaymentCurrencySymbol());","lastModifiedDate":"2021-11-08"},{"lineNumber":492,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":493,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":494,"author":{"gitId":"itsleeqian"},"content":"    //@@author","lastModifiedDate":"2021-11-08"},{"lineNumber":495,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":496,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":497,"author":{"gitId":"yeezao"},"content":"    public void testSetDate() throws ForceCancelException {","lastModifiedDate":"2021-11-06"},{"lineNumber":498,"author":{"gitId":"yeezao"},"content":"        Trip trip \u003d new Trip();","lastModifiedDate":"2021-11-06"},{"lineNumber":499,"author":{"gitId":"yeezao"},"content":"        trip.setDateOfTrip(\"23-09-2021\");","lastModifiedDate":"2021-11-06"},{"lineNumber":500,"author":{"gitId":"yeezao"},"content":"        assertEquals(\"23 Sep 2021\", trip.getDateOfTripString());","lastModifiedDate":"2021-11-06"},{"lineNumber":501,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":502,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":503,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":504,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":505,"author":{"gitId":"yeezao"},"content":"    public void sampleTest() {","lastModifiedDate":"2021-11-06"},{"lineNumber":506,"author":{"gitId":"yeezao"},"content":"        assertTrue(true);","lastModifiedDate":"2021-11-06"},{"lineNumber":507,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":508,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":509,"author":{"gitId":"yeezao"},"content":"    @AfterAll","lastModifiedDate":"2021-11-07"},{"lineNumber":510,"author":{"gitId":"yeezao"},"content":"    static void restore() {","lastModifiedDate":"2021-11-07"},{"lineNumber":511,"author":{"gitId":"yeezao"},"content":"        System.setIn(origIn);","lastModifiedDate":"2021-11-07"},{"lineNumber":512,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":513,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":514,"author":{"gitId":"yeezao"},"content":"    private void createNewTripForTest() {","lastModifiedDate":"2021-11-06"},{"lineNumber":515,"author":{"gitId":"yeezao"},"content":"        Storage.setListOfTrips(new ArrayList\u003c\u003e());","lastModifiedDate":"2021-11-07"},{"lineNumber":516,"author":{"gitId":"yeezao"},"content":"        String userInput \u003d \"create /United States of America /02-02-2021 /USD /0.74 /Ben, Jerry, Tom, Harry, Dick\";","lastModifiedDate":"2021-11-06"},{"lineNumber":517,"author":{"gitId":"yeezao"},"content":"        Parser.parseUserInput(userInput);","lastModifiedDate":"2021-11-06"},{"lineNumber":518,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":519,"author":{"gitId":"yeezao"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"yeezao":422,"itsleeqian":97}},{"path":"src/test/java/seedu/duke/ValidityCheckerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yeezao"},"content":"package seedu.duke;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"yeezao"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"yeezao"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"yeezao"},"content":"import seedu.duke.parser.Parser;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"yeezao"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"yeezao"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"yeezao"},"content":"class ValidityCheckerTest {","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"yeezao"},"content":"    @BeforeAll","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"yeezao"},"content":"    static void setUp() {","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"yeezao"},"content":"    public void testDateCannotBeParsed() {","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"yeezao"},"content":"        assertFalse(Parser.doesDateReallyExist(\"aa-bb-cccc\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"yeezao"},"content":"        assertFalse(Parser.doesDateReallyExist(\"01-bb-cccc\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"yeezao"},"content":"        assertFalse(Parser.doesDateReallyExist(\"01-01-cccc\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"yeezao"},"content":"        assertTrue(Parser.doesDateReallyExist(\"01-01-2001\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"yeezao"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"yeezao"},"content":"    public void testDateDoesNotExist_InputDatesReallyDontExist() {","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"yeezao"},"content":"        //nonsense inputs","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"yeezao"},"content":"        assertFalse(Parser.doesDateReallyExist(\"35-02-2021\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"yeezao"},"content":"        assertFalse(Parser.doesDateReallyExist(\"00-11-2021\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"yeezao"},"content":"        assertFalse(Parser.doesDateReallyExist(\"25-00-2021\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"yeezao"},"content":"        assertFalse(Parser.doesDateReallyExist(\"16-23-2021\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"yeezao"},"content":"        //checking for 31st","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"yeezao"},"content":"        assertFalse(Parser.doesDateReallyExist(\"31-04-2021\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"yeezao"},"content":"        assertFalse(Parser.doesDateReallyExist(\"31-11-2021\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"yeezao"},"content":"        //leap years","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"yeezao"},"content":"        assertFalse(Parser.doesDateReallyExist(\"29-02-2021\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"yeezao"},"content":"        assertTrue(Parser.doesDateReallyExist(\"29-02-2020\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"yeezao"},"content":"        assertTrue(Parser.doesDateReallyExist(\"28-02-2020\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"yeezao"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"yeezao"},"content":"        //this exists","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"yeezao"},"content":"        assertTrue(Parser.doesDateReallyExist(\"08-12-2020\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"yeezao"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"yeezao"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"yeezao":46}},{"path":"src/test/java/seedu/duke/parser/CommandExecutorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyikai"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"leeyikai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"leeyikai"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"leeyikai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"leeyikai"},"content":"import seedu.duke.Person;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"leeyikai"},"content":"import seedu.duke.Storage;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"leeyikai"},"content":"import seedu.duke.Ui;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"leeyikai"},"content":"import seedu.duke.exceptions.ForceCancelException;","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"leeyikai"},"content":"import seedu.duke.exceptions.SameNameException;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"leeyikai"},"content":"import seedu.duke.expense.Expense;","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"leeyikai"},"content":"import seedu.duke.trip.Trip;","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"leeyikai"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"leeyikai"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"leeyikai"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"leeyikai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"leeyikai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"leeyikai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"leeyikai"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"leeyikai"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"leeyikai"},"content":"class CommandExecutorTest {","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"leeyikai"},"content":"    private static final DateTimeFormatter inputPattern \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"leeyikai"},"content":"    private static Trip trip;","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"leeyikai"},"content":"    @BeforeAll","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"leeyikai"},"content":"    static void setUp() throws SameNameException, ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"leeyikai"},"content":"        String[] stringArray \u003d {\"\", \"Canada\", \"02-03-2021\", \"cad\", \"0.123\", \"ben,jerry,tom\"};","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"leeyikai"},"content":"        trip \u003d new Trip(stringArray);","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"leeyikai"},"content":"        ArrayList\u003cTrip\u003e listOfTrips \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"leeyikai"},"content":"        listOfTrips.add(trip);","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"leeyikai"},"content":"        Storage.setListOfTrips(listOfTrips);","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"leeyikai"},"content":"        Storage.setOpenTrip(0);","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"leeyikai"},"content":"        ArrayList\u003cPerson\u003e listOfPersons \u003d trip.getListOfPersons();","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"leeyikai"},"content":"        Person person1 \u003d listOfPersons.get(0);","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"leeyikai"},"content":"        Person person2 \u003d listOfPersons.get(1);","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"leeyikai"},"content":"        ArrayList\u003cPerson\u003e listOfPersons1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"leeyikai"},"content":"        listOfPersons1.add(person1);","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"leeyikai"},"content":"        listOfPersons1.add(person2);","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"leeyikai"},"content":"        HashMap\u003cString, Double\u003e amountSplit1 \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"leeyikai"},"content":"        Expense exp1 \u003d new Expense(8.00, \"chicken nuggets\", listOfPersons1, \"food\",","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"leeyikai"},"content":"                LocalDate.parse(\"11-02-2021\", inputPattern), person1, amountSplit1);","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"leeyikai"},"content":"        exp1.setAmountSplit(person1, 0.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"leeyikai"},"content":"        exp1.setAmountSplit(person2, 8.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"leeyikai"},"content":"        person1.setMoneyOwed(person1, -8.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"leeyikai"},"content":"        person1.setMoneyOwed(person2, 8.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"leeyikai"},"content":"        person2.setMoneyOwed(person1, -8.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"leeyikai"},"content":"        HashMap\u003cString, Double\u003e amountSplit2 \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"leeyikai"},"content":"        Expense exp2 \u003d new Expense(16.00, \"chicken\", listOfPersons, \"food\",","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"leeyikai"},"content":"                LocalDate.parse(\"11-02-2021\", inputPattern), person2, amountSplit2);","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"leeyikai"},"content":"        exp2.setAmountSplit(person1, 0.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"leeyikai"},"content":"        exp2.setAmountSplit(person2, 10.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"leeyikai"},"content":"        Person person3 \u003d listOfPersons.get(2);","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"leeyikai"},"content":"        exp2.setAmountSplit(person3, 6.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"leeyikai"},"content":"        person2.setMoneyOwed(person2, -16.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"leeyikai"},"content":"        person2.setMoneyOwed(person1, 10.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"leeyikai"},"content":"        person1.setMoneyOwed(person2, -10.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"leeyikai"},"content":"        person2.setMoneyOwed(person3, 6.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"leeyikai"},"content":"        person3.setMoneyOwed(person2, -6.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"leeyikai"},"content":"        trip.addExpense(exp1);","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"leeyikai"},"content":"        trip.addExpense(exp2);","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"leeyikai"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"leeyikai"},"content":"    void testViewAllExpenses() {","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"leeyikai"},"content":"        ByteArrayOutputStream actualOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"leeyikai"},"content":"        System.setOut(new PrintStream(actualOutput));","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"leeyikai"},"content":"        String expectedOutput \u003d \"List of all Expenses in detail: \" + System.lineSeparator()","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"leeyikai"},"content":"                        + \"1. \" + trip.getListOfExpenses().get(0).toString() + System.lineSeparator()","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"leeyikai"},"content":"                        + \"2. \" + trip.getListOfExpenses().get(1).toString() + System.lineSeparator();","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"leeyikai"},"content":"        trip.viewAllExpenses();","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"leeyikai"},"content":"        assertEquals(expectedOutput, actualOutput.toString());","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"leeyikai"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"leeyikai"},"content":"    void testViewFilterByCategory() {","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"leeyikai"},"content":"        ByteArrayOutputStream actualOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"leeyikai"},"content":"        System.setOut(new PrintStream(actualOutput));","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"leeyikai"},"content":"        String input \u003d \"view filter category food\";","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"leeyikai"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"leeyikai"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"leeyikai"},"content":"        String expectedOutput \u003d \"1. \" + trip.getListOfExpenses().get(0).toString() + System.lineSeparator()","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"leeyikai"},"content":"                + \"2. \" + trip.getListOfExpenses().get(1).toString() + System.lineSeparator();","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"leeyikai"},"content":"        Parser.parseUserInput(input);","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"leeyikai"},"content":"        assertEquals(expectedOutput, actualOutput.toString());","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"leeyikai"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"leeyikai"},"content":"    void testViewFilterByPayer() {","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"leeyikai"},"content":"        ByteArrayOutputStream actualOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"leeyikai"},"content":"        System.setOut(new PrintStream(actualOutput));","lastModifiedDate":"2021-11-08"},{"lineNumber":95,"author":{"gitId":"leeyikai"},"content":"        String input \u003d \"view filter payer ben\";","lastModifiedDate":"2021-11-08"},{"lineNumber":96,"author":{"gitId":"leeyikai"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"leeyikai"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"leeyikai"},"content":"        String expectedOutput \u003d \"1. \" + trip.getListOfExpenses().get(0).toString() + System.lineSeparator();","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"leeyikai"},"content":"        Parser.parseUserInput(input);","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"leeyikai"},"content":"        assertEquals(expectedOutput, actualOutput.toString());","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":103,"author":{"gitId":"leeyikai"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":104,"author":{"gitId":"leeyikai"},"content":"    void testViewFilterByDescription() {","lastModifiedDate":"2021-11-08"},{"lineNumber":105,"author":{"gitId":"leeyikai"},"content":"        ByteArrayOutputStream actualOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-08"},{"lineNumber":106,"author":{"gitId":"leeyikai"},"content":"        System.setOut(new PrintStream(actualOutput));","lastModifiedDate":"2021-11-08"},{"lineNumber":107,"author":{"gitId":"leeyikai"},"content":"        String input \u003d \"view filter description nuggets\";","lastModifiedDate":"2021-11-08"},{"lineNumber":108,"author":{"gitId":"leeyikai"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":109,"author":{"gitId":"leeyikai"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":110,"author":{"gitId":"leeyikai"},"content":"        String expectedOutput \u003d \"1. \" + trip.getListOfExpenses().get(0).toString() + System.lineSeparator();","lastModifiedDate":"2021-11-08"},{"lineNumber":111,"author":{"gitId":"leeyikai"},"content":"        Parser.parseUserInput(input);","lastModifiedDate":"2021-11-08"},{"lineNumber":112,"author":{"gitId":"leeyikai"},"content":"        assertEquals(expectedOutput, actualOutput.toString());","lastModifiedDate":"2021-11-08"},{"lineNumber":113,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":114,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":115,"author":{"gitId":"leeyikai"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":116,"author":{"gitId":"leeyikai"},"content":"    void testViewFilterByPersons() {","lastModifiedDate":"2021-11-08"},{"lineNumber":117,"author":{"gitId":"leeyikai"},"content":"        ByteArrayOutputStream actualOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-08"},{"lineNumber":118,"author":{"gitId":"leeyikai"},"content":"        System.setOut(new PrintStream(actualOutput));","lastModifiedDate":"2021-11-08"},{"lineNumber":119,"author":{"gitId":"leeyikai"},"content":"        String input \u003d \"view filter person tom\";","lastModifiedDate":"2021-11-08"},{"lineNumber":120,"author":{"gitId":"leeyikai"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":121,"author":{"gitId":"leeyikai"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":122,"author":{"gitId":"leeyikai"},"content":"        String expectedOutput \u003d \"2. \" + trip.getListOfExpenses().get(1).toString() + System.lineSeparator();","lastModifiedDate":"2021-11-08"},{"lineNumber":123,"author":{"gitId":"leeyikai"},"content":"        Parser.parseUserInput(input);","lastModifiedDate":"2021-11-08"},{"lineNumber":124,"author":{"gitId":"leeyikai"},"content":"        assertEquals(expectedOutput, actualOutput.toString());","lastModifiedDate":"2021-11-08"},{"lineNumber":125,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":126,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":127,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":128,"author":{"gitId":"leeyikai"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"leeyikai":128}},{"path":"src/test/java/seedu/duke/parser/ExpenseSummaryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsleeqian"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"itsleeqian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"itsleeqian"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"itsleeqian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"itsleeqian"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"itsleeqian"},"content":"import seedu.duke.Person;","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"itsleeqian"},"content":"import seedu.duke.Storage;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"itsleeqian"},"content":"import seedu.duke.exceptions.ForceCancelException;","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"itsleeqian"},"content":"import seedu.duke.exceptions.SameNameException;","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"itsleeqian"},"content":"import seedu.duke.trip.Trip;","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"itsleeqian"},"content":"import seedu.duke.expense.Expense;","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"itsleeqian"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"itsleeqian"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"itsleeqian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"itsleeqian"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"itsleeqian"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"itsleeqian"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"itsleeqian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"itsleeqian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"itsleeqian"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"itsleeqian"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"itsleeqian"},"content":"public class ExpenseSummaryTest {","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"itsleeqian"},"content":"    private static final DateTimeFormatter inputPattern \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"itsleeqian"},"content":"    private static Trip trip;","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"itsleeqian"},"content":"    @BeforeAll","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"itsleeqian"},"content":"    static void setUp() throws SameNameException, ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"itsleeqian"},"content":"        String[] stringArray \u003d {\"\", \"Canada\", \"02-03-2021\", \"cad\", \"1.08\", \"ben,jerry,tom\"};","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"itsleeqian"},"content":"        trip \u003d new Trip(stringArray);","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"itsleeqian"},"content":"        ArrayList\u003cTrip\u003e listOfTrips \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"itsleeqian"},"content":"        listOfTrips.add(trip);","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"itsleeqian"},"content":"        Storage.setListOfTrips(listOfTrips);","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"itsleeqian"},"content":"        Storage.setOpenTrip(Storage.getListOfTrips().indexOf(trip));","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"itsleeqian"},"content":"        ArrayList\u003cPerson\u003e listOfPersons \u003d trip.getListOfPersons();","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"itsleeqian"},"content":"        Person person1 \u003d listOfPersons.get(0);","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"itsleeqian"},"content":"        Person person2 \u003d listOfPersons.get(1);","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"itsleeqian"},"content":"        ArrayList\u003cPerson\u003e listOfPersons1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"itsleeqian"},"content":"        listOfPersons1.add(person1);","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"itsleeqian"},"content":"        listOfPersons1.add(person2);","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"itsleeqian"},"content":"        HashMap\u003cString, Double\u003e amountSplit1 \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"itsleeqian"},"content":"        Expense exp1 \u003d new Expense(8.00, \"chicken nuggets\", listOfPersons1, \"food\",","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"itsleeqian"},"content":"                LocalDate.parse(\"11-02-2021\", inputPattern), person1, amountSplit1);","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"itsleeqian"},"content":"        exp1.setAmountSplit(person1, 4.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"itsleeqian"},"content":"        exp1.setAmountSplit(person2, 4.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"itsleeqian"},"content":"        person1.setMoneyOwed(person1, -8.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"itsleeqian"},"content":"        person1.setMoneyOwed(person2, 4.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"itsleeqian"},"content":"        person2.setMoneyOwed(person1, -4.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"itsleeqian"},"content":"        HashMap\u003cString, Double\u003e amountSplit2 \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"itsleeqian"},"content":"        Expense exp2 \u003d new Expense(16.00, \"travel to hotel\", listOfPersons, \"travel\",","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"itsleeqian"},"content":"                LocalDate.parse(\"11-02-2021\", inputPattern), person2, amountSplit2);","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"itsleeqian"},"content":"        exp2.setAmountSplit(person1, 0.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"itsleeqian"},"content":"        exp2.setAmountSplit(person2, 10.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"itsleeqian"},"content":"        Person person3 \u003d listOfPersons.get(2);","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"itsleeqian"},"content":"        exp2.setAmountSplit(person3, 6.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"itsleeqian"},"content":"        person2.setMoneyOwed(person2, -16.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"itsleeqian"},"content":"        person2.setMoneyOwed(person1, 10.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"itsleeqian"},"content":"        person1.setMoneyOwed(person2, -10.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"itsleeqian"},"content":"        person2.setMoneyOwed(person3, 6.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"itsleeqian"},"content":"        person3.setMoneyOwed(person2, -6.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"itsleeqian"},"content":"        trip.addExpense(exp1);","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"itsleeqian"},"content":"        trip.addExpense(exp2);","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"itsleeqian"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"itsleeqian"},"content":"    public void testExpenseSummary_individual() throws SameNameException, ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"itsleeqian"},"content":"        ByteArrayOutputStream actualOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"itsleeqian"},"content":"        System.setOut(new PrintStream(actualOutput));","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"itsleeqian"},"content":"        String input \u003d \"summary ben\";","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"itsleeqian"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"itsleeqian"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"itsleeqian"},"content":"        String expectedOutput \u003d \"ben has spent CAD $4.00 (SGD $3.70) on 2 expenses on the following categories:\"","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"itsleeqian"},"content":"                + System.lineSeparator() + \"travel: CAD $0.00 (SGD $0.00)\"","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"itsleeqian"},"content":"                + System.lineSeparator() + \"food: CAD $4.00 (SGD $3.70)\"","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"itsleeqian"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"itsleeqian"},"content":"        Parser.parseUserInput(input);","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"itsleeqian"},"content":"        assertEquals(expectedOutput, actualOutput.toString());","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"itsleeqian"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"itsleeqian"},"content":"    public void testExpenseSummary_invalidInput() throws SameNameException, ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"itsleeqian"},"content":"        ByteArrayOutputStream actualOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"itsleeqian"},"content":"        System.setOut(new PrintStream(actualOutput));","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"itsleeqian"},"content":"        String input \u003d \"summary 1\";","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"itsleeqian"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"itsleeqian"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"itsleeqian"},"content":"        String expectedOutput \u003d \"There are no persons with the name of [1] in this trip.\"","lastModifiedDate":"2021-11-08"},{"lineNumber":95,"author":{"gitId":"itsleeqian"},"content":"                + System.lineSeparator() + \"Please format your inputs as follows: \"","lastModifiedDate":"2021-11-08"},{"lineNumber":96,"author":{"gitId":"itsleeqian"},"content":"                + System.lineSeparator() + \"\\\"summary\\\" or \\\"summary [person name]\\\".\"","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"itsleeqian"},"content":"                + System.lineSeparator();","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"itsleeqian"},"content":"        Parser.parseUserInput(input);","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"itsleeqian"},"content":"        assertEquals(expectedOutput, actualOutput.toString());","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"itsleeqian"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"itsleeqian"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":103,"author":{"gitId":"itsleeqian"},"content":"    public void testExpenseSummary_full() throws SameNameException, ForceCancelException {","lastModifiedDate":"2021-11-08"},{"lineNumber":104,"author":{"gitId":"itsleeqian"},"content":"        ByteArrayOutputStream actualOutput \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-11-08"},{"lineNumber":105,"author":{"gitId":"itsleeqian"},"content":"        System.setOut(new PrintStream(actualOutput));","lastModifiedDate":"2021-11-08"},{"lineNumber":106,"author":{"gitId":"itsleeqian"},"content":"        String input \u003d \"summary\";","lastModifiedDate":"2021-11-08"},{"lineNumber":107,"author":{"gitId":"itsleeqian"},"content":"        System.setIn(new ByteArrayInputStream(input.getBytes()));","lastModifiedDate":"2021-11-08"},{"lineNumber":108,"author":{"gitId":"itsleeqian"},"content":"        Storage.setScanner(new Scanner(System.in));","lastModifiedDate":"2021-11-08"},{"lineNumber":109,"author":{"gitId":"itsleeqian"},"content":"        String expectedOutput \u003d \"ben has spent CAD $4.00 (SGD $3.70) on 2 expenses on the following categories:\"","lastModifiedDate":"2021-11-08"},{"lineNumber":110,"author":{"gitId":"itsleeqian"},"content":"                + System.lineSeparator() + \"travel: CAD $0.00 (SGD $0.00)\"","lastModifiedDate":"2021-11-08"},{"lineNumber":111,"author":{"gitId":"itsleeqian"},"content":"                + System.lineSeparator() + \"food: CAD $4.00 (SGD $3.70)\"","lastModifiedDate":"2021-11-08"},{"lineNumber":112,"author":{"gitId":"itsleeqian"},"content":"                + System.lineSeparator() + System.lineSeparator()","lastModifiedDate":"2021-11-08"},{"lineNumber":113,"author":{"gitId":"itsleeqian"},"content":"                + \"jerry has spent CAD $14.00 (SGD $12.96) on 2 expenses on the following categories:\"","lastModifiedDate":"2021-11-08"},{"lineNumber":114,"author":{"gitId":"itsleeqian"},"content":"                + System.lineSeparator() + \"travel: CAD $10.00 (SGD $9.26)\"","lastModifiedDate":"2021-11-08"},{"lineNumber":115,"author":{"gitId":"itsleeqian"},"content":"                + System.lineSeparator() + \"food: CAD $4.00 (SGD $3.70)\"","lastModifiedDate":"2021-11-08"},{"lineNumber":116,"author":{"gitId":"itsleeqian"},"content":"                + System.lineSeparator() + System.lineSeparator()","lastModifiedDate":"2021-11-08"},{"lineNumber":117,"author":{"gitId":"itsleeqian"},"content":"                + \"tom has spent CAD $6.00 (SGD $5.56) on 1 expenses on the following categories:\"","lastModifiedDate":"2021-11-08"},{"lineNumber":118,"author":{"gitId":"itsleeqian"},"content":"                + System.lineSeparator() + \"travel: CAD $6.00 (SGD $5.56)\"","lastModifiedDate":"2021-11-08"},{"lineNumber":119,"author":{"gitId":"itsleeqian"},"content":"                + System.lineSeparator() + System.lineSeparator();","lastModifiedDate":"2021-11-08"},{"lineNumber":120,"author":{"gitId":"itsleeqian"},"content":"        Parser.parseUserInput(input);","lastModifiedDate":"2021-11-08"},{"lineNumber":121,"author":{"gitId":"itsleeqian"},"content":"        assertEquals(expectedOutput, actualOutput.toString());","lastModifiedDate":"2021-11-08"},{"lineNumber":122,"author":{"gitId":"itsleeqian"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":123,"author":{"gitId":"itsleeqian"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"itsleeqian":123}},{"path":"src/test/java/seedu/duke/parser/PaymentOptimizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"leeyikai"},"content":"package seedu.duke.parser;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"leeyikai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"leeyikai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"leeyikai"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"leeyikai"},"content":"import seedu.duke.Person;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"leeyikai"},"content":"import seedu.duke.Storage;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"leeyikai"},"content":"import seedu.duke.exceptions.ForceCancelException;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"leeyikai"},"content":"import seedu.duke.exceptions.SameNameException;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"leeyikai"},"content":"import seedu.duke.trip.Trip;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"leeyikai"},"content":"import seedu.duke.expense.Expense;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"leeyikai"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"leeyikai"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"leeyikai"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"leeyikai"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"leeyikai"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"leeyikai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"leeyikai"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"leeyikai"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"leeyikai"},"content":"class PaymentOptimizerTest {","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"leeyikai"},"content":"    static Expense exp1;","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"leeyikai"},"content":"    static Expense exp2;","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"leeyikai"},"content":"    static Expense exp3;","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"leeyikai"},"content":"    private static final DateTimeFormatter inputPattern \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"leeyikai"},"content":"    @BeforeAll","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"leeyikai"},"content":"    static void setUp() throws SameNameException, ForceCancelException {","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"leeyikai"},"content":"        String[] stringArray \u003d {\"\", \"Canada\", \"02-03-2021\", \"cad\", \"0.123\", \"ben,jerry,tom\"};","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"leeyikai"},"content":"        Trip trip \u003d new Trip(stringArray);","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"leeyikai"},"content":"        ArrayList\u003cTrip\u003e listOfTrips \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"leeyikai"},"content":"        listOfTrips.add(trip);","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"leeyikai"},"content":"        Storage.setListOfTrips(listOfTrips);","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"leeyikai"},"content":"        Storage.setOpenTrip(0);","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"leeyikai"},"content":"        ArrayList\u003cPerson\u003e listOfPersons \u003d trip.getListOfPersons();","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"leeyikai"},"content":"        Person person1 \u003d listOfPersons.get(0);","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"leeyikai"},"content":"        Person person2 \u003d listOfPersons.get(1);","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"leeyikai"},"content":"        HashMap\u003cString, Double\u003e amountSplit1 \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"leeyikai"},"content":"        Expense exp1 \u003d new Expense(8.00, \"chicken nuggers\", listOfPersons, \"food\",","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"leeyikai"},"content":"                LocalDate.parse(\"11-02-2021\", inputPattern), person1, amountSplit1);","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"leeyikai"},"content":"        exp1.setPayer(person1);","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"leeyikai"},"content":"        person1.setMoneyOwed(person1, -8.0);","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"leeyikai"},"content":"        person1.setMoneyOwed(person2, 5.0);","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"leeyikai"},"content":"        person2.setMoneyOwed(person1, -5.0);","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"leeyikai"},"content":"        Person person3 \u003d listOfPersons.get(2);","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"leeyikai"},"content":"        person1.setMoneyOwed(person3, 3.0);","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"leeyikai"},"content":"        person3.setMoneyOwed(person1, -3.0);","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"leeyikai"},"content":"        exp1.setAmountSplit(person2, 4.0);","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"leeyikai"},"content":"        exp1.setAmountSplit(person3, 4.0);","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"leeyikai"},"content":"        HashMap\u003cString, Double\u003e amountSplit2 \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"leeyikai"},"content":"        Expense exp2 \u003d new Expense(16.00, \"chicken\", listOfPersons, \"food\",","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"leeyikai"},"content":"                LocalDate.parse(\"11-02-2021\", inputPattern), person2, amountSplit2);","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"leeyikai"},"content":"        exp2.setAmountSplit(person2, 10.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"leeyikai"},"content":"        exp2.setAmountSplit(person3, 6.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"leeyikai"},"content":"        person2.setMoneyOwed(person2, -16.0);","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"leeyikai"},"content":"        person2.setMoneyOwed(person1, 10.0);","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"leeyikai"},"content":"        person1.setMoneyOwed(person2, -10.0);","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"leeyikai"},"content":"        person2.setMoneyOwed(person3, 6.0);","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"leeyikai"},"content":"        person3.setMoneyOwed(person2, -6.0);","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"leeyikai"},"content":"        trip.addExpense(exp1);","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"leeyikai"},"content":"        trip.addExpense(exp2);","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"leeyikai"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"leeyikai"},"content":"    public void testOptimizePayments() throws ForceCancelException {","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"leeyikai"},"content":"        Trip openTrip \u003d Storage.getOpenTrip();","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"leeyikai"},"content":"        Person person1 \u003d openTrip.getListOfPersons().get(0);","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"leeyikai"},"content":"        PaymentOptimizer.optimizePayments(openTrip);","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"leeyikai"},"content":"        HashMap\u003cString, Double\u003e hashMapBen \u003d person1.getOptimizedMoneyOwed();","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"leeyikai"},"content":"        assertEquals(hashMapBen.get(\"jerry\"), -2.0);","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"leeyikai"},"content":"        Person person2 \u003d openTrip.getListOfPersons().get(1);","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"leeyikai"},"content":"        HashMap\u003cString, Double\u003e hashMapJerry \u003d person2.getOptimizedMoneyOwed();","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"leeyikai"},"content":"        assertEquals(hashMapJerry.get(\"ben\"), 2.0);","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"leeyikai"},"content":"        assertEquals(hashMapJerry.get(\"tom\"), 9.0);","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"leeyikai"},"content":"        Person person3 \u003d openTrip.getListOfPersons().get(2);","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"leeyikai"},"content":"        HashMap\u003cString, Double\u003e hashMapTom \u003d person3.getOptimizedMoneyOwed();","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"leeyikai"},"content":"        assertEquals(hashMapTom.get(\"jerry\"), -9.0);","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"leeyikai"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"leeyikai":88}},{"path":"text-ui-test/runtest.sh","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# change to script directory","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"cd \"${0%/*}\"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"cd ..","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"./gradlew clean shadowJar","lastModifiedDate":"2020-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"cd text-ui-test","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"leeyikai"},"content":"rm trips.json","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dos2unix EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"diff EXPECTED-UNIX.TXT ACTUAL.TXT","lastModifiedDate":"2020-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    echo \"Test passed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    echo \"Test failed!\"","lastModifiedDate":"2020-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":23,"leeyikai":2}}]
