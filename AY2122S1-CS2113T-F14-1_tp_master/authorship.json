[{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"![](Display Images/Gudetama.png) | Tan Hui En | [Github](https://github.com/huien77) | [Portfolio](team/johndoe.md)","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"![](Display Images/Rimuru.png) | Daren Tan | [Github](https://github.com/DJ-Tan) | [Portfolio](team/johndoe.md)","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"![](Display Images/GrabFood.png) | Swann Tet Aung | [Github](https://github.com/STAung07) | [Portfolio](team/johndoe.md)","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"![](Display Images/KahHeng.png) | Tan Kah Heng | [Github](https://github.com/kahhe) | [Portfolio](team/kahheng.md)","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"![](Display Images/Flerovious.png) | Swaminathan Varun | [Github](https://github.com/flerovious) | [Portfolio](team/johndoe.md)","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"-":4,"kahhe":5}},{"path":"docs/team/kahheng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"# Kah Heng - Project Portfolio Page","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"## Overview","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"### Summary of Contributions","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"kahhe":6}},{"path":"src/main/java/happybit/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package happybit.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"import happybit.exception.HappyBitException;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"public class DeleteCommand {","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"    //Temporary methods","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"    protected ArrayList\u003cString\u003e habits \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"    public void deleteHabit(String habit) {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"        habits.remove(habit);","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"kahhe"},"content":"    //Semi-permanent methods","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"kahhe"},"content":"    //protected String habitName;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"kahhe"},"content":"    //public DeleteCommand(int habitName) {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"kahhe"},"content":"    //    this.habitName\u003d habitName;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"kahhe"},"content":"    //}","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"kahhe"},"content":"     * Deletes a habit from the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"kahhe"},"content":"     * @param habit Name of habit to be deleted.","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"kahhe"},"content":"    //@Override","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"kahhe"},"content":"    public void runCommand(String habit) {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"kahhe"},"content":"        deleteHabit(habit);","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"kahhe":33}},{"path":"src/main/java/happybit/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import happybit.ui.Ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"public class HelpCommand {","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"    public static void runCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"        Ui.printCommandList();","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"STAung07":10}},{"path":"src/main/java/happybit/command/ListGoalsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"public class ListGoalsCommand {","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"    ArrayList\u003cString\u003e goals \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"STAung07":7}},{"path":"src/main/java/happybit/command/ListHabitsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import happybit.ui.Ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"public class ListHabitsCommand {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"    // ArrayList for testing purposes","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"    private static ArrayList\u003cString\u003e habits \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"    public static void runCommand() {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"        // Add here to test whether printing works","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"        habits.add(\"Habit 1\");","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"        habits.add(\"Habit 2\");","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"        habits.add(\"Habit 3\");","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"        habits.add(\"Habit 4\");","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"        Ui.printHabitsList(habits);","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"STAung07":20}},{"path":"src/main/java/happybit/command/RemoveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package happybit.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"public class RemoveCommand {","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"    //Temporary method","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"    protected ArrayList\u003cString\u003e goals \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"    public void removeGoal(String goal) {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"        goals.remove(goal);","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"kahhe"},"content":"    //Semi-permanent methods","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"kahhe"},"content":"    //protected String goalName;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"kahhe"},"content":"    //public DeleteCommand(int goalName) {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"kahhe"},"content":"    //    this.goalName\u003d goalName;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"kahhe"},"content":"    //}","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"kahhe"},"content":"     * Deletes a goal of a habit.","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"kahhe"},"content":"     * @param goal Name of habit to be deleted.","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"kahhe"},"content":"    public void runCommand(String goal) {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"kahhe"},"content":"        removeGoal(goal);","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"kahhe":29}},{"path":"src/main/java/happybit/exception/HappyBitException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.exception;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public class HappyBitException extends Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"    public HappyBitException(String message) {","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"        super(message);","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"DJ-Tan":9}},{"path":"src/main/java/happybit/goal/Goal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.goal;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HappyBitException;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"public class Goal {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    protected String description;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    protected Date startDate;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    protected Date endDate;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    // To be implemented in a future iteration","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    // protected ArrayList\u003cMilestone\u003e milestoneList \u003d new ArrayList\u003cMilestone\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    // protected int reminderFrequency;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"     * Constructor for Goal class with startDate defined.","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"     * @param description Description of the end goal.","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"     * @param startDate   Start date of progress towards a goal.","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     * @param endDate     End date of progress towards a goal.","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HappyBitException If strings cannot be converted to date or/and","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"     *                           If start date comes after the end date.","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    public Goal(String description, String startDate, String endDate) throws HappyBitException {","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"        this.startDate \u003d stringToDate(startDate);","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"        this.endDate \u003d stringToDate(endDate);","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"        isStartDateBeforeEndDate();","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"     * Constructor for Goal class without startDate defined.","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"     * startDate will be set as current date.","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"     * @param description Description of the end goal.","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"     * @param endDate     End date of progress towards a goal.","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HappyBitException If strings cannot be converted to date or/and","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"     *                           If start date comes after the end date.","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"    public Goal(String description, String endDate) throws HappyBitException {","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"        this.startDate \u003d new Date();","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"        this.endDate \u003d stringToDate(endDate);","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"        isStartDateBeforeEndDate();","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"     * Gets a string representation of goal details.","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"     * @return String containing goal description and start-end dates.","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"        return this.description + dateDescription();","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"     * Indicates goal completion if the current date is equal to or after the endDate.","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"     * (Logic to be changed to allow user to manually check off the goal as completed)","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"    public void setDone() {","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"        if (!isDateBeforeToday(endDate)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"            isDone \u003d true;","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"DJ-Tan"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"DJ-Tan"},"content":"     * The following are private methods that are used to implement SLAP for the","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"     * above public methods. These methods are positioned at the bottom to better","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"     * visualise the actual methods that can be called from outside this class.","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"     * Formats the start-end dates as a single string for print output.","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"     * @return String containing start-end dates.","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"DJ-Tan"},"content":"    private String dateDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"DJ-Tan"},"content":"        String startDateString \u003d \"Start: \" + dateToString(this.startDate);","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"DJ-Tan"},"content":"        String endDateString \u003d \"End: \" + dateToString(this.endDate);","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"DJ-Tan"},"content":"        return \" (\" + startDateString + \" | \" + endDateString + \")\\n\";","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"DJ-Tan"},"content":"     * Converts a Date into a String.","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"DJ-Tan"},"content":"     * @param date Either a start or end date.","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"DJ-Tan"},"content":"     * @return String formatted from a date in the dd-MMM-yyyy format e.g, 07-Oct-2021.","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"DJ-Tan"},"content":"    private String dateToString(Date date) {","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"DJ-Tan"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd-MMM-yyyy\");","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"DJ-Tan"},"content":"        return formatter.format(date);","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"DJ-Tan"},"content":"     * Converts a String into a Date.","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"DJ-Tan"},"content":"     * @param strDate String representation of a start or end date.","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"DJ-Tan"},"content":"     * @return Date formatted from a string in the dd-MMM-yyyy format e.g, 07-Oct-2021.","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"DJ-Tan"},"content":"    private Date stringToDate(String strDate) throws HappyBitException {","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"DJ-Tan"},"content":"        Date date \u003d null;","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"DJ-Tan"},"content":"            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd-MMM-yyyy\");","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"DJ-Tan"},"content":"            date \u003d formatter.parse(strDate);","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"DJ-Tan"},"content":"        } catch (ParseException parseException) {","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"DJ-Tan"},"content":"            throw new HappyBitException(\"Error: Invalid date format. Use dd-MMM-yyyy e.g, 07-Oct-2021.\\n\");","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"DJ-Tan"},"content":"        return date;","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the current date is before the compared date.","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"DJ-Tan"},"content":"     * @param compareDate Date used to compare with current date.","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"DJ-Tan"},"content":"     * @return true: If current date is before the compared date.","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"DJ-Tan"},"content":"     *         false: If current date is after the compared date.","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"DJ-Tan"},"content":"    private boolean isDateBeforeToday(Date compareDate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"DJ-Tan"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"DJ-Tan"},"content":"        if (currentDate.compareTo(compareDate) \u003c 0) {","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"DJ-Tan"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"DJ-Tan"},"content":"        return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the start date is before the end date.","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HappyBitException If start date is after the end date.","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"DJ-Tan"},"content":"    private void isStartDateBeforeEndDate() throws HappyBitException {","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"DJ-Tan"},"content":"        if (this.startDate.compareTo(this.endDate) \u003e 0) {","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"DJ-Tan"},"content":"            throw new HappyBitException(\"Error: Start Date has to come before End Date \");","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"DJ-Tan":145}},{"path":"src/main/java/happybit/habit/Habit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.habit;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.Goal;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"public class Habit {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"    protected String habitName;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    protected HabitType habitType;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    protected ArrayList\u003cGoal\u003e goalList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * Constructor for Goal class with habitType defined.","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     * @param habitName String description of the habit.","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     * @param habitType Type/Category of habit.","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"    public Habit(String habitName, HabitType habitType) {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"        this.habitName \u003d habitName;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"        this.habitType \u003d habitType;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     * Constructor for Goal class with habitType not defined.","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     * habitType will be set as DEFAULT.","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"     * @param habitName String description of the habit.","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"    public Habit(String habitName) {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"        this.habitName \u003d habitName;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"        this.habitType \u003d HabitType.DEFAULT;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for habitName.","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"     * @return String description of the habit.","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"    public String getHabitName() {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"        return habitName;","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for habitType.","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"     * @return Type/Category of habit.","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"    public HabitType getHabitType() {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"        return habitType;","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the description of the habit.","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"     * @return String containing habit name and type.","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"        return getHabitTypeCharacter() + \" \" + habitName + \"\\n\";","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"     * Adds a goal to the habit.","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"     * @param goal Goal to be added to the habit.","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"    public void addGoal(Goal goal) {","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"        goalList.add(goal);","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the number of goals in a habit.","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"DJ-Tan"},"content":"     * @return Integer number of goals associated with the habit.","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"    public int numberOfGoals() {","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"        return goalList.size();","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"DJ-Tan"},"content":"     * Prints list of goals associated with the habit.","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"    public void printGoalList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"        for (int i \u003d 0; i \u003c goalList.size(); i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"DJ-Tan"},"content":"            System.out.println(i + \". \" + goalList.get(i).getDescription() + \"\\n\");","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"DJ-Tan"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"DJ-Tan"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"DJ-Tan"},"content":"     * The following are private methods that are used to implement SLAP for the","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"DJ-Tan"},"content":"     * above public methods. These methods are positioned at the bottom to better","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"DJ-Tan"},"content":"     * visualise the actual methods that can be called from outside this class.","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"DJ-Tan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the corresponding 2-character code for the habitType.","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"DJ-Tan"},"content":"     * @return String of the habitType 2-character code.","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"DJ-Tan"},"content":"    private String getHabitTypeCharacter() {","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"DJ-Tan"},"content":"        switch (this.habitType) {","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"DJ-Tan"},"content":"        case SLEEP:","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"DJ-Tan"},"content":"            return \"[SL]\";","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"DJ-Tan"},"content":"        case FOOD:","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"DJ-Tan"},"content":"            return \"[FD]\";","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"DJ-Tan"},"content":"        case EXERCISE:","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"DJ-Tan"},"content":"            return \"[EX]\";","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"DJ-Tan"},"content":"        case STUDY:","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"DJ-Tan"},"content":"            return \"[SD]\";","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"DJ-Tan"},"content":"        default:","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"DJ-Tan"},"content":"            return \"[DF]\";","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"DJ-Tan":117}},{"path":"src/main/java/happybit/habit/HabitType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.habit;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public enum HabitType {","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"    DEFAULT, SLEEP, FOOD, EXERCISE, STUDY","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"DJ-Tan":5}},{"path":"src/main/java/happybit/parser/InputParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import happybit.command.ListHabitsCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import happybit.command.ListGoalsCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"import happybit.command.HelpCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"public class InputParser {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"    private static final String HELP \u003d \"help\";","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"    private static final String LIST \u003d \"list\";","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"    private static final String ADD \u003d \"add\";","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"    private static final String DELETE \u003d \"delete\";","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"    private static final String SET \u003d \"set\";","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"    private static final String REMOVE \u003d \"remove\";","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"    // Parses user input; base version","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"    public void parseInput(String input) {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"        // Help command","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"        if (input.trim().equals(HELP)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"            HelpCommand.runCommand();","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"        } else if (input.trim().equals(LIST)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"            // check if trimmed input has anything behind list keyword","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"            //String trimmedInput \u003d input.replaceAll(\"\\\\s+\", \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"            ListHabitsCommand.runCommand();","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"STAung07":26}},{"path":"src/main/java/happybit/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huien77"},"content":"package happybit.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"huien77"},"content":"import java.io.File;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"huien77"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"huien77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"huien77"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"huien77"},"content":"public class Storage {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"huien77"},"content":"    private static final String DEFAULT_DIR \u003d \"data\";","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"huien77"},"content":"    private static final String DEFAULT_FILEPATH \u003d \"data/habits.txt\";","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"huien77"},"content":"    private static final String DELIMITER \u003d \"@@@\";","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"huien77"},"content":"    private static final int GOAL_NAME_INDEX \u003d 0;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"huien77"},"content":"    private static final int GOAL_START_DATE \u003d 1;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"huien77"},"content":"    private static final int GOAL_END_DATE \u003d 2;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"huien77"},"content":"    private static final int HABIT_NUMBER \u003d 0;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"huien77"},"content":"    private static final int HABIT_TYPE \u003d 1;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"huien77"},"content":"    private static final int HABIT_NAME \u003d 2;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"huien77"},"content":"    protected String filePath;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"huien77"},"content":"    protected String fileDir;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"huien77"},"content":"    public Storage() {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"huien77"},"content":"        this(DEFAULT_FILEPATH, DEFAULT_DIR);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"huien77"},"content":"    public Storage(String filePath, String fileDir) {","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"huien77"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"huien77"},"content":"        this.fileDir \u003d fileDir;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"huien77"},"content":"    public ArrayList\u003cString\u003e importData() {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"huien77"},"content":"        ArrayList\u003cString\u003e habits \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"huien77"},"content":"        Scanner s;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"huien77"},"content":"        String line;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"huien77"},"content":"        createFile(this.filePath, this.fileDir);","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"huien77"},"content":"        File storageFile \u003d new File(this.filePath);","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"huien77"},"content":"            s \u003d new Scanner(storageFile);","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"huien77"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"huien77"},"content":"                line \u003d s.nextLine();","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"huien77"},"content":"                String[] lineData \u003d line.split(DELIMITER);","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"huien77"},"content":"                if (lineData[0].startsWith(\"-\")) {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"huien77"},"content":"                    String toAdd \u003d lineData[GOAL_NAME_INDEX].substring(1)","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"huien77"},"content":"                            + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"huien77"},"content":"                            + lineData[GOAL_START_DATE]","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"huien77"},"content":"                            + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"huien77"},"content":"                            + lineData[GOAL_END_DATE];","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"huien77"},"content":"                    habits.add(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"huien77"},"content":"                } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"huien77"},"content":"                    String toAdd \u003d lineData[HABIT_NUMBER].substring(1)","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"huien77"},"content":"                            + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"huien77"},"content":"                            + lineData[HABIT_TYPE]","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"huien77"},"content":"                            + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"huien77"},"content":"                            + lineData[HABIT_NAME];","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"huien77"},"content":"                    habits.add(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"huien77"},"content":"                }","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"huien77"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"huien77"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"huien77"},"content":"            System.out.println(\"File not found: \" + e);","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"huien77"},"content":"        return habits;","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"huien77"},"content":"    public void createFile(String filePath, String fileDir) {","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"huien77"},"content":"        File storageDir \u003d new File(fileDir);","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"huien77"},"content":"        File storageFile \u003d new File(filePath);","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"huien77"},"content":"        if (!storageDir.exists()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"huien77"},"content":"            boolean isDirCreated \u003d storageDir.mkdirs();","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"huien77"},"content":"            if (isDirCreated) {","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"huien77"},"content":"                System.out.println(\"Directory created: \" + fileDir);","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"huien77"},"content":"            } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"huien77"},"content":"                System.out.println(\"Directory not created\");","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"huien77"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"huien77"},"content":"            boolean isFileCreated \u003d storageFile.createNewFile();","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"huien77"},"content":"            if (isFileCreated) {","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"huien77"},"content":"                System.out.println(\"File created: \" + filePath);","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"huien77"},"content":"            } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"huien77"},"content":"                System.out.println(\"File exists\");","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"huien77"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"huien77"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"huien77"},"content":"            System.out.println(\"Error occurred while creating file: \" + e);","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"huien77"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"huien77":99}},{"path":"src/main/java/happybit/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"public class Ui {","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"    private static final String COMMAND_LIST_GREETING \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"            \"Hello! These are all the possible commands for this habit tracker :)\";","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"    private static final String ADD_HABIT_COMMAND \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"            \"add a habit: add \u003chabit name\u003e\";","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"    private static final String DELETE_HABIT_COMMAND \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"            \"delete a habit: delete \u003chabit name\u003e\";","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"    private static final String SET_GOAL_COMMAND \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"            \"set a goal for a habit: set \u003chabit name\u003e \u003cgoal name\u003e\";","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"    private static final String REMOVE_GOAL_COMMAND \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"            \"remove a goal for a habit: remove \u003chabit name\u003e \u003cgoal name\u003e\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"    private static final String LIST_HABIT_COMMAND \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"            \"list all habits user has input: list\";","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"    private static final String LIST_GOAL_COMMAND \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"            \"list all goals for that habit: list -\u003chabit name\u003e\";","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"    private static final String NEWLINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"    private static final String DASHES \u003d \"______________________________________________________________\"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"            + \"__________________________________________________________\";","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"    public static void printCommandList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"        printDashes();","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"        System.out.print(COMMAND_LIST_GREETING + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"                + ADD_HABIT_COMMAND + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"                + DELETE_HABIT_COMMAND + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"                + SET_GOAL_COMMAND + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"                + REMOVE_GOAL_COMMAND + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"                + LIST_HABIT_COMMAND + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"STAung07"},"content":"                + LIST_GOAL_COMMAND + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"STAung07"},"content":"        );","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"        printDashes();","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"STAung07"},"content":"    public static void printHabitsList(ArrayList\u003cString\u003e habits) {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"STAung07"},"content":"        printDashes();","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"STAung07"},"content":"        for (String habit : habits) {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"STAung07"},"content":"            System.out.println(habit);","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"STAung07"},"content":"        printDashes();","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"STAung07"},"content":"    private static void printDashes() {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"STAung07"},"content":"        System.out.println(DASHES);","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"STAung07":48}},{"path":"src/test/java/happybit/command/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package happybit.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"import happybit.exception.HappyBitException;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"class DeleteCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"     * Test runCommand to see if deleteCommand is working.","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"kahhe"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"kahhe"},"content":"    void runCommand_habitName_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"kahhe"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand();","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"kahhe"},"content":"        deleteCommand.habits.add(\"habit 1\");","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"kahhe"},"content":"        deleteCommand.habits.add(\"habit 2\");","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"kahhe"},"content":"        deleteCommand.habits.add(\"habit 3\");","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"kahhe"},"content":"        deleteCommand.habits.add(\"habit 4\");","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"kahhe"},"content":"        deleteCommand.runCommand(\"habit 3\");","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"kahhe"},"content":"        final ArrayList\u003cString\u003e actualResult \u003d deleteCommand.habits;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"kahhe"},"content":"        final ArrayList\u003cString\u003e expectedResult \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"kahhe"},"content":"        expectedResult.add(\"habit 1\");","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"kahhe"},"content":"        expectedResult.add(\"habit 2\");","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"kahhe"},"content":"        expectedResult.add(\"habit 4\");","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"kahhe"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"kahhe":33}},{"path":"src/test/java/happybit/command/RemoveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package happybit.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"import happybit.exception.HappyBitException;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"class RemoveCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"     * Test runCommand to see if removeCommand is working.","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"kahhe"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"kahhe"},"content":"    void runCommand_goalName_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"kahhe"},"content":"        RemoveCommand removeCommand \u003d new RemoveCommand();","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"kahhe"},"content":"        removeCommand.goals.add(\"goal 1\");","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"kahhe"},"content":"        removeCommand.goals.add(\"goal 2\");","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"kahhe"},"content":"        removeCommand.goals.add(\"goal 3\");","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"kahhe"},"content":"        removeCommand.goals.add(\"goal 4\");","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"kahhe"},"content":"        removeCommand.runCommand(\"goal 3\");","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"kahhe"},"content":"        final ArrayList\u003cString\u003e actualResult \u003d removeCommand.goals;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"kahhe"},"content":"        final ArrayList\u003cString\u003e expectedResult \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"kahhe"},"content":"        expectedResult.add(\"goal 1\");","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"kahhe"},"content":"        expectedResult.add(\"goal 2\");","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"kahhe"},"content":"        expectedResult.add(\"goal 4\");","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"kahhe"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"kahhe":33}},{"path":"src/test/java/happybit/goal/GoalTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.goal;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HappyBitException;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"class GoalTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * Test getDescription when a goal class is initialised with the start date.","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    void getDescription_withStartDate_expectStringDescription() throws HappyBitException {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"        final Goal testGoal \u003d new Goal(\"test\", \"07-Oct-2021\", \"21-Oct-2021\");","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"        final String expectedResult \u003d \"test (Start: 07-Oct-2021 | End: 21-Oct-2021)\\n\";","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"        final String actualResult \u003d testGoal.getDescription();","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     * Test getDescription when a goal class is initialised without the start date.","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    void getDescription_withoutStartDate_expectStringDescription() throws HappyBitException {","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"        final Goal testGoal \u003d new Goal(\"test\", \"21-Oct-2021\");","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd-MMM-yyyy\");","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"        String strCurrentDate \u003d formatter.format(currentDate);","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"        final String expectedResult \u003d \"test (Start: \" + strCurrentDate + \" | End: 21-Oct-2021)\\n\";","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"        final String actualResult \u003d testGoal.getDescription();","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"     * Test getDescription when a goal class is initialised with an invalid start date format.","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"    void getDescription_invalidStartDateFormat_expectException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"        assertThrows(HappyBitException.class,","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"            () -\u003e new Goal(\"test\", \"7-10-2021\", \"21-Oct-2021\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"     * Test getDescription when a goal class is initialised with an invalid end date format.","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"    void getDescription_invalidEndDateFormat_expectException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"        assertThrows(HappyBitException.class,","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"            () -\u003e new Goal(\"test\", \"07-Oct-2021\", \"01/01/2021\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"     * Test getDescription when a goal class is initialised with start date after the end date.","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"    void getDescription_startDateAfterEndDate_expectException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"        assertThrows(HappyBitException.class,","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"            () -\u003e new Goal(\"test\", \"07-Oct-2021\", \"07-Jan-2021\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"     * Test if isDone is set properly if current date is after the end date.","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"    void setDone_currentDateAfterEndDate_isDoneEqualsFalse() throws HappyBitException {","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"        final Goal testGoal \u003d new Goal(\"test\", \"07-Jan-2021\", \"21-Feb-2021\");","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"        testGoal.setDone();","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"        final boolean expectedResult \u003d true;","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"DJ-Tan"},"content":"        assertEquals(expectedResult, testGoal.isDone);","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"     * Test if isDone is set properly if current date is before the end date.","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"DJ-Tan"},"content":"    void setDone_currentDateBeforeEndDate_isDoneEqualsFalse() throws HappyBitException {","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"        final Goal testGoal \u003d new Goal(\"test\", \"07-Jan-2021\", \"21-Feb-2050\");","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"        testGoal.setDone();","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"        final boolean expectedResult \u003d false;","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"DJ-Tan"},"content":"        assertEquals(expectedResult, testGoal.isDone);","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"DJ-Tan":88}},{"path":"src/test/java/happybit/habit/HabitTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.habit;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HappyBitException;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.Goal;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"class HabitTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * Test getDescription when a habit is initialised with a habit type.","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    void getDescription_withHabitType_expectStringDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"        final Habit testHabit \u003d new Habit(\"test\", HabitType.SLEEP);","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"        final String expectedResult \u003d \"[SL] test\\n\";","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"        final String actualResult \u003d testHabit.getDescription();","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     * Test getDescription when a habit is initialised without a habit type.","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    void getDescription_withoutHabitType_expectStringDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"        final Habit testHabit \u003d new Habit(\"test\");","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"        final String expectedResult \u003d \"[DF] test\\n\";","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"        final String actualResult \u003d testHabit.getDescription();","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"     * Test printGoalList when 3 goals are added to the habit.","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HappyBitException If there are issues with the goal dates.","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"    void printGoalList_threeGoals_expectThreeLinesOfGoals() throws HappyBitException {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"        final Habit testHabit \u003d new Habit(\"test\");","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"        final Goal testGoal1 \u003d new Goal(\"goal1\", \"07-Oct-2021\", \"07-Oct-2050\");","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"        final Goal testGoal2 \u003d new Goal(\"goal2\", \"08-Oct-2021\", \"08-Oct-2050\");","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"        final Goal testGoal3 \u003d new Goal(\"goal3\", \"09-Oct-2021\", \"09-Oct-2050\");","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"        testHabit.addGoal(testGoal1);","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"        testHabit.addGoal(testGoal2);","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"        testHabit.addGoal(testGoal3);","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"        assertEquals(3, testHabit.numberOfGoals());","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"        ArrayList\u003cString\u003e expectedResultList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"        expectedResultList.add(\"goal1 (Start: 07-Oct-2021 | End: 07-Oct-2050)\\n\");","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"        expectedResultList.add(\"goal2 (Start: 08-Oct-2021 | End: 08-Oct-2050)\\n\");","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"        expectedResultList.add(\"goal3 (Start: 09-Oct-2021 | End: 09-Oct-2050)\\n\");","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"        for (int i \u003d 0; i \u003c testHabit.numberOfGoals(); i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"            assertEquals(expectedResultList.get(i), testHabit.goalList.get(i).getDescription());","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"DJ-Tan":58}},{"path":"src/test/java/happybit/parser/InputParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import happybit.command.HelpCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import happybit.command.ListHabitsCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"class InputParserTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"    private static final String COMMAND_LIST_GREETING \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"            \"Hello! These are all the possible commands for this habit tracker :)\";","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"    private static final String ADD_HABIT_COMMAND \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"            \"add a habit: add \u003chabit name\u003e\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"    private static final String DELETE_HABIT_COMMAND \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"            \"delete a habit: delete \u003chabit name\u003e\";","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"    private static final String SET_GOAL_COMMAND \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"            \"set a goal for a habit: set \u003chabit name\u003e \u003cgoal name\u003e\";","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"    private static final String REMOVE_GOAL_COMMAND \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"            \"remove a goal for a habit: remove \u003chabit name\u003e \u003cgoal name\u003e\";","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"    private static final String LIST_HABIT_COMMAND \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"            \"list all habits user has input: list\";","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"    private static final String LIST_GOAL_COMMAND \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"            \"list all goals for that habit: list -\u003chabit name\u003e\";","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"    private static final String NEWLINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"    private static final String DASHES \u003d \"______________________________________\"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"            + \"__________________________________________________________________________________\";","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"STAung07"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"STAung07"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"STAung07"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"STAung07"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"STAung07"},"content":"    void parseInput_inputHelp_printCommandList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"STAung07"},"content":"        final HelpCommand helpCommand \u003d new HelpCommand();","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"STAung07"},"content":"        final InputParser iP \u003d new InputParser();","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"STAung07"},"content":"        String input \u003d \"help\";","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"STAung07"},"content":"        String expectedOutput \u003d DASHES + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"STAung07"},"content":"                + COMMAND_LIST_GREETING + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"STAung07"},"content":"                + ADD_HABIT_COMMAND + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"STAung07"},"content":"                + DELETE_HABIT_COMMAND + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"STAung07"},"content":"                + SET_GOAL_COMMAND + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"STAung07"},"content":"                + REMOVE_GOAL_COMMAND + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"STAung07"},"content":"                + LIST_HABIT_COMMAND + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"STAung07"},"content":"                + LIST_GOAL_COMMAND + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"STAung07"},"content":"                + DASHES + NEWLINE;","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"STAung07"},"content":"        iP.parseInput(input);","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"STAung07"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString());","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"STAung07"},"content":"    void parseInput_inputList_printHabitList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"STAung07"},"content":"        final ListHabitsCommand listHabits \u003d new ListHabitsCommand();","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"STAung07"},"content":"        final InputParser iP \u003d new InputParser();","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"STAung07"},"content":"        String input \u003d \"list\";","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"STAung07"},"content":"        String expectedOutput \u003d DASHES + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"STAung07"},"content":"                + \"Habit 1\" + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"STAung07"},"content":"                + \"Habit 2\" + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"STAung07"},"content":"                + \"Habit 3\" + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"STAung07"},"content":"                + \"Habit 4\" + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"STAung07"},"content":"                + DASHES + NEWLINE;","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"STAung07"},"content":"        iP.parseInput(input);","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"STAung07"},"content":"        assertEquals(expectedOutput, outputStreamCaptor.toString());","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"STAung07"},"content":"    @AfterEach","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"STAung07"},"content":"    public void tearDown() {","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"STAung07"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"STAung07":78}},{"path":"src/test/java/happybit/storage/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"huien77"},"content":"package happybit.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"huien77"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"huien77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"huien77"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"huien77"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"huien77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"huien77"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"huien77"},"content":"class StorageTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"huien77"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"huien77"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"huien77"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"huien77"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"huien77"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"huien77"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"huien77"},"content":"    public void createFile_createFileThatExists_fileExists() {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"huien77"},"content":"        new Storage().createFile(\"data/habits.txt\", \"data\");","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"huien77"},"content":"        assertEquals(\"File exists\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"huien77"},"content":"    @AfterEach","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"huien77"},"content":"    public void tearDown() {","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"huien77"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"huien77"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"huien77"},"content":"    public void importData_importEmptyFile_emptyArrayList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"huien77"},"content":"        Storage s \u003d new Storage();","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"huien77"},"content":"        ArrayList\u003cString\u003e actualOutput \u003d s.importData();","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"huien77"},"content":"        ArrayList\u003cString\u003e expectedOutput \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"huien77"},"content":"        assertEquals(expectedOutput, actualOutput);","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"huien77"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"huien77":41}}]
