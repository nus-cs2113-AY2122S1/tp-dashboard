[{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.23\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"kahhe"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":46,"kahhe":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"huien77"},"content":"# About Us","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"![](Display_Images/Gudetama.png) | Tan Hui En | [Github](https://github.com/huien77) | [Portfolio](team/huien77.md)","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"![](Display_Images/Rimuru.png) | Daren Tan | [Github](https://github.com/DJ-Tan) | [Portfolio](team/dj-tan.md)","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"![](Display_Images/GrabFood.png) | Swann Tet Aung | [Github](https://github.com/STAung07) | [Portfolio](team/staung07.md)","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"![](Display_Images/KahHeng.png) | Tan Kah Heng | [Github](https://github.com/kahhe) | [Portfolio](team/kahhe.md)","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"![](Display_Images/Flerovious.png) | Swaminathan Varun | [Github](https://github.com/flerovious) | [Portfolio](team/flerovious.md)","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"huien77"},"content":"## Useful Links","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"huien77"},"content":"Visit our [Main Page](README.md) to find more useful links.","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"huien77":5,"DJ-Tan":5,"-":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Developer Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"huien77"},"content":"This developer guide documents the design and implementation of the application,","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"_Ha(ppy)Bit_. It will provide an insight into the design considerations, and implementation","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"huien77"},"content":"of features.","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"huien77"},"content":"* [Acknowledgements](#acknowledgements)","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"huien77"},"content":"* [Design and Implementation](#design-and-implementation)","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"huien77"},"content":"  * [Architecture](#architecture)","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"  * [UI component](#ui-component)","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"huien77"},"content":"  * [Command component](#command-component)","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"huien77"},"content":"  * [Parser logic component](#parser-logic-component)","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"  * [GoalList component](#goallist-component)","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"huien77"},"content":"  * [Storage component](#storage-component)","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"huien77"},"content":"* [Appendix A: Product Scope](#appendix-a-product-scope)","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"huien77"},"content":"  * [Target user profile](#target-user-profile)","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"huien77"},"content":"  * [Value proposition](#value-proposition)","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"huien77"},"content":"* [Appendix B: User Stories](#appendix-b-user-stories)","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"huien77"},"content":"* [Appendix C: Non-Functional Requirements](#appendix-c-non-functional-requirements)","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"huien77"},"content":"* [Appendix D: Glossary](#appendix-d-glossary)","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"huien77"},"content":"* [Appendix E: Instructions for Manual Testing](#appendix-e-instructions-for-manual-testing)","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"kahhe"},"content":"---------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Acknowledgements","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"huien77"},"content":"This application reused some parts of the code from:","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"huien77"},"content":"* Developer\u0027s name: Daren Tan (find his profile [here](AboutUs.md))","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"huien77"},"content":"* Code source: CS2113T Individual Project","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"huien77"},"content":"* Link to code: \u003chttps://github.com/DJ-Tan/ip.git\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"huien77"},"content":"This application referenced some parts of the code from:","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"huien77"},"content":"* Developer team: find the team [here](https://se-education.org/addressbook-level3/AboutUs.html)","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"huien77"},"content":"* Code source: AB-3","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"huien77"},"content":"* Link to code: \u003chttps://github.com/se-edu/addressbook-level3.git\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"huien77"},"content":"This application adapted the Developer Guide and User Guide from:","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"huien77"},"content":"* Developer team: find the team [here](https://se-education.org/addressbook-level3/AboutUs.html)","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"huien77"},"content":"* Link to Developer Guide: \u003chttps://se-education.org/addressbook-level3/DeveloperGuide.html\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"huien77"},"content":"* Link to User Guide: \u003chttps://se-education.org/addressbook-level3/UserGuide.html#quick-start\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":42,"author":{"gitId":"kahhe"},"content":"---------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"huien77"},"content":"## Design and Implementation","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":46,"author":{"gitId":"huien77"},"content":"### Architecture","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"STAung07"},"content":"The diagram below shows the higher-level implementation of the interactions of all the components within `HappyBit` ","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"STAung07"},"content":"![Ui Diagram](Diagram Images/SystemArchitecture.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"STAung07"},"content":"In the sections below, we will be explaining in detail how each component works.","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"huien77"},"content":"### UI component","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"huien77"},"content":"**API:** `Ui.java`","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"How the `Ui` component works:","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"1. The `Ui` is called in 2 main classes - `GoalList` and `UiOverall`","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"2. For `GoalList`, functions that require printing of information will call `Ui`","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"   1. confirmation message of `addGoal()`","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"   2. confirmation message of `addHabitToGoal()`","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"   3. removed goal of `deleteGoal()`","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"   4. removed habit of `deleteHabitFromGoal()`","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"   5. confirmation message of `doneHabitFromGoal()`","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"   6. update message of `updateGoalName()`","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"   7. list of goals of `listGoals()`","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"   8. list of habits of `listHabitsFromGoal()`","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"3. For `UiOverall`, there is an inheritance of 2 classes - `UiStartup` and `UiMain`","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"   1. `UiStartup` handles the interface that provides a brief introduction to the application, and links to external ","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"      documentation.","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"   2. `UiMain` handles the interface for the main application.","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"4. The `Ui` is responsible for printing error messages raised by exceptions.","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"DJ-Tan"},"content":"The Sequence Diagram below illustrates the interactions within the `Ui` component when `run()` is called in the main","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"class `HappyBit.java`","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"STAung07"},"content":"![Ui Diagram](Diagram Images/UiDiagramCopy.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"While the Sequence Diagram represents the normal flow of logic, there is a recursive definition that is not represented.","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"DJ-Tan"},"content":"1. `:HappyBit` calls the method `handleState()` in `:State`","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"2. `handleState()` calls another method `mainState()` also in `:State`","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"3. `mainState()` will create a new `:UiMain` and calls a method `run()` on itself","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"4. `run()` returns a boolean value equivalent to whether the recursive call should be made","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"DJ-Tan"},"content":"5. If the boolean value is true, `handleState()` would recursively call itself","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"DJ-Tan"},"content":"6. If the boolean value is false, `handleState()` would pass the call back to `:HappyBit`","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"huien77"},"content":"### Command component","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"STAung07"},"content":"When the user runs the Program, the main function dealing with the user\u0027s inputs is the `handleUserInput()` function","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"STAung07"},"content":"which obtains a `Command` object after parsing the input using the `Parser` component.","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"STAung07"},"content":"`Command` objects available are:","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"STAung07"},"content":"* `AddGoalCommand` - Adds a new Goal to the GoalList.","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"STAung07"},"content":"* `AddHabitCommand` - Adds a new Habit object to a specified Goal set by the user.","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"kahhe"},"content":"* `UpdateGoalNameCommand` - Updates the name of a Goal specified by the user.","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"STAung07"},"content":"* `DeleteGoalCommand` - Deletes a Goal from the GoalList","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"STAung07"},"content":"* `DeleteHabitCommand` - Deletes a Habit object from a specified Goal set by the user.","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"STAung07"},"content":"* `DoneHabitCommand` - Marks a Habit object under a Goal as done.","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"STAung07"},"content":"* `ListGoalCommand` - Lists out all the Goals set by the user.","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"STAung07"},"content":"* `ListHabitCommand` - Lists out all the Habits set under a Goal.","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"STAung07"},"content":"* `HelpCommand` - Prints out message indicating all the available Commands","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"STAung07"},"content":"The respective `runCommand` functions of the returned command object is then executed.","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"STAung07"},"content":"In the sections below we will be providing implementation details for each of the commands.","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"STAung07"},"content":"#### `AddGoalCommand`","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"flerovious"},"content":"When the `runCommand` function is executed for the `AddGoalCommand` object, the following steps as indicated by the","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"kahhe"},"content":"sequence diagram below is carried out:","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"flerovious"},"content":"![](https://www.planttext.com/api/plantuml/img/ZLB1QiCm3BtxAqGltI1fxcQCZWvwwM2mwouY5fuXbZDRsVVFIGepn2sxoUz9xptBFYR1A9CVrFvBP4owwyO1UKOEVV1Tek-9kAVMEBGHlMgVOQVXnPXpmE4Kl4Ss6OWJNmyFDXCNbqJ3-LeryCbZT2nlo6WfQdWlJWqa2J5N6ZxMub5XB-u7XIfUIcqnc5DjVNCZherBg9Leu7QKqhWYbwqhw69-MtC7UdNCcUalpC6Il5Bgenl51PxldfjicU2EPZt8KzlUdpBqF_NQYXVnsb9AqHg_36wViHpRiaTYa__WBm00)","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"STAung07"},"content":"#### `AddHabitCommand`","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"kahhe"},"content":"#### `UpdateGoalNameCommand`","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"STAung07"},"content":"#### `DeleteGoalCommand`","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"kahhe"},"content":"When the `runCommand` function is executed for the `DeleteGoalCommand` object, the following steps as indicated by the","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"kahhe"},"content":"sequence diagram below is carried out:","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"kahhe"},"content":"![](Diagram Images/DeleteGoalCommandSequenceDiagram.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"STAung07"},"content":"#### `DeleteHabitCommand`","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"kahhe"},"content":"When the `runCommand` function is executed for the `DeleteHabitCommand` object, the following steps as indicated by the","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"kahhe"},"content":"sequence diagram below is carried out:","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"kahhe"},"content":"![](Diagram Images/DeleteHabitCommandSequenceDiagram.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"STAung07"},"content":"#### `DoneHabitCommand`","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"STAung07"},"content":"When the `runCommand` function is executed for the `DoneHabitCommand` object, the following steps as indicated by the ","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"kahhe"},"content":"sequence diagram below is carried out:","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"STAung07"},"content":"![](Diagram Images/DoneCommandSequenceDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"STAung07"},"content":"#### `ListGoalCommand`","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"STAung07"},"content":"When the `runCommand` function is executed for the `ListGoalsCommand` object, the following steps as indicated by the","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"kahhe"},"content":"sequence diagram below is carried out:","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"STAung07"},"content":"![](Diagram Images/ListGoalsCommandSequenceDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"STAung07"},"content":"#### `ListHabitCommand`","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"STAung07"},"content":"When the `runCommand` function is executed for the `ListHabitsCommand` object, the following steps as indicated by the","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"kahhe"},"content":"sequence diagram below is carried out:","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"STAung07"},"content":"![](Diagram Images/ListHabitsCommandSequenceDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"STAung07"},"content":"#### `HelpCommand`","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"STAung07"},"content":"When the `runCommand` function is executed for the `HelpCommand` object, it instantiates a `PrintManager` object and ","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"STAung07"},"content":"calls the `printCommandList` method which prints out a pre-set message informing the user of all the inputs they","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"STAung07"},"content":"can type to execute a certain command.","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"huien77"},"content":"### Parser logic component","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"STAung07"},"content":"The `Parser` logic component handles the parsing of the input passed in by the user and returns a suitable `Command` ","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"STAung07"},"content":"object that will be executed. Within the component itself, there are more specific and detailed `Parser` classes for ","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"STAung07"},"content":"handling various inputs from the user.","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"STAung07"},"content":"* `AddParser` - Handles the parsing of inputs starting with `set` and `add` keywords","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"STAung07"},"content":"* `DeleteParser` - Handles the parsing of inputs starting with `remove` and `delete`","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"STAung07"},"content":"* `DoneParser` - Handles the parsing of inputs starting with `done`","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"STAung07"},"content":"* `ListParser` - Handles the parsing of inputs starting with `view`","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"STAung07"},"content":"* `SetParser` - Handles the parsing of inputs starting with `goal`","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"STAung07"},"content":"For inputs of `bye`, `help` `list` their respective functions are run immediately without the need to parse further.","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"STAung07"},"content":"For any other invalid inputs that do not start with the listed keywords, the `HelpCommand` functionality is invoked.","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"STAung07"},"content":"### GoalList component","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":177,"author":{"gitId":"STAung07"},"content":"The `GoalList` component is the component that holds and manipulates the list of all the Goals set by the user.","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"STAung07"},"content":"All `runCommands` of all of the `Command` objects directly access the `GoalList` component to retrieve and change      ","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"STAung07"},"content":"the user\u0027s data.","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"huien77"},"content":"### Storage component","lastModifiedDate":"2021-10-17"},{"lineNumber":182,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":183,"author":{"gitId":"huien77"},"content":"The `Storage` class allows data to be read from and saved to a storage file.","lastModifiedDate":"2021-10-22"},{"lineNumber":184,"author":{"gitId":"huien77"},"content":"The class diagram shows the interactions between the different classes.","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"huien77"},"content":"![Storage Class Diagram](Diagram%20Images/StorageClassDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"huien77"},"content":"The program uses `Storage` class to import data from the storage file.","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"huien77"},"content":"* `Storage` interacts with `Import` to access the data stored in storage file.","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"huien77"},"content":"* `Import` will depend on `ImportParser` to decipher the data stored, and return ","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"huien77"},"content":"a `Goal` or `Habit` object back to `Import` correspondingly.","lastModifiedDate":"2021-10-22"},{"lineNumber":192,"author":{"gitId":"huien77"},"content":"* `Import` will then populate `GoalList` with `Goal` and `Habit` objects accordingly","lastModifiedDate":"2021-10-22"},{"lineNumber":193,"author":{"gitId":"huien77"},"content":"before returning `GoalList` back to `Storage` and back to user.","lastModifiedDate":"2021-10-22"},{"lineNumber":194,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":195,"author":{"gitId":"huien77"},"content":"`Storage` class can also export data to storage file with `Export` class.","lastModifiedDate":"2021-10-22"},{"lineNumber":196,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":197,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"kahhe"},"content":"---------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-22"},{"lineNumber":199,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"huien77"},"content":"## Appendix A: Product Scope","lastModifiedDate":"2021-10-17"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":202,"author":{"gitId":"kahhe"},"content":"### Target user profile:","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"kahhe"},"content":"* wants to have a work-life balance but is often consumed by work/school","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"kahhe"},"content":"* have goals and aspirations but falls short of them; lacklustre commitment or game plan for action","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"kahhe"},"content":"* doesn\u0027t want to rely on smartphone (They\u0027re doing everything these days, sheesh!)","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"kahhe"},"content":"* prefers desktop app, ","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"kahhe"},"content":"* familiar and comfortable with CLI apps, or willing to learn to use","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"### Value proposition","lastModifiedDate":"2020-05-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":211,"author":{"gitId":"STAung07"},"content":"Users with _Ha(ppy)Bit_ will find themselves cultivating good habits and breaking bad habits despite hectic ","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"kahhe"},"content":"workload or commitments. ","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":214,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":215,"author":{"gitId":"huien77"},"content":"## Appendix B: User Stories","lastModifiedDate":"2021-10-17"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"|Version| As a ... | I want to ... | So that I can ...|","lastModifiedDate":"2020-05-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"|--------|----------|---------------|------------------|","lastModifiedDate":"2020-05-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"|v1.0|new user|see usage instructions|refer to them when I forget how to use the application| ","lastModifiedDate":"2020-05-24"},{"lineNumber":220,"author":{"gitId":"STAung07"},"content":"|v1.0|user|set a new goal I wish to accomplish|start working towards completing the goal|","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"STAung07"},"content":"|v1.0|user|add habits i wish to carry out in the process of accomplishing my goal|break down the journey of achieving my goal into smaller manageable steps","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"STAung07"},"content":"|v1.0|user|remove a goal from my list of goals|remove goals that I no longer wish to work towards|","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"STAung07"},"content":"|v1.0|user|delete a habit added under a goal|remove a habit that I no longer wish to carry out|","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"STAung07"},"content":"|v1.0|user|mark a habit as done|indicate that I have completed that habit|","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"STAung07"},"content":"|v1.0|user|list out all the goals I have|remind myself of the goals I am working towards|","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"STAung07"},"content":"|v1.0|user|view all the habits I have set for each goal|check which habits I have yet to complete|","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"STAung07"},"content":"|v1.0|user|have import and export functionality in the program|access goals and habits previously set from a local data storage","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"STAung07"},"content":"|v2.0|user|have recurring habits at a regular interval|habitually carry out the habits I set for myself|","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"STAung07"},"content":"|v2.0|user|be able to view my progress for any goal|motivate myself in the process|","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"STAung07"},"content":"|v2.0|user|view all my habits due for the day upon entering the program|remember to carry out these habits by the end of the day|","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":232,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":233,"author":{"gitId":"huien77"},"content":"## Appendix C: Non-Functional Requirements","lastModifiedDate":"2021-10-17"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":235,"author":{"gitId":"kahhe"},"content":"|Non-Functional Requirements | Requirement Type |","lastModifiedDate":"2021-10-22"},{"lineNumber":236,"author":{"gitId":"kahhe"},"content":"| :---------- | :---: |","lastModifiedDate":"2021-10-22"},{"lineNumber":237,"author":{"gitId":"kahhe"},"content":"|App should be operable on Windows, macOS, and Ubuntu running Java `11` or above.|Technical|","lastModifiedDate":"2021-10-22"},{"lineNumber":238,"author":{"gitId":"kahhe"},"content":"|App can be learned anyone who is familiar with computer within minutes of use.|Quality|","lastModifiedDate":"2021-10-22"},{"lineNumber":239,"author":{"gitId":"kahhe"},"content":"|App should be a helpful, encouraging, and a joy to use.|Quality|","lastModifiedDate":"2021-10-22"},{"lineNumber":240,"author":{"gitId":"kahhe"},"content":"| |Performance|","lastModifiedDate":"2021-10-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":242,"author":{"gitId":"huien77"},"content":"## Appendix D: Glossary","lastModifiedDate":"2021-10-17"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":244,"author":{"gitId":"kahhe"},"content":"* **Goal**: A long term achievement you wish to accomplish","lastModifiedDate":"2021-10-22"},{"lineNumber":245,"author":{"gitId":"kahhe"},"content":"* **Habit**: Checkpoints; actionable tasks to be done to achieve goal","lastModifiedDate":"2021-10-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":248,"author":{"gitId":"huien77"},"content":"## Appendix E: Instructions for Manual Testing","lastModifiedDate":"2021-10-17"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":250,"author":{"gitId":"kahhe"},"content":"{Someone shall give instructions on how to do a manual product testing ","lastModifiedDate":"2021-10-22"},{"lineNumber":251,"author":{"gitId":"kahhe"},"content":"e.g., how to load sample data to be used for testing}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"STAung07":84,"huien77":70,"flerovious":4,"DJ-Tan":30,"-":27,"kahhe":36}},{"path":"docs/Diagrams/AddGoalCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"flerovious"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"flerovious"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"flerovious"},"content":"-\u003e \": AddGoalCommand\": runCommand(goalList: GoalList, \\nprintManager: PrintManager, storage: Storage)","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"flerovious"},"content":"activate \": AddGoalCommand\"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"flerovious"},"content":"\": AddGoalCommand\" -\u003e \"goalList: GoalList\": addGoal(goal: Goal, printManager: PrintManager)","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"flerovious"},"content":"activate \"goalList: GoalList\"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"flerovious"},"content":"\"goalList: GoalList\" -\u003e \"printManager: PrintManager\" : printAddedGoal(goal.getDescription: String)","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"flerovious"},"content":"activate \"printManager: PrintManager\"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"flerovious"},"content":"\"goalList: GoalList\" \u003c-- \"printManager: PrintManager\"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"flerovious"},"content":"deactivate \"printManager: PrintManager\"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"flerovious"},"content":"\": AddGoalCommand\" \u003c-- \"goalList: GoalList\"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"flerovious"},"content":"deactivate \"goalList: GoalList\"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"flerovious"},"content":"\u003c-- \": AddGoalCommand\"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"flerovious"},"content":"deactivate \": AddGoalCommand\"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"flerovious"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"flerovious":20}},{"path":"docs/Diagrams/DeleteGoalCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"!include Style.puml","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"header DeleteGoalCommand Feature","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"-\u003e \": DeleteGoalCommand\": runCommand(goalList: GoalList,\\n printManager: PrintManager, storage: Storage)","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"activate \": DeleteGoalCommand\"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"\": DeleteGoalCommand\" -\u003e \"goalList: GoalList\": deleteGoal(goalIndex: int,\\n printManager: PrintManager)","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"activate \"goalList: GoalList\"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"create \"goal: Goal\"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"kahhe"},"content":"\"goalList: GoalList\" -\u003e \"goal: Goal\": getGoal(goalIndex: int)","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"kahhe"},"content":"activate \"goal: Goal\"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"kahhe"},"content":"return","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"kahhe"},"content":"\"goalList: GoalList\" -\u003e \"goalList: GoalList\": updateChosenGoalIndex(goalIndex: int)","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"kahhe"},"content":"activate \"goalList: GoalList\"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"kahhe"},"content":"deactivate \"goalList: GoalList\"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"kahhe"},"content":"\"goalList: GoalList\" -\u003e \"goalList: GoalList\": remove(goal: Goal)","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"kahhe"},"content":"activate \"goalList: GoalList\"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"kahhe"},"content":"deactivate \"goalList: GoalList\"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"kahhe"},"content":"\"goalList: GoalList\" -\u003e \": PrintManager\": printRemovedGoal(goal.getDescription(): String)","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"kahhe"},"content":"activate \": PrintManager\"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"kahhe"},"content":"deactivate \": PrintManager\"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"kahhe"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"kahhe":30}},{"path":"docs/Diagrams/DeleteHabitCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"!include Style.puml","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"header DeleteHabitCommand Feature","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"-\u003e \": DeleteGoalCommand\": runCommand(goalList: GoalList,\\n printManager: PrintManager,\\n storage: Storage)","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"activate \": DeleteGoalCommand\"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"\": DeleteGoalCommand\" -\u003e \"goalList: GoalList\": deleteHabitFromGoal(goalIndex: int,\\n printManager: PrintManager)","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"activate \"goalList: GoalList\"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"create \"goal: Goal\"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"kahhe"},"content":"\"goalList: GoalList\" -\u003e \"goal: Goal\": getGoal(goalIndex: int)","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"kahhe"},"content":"activate \"goal: Goal\"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"kahhe"},"content":"\"goalList: GoalList\" \u003c-- \"goal: Goal\"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"kahhe"},"content":"create \"habits: ArrayList\u003chabit\u003e\"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"kahhe"},"content":"\"goalList: GoalList\" -\u003e \"habits: ArrayList\u003chabit\u003e\"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"kahhe"},"content":"activate \"habits: ArrayList\u003chabit\u003e\"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"kahhe"},"content":"\"goal: Goal\" \u003c- \"habits: ArrayList\u003chabit\u003e\": getHabitList()","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"kahhe"},"content":"\"goalList: GoalList\" \u003c-- \"goal: Goal\"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"kahhe"},"content":"create \"habit: Habit\"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"kahhe"},"content":"\"goalList: GoalList\" -\u003e \"habit: Habit\"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"kahhe"},"content":"activate \"habit: Habit\"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"kahhe"},"content":"\"habits: ArrayList\u003chabit\u003e\" \u003c- \"habit: Habit\": get(habitIndex: int)","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"kahhe"},"content":"\"habits: ArrayList\u003chabit\u003e\" --\u003e \"habit: Habit\"","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"kahhe"},"content":"\"goalList: GoalList\" -\u003e \"goal: Goal\": removeHabit(habitIndex: int)","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"kahhe"},"content":"\"goal: Goal\" -\u003e \"goal: Goal\": remove(habitIndex: int)","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"kahhe"},"content":"activate \"goal: Goal\"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"kahhe"},"content":"deactivate \"goal: Goal\"","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"kahhe"},"content":"\"goalList: GoalList\" -\u003e \": PrintManager\": printRemovedHabit\\n(goal.getDescription(): String,\\n habit.getHabitName(): String)","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"kahhe"},"content":"activate \": PrintManager\"","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"kahhe"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"kahhe":39}},{"path":"docs/Diagrams/DoneCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"huien77"},"content":"!include Style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"-\u003e \":DoneHabitCommand\": runCommand(goalList: GoalList,\\nprintManager:PrintManager, storage: Storage)","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"activate \":DoneHabitCommand\"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"\":DoneHabitCommand\" -\u003e \"goalList:GoalList\": doneHabitFromGoal(goalIndex: int,\\nhabitIndex: int, printManager: PrintManager)","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"activate \"goalList:GoalList\"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"\"goalList:GoalList\" -\u003e \"goalList:GoalList\": getGoal(goalIndex: int)","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"activate \"goalList:GoalList\"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"\"goalList:GoalList\" --\u003e \"goalList:GoalList\": goal: Goal","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"deactivate \"goalList:GoalList\"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"\"goalList:GoalList\" -\u003e \"goal:Goal\": getHabitList()","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"activate \"goal:Goal\"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"\"goal:Goal\" --\u003e \"goalList:GoalList\": habits: ArrayList\u003cHabit\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"deactivate \"goal:Goal\"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"\"goalList:GoalList\" -\u003e \"habits:ArrayList\u003cHabit\u003e\": get(habitIndex:int)","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"activate \"habits:ArrayList\u003cHabit\u003e\"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"\"habits:ArrayList\u003cHabit\u003e\" --\u003e \"goalList:GoalList\": habit:Habit","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"deactivate \"habits:ArrayList\u003cHabit\u003e\"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"\"goalList:GoalList\" -\u003e \"goal:Goal\": doneHabit(habitIndex:int)","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"activate \"goal:Goal\"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"\"goal:Goal\" --\u003e \"goalList:GoalList\"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"deactivate \"goal:Goal\"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"\"goalList:GoalList\" -\u003e \"printManager:PrintManager\": printDoneHabit(goalDescription: String, habitName: String)","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"activate \"printManager:PrintManager\"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"\"printManager:PrintManager\" --\u003e \"goalList:GoalList\"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"deactivate \"printManager:PrintManager\"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"STAung07"},"content":"\"goalList:GoalList\" --\u003e \":DoneHabitCommand\"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"STAung07"},"content":"deactivate \"goalList:GoalList\"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"deactivate \":DoneHabitCommand\"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"STAung07"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"STAung07":35,"huien77":1}},{"path":"docs/Diagrams/ListGoalsCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"huien77"},"content":"!include Style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"-\u003e \":ListGoalsCommand\": runCommand(goalList:GoalList,\\nprintManager:printManager, storage:Storage)","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"activate \":ListGoalsCommand\"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"\":ListGoalsCommand\" -\u003e \"goalList:GoalList\":  listGoals(printManager:PrintManager)","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"activate \"goalList:GoalList\"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"alt#gold #lightblue goalList.size \u003d\u003d 0","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"    \"goalList:GoalList\" -\u003e \":HabitCommandException\": HabitCommandException(message:String)","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"    activate \":HabitCommandException\"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"    deactivate \":HabitCommandException\"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"else #lightgreen","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"    \"goalList:GoalList\" -\u003e \"printManager:PrintManager\": printGoalList(goalList:ArrayList\u003cGoal\u003e,  goalList.size:int)","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"    activate \"printManager:PrintManager\"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"    deactivate \"printManager:PrintManager\"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"end","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"deactivate \"goalList:GoalList\"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"deactivate \":ListGoalsCommand\"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"STAung07":21,"huien77":1}},{"path":"docs/Diagrams/ListHabitsCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"huien77"},"content":"!include Style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"-\u003e \":ListHabitsCommand\": runCommand(goalList: GoalList,\\nprintManager:PrintManager, storage:Storage)","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"activate \":ListHabitsCommand\"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"\":ListHabitsCommand\" -\u003e \"goalList:GoalList\" :listHabitsFromGoal(goatIndex:int,\\nprintManager:PrintManager)","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"activate \"goalList:GoalList\"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"\"goalList:GoalList\" -\u003e \"goalList:GoalList\" :getGoal(goalIndex:int)","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"activate \"goalList:GoalList\"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"\"goalList:GoalList\" --\u003e \"goalList:GoalList\" :goal:Goal","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"deactivate \"goalList:GoalList\"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"\"goalList:GoalList\" -\u003e \"goal:Goal\": getHabitList()","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"activate \"goal:Goal\"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"\"goal:Goal\" --\u003e \"goalList:GoalList\": habitList: ArrayList\u003cHabit\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"\"goalList:GoalList\" -\u003e \"goal:Goal\": numberOfHabits()","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"\"goal:Goal\" --\u003e \"goalList:GoalList\" :numOfHabits: int","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"deactivate \"goal:Goal\"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"alt#gold #lightblue numOfHabits \u003d 0","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"    \"goalList:GoalList\" -\u003e \":HabitCommandException\": HabitCommandException(message:String)","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"    activate \":HabitCommandException\"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"    deactivate \":HabitCommandException\"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"else #lightgreen","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"    \"goalList:GoalList\" -\u003e \"printManager:PrintManager\": printHabitList(goalDescription: String, habitList: ArrayList\u003cHabit\u003e, numOfHabits: int)","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"    activate \"printManager:PrintManager\"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"    deactivate \"printManager:PrintManager\"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"end","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"deactivate \"goalList:GoalList\"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"STAung07"},"content":"deactivate \":ListHabitsCommand\"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"STAung07":33,"huien77":1}},{"path":"docs/Diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"huien77"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"huien77"},"content":"!include Style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"package \"storage\" {","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"huien77"},"content":"class Storage","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"huien77"},"content":"class Import","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"huien77"},"content":"class ImportParser","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"huien77"},"content":"class Export","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"huien77"},"content":"Storage --\u003e Import","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"huien77"},"content":"Import --\u003e ImportParser","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"huien77"},"content":"Storage --\u003e Export","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"huien77"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"huien77"},"content":"class Habit","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"huien77"},"content":"ImportParser -\u003e Habit","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"huien77"},"content":"package \"goal\" {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"huien77"},"content":"class Goal","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"huien77"},"content":"class GoalList","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"huien77"},"content":"Goal \u003c-- ImportParser","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"huien77"},"content":"GoalList \u003c-- Import","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"huien77"},"content":"GoalList \u003c... Export","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"huien77"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"huien77"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"huien77":27}},{"path":"docs/Diagrams/Style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"huien77"},"content":"hide circle","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"huien77"},"content":"hide footbox","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"hide members","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"STAung07":1,"huien77":2}},{"path":"docs/Diagrams/SystemArchitecture.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"huien77"},"content":"!include Style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"Package \"HappyBit\"\u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"    Class UiMain","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"    Class UiStartUp","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"    Class Parser","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"    Class Storage","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"    Class Command","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"    Class GoalList","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"    Class State","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"    Class PrintManager","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"    Class Main #lightblue","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"Class \"Data\" as Data","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"Class \"User\" as User","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"User .down.\u003e UiMain","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"User .down.\u003e UiStartUp","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"Main -\u003e Storage","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"Storage -\u003e GoalList: Import Data","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"GoalList -\u003e Storage: Export Data","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"Main --\u003e State","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"State --\u003e UiMain","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"State --\u003e UiStartUp","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"Storage .left.\u003e Data","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"UiMain --\u003e Parser","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"Parser --\u003e Command","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"Command --\u003e GoalList","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"STAung07"},"content":"GoalList --\u003e PrintManager","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"STAung07"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"STAung07":35,"huien77":1}},{"path":"docs/Diagrams/UiDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"huien77"},"content":"!include Style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"box \"Ui\" #White","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"participant \":HappyBit\" as HappyBit","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"participant \":State\" as State","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"participant \":UiStartup\" as Start","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"participant \":UiMain\" as Main","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"end box","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"activate HappyBit","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"HappyBit -\u003e State : run()","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"activate State","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"State -\u003e Start : new UiStartUp()","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"activate Start","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"State \u003c- Start : :UiStartUp","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"deactivate Start","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"State -\u003e Main : new UiMain()","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"activate Main","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"State \u003c- Main : :UiMain","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"deactivate Main","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"HappyBit \u003c- State : void","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"deactivate State","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"huien77":1,"DJ-Tan":30}},{"path":"docs/README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"![Ha(ppy)Bit Logo](Display_Images/HappyBit_logo.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"# Howdy! This is Ha(ppy)Bit.","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"_Ha(ppy)Bit_ is a desktop app aimed to **empower students** to achieve their","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"**goals**—whether personal, academical, or health—amidst the hectic and stressful","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"**university life**, through cultivating good **habits**.","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"huien77"},"content":"Users can only run the app on a Command Line Interface (CLI).","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"Sounds like the app for you? Head over to our [User Guide](UserGuide.md) to get started!","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"-----------","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"You might be interested in:","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"kahhe"},"content":"* 💻 [User Guide](UserGuide.md): great starting point for new users. ","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"kahhe"},"content":"* 📖 [Developer Guide](DeveloperGuide.md): what makes Ha(ppy)Bit tick?","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"kahhe"},"content":"* 👩‍💻 👨‍💻 [About Us](AboutUs.md): find out about the developers behind Ha(ppy)Bit.","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"huien77":2,"-":2,"kahhe":12}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"_Ha(ppy)Bit_ is a desktop application aimed to **empower students** to achieve their","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"**goals**—whether personal, academical, or health—amidst the hectic and stressful","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"**university life**, through cultivating good **habits**.","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"The application operates on a [Command Line Interface (CLI)](https://en.wikipedia.org/wiki/Command-line_interface)","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"while still comprising features typically found in a","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"[Graphical User Interface (GUI)](https://en.wikipedia.org/wiki/Graphical_user_interface).","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"Students who type fast will find that _Ha(ppy)Bit_ performs habit tracking more efficiently than your","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"conventional GUI applications.","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"You can find out more about _Ha(ppy)Bit_\u0027s Developer Guide or ","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"its developers (😀 us!) at our [Main Page](README.md).","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kahhe"},"content":"------------","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"huien77"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"  * [Start-Up Interface](#start-up-interface)","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"  * [Main Interface](#main-interface)","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"kahhe"},"content":"* [Using this Guide](#using-this-guide)","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"huien77"},"content":"  * [Terminology](#terminology)","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"  * [Icons \u0026 Format](#icons--format)","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"kahhe"},"content":"* [Using _Ha(ppy)Bit_](#using-_happybit_)","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"kahhe"},"content":"  * [Instructions from _Ha(ppy)Bit_](#instructions-from-_happybit_)","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"kahhe"},"content":"  * [Command Format](#command-format)","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"huien77"},"content":"* [Features](#features)","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"huien77"},"content":"    * [Ask for Help: `help`](#ask-for-help-help)","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"huien77"},"content":"    * [Set a Goal: `set`](#set-a-goal-set)","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"kahhe"},"content":"    * [List all Goals: `list`](#list-all-goals-list)","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"kahhe"},"content":"    * [Update a Goal: `update`](#update-a-goal-update)","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"huien77"},"content":"    * [Remove a Goal: `remove`](#remove-a-goal-remove)","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"huien77"},"content":"    * [Add a Habit: `add`](#add-a-habit-add)","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"    * [Change a Habit Name: `change`](#change-a-habit-change)","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"huien77"},"content":"    * [Complete a Habit: `done`](#complete-a-habit-done)","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"huien77"},"content":"    * [Delete a Habit: `delete`](#delete-a-habit-delete)","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"huien77"},"content":"    * [View all Habit: `view`](#view-all-habits-view)","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"    * [Return to Start-Up: `return`](#return-to-start-up-return)","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"    * [Exit the Program: `exit`](#exit-the-program-exit)","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"huien77"},"content":"* [About Loading and Saving Data](#about-loading-and-saving-data)","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"huien77"},"content":"* [FAQ](#faq)","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"huien77"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"huien77"},"content":"* [Useful Links](#useful-links)","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":44,"author":{"gitId":"kahhe"},"content":"------------","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":48,"author":{"gitId":"kahhe"},"content":"1. Hype yourself up by dancing. Here begins your journey with _Ha(ppy)Bit_.","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"kahhe"},"content":"2. Ensure you have Java `11` installed in your computer. If you do not have it installed,","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"kahhe"},"content":"   download it [here](https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/downloads-list.html).","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"3. Download the latest `happybit.jar` [here](https://github.com/AY2122S1-CS2113T-F14-1/tp/releases/tag/v2.0).","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"kahhe"},"content":"4. Copy the file to the folder you want to use as the **home folder** for your _Ha(ppy)Bit_.","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"5. Open your terminal of choice inside the folder containing `happybit.jar` file.","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"6. Run the file by typing the command `java -jar happybit.jar`.","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"kahhe"},"content":"7. Upon loading the app you should see the following screen, ","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"kahhe"},"content":"indicating that you have successfully ran the app.","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"STAung07"},"content":"   ```","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"STAung07"},"content":"   \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"STAung07"},"content":"    _  _   __   ____  ____  _  _  ____  __  ____","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"STAung07"},"content":"   / )( \\ / _\\ (  _ \\(  _ \\( \\/ )(  _ \\(  )(_  _)","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"STAung07"},"content":"   ) __ (/    \\ ) __/ ) __/ )  /  ) _ ( )(   )(","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"STAung07"},"content":"   \\_)(_/\\_/\\_/(__)  (__)  (__/  (____/(__) (__)     tracking habits made fun...","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"STAung07"},"content":"   \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"STAung07"},"content":"   Howdy! Welcome to Ha(ppy)Bit!","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"STAung07"},"content":"   Select from one of the following menu items:","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"STAung07"},"content":"       [1] About HappyBit","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"STAung07"},"content":"       [2] User Guide","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"STAung07"},"content":"       [3] Developer Guide","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"STAung07"},"content":"       [4] Demo Video","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"STAung07"},"content":"       [5] Start Application","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"STAung07"},"content":"    ","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"STAung07"},"content":"   Option:","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"STAung07"},"content":"   ```","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"kahhe"},"content":"   Any keyboard input will appear after `Option: `. Here is where interaction between you and _Ha(ppy)Bit_ takes place.","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"### Start-Up Interface","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"kahhe"},"content":"In the current loading screen, you will be able to navigate to five other screens.","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"kahhe"},"content":"Choose an option from one to five by typing 1, 2, 3, 4, or 5 and hitting \"enter\" to load the desired screen.","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"kahhe"},"content":"Below are the outcomes.","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"#### Option 1: `About Ha(ppy)Bit`","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"Learn more about our vision for _Ha(ppy)Bit_ and the team behind it.","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"STAung07"},"content":"    Option: 1","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"STAung07"},"content":"    Ha(ppy)Bit is a desktop app aimed to improve both the physical and mental lifestyle of students,","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"STAung07"},"content":"    through the setting and tracking of goals to cultivate good habits. The app operates on a Command","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"STAung07"},"content":"    Line Interface (CLI) while still comprising features typically found in a Graphical User Interface","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"STAung07"},"content":"    (GUI). Students who type fast will find that Ha(ppy)Bit performs habit tracking more efficiently","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"STAung07"},"content":"    than your conventional GUI apps.","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"STAung07"},"content":"    ","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"STAung07"},"content":"    Meet The Team","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"STAung07"},"content":"    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"STAung07"},"content":"    ||  Tan Kah Heng       ||  Creative Director, Visionary        ||","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"STAung07"},"content":"    ||  Swaminathan Varun  ||  Business Manager, Technical Advisor ||","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"STAung07"},"content":"    ||  Tan Jun Heng Daren ||  Frontend Developer                  ||","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"STAung07"},"content":"    ||  Tan Hui En         ||  Backend Developer                   ||","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"STAung07"},"content":"    ||  Swann Tet Aung     ||  Backend Developer                   ||","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"STAung07"},"content":"    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"STAung07"},"content":"    ","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"STAung07"},"content":"    Current Version: v2.0 (updated 28-Oct-2021)","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"STAung07"},"content":"    ","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"STAung07"},"content":"    ","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"STAung07"},"content":"    Press enter to return to main menu...","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"DJ-Tan"},"content":"#### Option 2: `User Guide`","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"DJ-Tan"},"content":"Learn what you can accomplish with this app.\\","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"DJ-Tan"},"content":"This option opens the User Guide in your web browser.","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"STAung07"},"content":"    Option: 2","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"STAung07"},"content":"    Opening in a web browser...","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"STAung07"},"content":"    ","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"STAung07"},"content":"    Press enter to return to main menu...","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"DJ-Tan"},"content":"#### Option 3: `Developer Guide`","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"DJ-Tan"},"content":"Learn about the app from the perspective of a software engineer.\\","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"DJ-Tan"},"content":"This option opens the Developer Guide in your web browser.","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"STAung07"},"content":"    Option: 3","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"STAung07"},"content":"    Opening in a web browser...","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"STAung07"},"content":"    ","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"STAung07"},"content":"    Press enter to return to main menu...","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"DJ-Tan"},"content":"#### Option 4: `Demo Video`","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"DJ-Tan"},"content":"Don\u0027t like reading long wordy guides? A video may be just the thing for you!\\","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"DJ-Tan"},"content":"This option opens the Demo Video in your web browser.\\","lastModifiedDate":"2021-10-28"},{"lineNumber":131,"author":{"gitId":"DJ-Tan"},"content":"(The video is currently unavailable and will be up in v2.1)","lastModifiedDate":"2021-10-28"},{"lineNumber":132,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"DJ-Tan"},"content":"    Option: 4","lastModifiedDate":"2021-10-28"},{"lineNumber":134,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"DJ-Tan"},"content":"    Opening in a web browser...","lastModifiedDate":"2021-10-28"},{"lineNumber":136,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"DJ-Tan"},"content":"    Press enter to return to main menu...","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"DJ-Tan"},"content":"#### Option 5: `Start Application`","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"DJ-Tan"},"content":"If you\u0027re a new user, look forward to beginning your _Ha(ppy)Bit_ journey here.\\","lastModifiedDate":"2021-10-28"},{"lineNumber":141,"author":{"gitId":"DJ-Tan"},"content":"If you\u0027re a returning user, fret not! Everything you gained from your journey has been saved and will be loaded.\\","lastModifiedDate":"2021-10-28"},{"lineNumber":142,"author":{"gitId":"DJ-Tan"},"content":"This option starts up the main interface of the application.","lastModifiedDate":"2021-10-28"},{"lineNumber":143,"author":{"gitId":"DJ-Tan"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"DJ-Tan"},"content":"    Option: 5","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"huien77"},"content":"    ","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"STAung07"},"content":"    Starting application...","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"STAung07"},"content":"    Type \u0027return\u0027 to return to main menu","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"DJ-Tan"},"content":"### Main Interface","lastModifiedDate":"2021-10-28"},{"lineNumber":150,"author":{"gitId":"DJ-Tan"},"content":"Upon formally starting the application, you should see the following screen. ","lastModifiedDate":"2021-10-28"},{"lineNumber":151,"author":{"gitId":"DJ-Tan"},"content":"(See [Start Application](#option-5-start-application) if you are unsure how to get here)","lastModifiedDate":"2021-10-28"},{"lineNumber":152,"author":{"gitId":"DJ-Tan"},"content":"   ","lastModifiedDate":"2021-10-28"},{"lineNumber":153,"author":{"gitId":"STAung07"},"content":"    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"STAung07"},"content":"     _  _   __   ____  ____  _  _  ____  __  ____","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"STAung07"},"content":"    / )( \\ / _\\ (  _ \\(  _ \\( \\/ )(  _ \\(  )(_  _)","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"STAung07"},"content":"    ) __ (/    \\ ) __/ ) __/ )  /  ) _ ( )(   )(","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"STAung07"},"content":"    \\_)(_/\\_/\\_/(__)  (__)  (__/  (____/(__) (__)     tracking habits made fun...","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"STAung07"},"content":"    \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"STAung07"},"content":"    ","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"STAung07"},"content":"    Command:","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"DJ-Tan"},"content":"    ","lastModifiedDate":"2021-10-28"},{"lineNumber":162,"author":{"gitId":"kahhe"},"content":"Any keyboard input will appear after `Command: `. Here is where interaction between you and _Ha(ppy)Bit_ takes place.","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"kahhe"},"content":"## Using this Guide","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"DJ-Tan"},"content":"We understand there may be a lot to take in from this user guide. Here are some things to take note","lastModifiedDate":"2021-10-28"},{"lineNumber":166,"author":{"gitId":"DJ-Tan"},"content":"which may make the guide more friendly and helpful.","lastModifiedDate":"2021-10-28"},{"lineNumber":167,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"kahhe"},"content":"### Terminology","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":170,"author":{"gitId":"huien77"},"content":"Name     | Description                                                      | Example","lastModifiedDate":"2021-10-15"},{"lineNumber":171,"author":{"gitId":"kahhe"},"content":"-----    | ---------------------------------------------------------------- | -------------------","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"kahhe"},"content":"Goal     | A long term achievement you wish to accomplish.                  |`Lose 5kg by Dec`","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"kahhe"},"content":"Habit    | Checkpoints; small, actionable tasks to be done to achieve goal. |`Run 5km`","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"kahhe"},"content":"Interval | The frequency (in days) which you want the habit to recur.       |`Run 5km every 7 days` ","lastModifiedDate":"2021-11-04"},{"lineNumber":175,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"kahhe"},"content":"**Goals and habits** \u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":177,"author":{"gitId":"kahhe"},"content":"Here we distinguish between goals and habits. Although they are commonly used words, the way we","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"kahhe"},"content":"design _Ha(ppy)Bit_ is tightly integral to the way we define them above. We would also like you","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"kahhe"},"content":"to know that the purpose of `habits` is to break down daunting, colossal `goals` into easy, bite-sized","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"DJ-Tan"},"content":"`habits`; tasks that you can complete within a day or as defined by your `interval`.","lastModifiedDate":"2021-10-28"},{"lineNumber":181,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"kahhe"},"content":"**Intervals** \u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":183,"author":{"gitId":"kahhe"},"content":"An `interval` is user-defined. It is for `habits` that will occur periodically, saving you the hassle","lastModifiedDate":"2021-11-04"},{"lineNumber":184,"author":{"gitId":"kahhe"},"content":"of keying in individual `habits` every time it occurs. It is also the window period for you to complete a `habit`.","lastModifiedDate":"2021-11-04"},{"lineNumber":185,"author":{"gitId":"kahhe"},"content":"Here are three things to note:","lastModifiedDate":"2021-11-04"},{"lineNumber":186,"author":{"gitId":"kahhe"},"content":"1. `interval` is not allowed to extend longer than your `goal` time frame. \u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":187,"author":{"gitId":"kahhe"},"content":"To explain with an example, a goal that starts and ends within a month is _not_ to have a`habit` with an `interval` ","lastModifiedDate":"2021-11-04"},{"lineNumber":188,"author":{"gitId":"kahhe"},"content":"longer than 30 days, otherwise it should\u0027ve been a one-off `habit`! ","lastModifiedDate":"2021-11-04"},{"lineNumber":189,"author":{"gitId":"kahhe"},"content":"2. One-off `habits` (hey, an oxymoron!) are habits that do not repeat. \u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":190,"author":{"gitId":"kahhe"},"content":"This is achieved by setting the `interval` as `0`, rather than any positive integer.","lastModifiedDate":"2021-11-04"},{"lineNumber":191,"author":{"gitId":"kahhe"},"content":"3. _Ha(ppy)Bit_ does not allow for an `interval` to be shorter than 1 day. \u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":192,"author":{"gitId":"kahhe"},"content":"This if for those who are planning to do a habit more than once a day. ","lastModifiedDate":"2021-11-04"},{"lineNumber":193,"author":{"gitId":"kahhe"},"content":"You may consider having multiple recurring habits instead.","lastModifiedDate":"2021-11-04"},{"lineNumber":194,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":195,"author":{"gitId":"kahhe"},"content":"### Icons \u0026 Format","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"DJ-Tan"},"content":"Unfamiliar symbols may confuse. Here is a comprehensive collection of all emojis and syntax we employ.  ","lastModifiedDate":"2021-10-28"},{"lineNumber":197,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"DJ-Tan"},"content":"\u003e 📃 **Notes**: important information you should take note off (especially if you encounter input errors)","lastModifiedDate":"2021-10-28"},{"lineNumber":199,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"DJ-Tan"},"content":"\u003e ⚠ **Warning**: avoid doing the things mentioned here at all costs (unless you\u0027re feeling lucky)","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"kahhe"},"content":" ","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"DJ-Tan"},"content":"\u003e 💡 **Pro-Tip!** additional information that may make your tracking journey easier","lastModifiedDate":"2021-10-28"},{"lineNumber":203,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"kahhe"},"content":"\u003e 😀 \u0026#8594; Used to show the developers\u0027 exuberance!!!","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"kahhe"},"content":"\u003e 👍 \u0026#8594; Used to show the developers\u0027 love and support for you.","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":208,"author":{"gitId":"kahhe"},"content":"## Using _Ha(ppy)Bit_","lastModifiedDate":"2021-11-04"},{"lineNumber":209,"author":{"gitId":"kahhe"},"content":"_Ha(ppy)Bit_ comes with some quirks that might need some time getting used to. To get you up to speed and warmed","lastModifiedDate":"2021-11-04"},{"lineNumber":210,"author":{"gitId":"kahhe"},"content":"up with _Ha(ppy)Bit_, here are instructions and command formats to follow. 👍","lastModifiedDate":"2021-11-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":212,"author":{"gitId":"kahhe"},"content":"### Instructions from _Ha(ppy)Bit_","lastModifiedDate":"2021-11-04"},{"lineNumber":213,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":214,"author":{"gitId":"kahhe"},"content":"You may have noticed the instructions `Press enter to return to main menu...` and `Type \u0027return\u0027 to return to main menu`","lastModifiedDate":"2021-11-04"},{"lineNumber":215,"author":{"gitId":"kahhe"},"content":"at the bottom of some responses from _Ha(ppy)Bit_. This is because _Ha(ppy)Bit_ clears and refreshes the page after ","lastModifiedDate":"2021-11-04"},{"lineNumber":216,"author":{"gitId":"kahhe"},"content":"every command. Previously typed commands will also be cleared, so press the \"up\" key on your keyboard to navigate ","lastModifiedDate":"2021-11-04"},{"lineNumber":217,"author":{"gitId":"kahhe"},"content":"through recently typed commands. ","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":219,"author":{"gitId":"kahhe"},"content":"Do follow the instructions before typing anything, lest _Ha(ppy)Bit_ does not","lastModifiedDate":"2021-11-04"},{"lineNumber":220,"author":{"gitId":"kahhe"},"content":"register your input. On the topic of inputs...","lastModifiedDate":"2021-11-04"},{"lineNumber":221,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":222,"author":{"gitId":"kahhe"},"content":"### Command Format","lastModifiedDate":"2021-11-04"},{"lineNumber":223,"author":{"gitId":"kahhe"},"content":"_Ha(ppy)Bit_ is very particular about your commands. You begin off with a \"command word\" to tell _Ha(ppy)Bit_ the exact ","lastModifiedDate":"2021-11-04"},{"lineNumber":224,"author":{"gitId":"kahhe"},"content":"action to carry out (See [Command Summary](#command-summary) for all actions). The actions are then followed up with","lastModifiedDate":"2021-11-04"},{"lineNumber":225,"author":{"gitId":"kahhe"},"content":"\"parameters\", which are information you wish to pass to _Ha(ppy)Bit_ to carry out the actions with it. To indicate the ","lastModifiedDate":"2021-11-04"},{"lineNumber":226,"author":{"gitId":"kahhe"},"content":"type of parameters, they are prefixed with \"flags\". The flags help _Ha(ppy)Bit_ identify and distinguish the type of","lastModifiedDate":"2021-11-04"},{"lineNumber":227,"author":{"gitId":"kahhe"},"content":"parameters.","lastModifiedDate":"2021-11-04"},{"lineNumber":228,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":229,"author":{"gitId":"kahhe"},"content":"A command could look like this: `add n/Run 2.4km g/1 i/7`. Where, \u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":230,"author":{"gitId":"kahhe"},"content":"`add` is the command word, \u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":231,"author":{"gitId":"kahhe"},"content":"`Run 2.4km`, `1`, and `7` are parameters, \u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":232,"author":{"gitId":"kahhe"},"content":"and `n/`, `g/`, and `i/` are flags.","lastModifiedDate":"2021-11-04"},{"lineNumber":233,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":234,"author":{"gitId":"kahhe"},"content":"Here are guidelines and tips for the command format:","lastModifiedDate":"2021-11-04"},{"lineNumber":235,"author":{"gitId":"kahhe"},"content":"* **Commands** are only accepted when you see `Command: ` on the screen (See [Main Interface](#main-interface)). ","lastModifiedDate":"2021-11-04"},{"lineNumber":236,"author":{"gitId":"kahhe"},"content":"  Your inputs appearing after `Command: ` indicates you\u0027re doing it right.","lastModifiedDate":"2021-11-04"},{"lineNumber":237,"author":{"gitId":"kahhe"},"content":"* **Commands** may require one or more flags. You may choose to use the flags in any order but ensure that all flags ","lastModifiedDate":"2021-11-04"},{"lineNumber":238,"author":{"gitId":"kahhe"},"content":"  for that command are present.\\","lastModifiedDate":"2021-11-04"},{"lineNumber":239,"author":{"gitId":"DJ-Tan"},"content":"  (e.g. `add` requires the `n/`, `g/` and `i/` flag, and possible variations include `add n/habit 1 g/1 i/1` and","lastModifiedDate":"2021-10-28"},{"lineNumber":240,"author":{"gitId":"DJ-Tan"},"content":"  `add i/1 n/habit 1 g/1`)","lastModifiedDate":"2021-10-28"},{"lineNumber":241,"author":{"gitId":"kahhe"},"content":"* **Parameters** `\u003cgoal_index\u003e` and `\u003chabit_index\u003e`can be checked with the commands `list` and `view` respectively.","lastModifiedDate":"2021-11-04"},{"lineNumber":242,"author":{"gitId":"kahhe"},"content":"* **Parameters** enclosed in angle brackets `\u003c\u003e` are meant to be replaced.\\","lastModifiedDate":"2021-11-04"},{"lineNumber":243,"author":{"gitId":"DJ-Tan"},"content":"  (e.g. `view g/\u003cgoal_index\u003e` could be `view g/1`)","lastModifiedDate":"2021-10-28"},{"lineNumber":244,"author":{"gitId":"kahhe"},"content":"* **Parameters** enclosed within curly brackets, `{}` are optional ","lastModifiedDate":"2021-11-04"},{"lineNumber":245,"author":{"gitId":"kahhe"},"content":"* **Parameters** enclosed withing square brackets, `[]` suggest that at least one of the parameters are required","lastModifiedDate":"2021-11-04"},{"lineNumber":246,"author":{"gitId":"kahhe"},"content":"* **Flags** should have a whitespace before them \u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":247,"author":{"gitId":"kahhe"},"content":"  (e.g. `view g/1` instead of `viewg/1`)","lastModifiedDate":"2021-11-04"},{"lineNumber":248,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":249,"author":{"gitId":"kahhe"},"content":"## Features","lastModifiedDate":"2021-11-04"},{"lineNumber":250,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":251,"author":{"gitId":"kahhe"},"content":"Below are the commands supported by the application.","lastModifiedDate":"2021-11-04"},{"lineNumber":252,"author":{"gitId":"kahhe"},"content":"Each section describes the function of each command and its format. \u003cbr\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":253,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":254,"author":{"gitId":"huien77"},"content":"### Ask for Help: `help`","lastModifiedDate":"2021-10-14"},{"lineNumber":255,"author":{"gitId":"kahhe"},"content":"What did you say? You\u0027re not sure what the commands are? Relax, that\u0027s why the `help` command exists.\\","lastModifiedDate":"2021-11-04"},{"lineNumber":256,"author":{"gitId":"DJ-Tan"},"content":"This command displays a list of all possible commands.","lastModifiedDate":"2021-10-28"},{"lineNumber":257,"author":{"gitId":"kahhe"},"content":"If an invalid command is typed, this command will be invoked by default.","lastModifiedDate":"2021-11-04"},{"lineNumber":258,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":259,"author":{"gitId":"DJ-Tan"},"content":"**Format:** `help`","lastModifiedDate":"2021-10-28"},{"lineNumber":260,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":261,"author":{"gitId":"DJ-Tan"},"content":"**Output:**","lastModifiedDate":"2021-10-28"},{"lineNumber":262,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":263,"author":{"gitId":"DJ-Tan"},"content":"Here are the list of commands:","lastModifiedDate":"2021-10-28"},{"lineNumber":264,"author":{"gitId":"DJ-Tan"},"content":"--------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":265,"author":{"gitId":"kahhe"},"content":"| Action                            | Format                                                                 | ","lastModifiedDate":"2021-11-04"},{"lineNumber":266,"author":{"gitId":"DJ-Tan"},"content":"--------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":267,"author":{"gitId":"DJ-Tan"},"content":"| open command list                 | help                                                                   | ","lastModifiedDate":"2021-10-28"},{"lineNumber":268,"author":{"gitId":"DJ-Tan"},"content":"--------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":269,"author":{"gitId":"DJ-Tan"},"content":"| set a goal                        | set n/\u003cgoal_name\u003e { t/\u003cgoal_type\u003e s/\u003cstart_date\u003e } e/\u003cend_date\u003e        | ","lastModifiedDate":"2021-10-28"},{"lineNumber":270,"author":{"gitId":"DJ-Tan"},"content":"--------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":271,"author":{"gitId":"DJ-Tan"},"content":"| add a habit                       | add g/\u003cgoal_index\u003e n/\u003chabit_name\u003e i/\u003cinterval\u003e                         | ","lastModifiedDate":"2021-10-28"},{"lineNumber":272,"author":{"gitId":"DJ-Tan"},"content":"--------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":273,"author":{"gitId":"DJ-Tan"},"content":"| update a goal name/type/end date  | update g/\u003cgoal_index\u003e { n/\u003cgoal_name\u003e t/\u003cgoal_type\u003e e/\u003cend_date\u003e }     | ","lastModifiedDate":"2021-10-28"},{"lineNumber":274,"author":{"gitId":"DJ-Tan"},"content":"--------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":275,"author":{"gitId":"DJ-Tan"},"content":"| change a habit name/interval      | change g/\u003cgoal_index\u003e h/\u003chabit_index\u003e { n/\u003chabit_name\u003e i/\u003cinterval\u003e }  | ","lastModifiedDate":"2021-10-28"},{"lineNumber":276,"author":{"gitId":"DJ-Tan"},"content":"--------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":277,"author":{"gitId":"DJ-Tan"},"content":"| list all goals                    | list                                                                   | ","lastModifiedDate":"2021-10-28"},{"lineNumber":278,"author":{"gitId":"DJ-Tan"},"content":"--------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":279,"author":{"gitId":"DJ-Tan"},"content":"| view all habits of a goal         | view g/\u003cgoal_index\u003e                                                    | ","lastModifiedDate":"2021-10-28"},{"lineNumber":280,"author":{"gitId":"DJ-Tan"},"content":"--------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":281,"author":{"gitId":"DJ-Tan"},"content":"| remove a goal                     | remove g/\u003cgoal_index\u003e                                                  | ","lastModifiedDate":"2021-10-28"},{"lineNumber":282,"author":{"gitId":"DJ-Tan"},"content":"--------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":283,"author":{"gitId":"DJ-Tan"},"content":"| delete a habit                    | delete g/\u003cgoal_index\u003e h/\u003chabit_index\u003e                                  | ","lastModifiedDate":"2021-10-28"},{"lineNumber":284,"author":{"gitId":"DJ-Tan"},"content":"--------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":285,"author":{"gitId":"DJ-Tan"},"content":"| mark a habit as done              | done g/\u003cgoal_index\u003e h/\u003chabit_index\u003e                                    | ","lastModifiedDate":"2021-10-28"},{"lineNumber":286,"author":{"gitId":"DJ-Tan"},"content":"--------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":287,"author":{"gitId":"DJ-Tan"},"content":"| return to start screen            | return                                                                 | ","lastModifiedDate":"2021-10-28"},{"lineNumber":288,"author":{"gitId":"DJ-Tan"},"content":"--------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":289,"author":{"gitId":"DJ-Tan"},"content":"| exit the application              | exit                                                                   | ","lastModifiedDate":"2021-10-28"},{"lineNumber":290,"author":{"gitId":"DJ-Tan"},"content":"--------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":291,"author":{"gitId":"DJ-Tan"},"content":"* Replace \u003c\u003e with relevant terms (Exp: \u003cgoal_name\u003e --\u003e goal 1)","lastModifiedDate":"2021-10-28"},{"lineNumber":292,"author":{"gitId":"DJ-Tan"},"content":"* Items enclosed within { } are optional","lastModifiedDate":"2021-10-28"},{"lineNumber":293,"author":{"gitId":"DJ-Tan"},"content":"* Use \u0027list\u0027 and \u0027view\u0027 to check the goal and habit indexes respectively","lastModifiedDate":"2021-10-28"},{"lineNumber":294,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":295,"author":{"gitId":"STAung07"},"content":"Press enter to return to command mode...","lastModifiedDate":"2021-10-24"},{"lineNumber":296,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":297,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":298,"author":{"gitId":"huien77"},"content":"### Set a Goal: `set`","lastModifiedDate":"2021-10-14"},{"lineNumber":299,"author":{"gitId":"STAung07"},"content":"Sets a new goal for a long term achievement you wish to accomplish. Goals must have an end date while the goal type and","lastModifiedDate":"2021-10-24"},{"lineNumber":300,"author":{"gitId":"kahhe"},"content":"start dates are optional (well, we wouldn\u0027t you to be procrastinating on your goals right?)","lastModifiedDate":"2021-10-26"},{"lineNumber":301,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":302,"author":{"gitId":"DJ-Tan"},"content":"**Format:** `set n/\u003cgoal_name\u003e { t/\u003cgoal_type\u003e s/\u003cstart_date\u003e } e/\u003cend_date\u003e`","lastModifiedDate":"2021-10-28"},{"lineNumber":303,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":304,"author":{"gitId":"DJ-Tan"},"content":"* Goal name can be any name of your choosing (make it meaningful otherwise you won\u0027t know what you\u0027re tracking).","lastModifiedDate":"2021-10-28"},{"lineNumber":305,"author":{"gitId":"DJ-Tan"},"content":"* Dates must be in `DDMMYYYY` format. For example, 01 January 2021 must be written as `01012020`.","lastModifiedDate":"2021-10-28"},{"lineNumber":306,"author":{"gitId":"DJ-Tan"},"content":"* Goal type is an optional parameter and can take one of the following arguments","lastModifiedDate":"2021-10-28"},{"lineNumber":307,"author":{"gitId":"DJ-Tan"},"content":"  * `sl` \u0026#8594; Sleep","lastModifiedDate":"2021-10-28"},{"lineNumber":308,"author":{"gitId":"DJ-Tan"},"content":"  * `fd` \u0026#8594; Food","lastModifiedDate":"2021-10-28"},{"lineNumber":309,"author":{"gitId":"DJ-Tan"},"content":"  * `ex` \u0026#8594; Exercise","lastModifiedDate":"2021-10-28"},{"lineNumber":310,"author":{"gitId":"DJ-Tan"},"content":"  * `sd` \u0026#8594; Study","lastModifiedDate":"2021-10-28"},{"lineNumber":311,"author":{"gitId":"DJ-Tan"},"content":"  * `df` \u0026#8594; Default (This will be the goal type if the parameter is omitted)","lastModifiedDate":"2021-10-28"},{"lineNumber":312,"author":{"gitId":"DJ-Tan"},"content":"* Start date is an optional parameter. Omitting it will set the start date as today.","lastModifiedDate":"2021-10-28"},{"lineNumber":313,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":314,"author":{"gitId":"kahhe"},"content":"**Example:**","lastModifiedDate":"2021-11-04"},{"lineNumber":315,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":316,"author":{"gitId":"DJ-Tan"},"content":"Command 1: `set n/Reduce spending s/29102021 e/31122021`\\","lastModifiedDate":"2021-10-28"},{"lineNumber":317,"author":{"gitId":"DJ-Tan"},"content":"Command 2: `set n/Exercise more t/ex e/01012022`\\","lastModifiedDate":"2021-10-28"},{"lineNumber":318,"author":{"gitId":"DJ-Tan"},"content":"Command 3: `set t/fd e/31122022 n/Become a vegetarian`","lastModifiedDate":"2021-10-28"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":320,"author":{"gitId":"DJ-Tan"},"content":"Output 1: `The goal \u0027[DF] Reduce spending\u0027 has been added.`\\","lastModifiedDate":"2021-10-28"},{"lineNumber":321,"author":{"gitId":"DJ-Tan"},"content":"Output 2: `The goal \u0027[EX] Exercise more\u0027 has been added.`\\","lastModifiedDate":"2021-10-28"},{"lineNumber":322,"author":{"gitId":"DJ-Tan"},"content":"Output 3: `The goal \u0027[FD] Become a vegetarian\u0027 has been added.`","lastModifiedDate":"2021-10-28"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":324,"author":{"gitId":"DJ-Tan"},"content":"\u003e 📃 If more than 8 numbers are used for the date, only the 1st 8 numbers will be treated as the date.","lastModifiedDate":"2021-10-28"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":326,"author":{"gitId":"kahhe"},"content":"### List all Goals: `list`","lastModifiedDate":"2021-10-26"},{"lineNumber":327,"author":{"gitId":"DJ-Tan"},"content":"Can\u0027t remember what goals you have? Use this command to list all goals that you have set. ","lastModifiedDate":"2021-10-28"},{"lineNumber":328,"author":{"gitId":"DJ-Tan"},"content":"In addition, you get to view some useful statistics.","lastModifiedDate":"2021-10-28"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":330,"author":{"gitId":"DJ-Tan"},"content":"**Format:** `list`","lastModifiedDate":"2021-10-28"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":332,"author":{"gitId":"DJ-Tan"},"content":"**Example:**","lastModifiedDate":"2021-10-28"},{"lineNumber":333,"author":{"gitId":"kahhe"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":334,"author":{"gitId":"DJ-Tan"},"content":"Command: list","lastModifiedDate":"2021-10-28"},{"lineNumber":335,"author":{"gitId":"kahhe"},"content":"```","lastModifiedDate":"2021-10-26"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":337,"author":{"gitId":"DJ-Tan"},"content":"**Output:**","lastModifiedDate":"2021-10-28"},{"lineNumber":338,"author":{"gitId":"kahhe"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":339,"author":{"gitId":"DJ-Tan"},"content":"3 goal(s) currently being tracked:","lastModifiedDate":"2021-10-28"},{"lineNumber":340,"author":{"gitId":"DJ-Tan"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":341,"author":{"gitId":"DJ-Tan"},"content":"| Index   | Name                 | Type      | Start Date   | End Date     | Habit Count   | Completion Rate   |","lastModifiedDate":"2021-10-28"},{"lineNumber":342,"author":{"gitId":"DJ-Tan"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":343,"author":{"gitId":"DJ-Tan"},"content":"| 1       | Reduce spending      | Default   | 29-Oct-2021  | 31-Dec-2021  | 0             | Not Applicable    |","lastModifiedDate":"2021-10-28"},{"lineNumber":344,"author":{"gitId":"DJ-Tan"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":345,"author":{"gitId":"DJ-Tan"},"content":"| 2       | Exercise more        | Exercise  | 28-Oct-2021  | 01-Jan-2022  | 0             | Not Applicable    |","lastModifiedDate":"2021-10-28"},{"lineNumber":346,"author":{"gitId":"DJ-Tan"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":347,"author":{"gitId":"DJ-Tan"},"content":"| 3       | Become a vegetarian  | Food      | 28-Oct-2021  | 31-Dec-2022  | 0             | Not Applicable    |","lastModifiedDate":"2021-10-28"},{"lineNumber":348,"author":{"gitId":"DJ-Tan"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":349,"author":{"gitId":"kahhe"},"content":"```","lastModifiedDate":"2021-10-20"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":351,"author":{"gitId":"DJ-Tan"},"content":"\u003e 📃 Goal index may change if a goal is deleted. e.g. deleting the goal `Exercise more` will cause the index of `Become","lastModifiedDate":"2021-10-28"},{"lineNumber":352,"author":{"gitId":"DJ-Tan"},"content":"\u003e a vegetarian` to change from 3 to 2.","lastModifiedDate":"2021-10-28"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":354,"author":{"gitId":"DJ-Tan"},"content":"### Update a Goal: `Update`","lastModifiedDate":"2021-10-28"},{"lineNumber":355,"author":{"gitId":"kahhe"},"content":"Updates a parameter of a goal specified by its index.\\","lastModifiedDate":"2021-11-04"},{"lineNumber":356,"author":{"gitId":"DJ-Tan"},"content":"(To err is human. That\u0027s why we have the `update` feature; designed to be more forgiving, ","lastModifiedDate":"2021-10-28"},{"lineNumber":357,"author":{"gitId":"DJ-Tan"},"content":"when we have the occasional oopsies. 👍 )","lastModifiedDate":"2021-10-28"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":359,"author":{"gitId":"DJ-Tan"},"content":"**Format:** `update g/\u003cgoal_index\u003e { n/\u003cgoal_name\u003e t/\u003cgoal_type\u003e e/\u003cend_date\u003e }`","lastModifiedDate":"2021-10-28"},{"lineNumber":360,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":361,"author":{"gitId":"DJ-Tan"},"content":"**Example:**\\","lastModifiedDate":"2021-10-28"},{"lineNumber":362,"author":{"gitId":"DJ-Tan"},"content":"Command 1: `update g/1 n/Read more`\\","lastModifiedDate":"2021-10-28"},{"lineNumber":363,"author":{"gitId":"DJ-Tan"},"content":"Command 2: `update g/2 e/31122021`\\","lastModifiedDate":"2021-10-28"},{"lineNumber":364,"author":{"gitId":"DJ-Tan"},"content":"Command 3: `update t/sd g/1`","lastModifiedDate":"2021-10-28"},{"lineNumber":365,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":366,"author":{"gitId":"DJ-Tan"},"content":"Output 1: `The goal name \u0027Sleep more\u0027 has been updated to \u0027Read more\u0027.`\\","lastModifiedDate":"2021-10-28"},{"lineNumber":367,"author":{"gitId":"DJ-Tan"},"content":"Output 2: `The goal end date of goal \u0027Exercise more\u0027 has been changed from \u002701-Jan-2022\u0027 to \u002730-Nov-2021\u0027.`\\","lastModifiedDate":"2021-10-28"},{"lineNumber":368,"author":{"gitId":"DJ-Tan"},"content":"Output 3: `The goal type \u0027Default\u0027 has been updated to \u0027Study\u0027.`","lastModifiedDate":"2021-10-28"},{"lineNumber":369,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":370,"author":{"gitId":"DJ-Tan"},"content":"\u003e 📃 Only one parameter can be updated at a time (to be changed to multiple parameters in v2.1)","lastModifiedDate":"2021-10-28"},{"lineNumber":371,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":372,"author":{"gitId":"huien77"},"content":"### Remove a Goal: `remove`","lastModifiedDate":"2021-10-14"},{"lineNumber":373,"author":{"gitId":"DJ-Tan"},"content":"Removes a goal specified by its index.\\","lastModifiedDate":"2021-10-28"},{"lineNumber":374,"author":{"gitId":"kahhe"},"content":"(Life gets us sometimes. Things don\u0027t go as planned. But this isn\u0027t calling it quits. It\u0027s admitting","lastModifiedDate":"2021-10-26"},{"lineNumber":375,"author":{"gitId":"kahhe"},"content":"defeat today, but to return stronger to fight another time. We got ya fam.)","lastModifiedDate":"2021-10-26"},{"lineNumber":376,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":377,"author":{"gitId":"DJ-Tan"},"content":"**Format:** `remove g/\u003cgoal_index\u003e`","lastModifiedDate":"2021-10-28"},{"lineNumber":378,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":379,"author":{"gitId":"DJ-Tan"},"content":"**Example:**","lastModifiedDate":"2021-10-28"},{"lineNumber":380,"author":{"gitId":"huien77"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":381,"author":{"gitId":"STAung07"},"content":"Command: remove g/1","lastModifiedDate":"2021-10-25"},{"lineNumber":382,"author":{"gitId":"huien77"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":383,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":384,"author":{"gitId":"DJ-Tan"},"content":"**Output:**","lastModifiedDate":"2021-10-28"},{"lineNumber":385,"author":{"gitId":"huien77"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":386,"author":{"gitId":"STAung07"},"content":"________________________________________________________________________________________________________________________","lastModifiedDate":"2021-10-24"},{"lineNumber":387,"author":{"gitId":"DJ-Tan"},"content":"The goal \u0027[SD] Read more\u0027 has been removed.","lastModifiedDate":"2021-10-28"},{"lineNumber":388,"author":{"gitId":"STAung07"},"content":"________________________________________________________________________________________________________________________","lastModifiedDate":"2021-10-24"},{"lineNumber":389,"author":{"gitId":"huien77"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":391,"author":{"gitId":"DJ-Tan"},"content":"\u003e 📃 Goal index may change if a goal is deleted. Use the `list` command to check what the new goal indexes are.","lastModifiedDate":"2021-10-28"},{"lineNumber":392,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":393,"author":{"gitId":"huien77"},"content":"### Add a Habit: `add`","lastModifiedDate":"2021-10-14"},{"lineNumber":394,"author":{"gitId":"DJ-Tan"},"content":"Adds a habit that is linked to a goal.\\","lastModifiedDate":"2021-10-28"},{"lineNumber":395,"author":{"gitId":"kahhe"},"content":"(Habits are meant to easy and doable. Completing them over time, with consistent dedication, ","lastModifiedDate":"2021-10-26"},{"lineNumber":396,"author":{"gitId":"kahhe"},"content":"one of these habits will be the metaphorical straw that breaks the camel\u0027s back. Your goals reached,","lastModifiedDate":"2021-10-26"},{"lineNumber":397,"author":{"gitId":"kahhe"},"content":"without even pulling a muscle.)","lastModifiedDate":"2021-10-26"},{"lineNumber":398,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":399,"author":{"gitId":"DJ-Tan"},"content":"**Format:** `add n/\u003chabit_name\u003e g/\u003cgoal_index\u003e i/\u003cinterval\u003e`","lastModifiedDate":"2021-10-28"},{"lineNumber":400,"author":{"gitId":"kahhe"},"content":"* name your habit with an achievable and actionable task (e.g. Run 2.4km, Sleep at 10pm)","lastModifiedDate":"2021-11-04"},{"lineNumber":401,"author":{"gitId":"kahhe"},"content":"* \u0027Interval\u0027 is a number that indicates the period of time you have to complete the habit before the next cycle","lastModifiedDate":"2021-11-04"},{"lineNumber":402,"author":{"gitId":"kahhe"},"content":"* \u0027Interval\u0027 defined as 0 indicates a one-off habit; you only have to complete the habit once","lastModifiedDate":"2021-11-04"},{"lineNumber":403,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":404,"author":{"gitId":"DJ-Tan"},"content":"**Example:**\\","lastModifiedDate":"2021-10-28"},{"lineNumber":405,"author":{"gitId":"DJ-Tan"},"content":"Input 1: `add n/Run 2.4km g/1 i/7`\\","lastModifiedDate":"2021-10-28"},{"lineNumber":406,"author":{"gitId":"DJ-Tan"},"content":"Input 2: `add g/1 i/1 n/Do 20 pushups`\\","lastModifiedDate":"2021-10-28"},{"lineNumber":407,"author":{"gitId":"DJ-Tan"},"content":"Input 3: `add i/14 n/Learn a vegetarian dish g/2`","lastModifiedDate":"2021-10-28"},{"lineNumber":408,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":409,"author":{"gitId":"DJ-Tan"},"content":"Output 1: `The habit \u0027Run 2.4km\u0027 has been added to goal \u0027[EX] Exercise more\u0027`\\","lastModifiedDate":"2021-10-28"},{"lineNumber":410,"author":{"gitId":"DJ-Tan"},"content":"Output 2: `The habit \u0027Do 20 pushups\u0027 has been added to goal \u0027[EX] Exercise more\u0027`\\","lastModifiedDate":"2021-10-28"},{"lineNumber":411,"author":{"gitId":"DJ-Tan"},"content":"Output 3: `The habit \u0027Learn a vegetarian dish\u0027 has been added to goal \u0027[FD] Become a vegetarian\u0027`","lastModifiedDate":"2021-10-28"},{"lineNumber":412,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":413,"author":{"gitId":"DJ-Tan"},"content":"\u003e 📃 You should notice a list of habits to be done on the main interface whenever a new habit is added.","lastModifiedDate":"2021-10-28"},{"lineNumber":414,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":415,"author":{"gitId":"DJ-Tan"},"content":"### Change a Habit: `change`","lastModifiedDate":"2021-10-28"},{"lineNumber":416,"author":{"gitId":"DJ-Tan"},"content":"Change and update the name and/or interval of a habit.","lastModifiedDate":"2021-10-28"},{"lineNumber":417,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":418,"author":{"gitId":"DJ-Tan"},"content":"**Format:** `change g/\u003cgoal_index\u003e h/\u003chabit_index\u003e { n/\u003chabit_name\u003e i/\u003cinterval\u003e }`","lastModifiedDate":"2021-10-28"},{"lineNumber":419,"author":{"gitId":"DJ-Tan"},"content":"* You may change either the `habit_name` or `interval` at a time, but not both","lastModifiedDate":"2021-10-28"},{"lineNumber":420,"author":{"gitId":"DJ-Tan"},"content":"* There must be at least one parameter changed - otherwise why call this command at all?","lastModifiedDate":"2021-10-28"},{"lineNumber":421,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":422,"author":{"gitId":"DJ-Tan"},"content":"**Example:**\\","lastModifiedDate":"2021-10-28"},{"lineNumber":423,"author":{"gitId":"DJ-Tan"},"content":"Input 1: `change g/2 h/1 i/7`\\","lastModifiedDate":"2021-10-28"},{"lineNumber":424,"author":{"gitId":"DJ-Tan"},"content":"Input 2: `change n/Do 30 pushups h/2 g/1`","lastModifiedDate":"2021-10-28"},{"lineNumber":425,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":426,"author":{"gitId":"DJ-Tan"},"content":"Output 1: `The habit \u0027Learn a vegetarian dish\u0027 of goal \u0027Become a vegetarian\u0027 has its interval changed to \u00277\u0027`\\","lastModifiedDate":"2021-10-28"},{"lineNumber":427,"author":{"gitId":"DJ-Tan"},"content":"Output 2: `The habit \u0027Do 20 pushups\u0027 of goal \u0027Exercise more\u0027 has been changed to \u0027Do 30 pushups\u0027`","lastModifiedDate":"2021-10-28"},{"lineNumber":428,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":429,"author":{"gitId":"DJ-Tan"},"content":"\u003e 📃 Only one parameter can be updated at a time (to be changed to multiple parameters in v2.1)","lastModifiedDate":"2021-10-28"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":431,"author":{"gitId":"huien77"},"content":"### Complete a Habit: `done`","lastModifiedDate":"2021-10-17"},{"lineNumber":432,"author":{"gitId":"DJ-Tan"},"content":"Mark a habit under a goal as done.\\","lastModifiedDate":"2021-10-28"},{"lineNumber":433,"author":{"gitId":"DJ-Tan"},"content":"(Congratulations on the completed habit... for that cycle :P)","lastModifiedDate":"2021-10-28"},{"lineNumber":434,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":435,"author":{"gitId":"DJ-Tan"},"content":"**Format:** `done g/\u003cgoal_index\u003e h/\u003chabit_index\u003e`","lastModifiedDate":"2021-10-28"},{"lineNumber":436,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":437,"author":{"gitId":"DJ-Tan"},"content":"**Example:**","lastModifiedDate":"2021-10-28"},{"lineNumber":438,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":439,"author":{"gitId":"DJ-Tan"},"content":"Command: done g/1 h/1","lastModifiedDate":"2021-10-28"},{"lineNumber":440,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":441,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":442,"author":{"gitId":"DJ-Tan"},"content":"**Output:**","lastModifiedDate":"2021-10-28"},{"lineNumber":443,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":444,"author":{"gitId":"STAung07"},"content":"________________________________________________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":445,"author":{"gitId":"DJ-Tan"},"content":"The habit \u0027Run 2.4km\u0027 of goal \u0027[EX] Exercise more\u0027 has been completed for 28102021 to 04112021.","lastModifiedDate":"2021-10-28"},{"lineNumber":446,"author":{"gitId":"DJ-Tan"},"content":"The next interval will begin on 05112021","lastModifiedDate":"2021-10-28"},{"lineNumber":447,"author":{"gitId":"STAung07"},"content":"________________________________________________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":448,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":449,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":450,"author":{"gitId":"huien77"},"content":"### Delete a Habit: `delete`","lastModifiedDate":"2021-10-17"},{"lineNumber":451,"author":{"gitId":"DJ-Tan"},"content":"Deletes a habit under a goal.\\","lastModifiedDate":"2021-10-28"},{"lineNumber":452,"author":{"gitId":"kahhe"},"content":"(This should be used a last resort. Don\u0027t give up, hang in there and make your habits stick.)","lastModifiedDate":"2021-11-04"},{"lineNumber":453,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":454,"author":{"gitId":"DJ-Tan"},"content":"**Format:** `delete g/\u003cgoal_index\u003e h/\u003chabit_index\u003e`","lastModifiedDate":"2021-10-28"},{"lineNumber":455,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":456,"author":{"gitId":"DJ-Tan"},"content":"**Example:**","lastModifiedDate":"2021-10-28"},{"lineNumber":457,"author":{"gitId":"huien77"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":458,"author":{"gitId":"DJ-Tan"},"content":"Command: delete g/1 h/2","lastModifiedDate":"2021-10-28"},{"lineNumber":459,"author":{"gitId":"huien77"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":460,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":461,"author":{"gitId":"DJ-Tan"},"content":"**Output:**","lastModifiedDate":"2021-10-28"},{"lineNumber":462,"author":{"gitId":"huien77"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":463,"author":{"gitId":"STAung07"},"content":"________________________________________________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":464,"author":{"gitId":"DJ-Tan"},"content":"The habit \u0027Do 30 pushups\u0027 of goal \u0027[EX] Exercise more\u0027 has been deleted.","lastModifiedDate":"2021-10-28"},{"lineNumber":465,"author":{"gitId":"STAung07"},"content":"________________________________________________________________________________________________________________________","lastModifiedDate":"2021-10-25"},{"lineNumber":466,"author":{"gitId":"huien77"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":468,"author":{"gitId":"huien77"},"content":"### View all Habits: `view`","lastModifiedDate":"2021-10-17"},{"lineNumber":469,"author":{"gitId":"kahhe"},"content":"List all habits under a specific goal for a bird\u0027s eye view on your goal.","lastModifiedDate":"2021-11-04"},{"lineNumber":470,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":471,"author":{"gitId":"DJ-Tan"},"content":"**Format:** `view g/\u003cgoal_index\u003e`","lastModifiedDate":"2021-10-28"},{"lineNumber":472,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":473,"author":{"gitId":"DJ-Tan"},"content":"**Example:**","lastModifiedDate":"2021-10-28"},{"lineNumber":474,"author":{"gitId":"DJ-Tan"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":475,"author":{"gitId":"DJ-Tan"},"content":"Command: view g/1","lastModifiedDate":"2021-10-28"},{"lineNumber":476,"author":{"gitId":"DJ-Tan"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":477,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":478,"author":{"gitId":"DJ-Tan"},"content":"**Output:**","lastModifiedDate":"2021-10-28"},{"lineNumber":479,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":480,"author":{"gitId":"DJ-Tan"},"content":"1 habit(s) currently being tracked for Exercise more:","lastModifiedDate":"2021-10-28"},{"lineNumber":481,"author":{"gitId":"DJ-Tan"},"content":"-------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":482,"author":{"gitId":"DJ-Tan"},"content":"| Index   | Name       | Interval   | Completion   | Completed   | Remaining   | Expired   | Streak   |","lastModifiedDate":"2021-10-28"},{"lineNumber":483,"author":{"gitId":"DJ-Tan"},"content":"-------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":484,"author":{"gitId":"DJ-Tan"},"content":"| 1       | Run 2.4km  | 7          | 20%          | 1           | 4           | 0         | 1        |","lastModifiedDate":"2021-10-28"},{"lineNumber":485,"author":{"gitId":"DJ-Tan"},"content":"-------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":486,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":487,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":488,"author":{"gitId":"DJ-Tan"},"content":"### Return to Start-Up: `return`","lastModifiedDate":"2021-10-28"},{"lineNumber":489,"author":{"gitId":"DJ-Tan"},"content":"Return to the start-up interface.\\","lastModifiedDate":"2021-10-28"},{"lineNumber":490,"author":{"gitId":"DJ-Tan"},"content":"(Where did that bring you? Back to the start.)","lastModifiedDate":"2021-10-28"},{"lineNumber":491,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":492,"author":{"gitId":"DJ-Tan"},"content":"**Format:** `return`","lastModifiedDate":"2021-10-28"},{"lineNumber":493,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":494,"author":{"gitId":"DJ-Tan"},"content":"**Example:**","lastModifiedDate":"2021-10-28"},{"lineNumber":495,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":496,"author":{"gitId":"DJ-Tan"},"content":"Command: return","lastModifiedDate":"2021-10-28"},{"lineNumber":497,"author":{"gitId":"DJ-Tan"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":498,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":499,"author":{"gitId":"DJ-Tan"},"content":"**Output:**","lastModifiedDate":"2021-10-28"},{"lineNumber":500,"author":{"gitId":"DJ-Tan"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":501,"author":{"gitId":"DJ-Tan"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":502,"author":{"gitId":"DJ-Tan"},"content":" _  _   __   ____  ____  _  _  ____  __  ____","lastModifiedDate":"2021-10-28"},{"lineNumber":503,"author":{"gitId":"DJ-Tan"},"content":"/ )( \\ / _\\ (  _ \\(  _ \\( \\/ )(  _ \\(  )(_  _)","lastModifiedDate":"2021-10-28"},{"lineNumber":504,"author":{"gitId":"DJ-Tan"},"content":") __ (/    \\ ) __/ ) __/ )  /  ) _ ( )(   )(","lastModifiedDate":"2021-10-28"},{"lineNumber":505,"author":{"gitId":"DJ-Tan"},"content":"\\_)(_/\\_/\\_/(__)  (__)  (__/  (____/(__) (__)     tracking habits made fun...","lastModifiedDate":"2021-10-28"},{"lineNumber":506,"author":{"gitId":"DJ-Tan"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":507,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":508,"author":{"gitId":"DJ-Tan"},"content":"Howdy! Welcome to Ha(ppy)Bit!","lastModifiedDate":"2021-10-28"},{"lineNumber":509,"author":{"gitId":"DJ-Tan"},"content":"Select from one of the following menu items:","lastModifiedDate":"2021-10-28"},{"lineNumber":510,"author":{"gitId":"DJ-Tan"},"content":"    [1] About HappyBit","lastModifiedDate":"2021-10-28"},{"lineNumber":511,"author":{"gitId":"DJ-Tan"},"content":"    [2] User Guide","lastModifiedDate":"2021-10-28"},{"lineNumber":512,"author":{"gitId":"DJ-Tan"},"content":"    [3] Developer Guide","lastModifiedDate":"2021-10-28"},{"lineNumber":513,"author":{"gitId":"DJ-Tan"},"content":"    [4] Demo Video","lastModifiedDate":"2021-10-28"},{"lineNumber":514,"author":{"gitId":"DJ-Tan"},"content":"    [5] Start Application","lastModifiedDate":"2021-10-28"},{"lineNumber":515,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":516,"author":{"gitId":"DJ-Tan"},"content":"Option:","lastModifiedDate":"2021-10-28"},{"lineNumber":517,"author":{"gitId":"STAung07"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":519,"author":{"gitId":"DJ-Tan"},"content":"### Exit the Program: `exit`","lastModifiedDate":"2021-10-28"},{"lineNumber":520,"author":{"gitId":"DJ-Tan"},"content":"Exits the program.\\","lastModifiedDate":"2021-10-28"},{"lineNumber":521,"author":{"gitId":"kahhe"},"content":"(Don\u0027t stay on _Ha(ppy)Bit_ too long. You have a life out there, go live it!)","lastModifiedDate":"2021-10-26"},{"lineNumber":522,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":523,"author":{"gitId":"DJ-Tan"},"content":"\u003e ⚠ Make sure to use this command before exiting the program to ensure that your data is saved properly.","lastModifiedDate":"2021-10-28"},{"lineNumber":524,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":525,"author":{"gitId":"DJ-Tan"},"content":"**Format:** `exit`","lastModifiedDate":"2021-10-29"},{"lineNumber":526,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":527,"author":{"gitId":"DJ-Tan"},"content":"**Example:**","lastModifiedDate":"2021-10-28"},{"lineNumber":528,"author":{"gitId":"DJ-Tan"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":529,"author":{"gitId":"DJ-Tan"},"content":"Command: exit","lastModifiedDate":"2021-10-28"},{"lineNumber":530,"author":{"gitId":"huien77"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":531,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":532,"author":{"gitId":"DJ-Tan"},"content":"**Output:**","lastModifiedDate":"2021-10-28"},{"lineNumber":533,"author":{"gitId":"DJ-Tan"},"content":"```","lastModifiedDate":"2021-10-28"},{"lineNumber":534,"author":{"gitId":"DJ-Tan"},"content":"________________________________________________________________________________________________________________________","lastModifiedDate":"2021-10-28"},{"lineNumber":535,"author":{"gitId":"DJ-Tan"},"content":"Thanks for using Ha(ppy)Bit, see you in a bit! (hehe)","lastModifiedDate":"2021-10-28"},{"lineNumber":536,"author":{"gitId":"huien77"},"content":"\"We are what we repeatedly do. Excellence, then, is not an act, but a habit.\"","lastModifiedDate":"2021-10-15"},{"lineNumber":537,"author":{"gitId":"huien77"},"content":" — Will Durant","lastModifiedDate":"2021-10-15"},{"lineNumber":538,"author":{"gitId":"DJ-Tan"},"content":"________________________________________________________________________________________________________________________","lastModifiedDate":"2021-10-28"},{"lineNumber":539,"author":{"gitId":"huien77"},"content":"```","lastModifiedDate":"2021-10-15"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":541,"author":{"gitId":"huien77"},"content":"## About Loading and Saving Data","lastModifiedDate":"2021-10-14"},{"lineNumber":542,"author":{"gitId":"huien77"},"content":"**Loading saved data:**","lastModifiedDate":"2021-10-15"},{"lineNumber":543,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":544,"author":{"gitId":"huien77"},"content":"Whenever you run the program, the program will **automatically** look for any","lastModifiedDate":"2021-10-15"},{"lineNumber":545,"author":{"gitId":"huien77"},"content":"saved data in the relative storage path, `data/habits.txt`.","lastModifiedDate":"2021-10-15"},{"lineNumber":546,"author":{"gitId":"huien77"},"content":"* If the storage file is found, `File exists` will be printed.","lastModifiedDate":"2021-10-15"},{"lineNumber":547,"author":{"gitId":"huien77"},"content":"* If the storage file is not found, the program will create","lastModifiedDate":"2021-10-15"},{"lineNumber":548,"author":{"gitId":"huien77"},"content":"  one for you at the relative storage path, `data/habits.txt`.","lastModifiedDate":"2021-10-15"},{"lineNumber":549,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":550,"author":{"gitId":"huien77"},"content":"**Saving data:**","lastModifiedDate":"2021-10-15"},{"lineNumber":551,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":552,"author":{"gitId":"huien77"},"content":"* Everytime you make changes to any of your goals and habits, the changes","lastModifiedDate":"2021-10-24"},{"lineNumber":553,"author":{"gitId":"huien77"},"content":"  are **immediately** reflected in the storage file. This is to ensure that in the","lastModifiedDate":"2021-10-24"},{"lineNumber":554,"author":{"gitId":"huien77"},"content":"  event you closed the program without using the command `bye`, we can ensure that","lastModifiedDate":"2021-10-24"},{"lineNumber":555,"author":{"gitId":"huien77"},"content":"  **most of your data are saved**.","lastModifiedDate":"2021-10-24"},{"lineNumber":556,"author":{"gitId":"huien77"},"content":"* Before you exit the program, the goals you set and the habits you have added","lastModifiedDate":"2021-10-24"},{"lineNumber":557,"author":{"gitId":"huien77"},"content":"  are **automatically** saved in a text file at the relative storage path, `data/habits.txt`.","lastModifiedDate":"2021-10-15"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":559,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":561,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer?","lastModifiedDate":"2020-05-24"},{"lineNumber":562,"author":{"gitId":"kahhe"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":563,"author":{"gitId":"STAung07"},"content":"**A**: You can just copy-paste the habits.txt in the path `data/habits.txt` file from one computer to another and all","lastModifiedDate":"2021-10-25"},{"lineNumber":564,"author":{"gitId":"STAung07"},"content":"your data will be there!","lastModifiedDate":"2021-10-25"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":566,"author":{"gitId":"kahhe"},"content":"\u003e 💡 **Pro Tip!** Have your home folder reside in a cloud storage service (OneDrive, iCloud, etc.) to sync your data","lastModifiedDate":"2021-10-25"},{"lineNumber":567,"author":{"gitId":"kahhe"},"content":"\u003e between devices.","lastModifiedDate":"2021-10-24"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":569,"author":{"gitId":"kahhe"},"content":"**Q**: Are there any books you recommend?","lastModifiedDate":"2021-10-24"},{"lineNumber":570,"author":{"gitId":"kahhe"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":571,"author":{"gitId":"kahhe"},"content":"**A**: Data Structures and Algorithms in Java \u0026#8594; [here](https://www.amazon.com/Data-Structures-Algorithms-Java-2nd/dp/0672324539)","lastModifiedDate":"2021-10-26"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":573,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2021-10-24"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":575,"author":{"gitId":"STAung07"},"content":"Action             | Command Format                                                          | Example","lastModifiedDate":"2021-10-15"},{"lineNumber":576,"author":{"gitId":"DJ-Tan"},"content":"------------------ | ----------------------------------------------------------------------- | ----------------------------------","lastModifiedDate":"2021-10-28"},{"lineNumber":577,"author":{"gitId":"DJ-Tan"},"content":"Get help           | `help`                                                                  | `help`","lastModifiedDate":"2021-10-28"},{"lineNumber":578,"author":{"gitId":"DJ-Tan"},"content":"Set goal           | `set n/\u003cgoal_name\u003e { t/\u003cgoal_type\u003e s/\u003cstart_date\u003e } e/\u003cend_date\u003e`       | `set n/Reduce spending e/31122022`","lastModifiedDate":"2021-10-28"},{"lineNumber":579,"author":{"gitId":"kahhe"},"content":"List goals         | `list`                                                                  | `list`","lastModifiedDate":"2021-10-26"},{"lineNumber":580,"author":{"gitId":"DJ-Tan"},"content":"Update goal        | `update g/\u003cgoal_index\u003e { n/\u003cgoal_name\u003e t/\u003cgoal_type\u003e e/\u003cend_date\u003e }`    | `update g/1 n/Decrease Spending`","lastModifiedDate":"2021-10-28"},{"lineNumber":581,"author":{"gitId":"DJ-Tan"},"content":"Remove goal        | `remove g/\u003cgoal_index\u003e`                                                 | `remove g/1`","lastModifiedDate":"2021-10-28"},{"lineNumber":582,"author":{"gitId":"DJ-Tan"},"content":"Add habit          | `add g/\u003cgoal_index\u003e n/\u003chabit_name\u003e i/\u003cinterval\u003e`                        | `add n/Don\u0027t drink BBT g/1 i/3`","lastModifiedDate":"2021-10-28"},{"lineNumber":583,"author":{"gitId":"DJ-Tan"},"content":"Change habit       | `change g/\u003cgoal_index\u003e h/\u003chabit_index\u003e { n/\u003chabit_name\u003e i/\u003cinterval\u003e }` | `change g/1 h/2 i/3`","lastModifiedDate":"2021-10-28"},{"lineNumber":584,"author":{"gitId":"DJ-Tan"},"content":"Done habit         | `done g/\u003cgoal_index\u003e h/\u003chabit_index\u003e `                                  | `done g/1 h/1`","lastModifiedDate":"2021-10-28"},{"lineNumber":585,"author":{"gitId":"kahhe"},"content":"Delete habit       | `delete g/\u003cgoal_index\u003e h/\u003chabit_index\u003e`                                 | `delete g/1 h/1`","lastModifiedDate":"2021-11-04"},{"lineNumber":586,"author":{"gitId":"DJ-Tan"},"content":"View habits        | `view g/\u003cgoal_index\u003e`                                                   | `view g/1`","lastModifiedDate":"2021-10-28"},{"lineNumber":587,"author":{"gitId":"DJ-Tan"},"content":"Return to Start-Up | `return`                                                                | `return`","lastModifiedDate":"2021-10-28"},{"lineNumber":588,"author":{"gitId":"DJ-Tan"},"content":"Exit Program       | `exit`                                                                  | `exit`","lastModifiedDate":"2021-10-28"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":590,"author":{"gitId":"huien77"},"content":"## Useful Links","lastModifiedDate":"2021-10-17"},{"lineNumber":591,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":592,"author":{"gitId":"huien77"},"content":"Visit our [Main Page](README.md) to find more useful links.","lastModifiedDate":"2021-10-17"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":594,"author":{"gitId":"kahhe"},"content":"Watch our wacky Demo Video v0 [here](https://www.youtube.com/watch?v\u003ddQw4w9WgXcQ)!","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"STAung07":97,"huien77":73,"flerovious":5,"DJ-Tan":239,"-":34,"kahhe":146}},{"path":"docs/team/dj-tan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"# Daren - Project Portfolio Page","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"## Overview","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"Ha(ppy)Bit is a desktop app aimed to empower students to achieve their goals—whether personal, academical, ","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"or health—amidst the hectic and stressful university life, through cultivating good habits. ","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"Users can only run the app on a Command Line Interface (CLI).","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"### Summary of Contributions","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"#### Code Contributed","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"https://nus-cs2113-ay2122s1.github.io/tp-dashboard/#breakdown\u003dtrue\u0026search\u003ddj-tan","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"#### Enhancements Implemented","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"- Code structure (goal, habit, interval, command)","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"- Date Parsing","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"- Table Printing","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"- Switching between UI of start-up and main interface","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"#### Contributions to User Guide (UG)","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"- Version 1.0","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"  - Fix minor spelling errors and descriptions","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"- Version 2.0","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"  - Design command examples to follow a top to bottom sequence","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"  - Updated code screenshots with new UI","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"  - Updated command summary","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"- Version 2.1","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"  - To be added...","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"#### Contributions to Developer Guide (DG)","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"- ","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"#### Contributions to Team-Based Tasks","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"- Code refactoring","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"- JavaDoc","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"#### Review/Mentoring Contributions","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"- ","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"#### Contributions beyond the Project Team","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"- ","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"DJ-Tan":49}},{"path":"docs/team/flerovious.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"huien77"},"content":"# Varun - Project Portfolio Page","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"huien77":1,"DJ-Tan":1,"-":5}},{"path":"docs/team/huien77.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"huien77"},"content":"# Hui En - Project Portfolio Page","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"huien77":1,"-":5}},{"path":"docs/team/kahhe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"# Kah Heng - Project Portfolio Page","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"## Overview","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"### Summary of Contributions","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"kahhe":6}},{"path":"docs/team/staung07.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"huien77"},"content":"# Swann - Project Portfolio Page","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Overview","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"I did my best :) Daren did 99.999999999999999999999999% of this project","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"Give Daren A+ ","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"Thank you Prof Akshay ","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"We Love You","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"~ Daren","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"### Summary of Contributions","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"STAung07":5,"huien77":1,"-":4}},{"path":"src/main/java/happybit/HappyBit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.state.State;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"public class HappyBit {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    private Storage storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    private GoalList goalList;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"    private PrintManager printManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"    private State state;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"     * Duke class constructor that also loads in tasks data from an external save file.","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"     * @param filePath File path of the external save file","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"    public HappyBit(String filePath, String fileDir) {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"        printManager \u003d new PrintManager();","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"        storage \u003d new Storage(filePath, fileDir);","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"        goalList \u003d new GoalList();","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"        state \u003d new State(goalList, printManager, storage);","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"     * Main method of HappyBit.","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"     * Creates a HappyBit class and runs it.","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"     * @param args Not applicable.","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"        new HappyBit(\"data/habits.txt\", \"data\").run();","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"    /*","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"     * The following are private methods that are used to implement SLAP for the","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"     * above public methods. These methods are positioned at the bottom to better","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"     * visualise the actual methods that can be called from outside this class.","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"    ","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"     * Executes the main body of HappyBit.","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"    private void run() {","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"        state.handleState();","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"        printManager.printExit();","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"        wait3Seconds();","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"    private void wait3Seconds() {","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"            TimeUnit.SECONDS.sleep(3);","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"        } catch (InterruptedException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"            // Do nothing","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"STAung07":5,"DJ-Tan":59}},{"path":"src/main/java/happybit/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flerovious"},"content":"package happybit.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"     * Template method that runs add commands.","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalList     List that stores all the goals.","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * @param printManager Prints messages to the console.","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage      Reference to the file where data is stored.","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If exception is thrown by AddCommand subclasses.","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"    public void runCommand(GoalList goalList, PrintManager printManager, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"        // do nothing","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"flerovious"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"STAung07":2,"flerovious":6,"DJ-Tan":15}},{"path":"src/main/java/happybit/command/AddGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.command;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"import happybit.exception.HaBitStorageException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.Goal;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"public class AddGoalCommand extends AddCommand {","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    protected Goal goal;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * Constructor of AddGoalCommand.","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     * @param goal Goal to be added.","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"    public AddGoalCommand(Goal goal) {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"        this.goal \u003d goal;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"     * Executes add goal command and adds the goal to the goalList.","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalList     List that stores all the goals.","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"     * @param printManager Prints messages to the console.","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage      Reference to the file where data is stored.","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"    public void runCommand(GoalList goalList, PrintManager printManager, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"huien77"},"content":"        goalList.addGoal(this.goal, printManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"            int index \u003d goalList.getListLength() - 1;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"            storage.export(this.goal, index);","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"huien77"},"content":"        } catch (HaBitStorageException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"            printManager.printError(e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"flerovious"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"flerovious"},"content":"     * Getter for goal (Used in JUnit test).","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"flerovious"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"flerovious"},"content":"     * @return New goal to be added to goalList.","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"flerovious"},"content":"    public Goal getGoal() {","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"flerovious"},"content":"        return goal;","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"STAung07":2,"huien77":6,"flerovious":8,"DJ-Tan":35}},{"path":"src/main/java/happybit/command/AddHabitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.command;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"import happybit.exception.HaBitStorageException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import happybit.habit.Habit;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"public class AddHabitCommand extends AddCommand {","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    protected Habit habit;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    protected int goalIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     * Constructor of AddHabitCommand.","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"     * @param habit     Habit to be added.","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalIndex Index of goal in goalList where habit is to be added.","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"    public AddHabitCommand(Habit habit, int goalIndex) {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"        this.habit \u003d habit;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"        this.goalIndex \u003d goalIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"     * Executes add habit command and adds the habit to the goal.","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalList     List that stores all the goals.","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"     * @param printManager Prints messages to the console.","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage      Reference to the file where data is stored.","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If the goalIndex provided is invalid.","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"STAung07"},"content":"    public void runCommand(GoalList goalList, PrintManager printManager, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"huien77"},"content":"        goalList.addHabitToGoal(this.habit, goalIndex, printManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"huien77"},"content":"            storage.export(this.habit, goalIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"huien77"},"content":"        } catch (HaBitStorageException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"            printManager.printError(e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"flerovious"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"flerovious"},"content":"     * Getter for Habit (Used in JUnit test).","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"flerovious"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"flerovious"},"content":"     * @return New habit to be added to specified goal number.","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"flerovious"},"content":"    public Habit getHabit() {","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"flerovious"},"content":"        return habit;","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"flerovious"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"flerovious"},"content":"     * Getter for goal index (Used in JUnit test).","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"flerovious"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"flerovious"},"content":"     * @return Goal index to add new habit to.","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"flerovious"},"content":"    public int getGoalIndex() {","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"flerovious"},"content":"        return goalIndex;","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"STAung07":2,"huien77":7,"flerovious":17,"DJ-Tan":37}},{"path":"src/main/java/happybit/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.command;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"     * Abstract method that runs user input commands.","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalList     List that stores all the goals.","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * @param printManager Prints messages to the console.","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage      Reference to the file where data is stored.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If exception is thrown by Command subclasses.","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"    public abstract void runCommand(GoalList goalList, PrintManager printManager, Storage storage)","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"            throws HaBitCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the exit command is being called.","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"     * @return True if Command subclass is exitCommand.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     *         False if other Command subclasses.","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"        return false;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the return command is being called.","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"     * @return True if Command subclass is returnCommand.","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"     *         False if other Command subclasses.","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"    public boolean isReturn() {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"        return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"STAung07":3,"DJ-Tan":38}},{"path":"src/main/java/happybit/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package happybit.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"     * Template method that runs delete commands.","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalList     List that stores all the goals.","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * @param printManager Prints messages to the console.","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage      Reference to the file where data is stored.","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If exception is thrown by DeleteCommand subclasses.","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kahhe"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"    public void runCommand(GoalList goalList, PrintManager printManager, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"        // Do nothing","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"STAung07":2,"DJ-Tan":13,"kahhe":8}},{"path":"src/main/java/happybit/command/DeleteGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.command;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"import happybit.exception.HaBitStorageException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"public class DeleteGoalCommand extends DeleteCommand {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    protected int goalIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * Constructor of DeleteGoalCommand.","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalIndex Index of goal in goalList to be deleted.","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    public DeleteGoalCommand(int goalIndex) {","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"        this.goalIndex \u003d goalIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"     * Executes delete goal command and removes goal from goalList.","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalList     List that stores all the goals.","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     * @param printManager Prints messages to the console.","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage      Reference to the file where data is stored.","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If the goalIndex provided is invalid.","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"    public void runCommand(GoalList goalList, PrintManager printManager, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"STAung07"},"content":"        goalList.deleteGoal(goalIndex, printManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"huien77"},"content":"            storage.export(goalList.getGoalList());","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"huien77"},"content":"        } catch (HaBitStorageException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"            printManager.printError(e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"flerovious"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"flerovious"},"content":"     * Getter for goalIndex (Used in JUnit test).","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"flerovious"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"flerovious"},"content":"     * @return Index of goal to be deleted from goalList.","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"flerovious"},"content":"    public int getGoalIndex() {","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"flerovious"},"content":"        return goalIndex;","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"STAung07":3,"huien77":6,"flerovious":9,"DJ-Tan":32}},{"path":"src/main/java/happybit/command/DeleteHabitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.command;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"import happybit.exception.HaBitStorageException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"public class DeleteHabitCommand extends DeleteCommand {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    protected int goalIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    protected int habitIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * Constructor of DeleteHabitCommand.","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalIndex  Index of goal in goalList, where a habit is to be deleted.","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"     * @param habitIndex Index of habit in goal to be deleted.","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    public DeleteHabitCommand(int goalIndex, int habitIndex) {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"        this.goalIndex \u003d goalIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"        this.habitIndex \u003d habitIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     * Executes delete habit command and removes goal from goalList.","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalList     List that stores all the goals.","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"     * @param printManager Prints messages to the console.","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage      Reference to the file where data is stored.","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If the goalIndex and/or habitIndex provided is invalid.","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"    public void runCommand(GoalList goalList, PrintManager printManager, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"STAung07"},"content":"        goalList.deleteHabitFromGoal(goalIndex, habitIndex, printManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"huien77"},"content":"            storage.export(goalList.getGoalList());","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"huien77"},"content":"        } catch (HaBitStorageException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"            printManager.printError(e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"flerovious"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"flerovious"},"content":"     * Getter for goalIndex (Used in JUnit test).","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"flerovious"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"flerovious"},"content":"     * @return Index of goal to be deleted from goalList.","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"flerovious"},"content":"    public int getGoalIndex() {","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"flerovious"},"content":"        return goalIndex;","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"flerovious"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"flerovious"},"content":"     * Getter for habitIndex (Used in JUnit test).","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"flerovious"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"flerovious"},"content":"     * @return Index of habit in goal to be deleted.","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"flerovious"},"content":"    public int getHabitIndex() {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"flerovious"},"content":"        return habitIndex;","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"STAung07":3,"huien77":6,"flerovious":18,"DJ-Tan":35}},{"path":"src/main/java/happybit/command/DoneHabitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.command;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"import happybit.exception.HaBitStorageException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"public class DoneHabitCommand extends Command {","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"    protected int goalIndex;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"    protected int habitIndex;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * Constructor of DoneHabitCommand.","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalIndex  Index of goal in goalList, where a habit is to be marked as completed.","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"     * @param habitIndex Index of habit in goal to be marked as completed.","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"    public DoneHabitCommand(int goalIndex, int habitIndex) {","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"        this.goalIndex \u003d goalIndex;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"        this.habitIndex \u003d habitIndex;","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     * Executes done habit command and marks a habit as completed.","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalList     List that stores all the goals.","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"     * @param printManager Prints messages to the console.","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage      Reference to the file where data is stored.","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If the goalIndex and/or habitIndex provided is invalid.","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"STAung07"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"    public void runCommand(GoalList goalList, PrintManager printManager, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"STAung07"},"content":"        goalList.doneHabitFromGoal(goalIndex, habitIndex, printManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"huien77"},"content":"            storage.export(goalList.getGoalList());","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"huien77"},"content":"        } catch (HaBitStorageException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"            printManager.printError(e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for goalIndex (Used in JUnit test).","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"     * @return Index of goal in goalList, where a habit is to be marked as completed.","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"STAung07"},"content":"    public int getGoalIndex() {","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"STAung07"},"content":"        return goalIndex;","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for habitIndex (Used in JUnit test).","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"     * @return Index of habit in goal to be marked as completed.","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"STAung07"},"content":"    public int getHabitIndex() {","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"STAung07"},"content":"        return habitIndex;","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"STAung07":31,"huien77":6,"DJ-Tan":26}},{"path":"src/main/java/happybit/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package happybit.command;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"import happybit.exception.HaBitStorageException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     * Template method that runs exit command.","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalList     List that stores all the goals.","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * @param printManager Prints messages to the console.","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage      Reference to the file where data is stored.","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kahhe"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"    public void runCommand(GoalList goalList, PrintManager printManager, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"huien77"},"content":"            storage.export(goalList.getGoalList());","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"huien77"},"content":"        } catch (HaBitStorageException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"            printManager.printError(e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"     * Triggers the exit flag to end the application.","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"     * @return True.","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kahhe"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"kahhe"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"kahhe"},"content":"        return true;","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"STAung07":2,"huien77":5,"DJ-Tan":14,"kahhe":16}},{"path":"src/main/java/happybit/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"     * Executes help command and print out a command list.","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalList     List that stores all the goals.","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     * @param printManager Prints messages to the console.","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage      Reference to the file where data is stored.","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand(GoalList goalList, PrintManager printManager, Storage storage) {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"        printManager.printCommandList();","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"STAung07":8,"DJ-Tan":13}},{"path":"src/main/java/happybit/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.command;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"     * Template method that runs list commands.","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalList     List that stores all the goals.","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * @param printManager Prints messages to the console.","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage      Reference to the file where data is stored.","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If exception is thrown by ListCommand subclasses.","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"    public void runCommand(GoalList goalList, PrintManager printManager, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"        // Do nothing","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"STAung07":2,"DJ-Tan":20}},{"path":"src/main/java/happybit/command/ListGoalsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class ListGoalsCommand extends ListCommand {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"    protected String gibberish;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"     * Constructor for ListGoalsCommand.","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"kahhe"},"content":"     * @param gibberish Extra nonsense user types AFTER \u0027list\u0027, a one-word command.","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"kahhe"},"content":"    public ListGoalsCommand(String gibberish) {","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"kahhe"},"content":"        this.gibberish \u003d gibberish;","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"     * Executes list goals command and prints out all goals in the goalList.","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalList     List that stores all the goals.","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     * @param printManager Prints messages to the console.","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage      Reference to the file where data is stored.","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If goalList is empty.","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"    public void runCommand(GoalList goalList, PrintManager printManager, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kahhe"},"content":"        goalList.listGoals(printManager, gibberish);","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"STAung07":9,"DJ-Tan":13,"kahhe":12}},{"path":"src/main/java/happybit/command/ListHabitsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.command;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class ListHabitsCommand extends ListCommand {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    protected int goalIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     * Constructor for ListHabitsCommand.","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalIndex Index of goal in goalList, where a list of habits is to be printed.","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    public ListHabitsCommand(int goalIndex) {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"        this.goalIndex \u003d goalIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"     * Executes list habits command and prints out all habits of the goal.","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalList     List that stores all the goals.","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     * @param printManager Prints messages to the console.","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage      Reference to the file where data is stored.","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If the goalIndex provided is invalid, or the habit list is empty.","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"    public void runCommand(GoalList goalList, PrintManager printManager, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"        goalList.listHabitsFromGoal(goalIndex, printManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for goalIndex (Used in JUnit test).","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"flerovious"},"content":"     * @return Index of goal in goalList whose habits are to be printed.","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"STAung07"},"content":"    public int getGoalIndex() {","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"STAung07"},"content":"        return goalIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"STAung07":6,"flerovious":1,"DJ-Tan":36}},{"path":"src/main/java/happybit/command/ReturnCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.command;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"huien77"},"content":"import happybit.exception.HaBitStorageException;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class ReturnCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"     * Template method that runs return command.","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalList     List that stores all the goals.","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * @param printManager Prints messages to the console.","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage      Reference to the file where data is stored.","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand(GoalList goalList, PrintManager printManager, Storage storage) {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"huien77"},"content":"            storage.export(goalList.getGoalList());","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"huien77"},"content":"        } catch (HaBitStorageException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"huien77"},"content":"            printManager.printError(e.getMessage());","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"     * Triggers the return flag to return to startup view.","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"     * @return True.","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"    public boolean isReturn() {","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"        return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"STAung07":1,"huien77":6,"DJ-Tan":29}},{"path":"src/main/java/happybit/command/SetCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.command;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class SetCommand extends Command {","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    protected int goalIndex;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     * Constructor for SetCommand.","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalIndex Index of goal in goalList, where the user would like to set.","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    public SetCommand(int goalIndex) {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"        this.goalIndex \u003d goalIndex;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"     * Executes set command and sets the goal.","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalList     List that stores all the goals.","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     * @param printManager Prints messages to the console.","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage      Reference to the file where data is stored.","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If the goalIndex provided is invalid.","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"    public void runCommand(GoalList goalList, PrintManager printManager, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"        goalList.setChosenGoalIndex(goalIndex);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"STAung07":2,"DJ-Tan":32}},{"path":"src/main/java/happybit/command/UpdateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package happybit.command;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"     * Template method that runs update commands.","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalList     List that stores all the goals.","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * @param printManager Prints messages to the console.","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage      Reference to the file where data is stored.","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If exception is thrown by UpdateCommand subclasses.","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kahhe"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"    public void runCommand(GoalList goalList, PrintManager printManager, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kahhe"},"content":"        // do nothing","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"STAung07":2,"DJ-Tan":9,"kahhe":12}},{"path":"src/main/java/happybit/command/UpdateGoalEndDateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.command;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"import happybit.exception.HaBitStorageException;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"public class UpdateGoalEndDateCommand extends UpdateCommand {","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"    protected int goalIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"    protected Date newDate;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"    public UpdateGoalEndDateCommand(int goalIndex, Date newDate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"        this.goalIndex \u003d goalIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"        this.newDate \u003d newDate;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"    public void runCommand(GoalList goalList, PrintManager printManager, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"        goalList.updateGoalEndDate(goalIndex, newDate, printManager);","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"huien77"},"content":"            storage.export(goalList.getGoalList());","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"huien77"},"content":"        } catch (HaBitStorageException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"huien77"},"content":"            printManager.printError(e.getMessage());","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"STAung07":23,"huien77":7}},{"path":"src/main/java/happybit/command/UpdateGoalNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package happybit.command;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"import happybit.exception.HaBitStorageException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"public class UpdateGoalNameCommand extends UpdateCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"    protected int goalIndex;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"    protected String goalName;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * Constructor for UpdateGoalNameCommand.","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"flerovious"},"content":"     * @param goalIndex Index of goal in goalList to be updated with newGoalName.","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"flerovious"},"content":"     * @param newGoalName  New name of the goal.","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"flerovious"},"content":"    public UpdateGoalNameCommand(int goalIndex, String newGoalName) {","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"kahhe"},"content":"        this.goalIndex \u003d goalIndex;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"flerovious"},"content":"        this.goalName \u003d newGoalName;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     * Executes update goal name command and changes the goalName.","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalList     List that stores all the goals.","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"     * @param printManager Prints messages to the console.","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage      Reference to the file where data is stored.","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If the goalIndex provided is invalid.","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kahhe"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"    public void runCommand(GoalList goalList, PrintManager printManager, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"STAung07"},"content":"        goalList.updateGoalName(goalIndex, goalName, printManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"huien77"},"content":"            storage.export(goalList.getGoalList());","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"huien77"},"content":"        } catch (HaBitStorageException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"            printManager.printError(e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"flerovious"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"flerovious"},"content":"     * Getter for goalIndex (Used in JUnit test).","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"flerovious"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"flerovious"},"content":"     * @return Index of goal in goalList, whose goalName is to be updated.","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"flerovious"},"content":"    public int getGoalIndex() {","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"flerovious"},"content":"        return goalIndex;","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"flerovious"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"flerovious"},"content":"     * Getter for habitIndex (Used in JUnit test).","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"flerovious"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"flerovious"},"content":"     * @return New goal name to be updated.","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"flerovious"},"content":"    public String getNewGoalName() {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"flerovious"},"content":"        return goalName;","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"STAung07":3,"huien77":6,"flerovious":22,"DJ-Tan":14,"kahhe":17}},{"path":"src/main/java/happybit/command/UpdateGoalTypeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.command;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import happybit.exception.HaBitStorageException;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import happybit.goal.GoalType;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"public class UpdateGoalTypeCommand extends UpdateCommand {","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"    protected int goalIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"    protected GoalType goalType;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"     * Constructor for UpdateGoalTypeCommand.","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"     *  @param goalIndex Index of goal in goalList to be updated with newGoalType.","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"     * @param newGoalType  New type of the goal.","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"    public UpdateGoalTypeCommand(int goalIndex, GoalType newGoalType) {","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"        this.goalIndex \u003d goalIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"        this.goalType \u003d newGoalType;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"     * Executes update goal type command and changes the goalType.","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"     * @param goalList     List that stores all the goals.","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"     * @param printManager Prints messages to the console.","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"     * @param storage      Reference to the file where data is stored.","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"     * @throws HaBitCommandException If the goalIndex provided is invalid.","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"STAung07"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"    public void runCommand(GoalList goalList, PrintManager printManager, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"STAung07"},"content":"        goalList.updateGoalType(goalIndex, goalType, printManager);","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"STAung07"},"content":"            storage.export(goalList.getGoalList());","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitStorageException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"STAung07"},"content":"            printManager.printError(e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"STAung07"},"content":"     * Getter for goalIndex (Used in JUnit test).","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"STAung07"},"content":"     * @return Index of goal in goalList, whose goalType is to be updated.","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"STAung07"},"content":"    public int getGoalIndex() {","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"STAung07"},"content":"        return goalIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"STAung07"},"content":"     * Getter for goalType (Used in JUnit test).","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"STAung07"},"content":"     * @return New goal type to be updated.","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"STAung07"},"content":"    public GoalType getNewGoalType() {","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"STAung07"},"content":"        return goalType;","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"STAung07":60,"huien77":1}},{"path":"src/main/java/happybit/command/UpdateHabitIntervalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.command;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"import happybit.exception.HaBitStorageException;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"public class UpdateHabitIntervalCommand extends UpdateCommand {","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"    protected int goalIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"    protected int habitIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"    protected int newInterval;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"     * Constructor for UpdateHabitIntervalCommand.","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"     * @param goalIndex Index of goal in goalList where habit to be updated is located in","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"     * @param habitIndex Index of habit in habitList of goal","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"     * @param newInterval newInterval to be changed to","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"    public UpdateHabitIntervalCommand(int goalIndex, int habitIndex, int newInterval) {","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"        this.goalIndex \u003d goalIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"        this.habitIndex \u003d habitIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"        this.newInterval \u003d newInterval;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"    public void runCommand(GoalList goalList, PrintManager printManager, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"        goalList.updateHabitIntervalFromGoal(goalIndex, habitIndex, newInterval, printManager);","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"huien77"},"content":"            storage.export(goalList.getGoalList());","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"huien77"},"content":"        } catch (HaBitStorageException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"huien77"},"content":"            printManager.printError(e.getMessage());","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"STAung07"},"content":"    public int getGoalIndex() {","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"STAung07"},"content":"        return goalIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"STAung07"},"content":"    public int getHabitIndex() {","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"STAung07"},"content":"        return habitIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"STAung07"},"content":"    public int getNewInterval() {","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"STAung07"},"content":"        return newInterval;","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"STAung07":42,"huien77":7}},{"path":"src/main/java/happybit/command/UpdateHabitNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package happybit.command;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"import happybit.exception.HaBitStorageException;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"public class UpdateHabitNameCommand extends UpdateCommand {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    protected int goalIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    protected int habitIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    protected String habitName;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     * Constructor for UpdateHabitNameCommand.","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalIndex  Index of goal in goalList, where the habitName of a habit of that goal is to be updated.","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"     * @param habitIndex Index of habit in goal, where the habitName is to be updated.","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"     * @param habitName  New name of the habit.","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"    public UpdateHabitNameCommand(int goalIndex, int habitIndex, String habitName) {","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"        this.goalIndex \u003d goalIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"        this.habitIndex \u003d habitIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"        this.habitName \u003d habitName;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"     * Executes update habit name command and changes the goalName.","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalList     List that stores all the goals.","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"     * @param printManager Prints messages to the console.","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage      Reference to the file where data is stored.","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If the goalIndex and/or habitIndex provided is invalid.","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand(GoalList goalList, PrintManager printManager, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"        goalList.updateHabitNameFromGoal(goalIndex, habitIndex, habitName, printManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"huien77"},"content":"            storage.export(goalList.getGoalList());","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"huien77"},"content":"        } catch (HaBitStorageException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"huien77"},"content":"            printManager.printError(e.getMessage());","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"huien77":7,"DJ-Tan":35,"kahhe":5}},{"path":"src/main/java/happybit/exception/HaBitCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.exception;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public class HaBitCommandException extends HappyBitException {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"    public HaBitCommandException(String message) {","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"        super(message);","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"DJ-Tan":9}},{"path":"src/main/java/happybit/exception/HaBitParserException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.exception;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public class HaBitParserException extends HappyBitException {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"    public HaBitParserException(String message) {","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"        super(message);","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"DJ-Tan":9}},{"path":"src/main/java/happybit/exception/HaBitStorageException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huien77"},"content":"package happybit.exception;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"huien77"},"content":"public class HaBitStorageException extends HappyBitException {","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"huien77"},"content":"    public HaBitStorageException(String message) {","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"huien77"},"content":"        super(message);","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"huien77"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"huien77":8,"DJ-Tan":1}},{"path":"src/main/java/happybit/exception/HaBitUiException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.exception;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public class HaBitUiException extends HappyBitException {","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"    public HaBitUiException(String message) {","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"        super(message);","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"DJ-Tan":9}},{"path":"src/main/java/happybit/exception/HappyBitException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.exception;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public class HappyBitException extends Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"    public HappyBitException(String message) {","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"        super(message);","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"DJ-Tan":9}},{"path":"src/main/java/happybit/goal/Goal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.goal;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.habit.Habit;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"huien77"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"import java.time.ZoneId;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"public class Goal {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    protected String goalName;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"    protected GoalType goalType;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    protected Date startDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    protected Date endDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    protected ArrayList\u003cHabit\u003e habitList;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"     * Constructor for Goal class with goalType and startDate defined.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalName  String description of the goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalType  Type/Category of goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     * @param startDate Date to start tracking of the goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     * @param endDate   Date to end tracking of the goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    public Goal(String goalName, GoalType goalType, Date startDate, Date endDate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"        this.goalName \u003d goalName;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"        this.goalType \u003d goalType;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"        this.habitList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"     * Setter for name of goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"     * Used to edit the name of the goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"kahhe"},"content":"     * @param goalName New name the goal is to be updated with.","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"    public void setGoalName(String goalName) {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"        this.goalName \u003d goalName;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"STAung07"},"content":"     * Setter for type of goal.","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"STAung07"},"content":"     * Used to edit the type of the goal.","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"STAung07"},"content":"     * @param goalType New type the goal is to be updated with.","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"STAung07"},"content":"    public void setGoalType(GoalType goalType) {","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"STAung07"},"content":"        this.goalType \u003d goalType;","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"kahhe"},"content":"     * Getter for name of goal.","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kahhe"},"content":"     * @return Name of goal.","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"STAung07"},"content":"    public String getGoalName() {","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"STAung07"},"content":"        return goalName;","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for description of the goal.","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"     * @return String containing goal name and type.","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"        return getGoalTypeCharacter() + \" \" + goalName;","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"STAung07"},"content":"     * Getter for start date of goal.","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"STAung07"},"content":"     * @return Start Date of a goal.","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"STAung07"},"content":"    public Date getStartDate() {","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"STAung07"},"content":"        return this.startDate;","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for startDate of the goal in string format. (For storage)","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"DJ-Tan"},"content":"     * @return Start date formatted as a string.","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"STAung07"},"content":"    public String getStringStartDate() {","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"DJ-Tan"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"ddMMyyyy\");","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"DJ-Tan"},"content":"        return dateFormat.format(this.startDate);","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for startDate of the goal in string format. (For printing)","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"DJ-Tan"},"content":"     * @return Start date formatted as a string.","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"DJ-Tan"},"content":"    public String getPrintableStartDate() {","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"DJ-Tan"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd-MMM-yyyy\");","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"DJ-Tan"},"content":"        return dateFormat.format(this.startDate);","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for endDate of the goal.","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"DJ-Tan"},"content":"     * @return End date of a goal.","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"DJ-Tan"},"content":"    public Date getEndDate() {","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"DJ-Tan"},"content":"        return this.endDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"STAung07"},"content":"    public void setEndDate(Date endDate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"STAung07"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for endDate of the goal in string format. (For storage)","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"DJ-Tan"},"content":"     * @return End date formatted as a string.","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"DJ-Tan"},"content":"    public String getStringEndDate() {","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"DJ-Tan"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"ddMMyyyy\");","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"DJ-Tan"},"content":"        return dateFormat.format(this.endDate);","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for endDate of the goal in string format. (For printing)","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"DJ-Tan"},"content":"     * @return End date formatted as a string.","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"DJ-Tan"},"content":"    public String getPrintableEndDate() {","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"DJ-Tan"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd-MMM-yyyy\");","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"DJ-Tan"},"content":"        return dateFormat.format(this.endDate);","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for habitList.","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"DJ-Tan"},"content":"     * @return ArrayList of habits.","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"DJ-Tan"},"content":"    public ArrayList\u003cHabit\u003e getHabitList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"DJ-Tan"},"content":"        return habitList;","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"DJ-Tan"},"content":"     * Returns the size of the habitList.","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"DJ-Tan"},"content":"     * @return Size of habitList.","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"DJ-Tan"},"content":"    public int getHabitListSize() {","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"DJ-Tan"},"content":"        return habitList.size();","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"DJ-Tan"},"content":"     * Adds a habit to the goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"STAung07"},"content":"     * From user input, need to addProgress().","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"DJ-Tan"},"content":"     * @param habit Habit to be added to the goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"DJ-Tan"},"content":"    public void addHabit(Habit habit) {","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"DJ-Tan"},"content":"        habitList.add(habit);","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"STAung07"},"content":"     * Adds a habit to the current goal.","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"STAung07"},"content":"     * From storage, no need to addProgress() as progress obtained from storage.","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"STAung07"},"content":"     * @param habit Habit being added to habitList","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"STAung07"},"content":"    public void addHabitFromStorage(Habit habit) {","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"STAung07"},"content":"        habitList.add(habit);","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"DJ-Tan"},"content":"     * Removes a habit from the goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"DJ-Tan"},"content":"     * @param habitIndex Index corresponding to habit in the habitList.","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"DJ-Tan"},"content":"    public void removeHabit(int habitIndex) {","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"DJ-Tan"},"content":"        habitList.remove(habitIndex);","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":184,"author":{"gitId":"STAung07"},"content":"     * Sets a habit at user specified index as done.","lastModifiedDate":"2021-10-14"},{"lineNumber":185,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":186,"author":{"gitId":"STAung07"},"content":"     * @param habitIndex Index corresponding to habit in the habitList","lastModifiedDate":"2021-10-14"},{"lineNumber":187,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":188,"author":{"gitId":"STAung07"},"content":"    public void doneHabit(int habitIndex) {","lastModifiedDate":"2021-10-14"},{"lineNumber":189,"author":{"gitId":"STAung07"},"content":"        Habit habit \u003d habitList.get(habitIndex);","lastModifiedDate":"2021-10-14"},{"lineNumber":190,"author":{"gitId":"STAung07"},"content":"        // update key value pair in map for current iteration","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"STAung07"},"content":"        Date currDate \u003d new Date();","lastModifiedDate":"2021-10-28"},{"lineNumber":192,"author":{"gitId":"STAung07"},"content":"        habit.completeInterval(currDate);","lastModifiedDate":"2021-10-28"},{"lineNumber":193,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":194,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":195,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the number of habits in a goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"DJ-Tan"},"content":"     * @return Integer number of habits associated with the goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":200,"author":{"gitId":"DJ-Tan"},"content":"    public int getListLength() {","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"DJ-Tan"},"content":"        return habitList.size();","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":204,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":205,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":206,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the name of the goalType.","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":208,"author":{"gitId":"DJ-Tan"},"content":"     * @return String of the goalType name.","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":210,"author":{"gitId":"STAung07"},"content":"    public String getGoalTypeStr() {","lastModifiedDate":"2021-10-28"},{"lineNumber":211,"author":{"gitId":"DJ-Tan"},"content":"        switch (this.goalType) {","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"DJ-Tan"},"content":"        case SLEEP:","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"DJ-Tan"},"content":"            return \"Sleep\";","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"DJ-Tan"},"content":"        case FOOD:","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"DJ-Tan"},"content":"            return \"Food\";","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"DJ-Tan"},"content":"        case EXERCISE:","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"DJ-Tan"},"content":"            return \"Exercise\";","lastModifiedDate":"2021-10-25"},{"lineNumber":218,"author":{"gitId":"DJ-Tan"},"content":"        case STUDY:","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"DJ-Tan"},"content":"            return \"Study\";","lastModifiedDate":"2021-10-25"},{"lineNumber":220,"author":{"gitId":"DJ-Tan"},"content":"        default:","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"DJ-Tan"},"content":"            return \"Default\";","lastModifiedDate":"2021-10-25"},{"lineNumber":222,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":223,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":224,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":226,"author":{"gitId":"STAung07"},"content":"     * Gets the goalType.","lastModifiedDate":"2021-10-28"},{"lineNumber":227,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":228,"author":{"gitId":"STAung07"},"content":"     * @return GoalType of Goal.","lastModifiedDate":"2021-10-28"},{"lineNumber":229,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":230,"author":{"gitId":"STAung07"},"content":"    public GoalType getGoalType() {","lastModifiedDate":"2021-10-28"},{"lineNumber":231,"author":{"gitId":"STAung07"},"content":"        return this.goalType;","lastModifiedDate":"2021-10-28"},{"lineNumber":232,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":233,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":234,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":235,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the corresponding 2-character code for the goalType.","lastModifiedDate":"2021-10-27"},{"lineNumber":236,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":237,"author":{"gitId":"DJ-Tan"},"content":"     * @return String of the goalType 2-character code.","lastModifiedDate":"2021-10-27"},{"lineNumber":238,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":239,"author":{"gitId":"DJ-Tan"},"content":"    public String getGoalTypeCharacter() {","lastModifiedDate":"2021-10-27"},{"lineNumber":240,"author":{"gitId":"DJ-Tan"},"content":"        switch (this.goalType) {","lastModifiedDate":"2021-10-27"},{"lineNumber":241,"author":{"gitId":"DJ-Tan"},"content":"        case SLEEP:","lastModifiedDate":"2021-10-27"},{"lineNumber":242,"author":{"gitId":"flerovious"},"content":"            return \"[SL]\";","lastModifiedDate":"2021-10-28"},{"lineNumber":243,"author":{"gitId":"DJ-Tan"},"content":"        case FOOD:","lastModifiedDate":"2021-10-27"},{"lineNumber":244,"author":{"gitId":"DJ-Tan"},"content":"            return \"[FD]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":245,"author":{"gitId":"DJ-Tan"},"content":"        case EXERCISE:","lastModifiedDate":"2021-10-27"},{"lineNumber":246,"author":{"gitId":"DJ-Tan"},"content":"            return \"[EX]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":247,"author":{"gitId":"DJ-Tan"},"content":"        case STUDY:","lastModifiedDate":"2021-10-27"},{"lineNumber":248,"author":{"gitId":"DJ-Tan"},"content":"            return \"[SD]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":249,"author":{"gitId":"DJ-Tan"},"content":"        default:","lastModifiedDate":"2021-10-27"},{"lineNumber":250,"author":{"gitId":"DJ-Tan"},"content":"            return \"[DF]\";","lastModifiedDate":"2021-10-27"},{"lineNumber":251,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":252,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":253,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":254,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":255,"author":{"gitId":"DJ-Tan"},"content":"     * Computes the average completion rate of the goal.","lastModifiedDate":"2021-10-27"},{"lineNumber":256,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":257,"author":{"gitId":"DJ-Tan"},"content":"     * @return Average completion rate of the goal (as an int).","lastModifiedDate":"2021-10-27"},{"lineNumber":258,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":259,"author":{"gitId":"DJ-Tan"},"content":"    public String computeAverageCompletionRate() {","lastModifiedDate":"2021-10-27"},{"lineNumber":260,"author":{"gitId":"DJ-Tan"},"content":"        int habitListSize \u003d getHabitListSize();","lastModifiedDate":"2021-10-27"},{"lineNumber":261,"author":{"gitId":"DJ-Tan"},"content":"        if (habitListSize \u003d\u003d 0) {","lastModifiedDate":"2021-10-27"},{"lineNumber":262,"author":{"gitId":"DJ-Tan"},"content":"            return \"Not Applicable\";","lastModifiedDate":"2021-10-27"},{"lineNumber":263,"author":{"gitId":"DJ-Tan"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":264,"author":{"gitId":"DJ-Tan"},"content":"            double sum \u003d 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":265,"author":{"gitId":"DJ-Tan"},"content":"            for (Habit habit : this.habitList) {","lastModifiedDate":"2021-10-27"},{"lineNumber":266,"author":{"gitId":"DJ-Tan"},"content":"                sum +\u003d habit.computeHabitCompletionRate();","lastModifiedDate":"2021-10-27"},{"lineNumber":267,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":268,"author":{"gitId":"DJ-Tan"},"content":"            return String.format(\"%.2f\", sum / getHabitListSize()) + \"%\";","lastModifiedDate":"2021-11-04"},{"lineNumber":269,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":270,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":271,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":272,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":273,"author":{"gitId":"DJ-Tan"},"content":"     * Gets an arraylist of all due habits of the goal.","lastModifiedDate":"2021-10-27"},{"lineNumber":274,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":275,"author":{"gitId":"DJ-Tan"},"content":"     * @return Arraylist of all due habits of the goal.","lastModifiedDate":"2021-10-27"},{"lineNumber":276,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":277,"author":{"gitId":"DJ-Tan"},"content":"    public ArrayList\u003cString\u003e getDueHabits() {","lastModifiedDate":"2021-10-27"},{"lineNumber":278,"author":{"gitId":"DJ-Tan"},"content":"        ArrayList\u003cString\u003e dueHabits \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":279,"author":{"gitId":"DJ-Tan"},"content":"        String dueHabitDescription;","lastModifiedDate":"2021-10-27"},{"lineNumber":280,"author":{"gitId":"DJ-Tan"},"content":"        for (int habitIndex \u003d 0; habitIndex \u003c getHabitListSize(); habitIndex++) {","lastModifiedDate":"2021-10-27"},{"lineNumber":281,"author":{"gitId":"DJ-Tan"},"content":"            dueHabitDescription \u003d this.habitList.get(habitIndex).getIntervalDescriptionIfDue();","lastModifiedDate":"2021-10-27"},{"lineNumber":282,"author":{"gitId":"DJ-Tan"},"content":"            if (dueHabitDescription !\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":283,"author":{"gitId":"DJ-Tan"},"content":"                dueHabits.add(\"H:\" + (habitIndex + 1) + \" | \" + dueHabitDescription);","lastModifiedDate":"2021-10-27"},{"lineNumber":284,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":285,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":286,"author":{"gitId":"DJ-Tan"},"content":"        return dueHabits;","lastModifiedDate":"2021-10-27"},{"lineNumber":287,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":288,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":289,"author":{"gitId":"DJ-Tan"},"content":"    /* The following commands will be used for implementing the quick view of goal (not implemented)","lastModifiedDate":"2021-10-28"},{"lineNumber":290,"author":{"gitId":"DJ-Tan"},"content":"     * isCompleted()","lastModifiedDate":"2021-10-27"},{"lineNumber":291,"author":{"gitId":"DJ-Tan"},"content":"     * getCompletionRates()","lastModifiedDate":"2021-10-27"},{"lineNumber":292,"author":{"gitId":"DJ-Tan"},"content":"     * getHabitNames()","lastModifiedDate":"2021-10-27"},{"lineNumber":293,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":294,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":295,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":296,"author":{"gitId":"DJ-Tan"},"content":"     * Checks whether the goal is completed.","lastModifiedDate":"2021-10-27"},{"lineNumber":297,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":298,"author":{"gitId":"DJ-Tan"},"content":"     * @return True if the goal is completed, false if not.","lastModifiedDate":"2021-10-27"},{"lineNumber":299,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":300,"author":{"gitId":"DJ-Tan"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2021-10-27"},{"lineNumber":301,"author":{"gitId":"DJ-Tan"},"content":"        Date currDate \u003d new Date();","lastModifiedDate":"2021-10-27"},{"lineNumber":302,"author":{"gitId":"DJ-Tan"},"content":"        return currDate.after(this.endDate);","lastModifiedDate":"2021-10-27"},{"lineNumber":303,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":304,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":305,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":306,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the completion rate of each habit and the total average.","lastModifiedDate":"2021-10-27"},{"lineNumber":307,"author":{"gitId":"DJ-Tan"},"content":"     * Total average is saved as the last index in the integer arraylist.","lastModifiedDate":"2021-10-27"},{"lineNumber":308,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":309,"author":{"gitId":"DJ-Tan"},"content":"     * @return ArrayList containing a list of all completion rates.","lastModifiedDate":"2021-10-27"},{"lineNumber":310,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":311,"author":{"gitId":"DJ-Tan"},"content":"    public ArrayList\u003cDouble\u003e getCompletionRates() {","lastModifiedDate":"2021-11-04"},{"lineNumber":312,"author":{"gitId":"DJ-Tan"},"content":"        ArrayList\u003cDouble\u003e completionRates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":313,"author":{"gitId":"DJ-Tan"},"content":"        double sum \u003d 0;","lastModifiedDate":"2021-11-04"},{"lineNumber":314,"author":{"gitId":"DJ-Tan"},"content":"        double completionRate;","lastModifiedDate":"2021-11-04"},{"lineNumber":315,"author":{"gitId":"DJ-Tan"},"content":"        for (Habit habit : this.habitList) {","lastModifiedDate":"2021-10-27"},{"lineNumber":316,"author":{"gitId":"DJ-Tan"},"content":"            completionRate \u003d habit.computeHabitCompletionRate();","lastModifiedDate":"2021-10-27"},{"lineNumber":317,"author":{"gitId":"DJ-Tan"},"content":"            completionRates.add(completionRate);","lastModifiedDate":"2021-10-27"},{"lineNumber":318,"author":{"gitId":"DJ-Tan"},"content":"            sum +\u003d completionRate;","lastModifiedDate":"2021-10-27"},{"lineNumber":319,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":320,"author":{"gitId":"DJ-Tan"},"content":"        double averageCompletionRate \u003d sum / getHabitListSize();","lastModifiedDate":"2021-11-04"},{"lineNumber":321,"author":{"gitId":"DJ-Tan"},"content":"        completionRates.add(averageCompletionRate);","lastModifiedDate":"2021-10-27"},{"lineNumber":322,"author":{"gitId":"DJ-Tan"},"content":"        return completionRates;","lastModifiedDate":"2021-10-27"},{"lineNumber":323,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":324,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":325,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":326,"author":{"gitId":"DJ-Tan"},"content":"     * Gets an arrayList of all the habit names.","lastModifiedDate":"2021-10-27"},{"lineNumber":327,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":328,"author":{"gitId":"DJ-Tan"},"content":"     * @return Arraylist containing a list of all habit names.","lastModifiedDate":"2021-10-27"},{"lineNumber":329,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":330,"author":{"gitId":"DJ-Tan"},"content":"    public ArrayList\u003cString\u003e getHabitNames() {","lastModifiedDate":"2021-10-27"},{"lineNumber":331,"author":{"gitId":"DJ-Tan"},"content":"        ArrayList\u003cString\u003e habitNames \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":332,"author":{"gitId":"DJ-Tan"},"content":"        for (Habit habit : this.habitList) {","lastModifiedDate":"2021-10-27"},{"lineNumber":333,"author":{"gitId":"DJ-Tan"},"content":"            habitNames.add(habit.getHabitName());","lastModifiedDate":"2021-10-27"},{"lineNumber":334,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":335,"author":{"gitId":"DJ-Tan"},"content":"        return habitNames;","lastModifiedDate":"2021-10-27"},{"lineNumber":336,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":337,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":338,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":339,"author":{"gitId":"STAung07"},"content":"     * Checks if newHabit attempted to be added by user for curr Goal is already inside list.","lastModifiedDate":"2021-10-28"},{"lineNumber":340,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":341,"author":{"gitId":"STAung07"},"content":"     * @param newName name attempted to be added","lastModifiedDate":"2021-10-28"},{"lineNumber":342,"author":{"gitId":"STAung07"},"content":"     * @return True if name already inside, False other wise","lastModifiedDate":"2021-10-28"},{"lineNumber":343,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":344,"author":{"gitId":"STAung07"},"content":"    public boolean duplicateInHabitList(String newName) {","lastModifiedDate":"2021-10-28"},{"lineNumber":345,"author":{"gitId":"STAung07"},"content":"        ArrayList\u003cString\u003e currHabitNames \u003d getHabitNames();","lastModifiedDate":"2021-10-28"},{"lineNumber":346,"author":{"gitId":"STAung07"},"content":"        for (String currName : currHabitNames) {","lastModifiedDate":"2021-10-28"},{"lineNumber":347,"author":{"gitId":"STAung07"},"content":"            if (newName.equals(currName)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":348,"author":{"gitId":"STAung07"},"content":"                return true;","lastModifiedDate":"2021-10-28"},{"lineNumber":349,"author":{"gitId":"STAung07"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":350,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":351,"author":{"gitId":"STAung07"},"content":"        return false;","lastModifiedDate":"2021-10-28"},{"lineNumber":352,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":353,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":354,"author":{"gitId":"STAung07"},"content":"    public long getNumOfDaysForGoal() {","lastModifiedDate":"2021-11-04"},{"lineNumber":355,"author":{"gitId":"STAung07"},"content":"        LocalDate startDateLD \u003d convertDateToLocalDate(this.startDate);","lastModifiedDate":"2021-11-04"},{"lineNumber":356,"author":{"gitId":"STAung07"},"content":"        LocalDate endDateLD \u003d convertDateToLocalDate(this.endDate);","lastModifiedDate":"2021-11-04"},{"lineNumber":357,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":358,"author":{"gitId":"STAung07"},"content":"        return ChronoUnit.DAYS.between(endDateLD, startDateLD);","lastModifiedDate":"2021-11-04"},{"lineNumber":359,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":360,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":361,"author":{"gitId":"STAung07"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":362,"author":{"gitId":"STAung07"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":363,"author":{"gitId":"STAung07"},"content":"     * The following are private methods that are used to implement SLAP for the","lastModifiedDate":"2021-10-24"},{"lineNumber":364,"author":{"gitId":"STAung07"},"content":"     * above public methods. These methods are positioned at the bottom to better","lastModifiedDate":"2021-10-24"},{"lineNumber":365,"author":{"gitId":"STAung07"},"content":"     * visualise the actual methods that can be called from outside this class.","lastModifiedDate":"2021-10-24"},{"lineNumber":366,"author":{"gitId":"STAung07"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":367,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":368,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":369,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":370,"author":{"gitId":"STAung07"},"content":"     * \u0027Type-casting\u0027 a Date to a LocalDate.","lastModifiedDate":"2021-11-04"},{"lineNumber":371,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":372,"author":{"gitId":"STAung07"},"content":"     * @param date Date to be \u0027type-casted\u0027.","lastModifiedDate":"2021-11-04"},{"lineNumber":373,"author":{"gitId":"STAung07"},"content":"     * @return LocalDate that has been \u0027type-casted\u0027 from Date.","lastModifiedDate":"2021-11-04"},{"lineNumber":374,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":375,"author":{"gitId":"STAung07"},"content":"    private LocalDate convertDateToLocalDate(Date date) {","lastModifiedDate":"2021-11-04"},{"lineNumber":376,"author":{"gitId":"STAung07"},"content":"        return date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();","lastModifiedDate":"2021-11-04"},{"lineNumber":377,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":378,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":379,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":380,"author":{"gitId":"STAung07"},"content":"     * \u0027Type-casting\u0027 a LocalDate to a Date.","lastModifiedDate":"2021-11-04"},{"lineNumber":381,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":382,"author":{"gitId":"STAung07"},"content":"     * @param localDate LocalDate to be \u0027type-casted\u0027.","lastModifiedDate":"2021-11-04"},{"lineNumber":383,"author":{"gitId":"STAung07"},"content":"     * @return Date that has been \u0027type-casted\u0027 from LocalDate.","lastModifiedDate":"2021-11-04"},{"lineNumber":384,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":385,"author":{"gitId":"STAung07"},"content":"    private Date convertLocalDateToDate(LocalDate localDate) {","lastModifiedDate":"2021-11-04"},{"lineNumber":386,"author":{"gitId":"STAung07"},"content":"        return Date.from(localDate.atStartOfDay().atZone(ZoneId.systemDefault()).toInstant());","lastModifiedDate":"2021-11-04"},{"lineNumber":387,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":388,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":389,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"STAung07":118,"huien77":2,"flerovious":1,"DJ-Tan":262,"kahhe":6}},{"path":"src/main/java/happybit/goal/GoalList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.goal;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.habit.Habit;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"huien77"},"content":"import happybit.interval.Interval;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"import java.time.ZoneId;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"public class GoalList {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_EMPTY_GOAL_LIST \u003d \"There are no goals!\";","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_INVALID_GOAL_INDEX \u003d \"There are no goals at that index.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kahhe"},"content":"    private static final String ERROR_NON_POSITIVE_GOAL_INDEX \u003d \"Goal index should be a positive integer.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_EMPTY_HABIT_LIST \u003d \"There are no habits listed under this goal!\";","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_INVALID_HABIT_INDEX \u003d \"There are no habits at this index in your goal.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"kahhe"},"content":"    private static final String ERROR_IDENTICAL_NEW_NAME \u003d \"There is no change in name.\";","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_IDENTICAL_NEW_TYPE \u003d \"There is no change in type.\";","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_IDENTICAL_NEW_DATE \u003d \"There is no change in end date\";","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_DUPLICATE_HABIT_NAME \u003d \"This habit name is already present for this goal\";","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_DUPLICATE_GOAL_NAME \u003d \"This goal name is already present in your list\";","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_NEW_END_DATE_AFTER_START_DATE \u003d \"You cannot have the end date of a goal before \"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"            + \"or on the start date itself.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_NEW_END_DATE_SAME_AS_TODAY \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"            \"You cannot change the end date of a goal to today\u0027s date\";","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_INTERVAL_LONGER_THAN_GOAL_DURATION \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"            \"Your interval for the habit cannot extend to after the end date for the goal\";","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"    protected ArrayList\u003cGoal\u003e goalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"    protected int chosenGoalIndex;","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"     * Constructor of GoalList.","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"STAung07"},"content":"    public GoalList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"        this.goalList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"        this.chosenGoalIndex \u003d -1;","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for goalList.","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"     * @return GoalList consisting of list of added goals.","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"STAung07"},"content":"    public ArrayList\u003cGoal\u003e getGoalList() {","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"STAung07"},"content":"        return goalList;","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the goal type of the chosen goal.","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"     * @return Goal type of the chosen goal.","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"    public GoalType getChosenGoalType() {","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"        GoalType goalType \u003d GoalType.DEFAULT;","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"huien77"},"content":"            goalType \u003d this.getGoal(chosenGoalIndex).goalType;","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"        } catch (HaBitCommandException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"            // Exception should never be thrown here","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"        return goalType;","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"     * Sets a goal number to be the index of a goal in the goalList.","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalIndex Integer index of a goal.","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"    public void setChosenGoalIndex(int goalIndex) throws HaBitCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"        getGoal(goalIndex);  // Checks if goal corresponding to goal index exists","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"DJ-Tan"},"content":"        this.chosenGoalIndex \u003d goalIndex;","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the number of items in the goal list.","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"DJ-Tan"},"content":"     * @return Number of items in the goal list.","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"    public int getListLength() {","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"        return goalList.size();","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"DJ-Tan"},"content":"     * Adds a goal to the goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"STAung07"},"content":"     * For storage","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"DJ-Tan"},"content":"     * @param goal Goal to be added.","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"DJ-Tan"},"content":"    public void addGoal(Goal goal) {","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"DJ-Tan"},"content":"        goalList.add(goal);","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"flerovious"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"flerovious"},"content":"     * Adds a goal to the goalList.","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"STAung07"},"content":"     * With Ui for printing message","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"flerovious"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"flerovious"},"content":"     * @param goal Goal to be added.","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"STAung07"},"content":"     * @param printManager User Interface class for printing added goal.","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"STAung07"},"content":"    public void addGoal(Goal goal, PrintManager printManager) throws HaBitCommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"STAung07"},"content":"        if (duplicateInGoalList(goal.getGoalName())) {","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"STAung07"},"content":"            throw new HaBitCommandException(ERROR_DUPLICATE_GOAL_NAME);","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"flerovious"},"content":"        goalList.add(goal);","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"STAung07"},"content":"        printManager.printAddedGoal(goal.getDescription());","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"flerovious"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"flerovious"},"content":"     * Adds a habit that is linked to a goal.","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"STAung07"},"content":"     * From storage.","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"flerovious"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"flerovious"},"content":"     * @param habit     Habit to be linked to a goal.","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"flerovious"},"content":"     * @param goalIndex Integer index of goal in goalList.","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"DJ-Tan"},"content":"    public void addHabitToGoal(Habit habit, int goalIndex) throws HaBitCommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"STAung07"},"content":"        Goal goal \u003d getGoal(goalIndex);","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"STAung07"},"content":"        goal.addHabitFromStorage(habit);","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"DJ-Tan"},"content":"     * Adds a habit that is linked to a goal.","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"DJ-Tan"},"content":"     * With Ui for printing message.","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"DJ-Tan"},"content":"     * @param habit     Habit to be linked to a goal.","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalIndex Integer index of goal in goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"DJ-Tan"},"content":"     * @param printManager User Interface class for printing added habit to goal in goalList.","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"DJ-Tan"},"content":"    public void addHabitToGoal(Habit habit, int goalIndex, PrintManager printManager) throws HaBitCommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"STAung07"},"content":"        Goal goal \u003d getGoal(goalIndex);","lastModifiedDate":"2021-10-14"},{"lineNumber":134,"author":{"gitId":"STAung07"},"content":"        LocalDate startDateLD \u003d convertDateToLocalDate(goal.getStartDate());","lastModifiedDate":"2021-11-05"},{"lineNumber":135,"author":{"gitId":"STAung07"},"content":"        LocalDate endDateLD \u003d convertDateToLocalDate(goal.getEndDate());","lastModifiedDate":"2021-11-05"},{"lineNumber":136,"author":{"gitId":"STAung07"},"content":"        LocalDate startDatePlusHabitInterval \u003d startDateLD.plusDays(habit.getIntervalLength());","lastModifiedDate":"2021-11-05"},{"lineNumber":137,"author":{"gitId":"STAung07"},"content":"        // if interval of habit is more than maxDays, not possible","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"STAung07"},"content":"        if (startDatePlusHabitInterval.isAfter(endDateLD)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":139,"author":{"gitId":"STAung07"},"content":"            throw new HaBitCommandException(ERROR_INTERVAL_LONGER_THAN_GOAL_DURATION);","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"STAung07"},"content":"        // check duplicate for currHabit","lastModifiedDate":"2021-10-28"},{"lineNumber":142,"author":{"gitId":"STAung07"},"content":"        if (goal.duplicateInHabitList(habit.getHabitName())) {","lastModifiedDate":"2021-10-28"},{"lineNumber":143,"author":{"gitId":"STAung07"},"content":"            throw new HaBitCommandException(ERROR_DUPLICATE_HABIT_NAME);","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"huien77"},"content":"        Habit newHabit \u003d updateHabitEndDate(goal, habit);","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"huien77"},"content":"        newHabit.populateIntervalsDuringHabitCreation();","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"huien77"},"content":"        goal.addHabit(newHabit);","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"huien77"},"content":"        printManager.printAddedHabit(newHabit.getHabitName(), goal.getDescription());","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"DJ-Tan"},"content":"     * Deletes a goal from the goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalIndex Integer index of the goal to be deleted from goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":155,"author":{"gitId":"STAung07"},"content":"     * @param printManager User Interface class for printing deleted goal to output.","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If the goalIndex is not within the index range of the goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"STAung07"},"content":"    public void deleteGoal(int goalIndex, PrintManager printManager) throws HaBitCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"DJ-Tan"},"content":"        Goal goal \u003d getGoal(goalIndex);","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"DJ-Tan"},"content":"        updateChosenGoalIndex(goalIndex);","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"DJ-Tan"},"content":"        goalList.remove(goal);","lastModifiedDate":"2021-10-13"},{"lineNumber":162,"author":{"gitId":"STAung07"},"content":"        printManager.printRemovedGoal(goal.getDescription());","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":164,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":165,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":166,"author":{"gitId":"DJ-Tan"},"content":"     * Deletes a habit that is linked to a goal.","lastModifiedDate":"2021-10-13"},{"lineNumber":167,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":168,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalIndex  Integer index of goal in goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":169,"author":{"gitId":"DJ-Tan"},"content":"     * @param habitIndex Integer index of habit to be deleted in goal.","lastModifiedDate":"2021-10-13"},{"lineNumber":170,"author":{"gitId":"STAung07"},"content":"     * @param printManager User Interface class for printing deleted habit from goal to output.","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If the goalIndex is not within the index range of the goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":172,"author":{"gitId":"DJ-Tan"},"content":"     *                               If the habitIndex is not within the index range of the habitList.","lastModifiedDate":"2021-10-13"},{"lineNumber":173,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":174,"author":{"gitId":"STAung07"},"content":"    public void deleteHabitFromGoal(int goalIndex, int habitIndex, PrintManager printManager)","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"STAung07"},"content":"            throws HaBitCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"DJ-Tan"},"content":"        Goal goal \u003d getGoal(goalIndex);","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"DJ-Tan"},"content":"        ArrayList\u003cHabit\u003e habitList \u003d goal.getHabitList();","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"DJ-Tan"},"content":"        Habit habit \u003d getHabit(habitList,habitIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"DJ-Tan"},"content":"        goal.removeHabit(habitIndex);","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"STAung07"},"content":"        printManager.printRemovedHabit(goal.getDescription(), habit.getHabitName());","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":182,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":183,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":184,"author":{"gitId":"STAung07"},"content":"     * Marks Progress for a goal as done.","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"DJ-Tan"},"content":"     * new Date() was used since we assume that the habit can only be marked as completed on the day itself.","lastModifiedDate":"2021-10-28"},{"lineNumber":186,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":187,"author":{"gitId":"STAung07"},"content":"     * @param goalIndex Integer index of goal in goal list","lastModifiedDate":"2021-10-14"},{"lineNumber":188,"author":{"gitId":"STAung07"},"content":"     * @param habitIndex Integer index of habit to be marked as done in goal","lastModifiedDate":"2021-10-14"},{"lineNumber":189,"author":{"gitId":"STAung07"},"content":"     * @param printManager User Interface class for printing Habit marked as done to output.","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"STAung07"},"content":"     * @throws HaBitCommandException If goalIndex is not within index range of goalList.","lastModifiedDate":"2021-10-14"},{"lineNumber":191,"author":{"gitId":"STAung07"},"content":"     *                               if habitIndex is not within index range of the habitList","lastModifiedDate":"2021-10-14"},{"lineNumber":192,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":193,"author":{"gitId":"STAung07"},"content":"    public void doneHabitFromGoal(int goalIndex, int habitIndex, PrintManager printManager)","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"STAung07"},"content":"            throws HaBitCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"huien77"},"content":"        Goal goal \u003d this.getGoal(goalIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"DJ-Tan"},"content":"        ArrayList\u003cHabit\u003e habitList \u003d goal.getHabitList();","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"huien77"},"content":"        Habit habit \u003d this.getHabit(habitList, habitIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"DJ-Tan"},"content":"        goal.doneHabit(habitIndex);","lastModifiedDate":"2021-10-21"},{"lineNumber":199,"author":{"gitId":"DJ-Tan"},"content":"        String[] strDates \u003d habit.getDoneHabitDates(new Date());","lastModifiedDate":"2021-10-28"},{"lineNumber":200,"author":{"gitId":"DJ-Tan"},"content":"        printManager.printDoneHabit(goal.getDescription(), habit.getHabitName(), strDates);","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":202,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":203,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":204,"author":{"gitId":"kahhe"},"content":"     * Lists all the goals in the goalList.","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":206,"author":{"gitId":"STAung07"},"content":"     * @param printManager User Interface class for printing goalList to output.","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If there are no items in the goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":208,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":209,"author":{"gitId":"kahhe"},"content":"    public void listGoals(PrintManager printManager, String gibberish) throws HaBitCommandException {","lastModifiedDate":"2021-11-05"},{"lineNumber":210,"author":{"gitId":"DJ-Tan"},"content":"        if (goalList.isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":211,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitCommandException(ERROR_EMPTY_GOAL_LIST);","lastModifiedDate":"2021-10-13"},{"lineNumber":212,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":213,"author":{"gitId":"kahhe"},"content":"        printManager.printGoalList(goalList, getListLength(), gibberish);","lastModifiedDate":"2021-11-05"},{"lineNumber":214,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":215,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":216,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":217,"author":{"gitId":"kahhe"},"content":"     * Lists all the habits of a goal.","lastModifiedDate":"2021-10-20"},{"lineNumber":218,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":219,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalIndex Integer index of goal in goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":220,"author":{"gitId":"STAung07"},"content":"     * @param printManager        User Interface class for printing habitList to output.","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If the goalIndex is not within the range of the goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":222,"author":{"gitId":"DJ-Tan"},"content":"     *                            If there are no items in the habitList.","lastModifiedDate":"2021-10-13"},{"lineNumber":223,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":224,"author":{"gitId":"STAung07"},"content":"    public void listHabitsFromGoal(int goalIndex, PrintManager printManager) throws HaBitCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"DJ-Tan"},"content":"        Goal goal \u003d getGoal(goalIndex);","lastModifiedDate":"2021-10-13"},{"lineNumber":226,"author":{"gitId":"DJ-Tan"},"content":"        ArrayList\u003cHabit\u003e habitList \u003d goal.getHabitList();","lastModifiedDate":"2021-10-13"},{"lineNumber":227,"author":{"gitId":"DJ-Tan"},"content":"        int numOfHabits \u003d goal.getListLength();","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"DJ-Tan"},"content":"        if (habitList.isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":229,"author":{"gitId":"STAung07"},"content":"            throw new HaBitCommandException(ERROR_EMPTY_HABIT_LIST);","lastModifiedDate":"2021-10-14"},{"lineNumber":230,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":231,"author":{"gitId":"STAung07"},"content":"        printManager.printHabitList(goal.getGoalName(), habitList, numOfHabits);","lastModifiedDate":"2021-10-25"},{"lineNumber":232,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":233,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":234,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":235,"author":{"gitId":"DJ-Tan"},"content":"     * Lists all the habits that can be marked as done but are not completed.","lastModifiedDate":"2021-10-27"},{"lineNumber":236,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":237,"author":{"gitId":"DJ-Tan"},"content":"     * @return Arraylist containing details of all the habits to be done.","lastModifiedDate":"2021-10-27"},{"lineNumber":238,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":239,"author":{"gitId":"DJ-Tan"},"content":"    public ArrayList\u003cString\u003e listDueHabits() {","lastModifiedDate":"2021-10-27"},{"lineNumber":240,"author":{"gitId":"DJ-Tan"},"content":"        ArrayList\u003cString\u003e habitsToDoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":241,"author":{"gitId":"DJ-Tan"},"content":"        for (int goalIndex \u003d 0; goalIndex \u003c getListLength(); goalIndex++) {","lastModifiedDate":"2021-10-27"},{"lineNumber":242,"author":{"gitId":"DJ-Tan"},"content":"            for (String s : goalList.get(goalIndex).getDueHabits()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":243,"author":{"gitId":"DJ-Tan"},"content":"                habitsToDoList.add(\"G:\" + (goalIndex + 1) + \" \" + s);","lastModifiedDate":"2021-10-27"},{"lineNumber":244,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":245,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":246,"author":{"gitId":"DJ-Tan"},"content":"        return habitsToDoList;","lastModifiedDate":"2021-10-27"},{"lineNumber":247,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":248,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":249,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":250,"author":{"gitId":"kahhe"},"content":"     * Changes and updates the name of a goal with a new name from user.","lastModifiedDate":"2021-10-20"},{"lineNumber":251,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":252,"author":{"gitId":"kahhe"},"content":"     * @param goalIndex    Index of the goal in goalList.","lastModifiedDate":"2021-10-20"},{"lineNumber":253,"author":{"gitId":"kahhe"},"content":"     * @param newGoalName  New name user wants to change the goal to.","lastModifiedDate":"2021-10-20"},{"lineNumber":254,"author":{"gitId":"DJ-Tan"},"content":"     * @param printManager Prints messages to the console.","lastModifiedDate":"2021-10-24"},{"lineNumber":255,"author":{"gitId":"kahhe"},"content":"     * @throws HaBitCommandException If the goalIndex is not within the range of the goalList.","lastModifiedDate":"2021-10-20"},{"lineNumber":256,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":257,"author":{"gitId":"STAung07"},"content":"    public void updateGoalName(int goalIndex, String newGoalName, PrintManager printManager)","lastModifiedDate":"2021-10-21"},{"lineNumber":258,"author":{"gitId":"STAung07"},"content":"            throws HaBitCommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":259,"author":{"gitId":"kahhe"},"content":"        Goal goal \u003d getGoal(goalIndex);","lastModifiedDate":"2021-10-20"},{"lineNumber":260,"author":{"gitId":"kahhe"},"content":"        String oldGoalName \u003d goal.getGoalName();","lastModifiedDate":"2021-10-20"},{"lineNumber":261,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":262,"author":{"gitId":"kahhe"},"content":"        compareNewNameWithOldName(oldGoalName, newGoalName);","lastModifiedDate":"2021-10-28"},{"lineNumber":263,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":264,"author":{"gitId":"kahhe"},"content":"        goal.setGoalName(newGoalName);","lastModifiedDate":"2021-10-20"},{"lineNumber":265,"author":{"gitId":"kahhe"},"content":"        goalList.set(goalIndex, goal);","lastModifiedDate":"2021-10-20"},{"lineNumber":266,"author":{"gitId":"DJ-Tan"},"content":"        printManager.printUpdatedGoalName(oldGoalName, newGoalName);","lastModifiedDate":"2021-10-28"},{"lineNumber":267,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":268,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":269,"author":{"gitId":"STAung07"},"content":"    public void updateGoalEndDate(int goalIndex, Date newDate, PrintManager printManager) throws HaBitCommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":270,"author":{"gitId":"STAung07"},"content":"        Goal goal \u003d getGoal(goalIndex);","lastModifiedDate":"2021-10-28"},{"lineNumber":271,"author":{"gitId":"STAung07"},"content":"        Date oldDate \u003d goal.getEndDate();","lastModifiedDate":"2021-10-28"},{"lineNumber":272,"author":{"gitId":"STAung07"},"content":"        Date startDate \u003d goal.getStartDate();","lastModifiedDate":"2021-11-04"},{"lineNumber":273,"author":{"gitId":"STAung07"},"content":"        // check if new end date same as previous end date","lastModifiedDate":"2021-11-04"},{"lineNumber":274,"author":{"gitId":"STAung07"},"content":"        compareOldDateWithNewDate(oldDate, newDate);","lastModifiedDate":"2021-10-28"},{"lineNumber":275,"author":{"gitId":"STAung07"},"content":"        // check if new end date before start date","lastModifiedDate":"2021-11-04"},{"lineNumber":276,"author":{"gitId":"STAung07"},"content":"        checkNewDateAfterStartDate(startDate, newDate);","lastModifiedDate":"2021-11-04"},{"lineNumber":277,"author":{"gitId":"STAung07"},"content":"        // check if new date is same as today","lastModifiedDate":"2021-11-05"},{"lineNumber":278,"author":{"gitId":"STAung07"},"content":"        checkNewDateIsToday(newDate);","lastModifiedDate":"2021-11-05"},{"lineNumber":279,"author":{"gitId":"STAung07"},"content":"        goal.setEndDate(newDate);","lastModifiedDate":"2021-10-28"},{"lineNumber":280,"author":{"gitId":"STAung07"},"content":"        // Go through all habits for Goal","lastModifiedDate":"2021-10-28"},{"lineNumber":281,"author":{"gitId":"STAung07"},"content":"        // change endDate for all of them + call updateIntervals","lastModifiedDate":"2021-10-28"},{"lineNumber":282,"author":{"gitId":"STAung07"},"content":"        ArrayList\u003cHabit\u003e habits \u003d goal.getHabitList();","lastModifiedDate":"2021-10-28"},{"lineNumber":283,"author":{"gitId":"STAung07"},"content":"        for (Habit habit : habits) {","lastModifiedDate":"2021-10-28"},{"lineNumber":284,"author":{"gitId":"STAung07"},"content":"            habit.setEndDate(newDate);","lastModifiedDate":"2021-10-28"},{"lineNumber":285,"author":{"gitId":"STAung07"},"content":"            // update Interval Lengths using same interval for habit","lastModifiedDate":"2021-10-28"},{"lineNumber":286,"author":{"gitId":"STAung07"},"content":"            habit.updateLengthOfInterval(habit.getIntervalLength());","lastModifiedDate":"2021-10-28"},{"lineNumber":287,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":288,"author":{"gitId":"STAung07"},"content":"        String oldDateString \u003d dateToString(oldDate);","lastModifiedDate":"2021-11-04"},{"lineNumber":289,"author":{"gitId":"STAung07"},"content":"        String goalName \u003d goal.getGoalName();","lastModifiedDate":"2021-10-28"},{"lineNumber":290,"author":{"gitId":"STAung07"},"content":"        String newDateString \u003d goal.getPrintableEndDate();","lastModifiedDate":"2021-11-04"},{"lineNumber":291,"author":{"gitId":"STAung07"},"content":"        printManager.printUpdatedGoalEndDate(goalName, oldDateString, newDateString);","lastModifiedDate":"2021-10-28"},{"lineNumber":292,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":293,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":294,"author":{"gitId":"STAung07"},"content":"    public void updateGoalType(int goalIndex, GoalType newGoalType, PrintManager printManager)","lastModifiedDate":"2021-10-28"},{"lineNumber":295,"author":{"gitId":"STAung07"},"content":"            throws HaBitCommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":296,"author":{"gitId":"STAung07"},"content":"        Goal goal \u003d getGoal(goalIndex);","lastModifiedDate":"2021-10-28"},{"lineNumber":297,"author":{"gitId":"STAung07"},"content":"        GoalType oldGoalType \u003d goal.getGoalType();","lastModifiedDate":"2021-10-28"},{"lineNumber":298,"author":{"gitId":"STAung07"},"content":"        final String oldGoalTypeName \u003d goal.getGoalTypeStr();","lastModifiedDate":"2021-10-28"},{"lineNumber":299,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":300,"author":{"gitId":"STAung07"},"content":"        compareNewTypeWithOldType(oldGoalType, newGoalType);","lastModifiedDate":"2021-10-28"},{"lineNumber":301,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":302,"author":{"gitId":"STAung07"},"content":"        goal.setGoalType(newGoalType);","lastModifiedDate":"2021-10-28"},{"lineNumber":303,"author":{"gitId":"STAung07"},"content":"        goalList.set(goalIndex, goal);","lastModifiedDate":"2021-10-28"},{"lineNumber":304,"author":{"gitId":"STAung07"},"content":"        final String newGoalTypeName \u003d goal.getGoalTypeStr();","lastModifiedDate":"2021-10-28"},{"lineNumber":305,"author":{"gitId":"STAung07"},"content":"        printManager.printUpdatedGoalType(oldGoalTypeName, newGoalTypeName);","lastModifiedDate":"2021-10-28"},{"lineNumber":306,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":307,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":308,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":309,"author":{"gitId":"DJ-Tan"},"content":"     * Changes and updates the name of a habit with a new name from user.","lastModifiedDate":"2021-10-24"},{"lineNumber":310,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":311,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalIndex    Index of the goal in goalList.","lastModifiedDate":"2021-10-24"},{"lineNumber":312,"author":{"gitId":"DJ-Tan"},"content":"     * @param habitIndex   Index of the habit in goal.","lastModifiedDate":"2021-10-24"},{"lineNumber":313,"author":{"gitId":"DJ-Tan"},"content":"     * @param printManager Prints messages to the console.","lastModifiedDate":"2021-10-24"},{"lineNumber":314,"author":{"gitId":"DJ-Tan"},"content":"     * @param newHabitName New name user wants to change the habit to.","lastModifiedDate":"2021-10-24"},{"lineNumber":315,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If the goalIndex and/or habitIndex is not within its respective list range.","lastModifiedDate":"2021-10-24"},{"lineNumber":316,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":317,"author":{"gitId":"DJ-Tan"},"content":"    public void updateHabitNameFromGoal(int goalIndex, int habitIndex, String newHabitName, PrintManager printManager)","lastModifiedDate":"2021-10-24"},{"lineNumber":318,"author":{"gitId":"DJ-Tan"},"content":"            throws HaBitCommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":319,"author":{"gitId":"kahhe"},"content":"        Goal goal \u003d getGoal(goalIndex);","lastModifiedDate":"2021-10-28"},{"lineNumber":320,"author":{"gitId":"kahhe"},"content":"        ArrayList\u003cHabit\u003e habitList \u003d goal.getHabitList();","lastModifiedDate":"2021-10-28"},{"lineNumber":321,"author":{"gitId":"kahhe"},"content":"        Habit habit \u003d getHabit(habitList, habitIndex);","lastModifiedDate":"2021-10-28"},{"lineNumber":322,"author":{"gitId":"kahhe"},"content":"        String oldHabitName \u003d habit.getHabitName();","lastModifiedDate":"2021-10-28"},{"lineNumber":323,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":324,"author":{"gitId":"kahhe"},"content":"        compareNewNameWithOldName(oldHabitName, newHabitName);","lastModifiedDate":"2021-10-28"},{"lineNumber":325,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":326,"author":{"gitId":"kahhe"},"content":"        habit.setHabitName(newHabitName);","lastModifiedDate":"2021-10-28"},{"lineNumber":327,"author":{"gitId":"kahhe"},"content":"        habitList.set(habitIndex, habit);","lastModifiedDate":"2021-10-28"},{"lineNumber":328,"author":{"gitId":"DJ-Tan"},"content":"        printManager.printUpdatedHabitName(goal.getGoalName(), oldHabitName, newHabitName);","lastModifiedDate":"2021-10-28"},{"lineNumber":329,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":330,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":331,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":332,"author":{"gitId":"STAung07"},"content":"     * Changes interval of a habit previously set by the user.","lastModifiedDate":"2021-10-25"},{"lineNumber":333,"author":{"gitId":"STAung07"},"content":"     * Need to check and update habitDate as well when executing this command.","lastModifiedDate":"2021-10-25"},{"lineNumber":334,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":335,"author":{"gitId":"STAung07"},"content":"     * @param goalIndex Integer of goal index habit to update is under","lastModifiedDate":"2021-10-25"},{"lineNumber":336,"author":{"gitId":"STAung07"},"content":"     * @param habitIndex Integer of habit index of habit to update","lastModifiedDate":"2021-10-25"},{"lineNumber":337,"author":{"gitId":"STAung07"},"content":"     * @param newInterval Integer of new interval uses wishes to set","lastModifiedDate":"2021-10-25"},{"lineNumber":338,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":339,"author":{"gitId":"STAung07"},"content":"    public void updateHabitIntervalFromGoal(int goalIndex, int habitIndex, int newInterval, PrintManager printManager)","lastModifiedDate":"2021-10-28"},{"lineNumber":340,"author":{"gitId":"STAung07"},"content":"        throws HaBitCommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":341,"author":{"gitId":"STAung07"},"content":"        Goal goal \u003d getGoal(goalIndex);","lastModifiedDate":"2021-10-28"},{"lineNumber":342,"author":{"gitId":"STAung07"},"content":"        // get End Date for current goal of habit","lastModifiedDate":"2021-11-04"},{"lineNumber":343,"author":{"gitId":"STAung07"},"content":"        LocalDate goalEndDateLD \u003d convertDateToLocalDate(goal.getEndDate());","lastModifiedDate":"2021-11-04"},{"lineNumber":344,"author":{"gitId":"STAung07"},"content":"        ArrayList\u003cHabit\u003e habits \u003d goal.getHabitList();","lastModifiedDate":"2021-10-28"},{"lineNumber":345,"author":{"gitId":"STAung07"},"content":"        Habit habit \u003d getHabit(habits, habitIndex);","lastModifiedDate":"2021-10-28"},{"lineNumber":346,"author":{"gitId":"STAung07"},"content":"        // start date for current habit","lastModifiedDate":"2021-11-04"},{"lineNumber":347,"author":{"gitId":"STAung07"},"content":"        LocalDate currHabitStartDateLD \u003d habit.getStartDateLD();","lastModifiedDate":"2021-11-04"},{"lineNumber":348,"author":{"gitId":"STAung07"},"content":"        // add new interval number of days","lastModifiedDate":"2021-11-04"},{"lineNumber":349,"author":{"gitId":"STAung07"},"content":"        LocalDate newHabitEndDateAfterInterval \u003d currHabitStartDateLD.plusDays(newInterval);","lastModifiedDate":"2021-11-04"},{"lineNumber":350,"author":{"gitId":"STAung07"},"content":"        // if after adding new interval it exceeds end date of goal, throw exception","lastModifiedDate":"2021-11-04"},{"lineNumber":351,"author":{"gitId":"STAung07"},"content":"        if (newHabitEndDateAfterInterval.isAfter(goalEndDateLD)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":352,"author":{"gitId":"STAung07"},"content":"            throw new HaBitCommandException(ERROR_INTERVAL_LONGER_THAN_GOAL_DURATION);","lastModifiedDate":"2021-11-04"},{"lineNumber":353,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":354,"author":{"gitId":"STAung07"},"content":"        habit.updateLengthOfInterval(newInterval);","lastModifiedDate":"2021-10-28"},{"lineNumber":355,"author":{"gitId":"STAung07"},"content":"        printManager.printUpdatedHabitInterval(goal.getGoalName(), habit.getHabitName(), newInterval);","lastModifiedDate":"2021-10-28"},{"lineNumber":356,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":357,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":358,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":359,"author":{"gitId":"huien77"},"content":"    public void addIntervalToHabit(int goalIndex, int habitIndex, Interval interval) throws HaBitCommandException {","lastModifiedDate":"2021-10-27"},{"lineNumber":360,"author":{"gitId":"huien77"},"content":"        Goal goal \u003d this.getGoal(goalIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":361,"author":{"gitId":"huien77"},"content":"        Habit habit \u003d this.getHabit(goal.getHabitList(), habitIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":362,"author":{"gitId":"huien77"},"content":"        habit.addInterval(interval);","lastModifiedDate":"2021-10-27"},{"lineNumber":363,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":364,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":365,"author":{"gitId":"DJ-Tan"},"content":"    /*","lastModifiedDate":"2021-10-13"},{"lineNumber":366,"author":{"gitId":"DJ-Tan"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":367,"author":{"gitId":"DJ-Tan"},"content":"     * The following are private methods that are used to implement SLAP for the","lastModifiedDate":"2021-10-13"},{"lineNumber":368,"author":{"gitId":"DJ-Tan"},"content":"     * above public methods. These methods are positioned at the bottom to better","lastModifiedDate":"2021-10-13"},{"lineNumber":369,"author":{"gitId":"DJ-Tan"},"content":"     * visualise the actual methods that can be called from outside this class.","lastModifiedDate":"2021-10-13"},{"lineNumber":370,"author":{"gitId":"DJ-Tan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":371,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":372,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":373,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":374,"author":{"gitId":"DJ-Tan"},"content":"     * Gets a goal from the goalList.","lastModifiedDate":"2021-10-24"},{"lineNumber":375,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":376,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalIndex Integer index of goal in goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":377,"author":{"gitId":"DJ-Tan"},"content":"     * @return Goal corresponding to the index provided.","lastModifiedDate":"2021-10-13"},{"lineNumber":378,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If the goalIndex is not within the range of the goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":379,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":380,"author":{"gitId":"DJ-Tan"},"content":"    private Goal getGoal(int goalIndex) throws HaBitCommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":381,"author":{"gitId":"DJ-Tan"},"content":"        Goal goal;","lastModifiedDate":"2021-10-13"},{"lineNumber":382,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":383,"author":{"gitId":"DJ-Tan"},"content":"            goal \u003d goalList.get(goalIndex);","lastModifiedDate":"2021-10-13"},{"lineNumber":384,"author":{"gitId":"DJ-Tan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":385,"author":{"gitId":"kahhe"},"content":"            if (goalIndex \u003e 0) {","lastModifiedDate":"2021-11-05"},{"lineNumber":386,"author":{"gitId":"STAung07"},"content":"                throw new HaBitCommandException(ERROR_INVALID_GOAL_INDEX);","lastModifiedDate":"2021-10-14"},{"lineNumber":387,"author":{"gitId":"kahhe"},"content":"            } else {","lastModifiedDate":"2021-11-05"},{"lineNumber":388,"author":{"gitId":"kahhe"},"content":"                throw new HaBitCommandException(ERROR_NON_POSITIVE_GOAL_INDEX);","lastModifiedDate":"2021-11-05"},{"lineNumber":389,"author":{"gitId":"kahhe"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":390,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":391,"author":{"gitId":"DJ-Tan"},"content":"        return goal;","lastModifiedDate":"2021-10-13"},{"lineNumber":392,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":393,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":394,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":395,"author":{"gitId":"DJ-Tan"},"content":"     * Gets a habit from the habitList of a goal.","lastModifiedDate":"2021-10-24"},{"lineNumber":396,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":397,"author":{"gitId":"DJ-Tan"},"content":"     * @param habitList  List of habits of a goal.","lastModifiedDate":"2021-10-24"},{"lineNumber":398,"author":{"gitId":"DJ-Tan"},"content":"     * @param habitIndex Index of habit in habitList.","lastModifiedDate":"2021-10-24"},{"lineNumber":399,"author":{"gitId":"DJ-Tan"},"content":"     * @return Habit from habitList corresponding to habitIndex.","lastModifiedDate":"2021-10-24"},{"lineNumber":400,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If the habitIndex provided is invalid.","lastModifiedDate":"2021-10-24"},{"lineNumber":401,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":402,"author":{"gitId":"DJ-Tan"},"content":"    private Habit getHabit(ArrayList\u003cHabit\u003e habitList, int habitIndex) throws HaBitCommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":403,"author":{"gitId":"DJ-Tan"},"content":"        Habit habit;","lastModifiedDate":"2021-10-24"},{"lineNumber":404,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":405,"author":{"gitId":"DJ-Tan"},"content":"            habit \u003d habitList.get(habitIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":406,"author":{"gitId":"DJ-Tan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":407,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitCommandException(ERROR_INVALID_HABIT_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":408,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":409,"author":{"gitId":"DJ-Tan"},"content":"        return habit;","lastModifiedDate":"2021-10-24"},{"lineNumber":410,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":411,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":412,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":413,"author":{"gitId":"DJ-Tan"},"content":"     * Updates the chosen goal index when a goal is deleted.","lastModifiedDate":"2021-10-21"},{"lineNumber":414,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":415,"author":{"gitId":"DJ-Tan"},"content":"     * @param deletedGoalIndex Goal index to be deleted.","lastModifiedDate":"2021-10-21"},{"lineNumber":416,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":417,"author":{"gitId":"DJ-Tan"},"content":"    private void updateChosenGoalIndex(int deletedGoalIndex) {","lastModifiedDate":"2021-10-21"},{"lineNumber":418,"author":{"gitId":"DJ-Tan"},"content":"        if (this.chosenGoalIndex \u003d\u003d deletedGoalIndex) {","lastModifiedDate":"2021-10-21"},{"lineNumber":419,"author":{"gitId":"DJ-Tan"},"content":"            this.chosenGoalIndex \u003d -1;","lastModifiedDate":"2021-10-21"},{"lineNumber":420,"author":{"gitId":"DJ-Tan"},"content":"        } else if (this.chosenGoalIndex \u003e deletedGoalIndex) {","lastModifiedDate":"2021-10-21"},{"lineNumber":421,"author":{"gitId":"DJ-Tan"},"content":"            this.chosenGoalIndex -\u003d 1;","lastModifiedDate":"2021-10-21"},{"lineNumber":422,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":423,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":424,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":425,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":426,"author":{"gitId":"DJ-Tan"},"content":"     * Sets the endDate of the habit to be similar to the goal.","lastModifiedDate":"2021-10-27"},{"lineNumber":427,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":428,"author":{"gitId":"DJ-Tan"},"content":"     * @param goal  Goal that a habit is to be added to.","lastModifiedDate":"2021-10-27"},{"lineNumber":429,"author":{"gitId":"DJ-Tan"},"content":"     * @param habit Habit to be added to the goal.","lastModifiedDate":"2021-10-27"},{"lineNumber":430,"author":{"gitId":"DJ-Tan"},"content":"     * @return Habit with its endDate updated.","lastModifiedDate":"2021-10-27"},{"lineNumber":431,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":432,"author":{"gitId":"DJ-Tan"},"content":"    private Habit updateHabitEndDate(Goal goal, Habit habit) {","lastModifiedDate":"2021-10-27"},{"lineNumber":433,"author":{"gitId":"DJ-Tan"},"content":"        Date goalEndDate \u003d goal.getEndDate();","lastModifiedDate":"2021-10-27"},{"lineNumber":434,"author":{"gitId":"DJ-Tan"},"content":"        habit.setEndDate(goalEndDate);","lastModifiedDate":"2021-10-27"},{"lineNumber":435,"author":{"gitId":"DJ-Tan"},"content":"        return habit;","lastModifiedDate":"2021-10-27"},{"lineNumber":436,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":437,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":438,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":439,"author":{"gitId":"kahhe"},"content":"     * Checks new name given by user with old name to ensure that they are different.","lastModifiedDate":"2021-10-28"},{"lineNumber":440,"author":{"gitId":"kahhe"},"content":"     * Throws an exception if they are the same (what are you even doing user.)","lastModifiedDate":"2021-10-28"},{"lineNumber":441,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":442,"author":{"gitId":"kahhe"},"content":"     * @param oldName Current name of goal or habit.","lastModifiedDate":"2021-10-28"},{"lineNumber":443,"author":{"gitId":"kahhe"},"content":"     * @param newName New goal or habit name given by user.","lastModifiedDate":"2021-10-28"},{"lineNumber":444,"author":{"gitId":"kahhe"},"content":"     * @throws HaBitCommandException If old and new names are identical.","lastModifiedDate":"2021-10-28"},{"lineNumber":445,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":446,"author":{"gitId":"kahhe"},"content":"    private void compareNewNameWithOldName(String oldName,String newName) throws HaBitCommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":447,"author":{"gitId":"kahhe"},"content":"        if (oldName.equals(newName)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":448,"author":{"gitId":"kahhe"},"content":"            throw new HaBitCommandException(ERROR_IDENTICAL_NEW_NAME);","lastModifiedDate":"2021-10-28"},{"lineNumber":449,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":450,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":451,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":452,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":453,"author":{"gitId":"STAung07"},"content":"     * Checks name of new goal being added by user to ensure it is not present in their goal list.","lastModifiedDate":"2021-10-28"},{"lineNumber":454,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":455,"author":{"gitId":"STAung07"},"content":"     * @param newType Type of new goal being added in","lastModifiedDate":"2021-10-28"},{"lineNumber":456,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":457,"author":{"gitId":"STAung07"},"content":"    private void compareNewTypeWithOldType(GoalType oldType, GoalType newType) throws HaBitCommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":458,"author":{"gitId":"STAung07"},"content":"        if (newType \u003d\u003d oldType) {","lastModifiedDate":"2021-10-28"},{"lineNumber":459,"author":{"gitId":"STAung07"},"content":"            throw new HaBitCommandException(ERROR_IDENTICAL_NEW_TYPE);","lastModifiedDate":"2021-10-28"},{"lineNumber":460,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":461,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":462,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":463,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":464,"author":{"gitId":"STAung07"},"content":"     * Checks if new end Date set by user is the same as the old end Date for that goal.","lastModifiedDate":"2021-11-04"},{"lineNumber":465,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":466,"author":{"gitId":"STAung07"},"content":"     * @param oldDate Current end Date for goal","lastModifiedDate":"2021-11-04"},{"lineNumber":467,"author":{"gitId":"STAung07"},"content":"     * @param newDate New end Date for goal","lastModifiedDate":"2021-11-04"},{"lineNumber":468,"author":{"gitId":"STAung07"},"content":"     * @throws HaBitCommandException thrown if they are oldDate and newDate are the same","lastModifiedDate":"2021-11-04"},{"lineNumber":469,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":470,"author":{"gitId":"STAung07"},"content":"    private void compareOldDateWithNewDate(Date oldDate, Date newDate) throws HaBitCommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":471,"author":{"gitId":"STAung07"},"content":"        LocalDate oldDateLD \u003d convertDateToLocalDate(oldDate);","lastModifiedDate":"2021-10-28"},{"lineNumber":472,"author":{"gitId":"STAung07"},"content":"        LocalDate newDateLD \u003d convertDateToLocalDate(newDate);","lastModifiedDate":"2021-10-28"},{"lineNumber":473,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":474,"author":{"gitId":"STAung07"},"content":"        if (oldDateLD.isEqual(newDateLD)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":475,"author":{"gitId":"STAung07"},"content":"            throw new HaBitCommandException(ERROR_IDENTICAL_NEW_DATE);","lastModifiedDate":"2021-11-04"},{"lineNumber":476,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":477,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":478,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":479,"author":{"gitId":"STAung07"},"content":"    private void checkNewDateAfterStartDate(Date startDate, Date newDate) throws HaBitCommandException {","lastModifiedDate":"2021-11-04"},{"lineNumber":480,"author":{"gitId":"STAung07"},"content":"        LocalDate startDateLD \u003d convertDateToLocalDate(startDate);","lastModifiedDate":"2021-11-04"},{"lineNumber":481,"author":{"gitId":"STAung07"},"content":"        LocalDate newDateLD \u003d convertDateToLocalDate(newDate);","lastModifiedDate":"2021-11-04"},{"lineNumber":482,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":483,"author":{"gitId":"STAung07"},"content":"        if (!newDateLD.isAfter(startDateLD)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":484,"author":{"gitId":"STAung07"},"content":"            throw new HaBitCommandException(ERROR_NEW_END_DATE_AFTER_START_DATE);","lastModifiedDate":"2021-11-04"},{"lineNumber":485,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":486,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":487,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":488,"author":{"gitId":"STAung07"},"content":"    private void checkNewDateIsToday(Date newDate) throws HaBitCommandException {","lastModifiedDate":"2021-11-05"},{"lineNumber":489,"author":{"gitId":"STAung07"},"content":"        LocalDate newDateLD \u003d convertDateToLocalDate(newDate);","lastModifiedDate":"2021-11-05"},{"lineNumber":490,"author":{"gitId":"STAung07"},"content":"        LocalDate currDateLD \u003d convertDateToLocalDate(new Date());","lastModifiedDate":"2021-11-05"},{"lineNumber":491,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":492,"author":{"gitId":"STAung07"},"content":"        if (newDateLD.isEqual(currDateLD)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":493,"author":{"gitId":"STAung07"},"content":"            throw new HaBitCommandException(ERROR_NEW_END_DATE_SAME_AS_TODAY);","lastModifiedDate":"2021-11-05"},{"lineNumber":494,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":495,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":496,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":497,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":498,"author":{"gitId":"STAung07"},"content":"     * \u0027Type-casting\u0027 a Date to a LocalDate.","lastModifiedDate":"2021-10-28"},{"lineNumber":499,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":500,"author":{"gitId":"STAung07"},"content":"     * @param date Date to be \u0027type-casted\u0027.","lastModifiedDate":"2021-10-28"},{"lineNumber":501,"author":{"gitId":"STAung07"},"content":"     * @return LocalDate that has been \u0027type-casted\u0027 from Date.","lastModifiedDate":"2021-10-28"},{"lineNumber":502,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":503,"author":{"gitId":"STAung07"},"content":"    private LocalDate convertDateToLocalDate(Date date) {","lastModifiedDate":"2021-10-28"},{"lineNumber":504,"author":{"gitId":"STAung07"},"content":"        return date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();","lastModifiedDate":"2021-10-28"},{"lineNumber":505,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":506,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":507,"author":{"gitId":"STAung07"},"content":"    private boolean duplicateInGoalList(String newName) {","lastModifiedDate":"2021-10-28"},{"lineNumber":508,"author":{"gitId":"STAung07"},"content":"        for (Goal goal : goalList) {","lastModifiedDate":"2021-10-28"},{"lineNumber":509,"author":{"gitId":"STAung07"},"content":"            if (goal.getGoalName().equals(newName)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":510,"author":{"gitId":"STAung07"},"content":"                return true;","lastModifiedDate":"2021-10-28"},{"lineNumber":511,"author":{"gitId":"STAung07"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":512,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":513,"author":{"gitId":"STAung07"},"content":"        return false;","lastModifiedDate":"2021-10-28"},{"lineNumber":514,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":515,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":516,"author":{"gitId":"STAung07"},"content":"    private String dateToString(Date date) {","lastModifiedDate":"2021-11-04"},{"lineNumber":517,"author":{"gitId":"STAung07"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"dd-MMM-yyyy\");","lastModifiedDate":"2021-11-04"},{"lineNumber":518,"author":{"gitId":"STAung07"},"content":"        return dateFormat.format(date);","lastModifiedDate":"2021-11-04"},{"lineNumber":519,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":520,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"STAung07":233,"huien77":14,"flerovious":16,"DJ-Tan":209,"kahhe":48}},{"path":"src/main/java/happybit/goal/GoalType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.goal;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public enum GoalType {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"    DEFAULT, SLEEP, FOOD, EXERCISE, STUDY","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"DJ-Tan":5}},{"path":"src/main/java/happybit/habit/Habit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.habit;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.interval.Interval;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import java.time.ZoneId;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"public class Habit {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    private static final int START_DATE_INDEX \u003d 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    private static final int END_DATE_INDEX \u003d 1;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"    private static final int NEXT_START_DATE_INDEX \u003d 2;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    private static final int COMPLETION_RATE_INDEX \u003d 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    private static final int COMPLETED_INDEX \u003d 1;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    private static final int REMAINING_INDEX \u003d 2;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"    private static final int EXPIRED_INDEX \u003d 3;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    private static final String FROM \u003d \" from \";","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"    protected String habitName;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"    protected Date startDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"    protected Date endDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"    protected int intervalLength;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"    protected ArrayList\u003cInterval\u003e intervals \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"     * Constructor for Habit class.","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"     * @param habitName      Name of habit linked to a goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"     * @param intervalLength Length of each interval for a habit.","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"    public Habit(String habitName, int intervalLength) {","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"        this.habitName \u003d habitName;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"        this.startDate \u003d HabitDateManager.getStartOfDay(new Date());","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"        this.intervalLength \u003d intervalLength;","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"STAung07"},"content":"     * Constructor for Habit class when importing from storage.","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"     * Date to keep track of last date.","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"     * @param habitName      String parameter of habit name.","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"     * @param startDate      Start date of a habit.","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"     * @param endDate        End date of a habit.","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"     * @param intervalLength integer storing length of interval for habit.","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"huien77"},"content":"    public Habit(String habitName,  Date startDate, Date endDate, int intervalLength) {","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"STAung07"},"content":"        this.habitName \u003d habitName;","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"        this.intervalLength \u003d intervalLength;","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for habitName.","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"     * @return String containing name of habit.","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"    public String getHabitName() {","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"        return this.habitName;","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for start date in string format (for storage).","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"     * @return String of the start date.","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"    public String getStartDate() {","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"        return HabitDateManager.dateToString(this.startDate);","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"STAung07"},"content":"    public LocalDate getStartDateLD() {","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"STAung07"},"content":"        return convertDateToLocalDate(this.startDate);","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for end date in string format (for storage).","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"DJ-Tan"},"content":"     * @return String of the end date.","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"    public String getEndDate() {","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"        return HabitDateManager.dateToString(this.endDate);","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"STAung07"},"content":"    public LocalDate getEndDateLD() {","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"STAung07"},"content":"        return convertDateToLocalDate(this.endDate);","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"DJ-Tan"},"content":"     * Get interval set by the user.","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"DJ-Tan"},"content":"     * @return Integer of interval set by user","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"DJ-Tan"},"content":"    public int getIntervalLength() {","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"DJ-Tan"},"content":"        return this.intervalLength;","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the number of intervals in the interval list.","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"DJ-Tan"},"content":"     * @return Total number of intervals.","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"DJ-Tan"},"content":"    public int getTotalIntervals() {","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"DJ-Tan"},"content":"        return this.intervals.size();","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"huien77"},"content":"    public ArrayList\u003cInterval\u003e getIntervals() {","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"huien77"},"content":"        return this.intervals;","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"kahhe"},"content":"     * Updates the habit name with a new one from user.","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"kahhe"},"content":"     * @param habitName New habit name.","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"kahhe"},"content":"    public void setHabitName(String habitName) {","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"kahhe"},"content":"        this.habitName \u003d habitName;","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"DJ-Tan"},"content":"     * Setter for endDate of habit.","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"DJ-Tan"},"content":"     * Used in AddHabitCommand to manually set the endDate since goalList is only accessible there.","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"DJ-Tan"},"content":"     * @param endDate End date of a goal.","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"DJ-Tan"},"content":"    public void setEndDate(Date endDate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"DJ-Tan"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"huien77"},"content":"    public void addInterval(Interval interval) {","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"huien77"},"content":"        this.intervals.add(interval);","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"DJ-Tan"},"content":"     * Fills the interval list with all intervals during habit creation.","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"DJ-Tan"},"content":"     * Method is called in goalList after the endDate has been added.","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"DJ-Tan"},"content":"    public void populateIntervalsDuringHabitCreation() {","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"DJ-Tan"},"content":"        populateIntervals(this.startDate);","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"DJ-Tan"},"content":"     * Linearly checks through interval list to find interval and set interval as completed.","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"DJ-Tan"},"content":"     * @param completionDate Date that an interval is completed on.","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"DJ-Tan"},"content":"    public void completeInterval(Date completionDate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"DJ-Tan"},"content":"        for (Interval interval : intervals) {","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"DJ-Tan"},"content":"            if (interval.isWithinInterval(completionDate)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"DJ-Tan"},"content":"                interval.setCompleted(completionDate);","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"DJ-Tan"},"content":"                break;","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the required dates when an interval is marked as completed.","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"DJ-Tan"},"content":"     * 1) Start date of current interval.","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"DJ-Tan"},"content":"     * 2) End date of current interval.","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"DJ-Tan"},"content":"     * 3) Start date of next interval.","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"DJ-Tan"},"content":"     * @param completionDate Date that an interval is completed.","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"DJ-Tan"},"content":"     * @return String array containing the 3 dates mentioned in the description.","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"DJ-Tan"},"content":"    public String[] getDoneHabitDates(Date completionDate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"DJ-Tan"},"content":"        String[] strDates \u003d new String[3];","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"DJ-Tan"},"content":"        for (Interval interval : intervals) {","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"DJ-Tan"},"content":"            if (interval.isWithinInterval(completionDate)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"DJ-Tan"},"content":"                strDates[START_DATE_INDEX] \u003d HabitDateManager.dateToString(interval.getStartDate());","lastModifiedDate":"2021-11-04"},{"lineNumber":172,"author":{"gitId":"DJ-Tan"},"content":"                strDates[END_DATE_INDEX] \u003d HabitDateManager.dateToString(interval.getEndDate());","lastModifiedDate":"2021-11-04"},{"lineNumber":173,"author":{"gitId":"DJ-Tan"},"content":"                Date startOfNextDay \u003d HabitDateManager.getStartOfNextDay(interval.getEndDate());","lastModifiedDate":"2021-11-04"},{"lineNumber":174,"author":{"gitId":"DJ-Tan"},"content":"                strDates[NEXT_START_DATE_INDEX] \u003d HabitDateManager.dateToString(startOfNextDay);","lastModifiedDate":"2021-11-04"},{"lineNumber":175,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"DJ-Tan"},"content":"        return strDates;","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"DJ-Tan"},"content":"     * Updates a new interval for the specified habit.","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"DJ-Tan"},"content":"     * @param lengthOfInterval Integer value of the new interval user wishes to have.","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"DJ-Tan"},"content":"    public void updateLengthOfInterval(int lengthOfInterval) {","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"DJ-Tan"},"content":"        this.intervalLength \u003d lengthOfInterval;","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"DJ-Tan"},"content":"        updateIntervals();","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the statistics of the habit\u0027s completion.","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"DJ-Tan"},"content":"     * Statistics includes: expired, completed, remaining intervals, and completion rate.","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"DJ-Tan"},"content":"     * @return Statistics of habit\u0027s completion.","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"DJ-Tan"},"content":"    public double[] getListStatistics() {","lastModifiedDate":"2021-11-04"},{"lineNumber":197,"author":{"gitId":"DJ-Tan"},"content":"        double[] statistics \u003d new double[4];","lastModifiedDate":"2021-11-04"},{"lineNumber":198,"author":{"gitId":"DJ-Tan"},"content":"        statistics[COMPLETION_RATE_INDEX] \u003d computeHabitCompletionRate();","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"DJ-Tan"},"content":"        statistics[COMPLETED_INDEX] \u003d computeNumOfCompletedIntervals();","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"DJ-Tan"},"content":"        statistics[REMAINING_INDEX] \u003d computeNumOfRemainingIntervals();","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"DJ-Tan"},"content":"        statistics[EXPIRED_INDEX] \u003d computeNumOfExpiredIntervals();","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"DJ-Tan"},"content":"        return statistics;","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"DJ-Tan"},"content":"     * Computes the completion rate of the habit.","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"DJ-Tan"},"content":"     * Calculated by taking the number of completed intervals / total number of intervals.","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"DJ-Tan"},"content":"     * @return Completion rate of habit.","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":211,"author":{"gitId":"DJ-Tan"},"content":"    public double computeHabitCompletionRate() {","lastModifiedDate":"2021-11-04"},{"lineNumber":212,"author":{"gitId":"DJ-Tan"},"content":"        int numOfCompletedIntervals \u003d computeNumOfCompletedIntervals();","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"DJ-Tan"},"content":"        int totalIntervals \u003d getTotalIntervals();","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"DJ-Tan"},"content":"        return (double)(numOfCompletedIntervals) / totalIntervals * 100;","lastModifiedDate":"2021-11-04"},{"lineNumber":215,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":217,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":218,"author":{"gitId":"DJ-Tan"},"content":"     * Returns details of the current interval if due but not completed.","lastModifiedDate":"2021-10-27"},{"lineNumber":219,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"DJ-Tan"},"content":"     * @return Details of habit interval.","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":222,"author":{"gitId":"DJ-Tan"},"content":"    public String getIntervalDescriptionIfDue() {","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"DJ-Tan"},"content":"        int intervalIndex \u003d getIndexOfCurrentInterval();","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"DJ-Tan"},"content":"        Interval currInterval \u003d intervals.get(intervalIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"DJ-Tan"},"content":"        boolean isIntervalDone \u003d currInterval.getDone();","lastModifiedDate":"2021-10-27"},{"lineNumber":226,"author":{"gitId":"DJ-Tan"},"content":"        if (isIntervalDone) {","lastModifiedDate":"2021-10-27"},{"lineNumber":227,"author":{"gitId":"DJ-Tan"},"content":"            return null;","lastModifiedDate":"2021-10-27"},{"lineNumber":228,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"DJ-Tan"},"content":"        return this.habitName + FROM + currInterval.getDescription();","lastModifiedDate":"2021-10-27"},{"lineNumber":230,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":231,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":232,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":233,"author":{"gitId":"STAung07"},"content":"     * Returns longest consecutive streak for current habit.","lastModifiedDate":"2021-10-28"},{"lineNumber":234,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":235,"author":{"gitId":"DJ-Tan"},"content":"     * @return Longest chain streak for the habit.","lastModifiedDate":"2021-10-28"},{"lineNumber":236,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":237,"author":{"gitId":"STAung07"},"content":"    public int getStreak() {","lastModifiedDate":"2021-10-28"},{"lineNumber":238,"author":{"gitId":"STAung07"},"content":"        int streak \u003d 0;","lastModifiedDate":"2021-10-28"},{"lineNumber":239,"author":{"gitId":"STAung07"},"content":"        int currStreak \u003d 0;","lastModifiedDate":"2021-10-28"},{"lineNumber":240,"author":{"gitId":"STAung07"},"content":"        for (Interval interval : intervals) {","lastModifiedDate":"2021-10-28"},{"lineNumber":241,"author":{"gitId":"STAung07"},"content":"            if (interval.getDone()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":242,"author":{"gitId":"STAung07"},"content":"                currStreak++;","lastModifiedDate":"2021-10-28"},{"lineNumber":243,"author":{"gitId":"STAung07"},"content":"            } else {","lastModifiedDate":"2021-10-28"},{"lineNumber":244,"author":{"gitId":"DJ-Tan"},"content":"                if (currStreak \u003e streak) {","lastModifiedDate":"2021-10-28"},{"lineNumber":245,"author":{"gitId":"STAung07"},"content":"                    streak \u003d currStreak;","lastModifiedDate":"2021-10-28"},{"lineNumber":246,"author":{"gitId":"STAung07"},"content":"                }","lastModifiedDate":"2021-10-28"},{"lineNumber":247,"author":{"gitId":"STAung07"},"content":"                currStreak \u003d 0;","lastModifiedDate":"2021-10-28"},{"lineNumber":248,"author":{"gitId":"STAung07"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":249,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":250,"author":{"gitId":"DJ-Tan"},"content":"        if (currStreak \u003e streak) {","lastModifiedDate":"2021-10-28"},{"lineNumber":251,"author":{"gitId":"DJ-Tan"},"content":"            streak \u003d currStreak;","lastModifiedDate":"2021-10-28"},{"lineNumber":252,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":253,"author":{"gitId":"STAung07"},"content":"        return streak;","lastModifiedDate":"2021-10-28"},{"lineNumber":254,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":255,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":256,"author":{"gitId":"STAung07"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":257,"author":{"gitId":"STAung07"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":258,"author":{"gitId":"STAung07"},"content":"     * The following are private methods that are used to implement SLAP for the","lastModifiedDate":"2021-10-24"},{"lineNumber":259,"author":{"gitId":"STAung07"},"content":"     * above public methods. These methods are positioned at the bottom to better","lastModifiedDate":"2021-10-24"},{"lineNumber":260,"author":{"gitId":"STAung07"},"content":"     * visualise the actual methods that can be called from outside this class.","lastModifiedDate":"2021-10-24"},{"lineNumber":261,"author":{"gitId":"STAung07"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":262,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":263,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":264,"author":{"gitId":"DJ-Tan"},"content":"    /* The following sub-methods are used to populate the Interval list.","lastModifiedDate":"2021-11-04"},{"lineNumber":265,"author":{"gitId":"DJ-Tan"},"content":"     * populateIntervals()","lastModifiedDate":"2021-11-04"},{"lineNumber":266,"author":{"gitId":"DJ-Tan"},"content":"     * populateIntervalsIfNoInterval()","lastModifiedDate":"2021-11-04"},{"lineNumber":267,"author":{"gitId":"DJ-Tan"},"content":"     * populateIntervalsIfNonZeroInterval()","lastModifiedDate":"2021-11-04"},{"lineNumber":268,"author":{"gitId":"DJ-Tan"},"content":"     * daysBetweenStartAndEndDates()","lastModifiedDate":"2021-10-27"},{"lineNumber":269,"author":{"gitId":"DJ-Tan"},"content":"     * getNumOfIntervals()","lastModifiedDate":"2021-11-04"},{"lineNumber":270,"author":{"gitId":"DJ-Tan"},"content":"     * addDaysToDate()","lastModifiedDate":"2021-11-04"},{"lineNumber":271,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":272,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":273,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":274,"author":{"gitId":"DJ-Tan"},"content":"     * Populate the interval list with all the days.","lastModifiedDate":"2021-10-27"},{"lineNumber":275,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":276,"author":{"gitId":"DJ-Tan"},"content":"     * @param startDate Start date of the habit.","lastModifiedDate":"2021-10-27"},{"lineNumber":277,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":278,"author":{"gitId":"DJ-Tan"},"content":"    private void populateIntervals(Date startDate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":279,"author":{"gitId":"DJ-Tan"},"content":"        if (this.intervalLength \u003d\u003d 0) {","lastModifiedDate":"2021-10-27"},{"lineNumber":280,"author":{"gitId":"DJ-Tan"},"content":"            populateIntervalsIfZeroLengthInterval(startDate);","lastModifiedDate":"2021-10-27"},{"lineNumber":281,"author":{"gitId":"DJ-Tan"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":282,"author":{"gitId":"DJ-Tan"},"content":"            populateIntervalsIfNonZeroLengthInterval();","lastModifiedDate":"2021-10-27"},{"lineNumber":283,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":284,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":285,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":286,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":287,"author":{"gitId":"DJ-Tan"},"content":"     * Adds a single interval to the list.","lastModifiedDate":"2021-10-27"},{"lineNumber":288,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":289,"author":{"gitId":"DJ-Tan"},"content":"     * @param startDate Start date of when there is a single interval.","lastModifiedDate":"2021-10-27"},{"lineNumber":290,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":291,"author":{"gitId":"DJ-Tan"},"content":"    private void populateIntervalsIfZeroLengthInterval(Date startDate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":292,"author":{"gitId":"DJ-Tan"},"content":"        Interval interval \u003d new Interval(startDate, this.endDate);","lastModifiedDate":"2021-10-27"},{"lineNumber":293,"author":{"gitId":"DJ-Tan"},"content":"        this.intervals.add(interval);","lastModifiedDate":"2021-10-27"},{"lineNumber":294,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":295,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":296,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":297,"author":{"gitId":"DJ-Tan"},"content":"     * Populates interval list with intervals assuming a non-zero interval.","lastModifiedDate":"2021-10-27"},{"lineNumber":298,"author":{"gitId":"DJ-Tan"},"content":"     * The endDate for the last checkpoint is manually set in the scenario where the number of habit days","lastModifiedDate":"2021-10-27"},{"lineNumber":299,"author":{"gitId":"DJ-Tan"},"content":"     * is not a multiple of the interval length (prevents endDate from overrunning habit days).","lastModifiedDate":"2021-10-27"},{"lineNumber":300,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":301,"author":{"gitId":"DJ-Tan"},"content":"    private void populateIntervalsIfNonZeroLengthInterval() {","lastModifiedDate":"2021-10-27"},{"lineNumber":302,"author":{"gitId":"DJ-Tan"},"content":"        int numOfCheckpoints \u003d getNumOfIntervals();","lastModifiedDate":"2021-10-27"},{"lineNumber":303,"author":{"gitId":"DJ-Tan"},"content":"        Date assignedStartDate \u003d this.startDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":304,"author":{"gitId":"DJ-Tan"},"content":"        Date dateWithAddedDays \u003d HabitDateManager.addDaysToDate(assignedStartDate, this.intervalLength);","lastModifiedDate":"2021-11-04"},{"lineNumber":305,"author":{"gitId":"DJ-Tan"},"content":"        Date assignedEndDate \u003d HabitDateManager.getEndOfDay(dateWithAddedDays);","lastModifiedDate":"2021-11-04"},{"lineNumber":306,"author":{"gitId":"DJ-Tan"},"content":"        for (int checkpoint \u003d 0; checkpoint \u003c numOfCheckpoints; checkpoint++) {","lastModifiedDate":"2021-10-27"},{"lineNumber":307,"author":{"gitId":"DJ-Tan"},"content":"            Interval interval \u003d new Interval(assignedStartDate, assignedEndDate);","lastModifiedDate":"2021-10-27"},{"lineNumber":308,"author":{"gitId":"DJ-Tan"},"content":"            this.intervals.add(interval);","lastModifiedDate":"2021-10-27"},{"lineNumber":309,"author":{"gitId":"DJ-Tan"},"content":"            assignedStartDate \u003d HabitDateManager.addDaysToDate(assignedStartDate, this.intervalLength);","lastModifiedDate":"2021-11-04"},{"lineNumber":310,"author":{"gitId":"DJ-Tan"},"content":"            assignedEndDate \u003d HabitDateManager.addDaysToDate(assignedEndDate, this.intervalLength);","lastModifiedDate":"2021-11-04"},{"lineNumber":311,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":312,"author":{"gitId":"DJ-Tan"},"content":"        this.intervals.get(numOfCheckpoints - 1).setEndDate(this.endDate);","lastModifiedDate":"2021-10-27"},{"lineNumber":313,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":314,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":315,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":316,"author":{"gitId":"DJ-Tan"},"content":"     * Computes the number of days between the start date (inclusive) and end dates (inclusive).","lastModifiedDate":"2021-10-27"},{"lineNumber":317,"author":{"gitId":"DJ-Tan"},"content":"     * If startDate \u003d 01-Jan-2021 and endDate \u003d 05-Jan-2021, then return value \u003d 5.","lastModifiedDate":"2021-10-27"},{"lineNumber":318,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":319,"author":{"gitId":"DJ-Tan"},"content":"     * @return Number of days between start and end dates.","lastModifiedDate":"2021-10-27"},{"lineNumber":320,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":321,"author":{"gitId":"DJ-Tan"},"content":"    private int daysBetweenStartAndEndDates() {","lastModifiedDate":"2021-10-27"},{"lineNumber":322,"author":{"gitId":"DJ-Tan"},"content":"        LocalDate startLocalDate \u003d HabitDateManager.convertDateToLocalDate(this.startDate);","lastModifiedDate":"2021-11-04"},{"lineNumber":323,"author":{"gitId":"DJ-Tan"},"content":"        LocalDate endLocalDate \u003d HabitDateManager.convertDateToLocalDate(this.endDate);","lastModifiedDate":"2021-11-04"},{"lineNumber":324,"author":{"gitId":"DJ-Tan"},"content":"        return (int) ChronoUnit.DAYS.between(startLocalDate, endLocalDate) + 1;","lastModifiedDate":"2021-10-27"},{"lineNumber":325,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":326,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":327,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":328,"author":{"gitId":"DJ-Tan"},"content":"     * Obtains the total checkpoints possible given the interval and range of dates.","lastModifiedDate":"2021-10-27"},{"lineNumber":329,"author":{"gitId":"DJ-Tan"},"content":"     * Addition of 1 is to account for the startDate being treated as the 1st checkpoint.","lastModifiedDate":"2021-10-27"},{"lineNumber":330,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":331,"author":{"gitId":"DJ-Tan"},"content":"     * @return Total number of checkpoints.","lastModifiedDate":"2021-10-27"},{"lineNumber":332,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":333,"author":{"gitId":"DJ-Tan"},"content":"    private int getNumOfIntervals() {","lastModifiedDate":"2021-10-27"},{"lineNumber":334,"author":{"gitId":"DJ-Tan"},"content":"        int numberOfDays \u003d daysBetweenStartAndEndDates();","lastModifiedDate":"2021-10-27"},{"lineNumber":335,"author":{"gitId":"DJ-Tan"},"content":"        if (numberOfDays % this.intervalLength !\u003d 0) {","lastModifiedDate":"2021-10-27"},{"lineNumber":336,"author":{"gitId":"DJ-Tan"},"content":"            return numberOfDays / this.intervalLength + 1;","lastModifiedDate":"2021-10-27"},{"lineNumber":337,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":338,"author":{"gitId":"DJ-Tan"},"content":"        return numberOfDays / this.intervalLength;","lastModifiedDate":"2021-10-27"},{"lineNumber":339,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":340,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":341,"author":{"gitId":"DJ-Tan"},"content":"    /* The following are sub-methods used to update the Interval list following change in interval length.","lastModifiedDate":"2021-10-27"},{"lineNumber":342,"author":{"gitId":"DJ-Tan"},"content":"     * updateIntervals()","lastModifiedDate":"2021-10-27"},{"lineNumber":343,"author":{"gitId":"DJ-Tan"},"content":"     * getIndexOfCurrentInterval()","lastModifiedDate":"2021-10-27"},{"lineNumber":344,"author":{"gitId":"DJ-Tan"},"content":"     * setEndDateOfCurrentInterval()","lastModifiedDate":"2021-10-27"},{"lineNumber":345,"author":{"gitId":"DJ-Tan"},"content":"     * deleteFutureIntervals()","lastModifiedDate":"2021-10-27"},{"lineNumber":346,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":347,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":348,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":349,"author":{"gitId":"DJ-Tan"},"content":"     * Update the interval list following a change in interval length.","lastModifiedDate":"2021-10-27"},{"lineNumber":350,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":351,"author":{"gitId":"DJ-Tan"},"content":"    private void updateIntervals() {","lastModifiedDate":"2021-10-27"},{"lineNumber":352,"author":{"gitId":"DJ-Tan"},"content":"        int currIntervalIndex \u003d getIndexOfCurrentInterval();","lastModifiedDate":"2021-10-27"},{"lineNumber":353,"author":{"gitId":"DJ-Tan"},"content":"        setEndDateOfCurrentInterval(currIntervalIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":354,"author":{"gitId":"DJ-Tan"},"content":"        deleteFutureIntervals(currIntervalIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":355,"author":{"gitId":"DJ-Tan"},"content":"        Date currDate \u003d new Date();","lastModifiedDate":"2021-10-27"},{"lineNumber":356,"author":{"gitId":"DJ-Tan"},"content":"        Date startOfNextDay \u003d HabitDateManager.getStartOfNextDay(currDate);","lastModifiedDate":"2021-11-04"},{"lineNumber":357,"author":{"gitId":"DJ-Tan"},"content":"        populateIntervals(startOfNextDay);","lastModifiedDate":"2021-10-27"},{"lineNumber":358,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":359,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":360,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":361,"author":{"gitId":"DJ-Tan"},"content":"     * Get the index of the interval corresponding to the current date.","lastModifiedDate":"2021-10-27"},{"lineNumber":362,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":363,"author":{"gitId":"DJ-Tan"},"content":"     * @return Index of current interval.","lastModifiedDate":"2021-10-27"},{"lineNumber":364,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":365,"author":{"gitId":"DJ-Tan"},"content":"    private int getIndexOfCurrentInterval() {","lastModifiedDate":"2021-10-27"},{"lineNumber":366,"author":{"gitId":"STAung07"},"content":"        Date currDate \u003d new Date();","lastModifiedDate":"2021-10-25"},{"lineNumber":367,"author":{"gitId":"DJ-Tan"},"content":"        for (int intervalIndex \u003d 0; intervalIndex \u003c getTotalIntervals(); intervalIndex++) {","lastModifiedDate":"2021-10-27"},{"lineNumber":368,"author":{"gitId":"DJ-Tan"},"content":"            if (intervals.get(intervalIndex).isWithinInterval(currDate)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":369,"author":{"gitId":"DJ-Tan"},"content":"                return intervalIndex;","lastModifiedDate":"2021-10-27"},{"lineNumber":370,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":371,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":372,"author":{"gitId":"DJ-Tan"},"content":"        assert false; // The current date should always be present in an interval.","lastModifiedDate":"2021-10-27"},{"lineNumber":373,"author":{"gitId":"DJ-Tan"},"content":"        return -1;","lastModifiedDate":"2021-10-27"},{"lineNumber":374,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":375,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":376,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":377,"author":{"gitId":"DJ-Tan"},"content":"     * Updates endDate of current interval to the end of the current date.","lastModifiedDate":"2021-10-27"},{"lineNumber":378,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":379,"author":{"gitId":"DJ-Tan"},"content":"     * @param currIntervalIndex Index of the current interval.","lastModifiedDate":"2021-10-27"},{"lineNumber":380,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":381,"author":{"gitId":"DJ-Tan"},"content":"    private void setEndDateOfCurrentInterval(int currIntervalIndex) {","lastModifiedDate":"2021-10-27"},{"lineNumber":382,"author":{"gitId":"DJ-Tan"},"content":"        Date currEndDate \u003d HabitDateManager.getEndOfDay(new Date());","lastModifiedDate":"2021-11-04"},{"lineNumber":383,"author":{"gitId":"DJ-Tan"},"content":"        intervals.get(currIntervalIndex).setEndDate(currEndDate);","lastModifiedDate":"2021-10-27"},{"lineNumber":384,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":385,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":386,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":387,"author":{"gitId":"DJ-Tan"},"content":"     * Delete all intervals after the current interval.","lastModifiedDate":"2021-10-27"},{"lineNumber":388,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":389,"author":{"gitId":"DJ-Tan"},"content":"     * @param currIntervalIndex Index of the current interval.","lastModifiedDate":"2021-10-27"},{"lineNumber":390,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":391,"author":{"gitId":"DJ-Tan"},"content":"    private void deleteFutureIntervals(int currIntervalIndex) {","lastModifiedDate":"2021-10-27"},{"lineNumber":392,"author":{"gitId":"DJ-Tan"},"content":"        intervals.subList(currIntervalIndex + 1, getTotalIntervals()).clear();","lastModifiedDate":"2021-10-27"},{"lineNumber":393,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":394,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":395,"author":{"gitId":"DJ-Tan"},"content":"    /* The following are methods used to calculate progress statistics.","lastModifiedDate":"2021-10-27"},{"lineNumber":396,"author":{"gitId":"DJ-Tan"},"content":"     * computeNumOfExpiredIntervals()","lastModifiedDate":"2021-10-27"},{"lineNumber":397,"author":{"gitId":"DJ-Tan"},"content":"     * computeNumOfCompletedIntervals()","lastModifiedDate":"2021-10-27"},{"lineNumber":398,"author":{"gitId":"DJ-Tan"},"content":"     * computeNumOfRemainingIntervals()","lastModifiedDate":"2021-10-27"},{"lineNumber":399,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":400,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":401,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":402,"author":{"gitId":"DJ-Tan"},"content":"     * Computes the number of intervals that have expired (not completed within interval).","lastModifiedDate":"2021-10-27"},{"lineNumber":403,"author":{"gitId":"DJ-Tan"},"content":"     * 1) Checks if the current date has passed the interval end date.","lastModifiedDate":"2021-10-27"},{"lineNumber":404,"author":{"gitId":"DJ-Tan"},"content":"     * 2) Checks that the interval is still uncompleted.","lastModifiedDate":"2021-10-27"},{"lineNumber":405,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":406,"author":{"gitId":"DJ-Tan"},"content":"     * @return Number of expired intervals.","lastModifiedDate":"2021-10-27"},{"lineNumber":407,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":408,"author":{"gitId":"DJ-Tan"},"content":"    private int computeNumOfExpiredIntervals() {","lastModifiedDate":"2021-10-27"},{"lineNumber":409,"author":{"gitId":"DJ-Tan"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":410,"author":{"gitId":"DJ-Tan"},"content":"        Date currDate \u003d new Date();","lastModifiedDate":"2021-10-27"},{"lineNumber":411,"author":{"gitId":"DJ-Tan"},"content":"        for (Interval interval : intervals) {","lastModifiedDate":"2021-10-27"},{"lineNumber":412,"author":{"gitId":"DJ-Tan"},"content":"            if (currDate.compareTo(interval.getEndDate()) \u003e 0 \u0026\u0026 !interval.getDone()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":413,"author":{"gitId":"DJ-Tan"},"content":"                count++;","lastModifiedDate":"2021-10-27"},{"lineNumber":414,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":415,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":416,"author":{"gitId":"DJ-Tan"},"content":"        return count;","lastModifiedDate":"2021-10-27"},{"lineNumber":417,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":418,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":419,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":420,"author":{"gitId":"DJ-Tan"},"content":"     * Computes the number of intervals that are completed (completed within interval).","lastModifiedDate":"2021-10-27"},{"lineNumber":421,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":422,"author":{"gitId":"DJ-Tan"},"content":"     * @return Number of completed intervals.","lastModifiedDate":"2021-10-27"},{"lineNumber":423,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":424,"author":{"gitId":"DJ-Tan"},"content":"    private int computeNumOfCompletedIntervals() {","lastModifiedDate":"2021-10-27"},{"lineNumber":425,"author":{"gitId":"DJ-Tan"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":426,"author":{"gitId":"DJ-Tan"},"content":"        for (Interval interval : intervals) {","lastModifiedDate":"2021-10-27"},{"lineNumber":427,"author":{"gitId":"DJ-Tan"},"content":"            if (interval.getDone()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":428,"author":{"gitId":"DJ-Tan"},"content":"                count++;","lastModifiedDate":"2021-10-27"},{"lineNumber":429,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":430,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":431,"author":{"gitId":"DJ-Tan"},"content":"        return count;","lastModifiedDate":"2021-10-27"},{"lineNumber":432,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":433,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":434,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":435,"author":{"gitId":"DJ-Tan"},"content":"     * Computes the number of habits that are remaining (includes current interval if not done).","lastModifiedDate":"2021-10-27"},{"lineNumber":436,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":437,"author":{"gitId":"DJ-Tan"},"content":"     * @return Number of remaining intervals.","lastModifiedDate":"2021-10-27"},{"lineNumber":438,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":439,"author":{"gitId":"DJ-Tan"},"content":"    private int computeNumOfRemainingIntervals() {","lastModifiedDate":"2021-10-27"},{"lineNumber":440,"author":{"gitId":"DJ-Tan"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":441,"author":{"gitId":"DJ-Tan"},"content":"        Date currDate \u003d new Date();","lastModifiedDate":"2021-10-27"},{"lineNumber":442,"author":{"gitId":"DJ-Tan"},"content":"        for (Interval interval : intervals) {","lastModifiedDate":"2021-10-27"},{"lineNumber":443,"author":{"gitId":"DJ-Tan"},"content":"            if (interval.getEndDate().compareTo(currDate) \u003e 0 \u0026\u0026 !interval.getDone()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":444,"author":{"gitId":"DJ-Tan"},"content":"                count++;","lastModifiedDate":"2021-10-27"},{"lineNumber":445,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":446,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":447,"author":{"gitId":"DJ-Tan"},"content":"        return count;","lastModifiedDate":"2021-10-27"},{"lineNumber":448,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":449,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":450,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":451,"author":{"gitId":"STAung07"},"content":"     * \u0027Type-casting\u0027 a Date to a LocalDate.","lastModifiedDate":"2021-11-05"},{"lineNumber":452,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":453,"author":{"gitId":"STAung07"},"content":"     * @param date Date to be \u0027type-casted\u0027.","lastModifiedDate":"2021-11-05"},{"lineNumber":454,"author":{"gitId":"STAung07"},"content":"     * @return LocalDate that has been \u0027type-casted\u0027 from Date.","lastModifiedDate":"2021-11-05"},{"lineNumber":455,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":456,"author":{"gitId":"STAung07"},"content":"    private LocalDate convertDateToLocalDate(Date date) {","lastModifiedDate":"2021-11-05"},{"lineNumber":457,"author":{"gitId":"STAung07"},"content":"        return date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();","lastModifiedDate":"2021-11-05"},{"lineNumber":458,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":459,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":460,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":461,"author":{"gitId":"STAung07"},"content":"     * \u0027Type-casting\u0027 a LocalDate to a Date.","lastModifiedDate":"2021-11-05"},{"lineNumber":462,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":463,"author":{"gitId":"STAung07"},"content":"     * @param localDate LocalDate to be \u0027type-casted\u0027.","lastModifiedDate":"2021-11-05"},{"lineNumber":464,"author":{"gitId":"STAung07"},"content":"     * @return Date that has been \u0027type-casted\u0027 from LocalDate.","lastModifiedDate":"2021-11-05"},{"lineNumber":465,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":466,"author":{"gitId":"STAung07"},"content":"    private Date convertLocalDateToDate(LocalDate localDate) {","lastModifiedDate":"2021-11-05"},{"lineNumber":467,"author":{"gitId":"STAung07"},"content":"        return Date.from(localDate.atStartOfDay().atZone(ZoneId.systemDefault()).toInstant());","lastModifiedDate":"2021-11-05"},{"lineNumber":468,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":469,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":470,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"STAung07":136,"huien77":7,"DJ-Tan":313,"kahhe":14}},{"path":"src/main/java/happybit/habit/HabitDateManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.habit;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import java.time.ZoneId;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import java.util.Calendar;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import java.util.Date;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"public class HabitDateManager {","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     * Converts date into a string.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * @param date Date to be converted.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * @return String format of a date.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    public static String dateToString(Date date) {","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"ddMMyyyy\");","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"        return formatter.format(date);","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"     * \u0027Type-casting\u0027 a Date to a LocalDate.","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     * @param date Date to be \u0027type-casted\u0027.","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     * @return LocalDate that has been \u0027type-casted\u0027 from Date.","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    public static LocalDate convertDateToLocalDate(Date date) {","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"        return date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"     * Sets the hours, minute, seconds, milliseconds of a date to the start of the day.","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"     * @param date Date to set to start of the day.","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"     * @return Date corresponding to start of the day.","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"    public static Date getStartOfDay(Date date) {","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"        Calendar calendar \u003d Calendar.getInstance();","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"        calendar.setTime(date);","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"        calendar.set(Calendar.HOUR_OF_DAY, 0);","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"        calendar.set(Calendar.MINUTE, 0);","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"        calendar.set(Calendar.SECOND, 0);","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"        calendar.set(Calendar.MILLISECOND, 0);","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"        return calendar.getTime();","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"     * Sets the hours, minute, seconds, milliseconds of a date to the end of the day.","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"     * @param date Date to set to end of the day.","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"     * @return Date corresponding to end of the day.","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"    public static Date getEndOfDay(Date date) {","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"        Calendar calendar \u003d Calendar.getInstance();","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"        calendar.setTime(date);","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"        calendar.set(Calendar.HOUR_OF_DAY, 23);","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"        calendar.set(Calendar.MINUTE, 59);","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"        calendar.set(Calendar.SECOND, 59);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"        calendar.set(Calendar.MILLISECOND, 999);","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"        return calendar.getTime();","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the start of the next day.","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"     * @param date Date used to get the next day.","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"     * @return Date of the start of the next day.","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"    public static Date getStartOfNextDay(Date date) {","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"        Date currStartOfDay \u003d getStartOfDay(date);","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"        return addDaysToDate(currStartOfDay, 1);","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"     * Adds number of dates equal to the interval to the base date.","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"     * @param baseDate Date to have days added to.","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"     * @param days     Number of days to be added to base date.","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"     * @return Date with days added.","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"    public static Date addDaysToDate(Date baseDate, int days) {","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"        LocalDate baseLocalDate \u003d convertDateToLocalDate(baseDate);","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"        LocalDate nextLocalDate \u003d baseLocalDate.plusDays(days);","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"DJ-Tan"},"content":"        return convertLocalDateToDate(nextLocalDate);","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"DJ-Tan"},"content":"    /*","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"DJ-Tan"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"DJ-Tan"},"content":"     * The following are private methods that are used to implement SLAP for the","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"DJ-Tan"},"content":"     * above public methods. These methods are positioned at the bottom to better","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"DJ-Tan"},"content":"     * visualise the actual methods that can be called from outside this class.","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"DJ-Tan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"DJ-Tan"},"content":"     * \u0027Type-casting\u0027 a LocalDate to a Date.","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"DJ-Tan"},"content":"     * @param localDate LocalDate to be \u0027type-casted\u0027.","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"DJ-Tan"},"content":"     * @return Date that has been \u0027type-casted\u0027 from LocalDate.","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"DJ-Tan"},"content":"    private static Date convertLocalDateToDate(LocalDate localDate) {","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"DJ-Tan"},"content":"        return Date.from(localDate.atStartOfDay().atZone(ZoneId.systemDefault()).toInstant());","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"DJ-Tan":107}},{"path":"src/main/java/happybit/interval/Interval.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.interval;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"public class Interval {","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"    private static final String DATE_CONNECTOR_WORD \u003d \" to \";","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    protected Date startDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    protected Date endDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    protected Date completedDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     * Constructor for Interval class.","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     * isDone and isDoneOnTime is initialised to false.","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"     * completedDate is initialised to null.","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"     * @param startDate Date from when the task can be completed.","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"     * @param endDate   Date that the task should be completed by.","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"    public Interval(Date startDate, Date endDate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"        this.completedDate \u003d null;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"     * Updates the interval once marked as completed.","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"     * @param completionDate Date that the checkpoint was completed.","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"    public void setCompleted(Date completionDate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"        this.completedDate \u003d completionDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the description of the interval (in terms of dates).","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"     * @return Description of the interval.","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"        return dateToString(startDate) + DATE_CONNECTOR_WORD + dateToString(endDate);","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for whether the interval is completed.","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"     * @return True if interval is completed, false otherwise.","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"    public boolean getDone() {","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"        return this.isDone;","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for start date of interval.","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"     * @return Start date of interval.","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"    public Date getStartDate() {","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"        return this.startDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for end date of interval.","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"     * @return End date of interval.","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"    public Date getEndDate() {","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"        return this.endDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for completed date of interval.","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"     * ","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"     * @return Completed date of interval.","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"huien77"},"content":"    public Date getCompletedDate() {","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"huien77"},"content":"        return this.completedDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"DJ-Tan"},"content":"     * Setter for end date of interval.","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"DJ-Tan"},"content":"     * The setting of end date is not done in the constructor due to inaccessibility of goalList at that stage.","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"DJ-Tan"},"content":"     * @param endDate End date of interval.","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"DJ-Tan"},"content":"    public void setEndDate(Date endDate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"DJ-Tan"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if a date is within the interval.","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"DJ-Tan"},"content":"     * @param compareDate Date to compare against the interval.","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"DJ-Tan"},"content":"     * @return Boolean of whether the date is within the interval.","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"DJ-Tan"},"content":"    public boolean isWithinInterval(Date compareDate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"DJ-Tan"},"content":"        return compareDate.after(this.startDate) \u0026\u0026 compareDate.before(this.endDate);","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"DJ-Tan"},"content":"    /*","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"DJ-Tan"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"DJ-Tan"},"content":"     * The following are private methods that are used to implement SLAP for the","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"DJ-Tan"},"content":"     * above public methods. These methods are positioned at the bottom to better","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"DJ-Tan"},"content":"     * visualise the actual methods that can be called from outside this class.","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"DJ-Tan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"DJ-Tan"},"content":"     * Converts date into a string.","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"DJ-Tan"},"content":"     * @param date Date to be converted.","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"DJ-Tan"},"content":"     * @return String format of a date.","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"DJ-Tan"},"content":"    private String dateToString(Date date) {","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"DJ-Tan"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd-MMM-yyyy\");","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"DJ-Tan"},"content":"        return formatter.format(date);","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"huien77":4,"DJ-Tan":120}},{"path":"src/main/java/happybit/logger/HaBitLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.logger;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class HaBitLogger {","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    private final Logger logger \u003d Logger.getLogger(HaBitLogger.class.getName());","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    // Testing logger methods for now, will implement in v2.0","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    public void main(String[] args) {","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"        ConsoleHandler ch \u003d new ConsoleHandler();","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"        ch.setLevel(Level.SEVERE);","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"        logger.addHandler(ch);","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"        logger.info(\"Testing\");","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"        logger.warning(\"ERROR\");","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"        logger.log(Level.SEVERE, \"System down\");","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"DJ-Tan":26}},{"path":"src/main/java/happybit/parser/AddParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.AddGoalCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.AddHabitCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.Command;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.Goal;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalType;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"import happybit.habit.Habit;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"import java.time.Instant;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"flerovious"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"flerovious"},"content":"public class AddParser extends Parser {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_DATE_FORMAT \u003d \"Use the date format: \u0027ddMMyyyy\u0027.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_END_DATE_FORMAT \u003d \"Use \u0027e/ddMMyyyy\u0027 to define the end date. Exp: e/25122021\";","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_START_DATE_FORMAT \u003d \"Use \u0027s/ddMMyyyy\u0027 to define the start date. Exp: s/25122021\";","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_PAST_DATE \u003d \"All dates have to come after today\u0027s date\";","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_CHRONOLOGICAL_DATE \u003d \"Start Date has to come before End Date.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"    private static final int START_DATE \u003d 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"    private static final int END_DATE \u003d 1;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    private static final int FLAG_LENGTH \u003d 2;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"     * Parses user input to add a goal.","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"     * @param commandInstruction User input containing command parameters.","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"     * @return Command to add goal.","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If command parameters are not defined, or defined improperly.","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"    public static Command parseAddGoalCommand(String commandInstruction) throws HaBitParserException {","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"        Goal goal \u003d getGoal(commandInstruction);","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"        return new AddGoalCommand(goal);","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"     * Parses user input to add a habit.","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"     * @param commandInstruction User input containing command parameters.","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"     * @return Command to add habit.","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If command parameters are not defined, or defined improperly.","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"    public static Command parseAddHabitCommand(String commandInstruction) throws HaBitParserException {","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d splitInput(commandInstruction);","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"flerovious"},"content":"        int goalIndex \u003d getIndex(parameters, FLAG_GOAL_INDEX);","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"        Habit habit \u003d getHabit(commandInstruction);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"        return new AddHabitCommand(habit, goalIndex);","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"    /*","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"     * The following are private methods that are used to implement SLAP for the","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"     * above public methods. These methods are positioned at the bottom to better","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"     * visualise the actual methods that can be called from outside this class.","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"    // The following are parameter \u0027extractor\u0027 methods.","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the goal from user input.","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"     * @param input User input.","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"     * @return Goal with details from user input.","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If command parameters are not defined, or defined improperly.","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"    private static Goal getGoal(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d splitInput(input);","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"flerovious"},"content":"        String goalName \u003d getName(parameters).trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"        GoalType goalType \u003d getType(parameters);","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"        Date[] dates \u003d getDate(parameters);","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"        Date startDate \u003d dates[START_DATE];","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"        Date endDate \u003d dates[END_DATE];","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"        return new Goal(goalName, goalType, startDate, endDate);","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the habit from user input.","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"DJ-Tan"},"content":"     * Habit is initialised with a null endDate first,","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"DJ-Tan"},"content":"     * and altered in AddHabitCommand where there will be access to the goalList.","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"DJ-Tan"},"content":"     * @param input User input.","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"DJ-Tan"},"content":"     * @return Habit with details from user input.","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If command parameters are not defined, or defined improperly.","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"DJ-Tan"},"content":"    private static Habit getHabit(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d splitInput(input);","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"flerovious"},"content":"        String habitName \u003d getName(parameters).trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"DJ-Tan"},"content":"        int interval \u003d getNumber(parameters, FLAG_INTERVAL);","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"DJ-Tan"},"content":"        return new Habit(habitName, interval);","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the dates of the goal.","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"DJ-Tan"},"content":"     * @param parameters String array of command parameters.","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"DJ-Tan"},"content":"     * @return Date array containing start and end dates.","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If the date flag is used without fielding a date.","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"flerovious"},"content":"    private static Date[] getDate(ArrayList\u003cString\u003e parameters) throws HaBitParserException {","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"DJ-Tan"},"content":"        Date[] dates \u003d new Date[2];","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"DJ-Tan"},"content":"        dates[START_DATE] \u003d getStartDate(parameters);","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"DJ-Tan"},"content":"        dates[END_DATE] \u003d getEndDate(parameters);","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"flerovious"},"content":"        assert dates[START_DATE] !\u003d null;","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"flerovious"},"content":"        assert dates[END_DATE] !\u003d null;","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"DJ-Tan"},"content":"        checkDateNotBeforeToday(dates[START_DATE]);","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"DJ-Tan"},"content":"        checkDateNotBeforeToday(dates[END_DATE]);","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"DJ-Tan"},"content":"        checkStartDateBeforeOrEqualEndDate(dates[START_DATE], dates[END_DATE]);","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"DJ-Tan"},"content":"        return dates;","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"DJ-Tan"},"content":"    // The following are sub-methods of the main \u0027extractor\u0027 methods.","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"DJ-Tan"},"content":"     * Converts a string to a date.","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"DJ-Tan"},"content":"     * @param strDate String representation of a date.","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"DJ-Tan"},"content":"     * @return Date parsed from the string.","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If the string fails to parse.","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"DJ-Tan"},"content":"    private static Date stringToDate(String strDate) throws HaBitParserException {","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"DJ-Tan"},"content":"        SimpleDateFormat formatter \u003d new SimpleDateFormat(DATE_FORMAT);","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"flerovious"},"content":"        formatter.setLenient(false);","lastModifiedDate":"2021-10-28"},{"lineNumber":132,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"DJ-Tan"},"content":"            return formatter.parse(strDate);","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"DJ-Tan"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitParserException(ERROR_DATE_FORMAT);","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":138,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":139,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":140,"author":{"gitId":"DJ-Tan"},"content":"     * Gets start date from parameters.","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":142,"author":{"gitId":"DJ-Tan"},"content":"     * @param parameters String array of command parameters.","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"DJ-Tan"},"content":"     * @return Start date.","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If string fails to convert into a date.","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":146,"author":{"gitId":"flerovious"},"content":"    private static Date getStartDate(ArrayList\u003cString\u003e parameters) throws HaBitParserException {","lastModifiedDate":"2021-11-05"},{"lineNumber":147,"author":{"gitId":"flerovious"},"content":"        String strStartDate \u003d getParameter(parameters, FLAG_START_DATE);","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"flerovious"},"content":"        if (strStartDate \u003d\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"DJ-Tan"},"content":"            return new Date();","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"flerovious"},"content":"        } else if (strStartDate.equals(FLAG_START_DATE)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"flerovious"},"content":"            throw new HaBitParserException(ERROR_START_DATE_FORMAT);","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":153,"author":{"gitId":"DJ-Tan"},"content":"        return stringToDate(strStartDate.substring(FLAG_LENGTH));","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":155,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":156,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":157,"author":{"gitId":"DJ-Tan"},"content":"     * Gets end date from parameters.","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":159,"author":{"gitId":"DJ-Tan"},"content":"     * @param parameters String array of command parameters.","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"DJ-Tan"},"content":"     * @return End date.","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If string fails to convert into a date.","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":163,"author":{"gitId":"flerovious"},"content":"    private static Date getEndDate(ArrayList\u003cString\u003e parameters) throws HaBitParserException {","lastModifiedDate":"2021-11-05"},{"lineNumber":164,"author":{"gitId":"flerovious"},"content":"        String strEndDate \u003d getParameter(parameters, FLAG_END_DATE);","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"flerovious"},"content":"        if (strEndDate \u003d\u003d null || strEndDate.equals(FLAG_END_DATE)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitParserException(ERROR_END_DATE_FORMAT);","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":168,"author":{"gitId":"DJ-Tan"},"content":"        return stringToDate(strEndDate.substring(FLAG_LENGTH));","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":170,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":171,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":172,"author":{"gitId":"DJ-Tan"},"content":"     * Checks that the compared date does not fall before the current date.","lastModifiedDate":"2021-10-14"},{"lineNumber":173,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":174,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If the compared date falls before the current date.","lastModifiedDate":"2021-10-14"},{"lineNumber":175,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":176,"author":{"gitId":"DJ-Tan"},"content":"    private static void checkDateNotBeforeToday(Date compareDate) throws HaBitParserException {","lastModifiedDate":"2021-10-14"},{"lineNumber":177,"author":{"gitId":"DJ-Tan"},"content":"        Instant now \u003d Instant.now();","lastModifiedDate":"2021-10-14"},{"lineNumber":178,"author":{"gitId":"DJ-Tan"},"content":"        Instant anHourBeforeNow \u003d now.minus(1, ChronoUnit.HOURS);","lastModifiedDate":"2021-10-14"},{"lineNumber":179,"author":{"gitId":"DJ-Tan"},"content":"        Date currentDate \u003d Date.from(anHourBeforeNow);","lastModifiedDate":"2021-10-14"},{"lineNumber":180,"author":{"gitId":"DJ-Tan"},"content":"        if (compareDate.compareTo(currentDate) \u003c 0) {","lastModifiedDate":"2021-10-14"},{"lineNumber":181,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitParserException(ERROR_PAST_DATE);","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":183,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":184,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":185,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":186,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the start date is before or equal to the end date.","lastModifiedDate":"2021-10-14"},{"lineNumber":187,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":188,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If start date is after the end date.","lastModifiedDate":"2021-10-14"},{"lineNumber":189,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":190,"author":{"gitId":"DJ-Tan"},"content":"    private static void checkStartDateBeforeOrEqualEndDate(Date startDate, Date endDate) throws HaBitParserException {","lastModifiedDate":"2021-10-14"},{"lineNumber":191,"author":{"gitId":"DJ-Tan"},"content":"        if (startDate.compareTo(endDate) \u003e 0) {","lastModifiedDate":"2021-10-14"},{"lineNumber":192,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitParserException(ERROR_CHRONOLOGICAL_DATE);","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":194,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"STAung07":3,"flerovious":23,"DJ-Tan":170}},{"path":"src/main/java/happybit/parser/DeleteParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.Command;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.DeleteGoalCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.DeleteHabitCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"flerovious"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"flerovious"},"content":"public class DeleteParser extends Parser {","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"flerovious"},"content":"     * Parses user input to delete a goal.","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"flerovious"},"content":"     * @param input User input containing command parameters.","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"flerovious"},"content":"     * @return Command to delete specified goal.","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"flerovious"},"content":"     * @throws HaBitParserException If command parameters are not defined, or defined improperly.","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"flerovious"},"content":"    public static Command parseDeleteGoalCommand(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d splitInput(input);","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"flerovious"},"content":"        int goalIndex \u003d getIndex(parameters, FLAG_GOAL_INDEX);","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"kahhe"},"content":"        return new DeleteGoalCommand(goalIndex);","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"flerovious"},"content":"     * Parses user input to delete a habit associated with a goal.","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"flerovious"},"content":"     * @param input User input containing command parameters.","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"flerovious"},"content":"     * @return Command to delete specified habit from a specified goal.","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"flerovious"},"content":"     * @throws HaBitParserException If command parameters are not defined, or defined improperly.","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"flerovious"},"content":"    public static Command parseDeleteHabitCommand(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d splitInput(input);","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"flerovious"},"content":"        int goalIndex \u003d getIndex(parameters, FLAG_GOAL_INDEX);","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"flerovious"},"content":"        int habitIndex \u003d getIndex(parameters, FLAG_HABIT_INDEX);","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"flerovious"},"content":"        return new DeleteHabitCommand(goalIndex, habitIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"flerovious":19,"DJ-Tan":11,"kahhe":9}},{"path":"src/main/java/happybit/parser/DoneParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.Command;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import happybit.command.DoneHabitCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"flerovious"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"flerovious"},"content":"public class DoneParser extends Parser {","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     * Parses user input to mark a habit associated with a goal as completed.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * @param input User input containing command parameters.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * @return Command to mark a specified habit as completed.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If command parameters are not defined, or defined improperly.","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"flerovious"},"content":"    public static Command parseDoneHabitCommand(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d splitInput(input);","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"flerovious"},"content":"        int goalIndex \u003d getIndex(parameters, FLAG_GOAL_INDEX);","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"flerovious"},"content":"        int habitIndex \u003d getIndex(parameters, FLAG_HABIT_INDEX);","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"flerovious"},"content":"        return new DoneHabitCommand(goalIndex, habitIndex);","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"STAung07":3,"flerovious":8,"DJ-Tan":14}},{"path":"src/main/java/happybit/parser/ListGoalParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package happybit.parser;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"import happybit.command.Command;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"import happybit.command.ListGoalsCommand;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"public class ListGoalParser extends Parser {","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"    public static Command parseListGoalCommand(String input) throws HaBitParserException {","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"        return new ListGoalsCommand(input);","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"kahhe":12}},{"path":"src/main/java/happybit/parser/ListHabitParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flerovious"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"flerovious"},"content":"import happybit.command.Command;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"flerovious"},"content":"import happybit.command.ListHabitsCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"flerovious"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"flerovious"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"flerovious"},"content":"public class ListHabitParser extends Parser {","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"flerovious"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"flerovious"},"content":"     * Parses user input to list habits under specified goal.","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"flerovious"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"flerovious"},"content":"     * @param input User input containing command parameter: goal number.","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"flerovious"},"content":"     * @return ListHabitsCommand that will list habits under specified goal number.","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"flerovious"},"content":"     * @throws HaBitParserException If command parameters are not defined, or defined improperly.","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"flerovious"},"content":"    public static Command parseListHabitCommand(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d splitInput(input);","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"flerovious"},"content":"        int goalIndex \u003d getIndex(parameters, FLAG_GOAL_INDEX);","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"        return new ListHabitsCommand(goalIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"flerovious"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"STAung07":3,"flerovious":21}},{"path":"src/main/java/happybit/parser/MainParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flerovious"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"flerovious"},"content":"import happybit.command.Command;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"flerovious"},"content":"import happybit.command.ExitCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"flerovious"},"content":"import happybit.command.HelpCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"flerovious"},"content":"import happybit.command.ReturnCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"flerovious"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"flerovious"},"content":"public class MainParser {","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"flerovious"},"content":"    private static final String DELIMITER \u003d \"@@@\";","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"flerovious"},"content":"    private static final String COMMAND_HELP \u003d \"help\";","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"flerovious"},"content":"    private static final String COMMAND_ADD_GOAL \u003d \"set\";","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"flerovious"},"content":"    private static final String COMMAND_ADD_HABIT \u003d \"add\";","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"flerovious"},"content":"    private static final String COMMAND_SET_GOAL \u003d \"goal\";","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"    private static final String COMMAND_UPDATE_GOALS \u003d \"update\";","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"    private static final String COMMAND_UPDATE_HABITS \u003d \"change\";","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"flerovious"},"content":"    private static final String COMMAND_LIST_GOAL \u003d \"list\";","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"flerovious"},"content":"    private static final String COMMAND_LIST_HABIT \u003d \"view\";","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"flerovious"},"content":"    private static final String COMMAND_DELETE_GOAL \u003d \"remove\";","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"flerovious"},"content":"    private static final String COMMAND_DELETE_HABIT \u003d \"delete\";","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"flerovious"},"content":"    private static final String COMMAND_COMPLETE_HABIT \u003d \"done\";","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"flerovious"},"content":"    private static final String COMMAND_RETURN \u003d \"return\";","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_EXIT \u003d \"exit\";","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"flerovious"},"content":"    protected static final String ERROR_NO_PARAMS \u003d \"Command cannot be called without parameters. \"","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"flerovious"},"content":"            + \"Enter the help command to view command formats\";","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"flerovious"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"flerovious"},"content":"     * Parses the user input.","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"flerovious"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"flerovious"},"content":"     * @param userInput String of the user input in the command line.","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"flerovious"},"content":"     * @return Command to be executed based off user input.","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"flerovious"},"content":"     * @throws HaBitParserException If there are syntax / missing information in the user input.","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"flerovious"},"content":"    public static Command parse(String userInput) throws HaBitParserException {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"flerovious"},"content":"        String treatedUserInput \u003d treatUserInput(userInput);","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"flerovious"},"content":"        String[] words \u003d treatedUserInput.split(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"flerovious"},"content":"        String commandWord \u003d words[0];","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"flerovious"},"content":"        String commandInstruction \u003d getCommandInstruction(words);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"flerovious"},"content":"        return parseCommand(commandWord, commandInstruction);","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"flerovious"},"content":"    /*","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"flerovious"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"flerovious"},"content":"     * The following are private methods that are used to implement SLAP for the","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"flerovious"},"content":"     * above public methods. These methods are positioned at the bottom to better","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"flerovious"},"content":"     * visualise the actual methods that can be called from outside this class.","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"flerovious"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"flerovious"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"flerovious"},"content":"     * Treat the userInput by removing extra blank/white spaces.","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"flerovious"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"flerovious"},"content":"     * @param userInput String input by the user into the command line.","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"flerovious"},"content":"     * @return String with removed extraneous whitespaces.","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"flerovious"},"content":"     * @throws HaBitParserException If the delimiter appears in the user\u0027s input.","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"flerovious"},"content":"    private static String treatUserInput(String userInput) throws HaBitParserException {","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"flerovious"},"content":"        if (userInput.contains(DELIMITER)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"flerovious"},"content":"            throw new HaBitParserException(\"Invalid character in the user input\");","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"flerovious"},"content":"        String treatedInput \u003d userInput.strip().replaceAll(\"\\\\s+\",\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"flerovious"},"content":"        testEmptyString(treatedInput);","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"flerovious"},"content":"        return treatedInput;","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"flerovious"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"flerovious"},"content":"     * Checks if the string is empty.","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"flerovious"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"flerovious"},"content":"     * @param userInput String of user\u0027s input with extraneous whitespace removed.","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"flerovious"},"content":"     * @throws HaBitParserException If the treated user\u0027s input is empty.","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"flerovious"},"content":"    private static void testEmptyString(String userInput) throws HaBitParserException {","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"flerovious"},"content":"        if (userInput.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"flerovious"},"content":"            throw new HaBitParserException(\"No user command detected\");","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"flerovious"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"flerovious"},"content":"     * Obtain the instruction of the user input command without the command word.","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"flerovious"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"flerovious"},"content":"     * @param words String array of user input command delimited by whitespaces.","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"flerovious"},"content":"     * @return String containing the remainder of the user input without the command word.","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"flerovious"},"content":"    private static String getCommandInstruction(String[] words) throws HaBitParserException {","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"flerovious"},"content":"        if (words.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"flerovious"},"content":"            throw new HaBitParserException(ERROR_NO_PARAMS);","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"flerovious"},"content":"        return concatenateString(words);","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"flerovious"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"flerovious"},"content":"     * Concatenate the string in a string array, excluding the first string.","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"flerovious"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"flerovious"},"content":"     * @param words String array containing the strings to be concatenated.","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"flerovious"},"content":"     * @return String that has been concatenated.","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"flerovious"},"content":"    private static String concatenateString(String[] words) {","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"flerovious"},"content":"        StringBuilder instruction \u003d new StringBuilder();","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"flerovious"},"content":"        for (int i \u003d 1; i \u003c words.length; i++) {","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"flerovious"},"content":"            instruction.append(words[i]);","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"flerovious"},"content":"            if (i !\u003d words.length - 1) {","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"flerovious"},"content":"                instruction.append(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"flerovious"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"flerovious"},"content":"        return instruction.toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"flerovious"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"flerovious"},"content":"     * Parse the command instruction based off the command word.","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"flerovious"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"flerovious"},"content":"     * @param command String of the command word.","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"flerovious"},"content":"     * @param details String of the command instructions.","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"flerovious"},"content":"     * @return Command to be executed based off user input.","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"flerovious"},"content":"    private static Command parseCommand(String command, String details) throws HaBitParserException {","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"flerovious"},"content":"        switch (command) {","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"flerovious"},"content":"        case COMMAND_ADD_GOAL:","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"flerovious"},"content":"            return AddParser.parseAddGoalCommand(details);","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"flerovious"},"content":"        case COMMAND_ADD_HABIT:","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"flerovious"},"content":"            return AddParser.parseAddHabitCommand(details);","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"flerovious"},"content":"        case COMMAND_SET_GOAL:","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"flerovious"},"content":"            return SetParser.parseSetGoalCommand(details);","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"flerovious"},"content":"        case COMMAND_LIST_GOAL:","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"kahhe"},"content":"            return ListGoalParser.parseListGoalCommand(details);","lastModifiedDate":"2021-11-05"},{"lineNumber":128,"author":{"gitId":"flerovious"},"content":"        case COMMAND_LIST_HABIT:","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"flerovious"},"content":"            return ListHabitParser.parseListHabitCommand(details);","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"flerovious"},"content":"        case COMMAND_DELETE_GOAL:","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"flerovious"},"content":"            return DeleteParser.parseDeleteGoalCommand(details);","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"flerovious"},"content":"        case COMMAND_DELETE_HABIT:","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"flerovious"},"content":"            return DeleteParser.parseDeleteHabitCommand(details);","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"flerovious"},"content":"        case COMMAND_COMPLETE_HABIT:","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"flerovious"},"content":"            return DoneParser.parseDoneHabitCommand(details);","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"STAung07"},"content":"        case COMMAND_UPDATE_GOALS:","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"STAung07"},"content":"            return UpdateParser.parseUpdateGoalCommands(details);","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"STAung07"},"content":"        case COMMAND_UPDATE_HABITS:","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"STAung07"},"content":"            return UpdateParser.parseUpdateHabitCommands(details);","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"flerovious"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"flerovious"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"flerovious"},"content":"        case COMMAND_RETURN:","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"flerovious"},"content":"            return new ReturnCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"flerovious"},"content":"        case COMMAND_HELP:","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"flerovious"},"content":"        default:","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"flerovious"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"flerovious"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"STAung07":6,"flerovious":142,"DJ-Tan":1,"kahhe":1}},{"path":"src/main/java/happybit/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"flerovious"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalType;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"flerovious"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"import java.time.ZoneId;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"import java.util.Date;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"flerovious"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"flerovious"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"public class Parser {","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"flerovious"},"content":"    protected static final String LABEL_SYNTAX \u003d \"(?\u003c\u003d\\\\s|^)[a-zA-Z]/.*?((?\u003d\\\\s+[a-zA-Z]/)|$)\";","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"flerovious"},"content":"    protected static final String DATE_FORMAT \u003d \"ddMMyyyy\";","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"flerovious"},"content":"    protected static final String FLAG_GOAL_INDEX \u003d \"g/\";","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"flerovious"},"content":"    protected static final String FLAG_NAME \u003d \"n/\";","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"flerovious"},"content":"    protected static final String FLAG_GOAL_TYPE \u003d \"t/\";","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"flerovious"},"content":"    protected static final String FLAG_INTERVAL \u003d \"i/\";","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"flerovious"},"content":"    protected static final String FLAG_START_DATE \u003d \"s/\";","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"flerovious"},"content":"    protected static final String FLAG_END_DATE \u003d \"e/\";","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"flerovious"},"content":"    protected static final String FLAG_HABIT_INDEX \u003d \"h/\";","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"    private static final String SLEEP_LABEL \u003d \"sl\";","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"    private static final String FOOD_LABEL \u003d \"fd\";","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    private static final String EXERCISE_LABEL \u003d \"ex\";","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    private static final String STUDY_LABEL \u003d \"sd\";","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"    private static final String DEFAULT_LABEL \u003d \"df\";","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_NAME_FORMAT \u003d \"Use the \u0027n/\u0027 flag to define the name. Exp: n/Foo\";","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_GOAL_TYPE_FORMAT \u003d \"Use the \u0027t/\u0027 flag to define the goal type. Exp: t/df\";","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_INTEGER_FLAG_FORMAT \u003d \"The command is missing the \u0027%1$s\u0027 flag\";","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_CONVERT_NUM \u003d \"The flag \u0027%1$s\u0027 has to be followed by a number\";","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_UNDEFINED_GOAL_TYPE_LABEL \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"flerovious"},"content":"            \"Use the following goal types: \u0027sl\u0027, \u0027fd\u0027, \u0027ex\u0027, \u0027sd\u0027, \u0027df\u0027\";","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_NEGATIVE_NUM \u003d \"The flag \u0027%1$s\u0027 has to be followed by a positive integer\";","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_ZERO_NUM \u003d \"The flag \u0027%1$s\u0027 has to be followed by a number greater than 0\";","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"kahhe"},"content":"    protected static final String ERROR_INTERVAL_TOO_LARGE \u003d \"Interval size is capped at 365 days.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_NO_DESCRIPTION \u003d \"Use a description of at least 1 character\";","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_LONG_DESCRIPTION \u003d \"Use a description no more than 50 characters \"","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"            + \"(current: %1$s characters)\";","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"    private static final int FLAG_LENGTH \u003d 2;","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"    private static final int MAX_NAME_LENGTH \u003d 50;","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"kahhe"},"content":"    protected static final int MAX_INTERVAL \u003d 365;","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"flerovious"},"content":"     * Splits the input into the various parameters.","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"flerovious"},"content":"     * @param input User input.","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"flerovious"},"content":"     * @return String array containing the parameters.","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"flerovious"},"content":"    protected static ArrayList\u003cString\u003e splitInput(String input) {","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"flerovious"},"content":"        Pattern pattern \u003d Pattern.compile(LABEL_SYNTAX);","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"flerovious"},"content":"        Matcher matcher \u003d pattern.matcher(input);","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e listMatches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"flerovious"},"content":"        while (matcher.find()) {","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"flerovious"},"content":"            listMatches.add(matcher.group());","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"flerovious"},"content":"        return trimParameters(listMatches);","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"flerovious"},"content":"     * Finds the parameters corresponding to the given label and returns it.","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"flerovious"},"content":"     * @param parameters String array of command parameters.","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"flerovious"},"content":"     * @param label      Label of a parameter.","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"flerovious"},"content":"     * @return Parameter if it exists, null otherwise.","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"flerovious"},"content":"    protected static String getParameter(ArrayList\u003cString\u003e parameters, String label) {","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"flerovious"},"content":"        for (String parameter : parameters) {","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"flerovious"},"content":"            if (parameter.contains(label)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"flerovious"},"content":"                return parameter;","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"        return null;","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"STAung07"},"content":"     * \u0027Type-casting\u0027 a Date to a LocalDate.","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"STAung07"},"content":"     * @param date Date to be \u0027type-casted\u0027.","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"STAung07"},"content":"     * @return LocalDate that has been \u0027type-casted\u0027 from Date.","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"STAung07"},"content":"    protected static LocalDate convertDateToLocalDate(Date date) {","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"STAung07"},"content":"        return date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"STAung07"},"content":"     * \u0027Type-casting\u0027 a LocalDate to a Date.","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"STAung07"},"content":"     * @param localDate LocalDate to be \u0027type-casted\u0027.","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"STAung07"},"content":"     * @return Date that has been \u0027type-casted\u0027 from LocalDate.","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"STAung07"},"content":"    protected static Date convertLocalDateToDate(LocalDate localDate) {","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"STAung07"},"content":"        return Date.from(localDate.atStartOfDay().atZone(ZoneId.systemDefault()).toInstant());","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the name of a goal/habit from the user input.","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"DJ-Tan"},"content":"     * @param parameters String array of command parameters.","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"DJ-Tan"},"content":"     * @return Name of a goal/habit.","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If the name cannot be obtained from the user input.","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"flerovious"},"content":"    protected static String getName(ArrayList\u003cString\u003e parameters) throws HaBitParserException {","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"DJ-Tan"},"content":"        String nameWithFlag \u003d getAndCheckParameter(parameters, FLAG_NAME, ERROR_NAME_FORMAT);","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"DJ-Tan"},"content":"        String name \u003d nameWithFlag.substring(FLAG_LENGTH).trim();","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"DJ-Tan"},"content":"        checkStringLength(name);","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"DJ-Tan"},"content":"        return name;","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"flerovious"},"content":"     * Gets the number of a goal/habit from the user input.","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"DJ-Tan"},"content":"     * @param parameters String array of command parameters.","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"DJ-Tan"},"content":"     * @param flag       Goal/habit flag.","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"DJ-Tan"},"content":"     * @return Index of a goal/habit.","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"flerovious"},"content":"     * @throws HaBitParserException If the number cannot be obtained from the user input.","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"flerovious"},"content":"    protected static int getNumber(ArrayList\u003cString\u003e parameters, String flag) throws HaBitParserException {","lastModifiedDate":"2021-11-05"},{"lineNumber":124,"author":{"gitId":"DJ-Tan"},"content":"        String indexWithFlag \u003d getAndCheckParameter(parameters, flag, String.format(ERROR_INTEGER_FLAG_FORMAT, flag));","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"DJ-Tan"},"content":"        String index \u003d indexWithFlag.substring(FLAG_LENGTH).trim();","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"DJ-Tan"},"content":"        return stringToInt(index, flag);","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the goal type.","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"DJ-Tan"},"content":"     * @param parameters String array of command parameters.","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"DJ-Tan"},"content":"     * @return Goal type parameter.","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If the goal type flag is used without fielding a proper goal type.","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"flerovious"},"content":"    protected static GoalType getType(ArrayList\u003cString\u003e parameters) throws HaBitParserException {","lastModifiedDate":"2021-11-05"},{"lineNumber":137,"author":{"gitId":"DJ-Tan"},"content":"        String flag \u003d getParameter(parameters, FLAG_GOAL_TYPE);","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"DJ-Tan"},"content":"        if (flag \u003d\u003d null) {","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"DJ-Tan"},"content":"            return GoalType.DEFAULT;","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"DJ-Tan"},"content":"        } else if (flag.equals(FLAG_GOAL_TYPE)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitParserException(ERROR_GOAL_TYPE_FORMAT);","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"DJ-Tan"},"content":"        return getGoalType(flag.substring(FLAG_LENGTH));","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":147,"author":{"gitId":"STAung07"},"content":"     * Gets the index for goal / habit.","lastModifiedDate":"2021-11-05"},{"lineNumber":148,"author":{"gitId":"STAung07"},"content":"     * Checks more than or equal to 0.","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":150,"author":{"gitId":"STAung07"},"content":"     * @param parameters String array of command parameters.","lastModifiedDate":"2021-11-05"},{"lineNumber":151,"author":{"gitId":"STAung07"},"content":"     * @param flag Flag of parameter being checked.","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"STAung07"},"content":"     * @return Integer of goal / habit user wanted.","lastModifiedDate":"2021-11-05"},{"lineNumber":153,"author":{"gitId":"STAung07"},"content":"     * @throws HaBitParserException If index entered by user is less than or equal to 0.","lastModifiedDate":"2021-11-05"},{"lineNumber":154,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"flerovious"},"content":"    protected static int getIndex(ArrayList\u003cString\u003e parameters, String flag) throws HaBitParserException {","lastModifiedDate":"2021-11-05"},{"lineNumber":156,"author":{"gitId":"STAung07"},"content":"        int number \u003d getNumber(parameters, flag);","lastModifiedDate":"2021-11-05"},{"lineNumber":157,"author":{"gitId":"STAung07"},"content":"        if (number \u003d\u003d 0) {","lastModifiedDate":"2021-11-05"},{"lineNumber":158,"author":{"gitId":"STAung07"},"content":"            throw new HaBitParserException(String.format(ERROR_ZERO_NUM, flag));","lastModifiedDate":"2021-11-05"},{"lineNumber":159,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":160,"author":{"gitId":"STAung07"},"content":"        return number - 1;","lastModifiedDate":"2021-11-05"},{"lineNumber":161,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":162,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":163,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":164,"author":{"gitId":"STAung07"},"content":"     * Gets interval when user wants to update the interval of a habit.","lastModifiedDate":"2021-11-05"},{"lineNumber":165,"author":{"gitId":"STAung07"},"content":"     * Checks more than or equal to zero to update as interval cannot be 0 for update.","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"STAung07"},"content":"     * When adding new habit, interval can be 0.","lastModifiedDate":"2021-11-05"},{"lineNumber":167,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":168,"author":{"gitId":"STAung07"},"content":"     * @param parameters String array of command parameters.","lastModifiedDate":"2021-11-05"},{"lineNumber":169,"author":{"gitId":"STAung07"},"content":"     * @param flag Flag of parameter being checked.","lastModifiedDate":"2021-11-05"},{"lineNumber":170,"author":{"gitId":"STAung07"},"content":"     * @return New interval to be changed to.","lastModifiedDate":"2021-11-05"},{"lineNumber":171,"author":{"gitId":"STAung07"},"content":"     * @throws HaBitParserException If interval is less than or equal to 0.","lastModifiedDate":"2021-11-05"},{"lineNumber":172,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":173,"author":{"gitId":"flerovious"},"content":"    protected static int getUpdateInterval(ArrayList\u003cString\u003e parameters, String flag) throws HaBitParserException {","lastModifiedDate":"2021-11-05"},{"lineNumber":174,"author":{"gitId":"STAung07"},"content":"        int interval \u003d getNumber(parameters, flag);","lastModifiedDate":"2021-11-05"},{"lineNumber":175,"author":{"gitId":"STAung07"},"content":"        if (interval \u003d\u003d 0) {","lastModifiedDate":"2021-11-05"},{"lineNumber":176,"author":{"gitId":"STAung07"},"content":"            throw new HaBitParserException(String.format(ERROR_ZERO_NUM, flag));","lastModifiedDate":"2021-11-05"},{"lineNumber":177,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":178,"author":{"gitId":"STAung07"},"content":"        return interval;","lastModifiedDate":"2021-11-05"},{"lineNumber":179,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":180,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":181,"author":{"gitId":"DJ-Tan"},"content":"    /*","lastModifiedDate":"2021-11-04"},{"lineNumber":182,"author":{"gitId":"DJ-Tan"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":183,"author":{"gitId":"DJ-Tan"},"content":"     * The following are private methods that are used to implement SLAP for the","lastModifiedDate":"2021-11-04"},{"lineNumber":184,"author":{"gitId":"DJ-Tan"},"content":"     * above public methods. These methods are positioned at the bottom to better","lastModifiedDate":"2021-11-04"},{"lineNumber":185,"author":{"gitId":"DJ-Tan"},"content":"     * visualise the actual methods that can be called from outside this class.","lastModifiedDate":"2021-11-04"},{"lineNumber":186,"author":{"gitId":"DJ-Tan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":187,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":188,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":189,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":190,"author":{"gitId":"DJ-Tan"},"content":"     * Removes leading and trailing whitespaces if any.","lastModifiedDate":"2021-11-04"},{"lineNumber":191,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":192,"author":{"gitId":"DJ-Tan"},"content":"     * @param parameters String array of command parameters.","lastModifiedDate":"2021-11-04"},{"lineNumber":193,"author":{"gitId":"DJ-Tan"},"content":"     * @return String array of command parameters that have been trimmed of leading/trailing whitespaces.","lastModifiedDate":"2021-11-04"},{"lineNumber":194,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":195,"author":{"gitId":"flerovious"},"content":"    private static ArrayList\u003cString\u003e trimParameters(ArrayList\u003cString\u003e parameters) {","lastModifiedDate":"2021-11-05"},{"lineNumber":196,"author":{"gitId":"flerovious"},"content":"        for (int i \u003d 0; i \u003c parameters.size(); ++i) {","lastModifiedDate":"2021-11-05"},{"lineNumber":197,"author":{"gitId":"flerovious"},"content":"            String parameter \u003d parameters.get(i);","lastModifiedDate":"2021-11-05"},{"lineNumber":198,"author":{"gitId":"flerovious"},"content":"            String trimmedParameter \u003d parameter.substring(0,2).trim() + parameter.substring(2).trim();","lastModifiedDate":"2021-11-05"},{"lineNumber":199,"author":{"gitId":"flerovious"},"content":"            parameters.set(i, trimmedParameter);","lastModifiedDate":"2021-11-05"},{"lineNumber":200,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":201,"author":{"gitId":"DJ-Tan"},"content":"        return parameters;","lastModifiedDate":"2021-11-04"},{"lineNumber":202,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":203,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":204,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":205,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the parameter from the parameter array and check its validity.","lastModifiedDate":"2021-11-04"},{"lineNumber":206,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":207,"author":{"gitId":"DJ-Tan"},"content":"     * @param parameters   String array of command parameters.","lastModifiedDate":"2021-11-04"},{"lineNumber":208,"author":{"gitId":"DJ-Tan"},"content":"     * @param flag         Command flag.","lastModifiedDate":"2021-11-04"},{"lineNumber":209,"author":{"gitId":"DJ-Tan"},"content":"     * @param errorMessage Error message to call if input parameter is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":210,"author":{"gitId":"DJ-Tan"},"content":"     * @return Parameter.","lastModifiedDate":"2021-11-04"},{"lineNumber":211,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If parameter is absent.","lastModifiedDate":"2021-11-04"},{"lineNumber":212,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":213,"author":{"gitId":"flerovious"},"content":"    private static String getAndCheckParameter(ArrayList\u003cString\u003e parameters, String flag, String errorMessage)","lastModifiedDate":"2021-11-05"},{"lineNumber":214,"author":{"gitId":"DJ-Tan"},"content":"            throws HaBitParserException {","lastModifiedDate":"2021-11-04"},{"lineNumber":215,"author":{"gitId":"DJ-Tan"},"content":"        String parameter \u003d getParameter(parameters, flag);","lastModifiedDate":"2021-11-04"},{"lineNumber":216,"author":{"gitId":"flerovious"},"content":"        if (parameter \u003d\u003d null) {","lastModifiedDate":"2021-11-05"},{"lineNumber":217,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitParserException(errorMessage);","lastModifiedDate":"2021-11-04"},{"lineNumber":218,"author":{"gitId":"flerovious"},"content":"        } else if (parameter.equals(FLAG_NAME) || parameter.equals(FLAG_INTERVAL)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":219,"author":{"gitId":"DJ-Tan"},"content":"            return parameter;","lastModifiedDate":"2021-11-04"},{"lineNumber":220,"author":{"gitId":"flerovious"},"content":"        } else if (parameter.equals(flag)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":221,"author":{"gitId":"flerovious"},"content":"            throw new HaBitParserException(errorMessage);","lastModifiedDate":"2021-11-05"},{"lineNumber":222,"author":{"gitId":"flerovious"},"content":"        } else {","lastModifiedDate":"2021-11-05"},{"lineNumber":223,"author":{"gitId":"flerovious"},"content":"            return parameter;","lastModifiedDate":"2021-11-05"},{"lineNumber":224,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":225,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":226,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":227,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":228,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the input is too long.","lastModifiedDate":"2021-11-04"},{"lineNumber":229,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":230,"author":{"gitId":"DJ-Tan"},"content":"     * @param input String of the goal/habit description.","lastModifiedDate":"2021-11-04"},{"lineNumber":231,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If the input is more than 50 characters.","lastModifiedDate":"2021-11-04"},{"lineNumber":232,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":233,"author":{"gitId":"DJ-Tan"},"content":"    private static void checkStringLength(String input) throws HaBitParserException {","lastModifiedDate":"2021-11-04"},{"lineNumber":234,"author":{"gitId":"flerovious"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2021-11-05"},{"lineNumber":235,"author":{"gitId":"flerovious"},"content":"            throw new HaBitParserException(ERROR_NO_DESCRIPTION);","lastModifiedDate":"2021-11-05"},{"lineNumber":236,"author":{"gitId":"flerovious"},"content":"        } else if (input.length() \u003e MAX_NAME_LENGTH) {","lastModifiedDate":"2021-11-05"},{"lineNumber":237,"author":{"gitId":"flerovious"},"content":"            throw new HaBitParserException(String.format(ERROR_LONG_DESCRIPTION, input.length()));","lastModifiedDate":"2021-11-05"},{"lineNumber":238,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":239,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":240,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":241,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":242,"author":{"gitId":"STAung07"},"content":"     * Checks if the input can be converted to an integer and is greater than or equal to 0.","lastModifiedDate":"2021-11-05"},{"lineNumber":243,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":244,"author":{"gitId":"DJ-Tan"},"content":"     * @param input Index as a string data type.","lastModifiedDate":"2021-11-04"},{"lineNumber":245,"author":{"gitId":"DJ-Tan"},"content":"     * @return Index as an integer data type.","lastModifiedDate":"2021-11-04"},{"lineNumber":246,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If the string cannot be converted to an integer, or integer greater than 0.","lastModifiedDate":"2021-11-04"},{"lineNumber":247,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":248,"author":{"gitId":"DJ-Tan"},"content":"    private static int stringToInt(String input, String flag) throws HaBitParserException {","lastModifiedDate":"2021-11-04"},{"lineNumber":249,"author":{"gitId":"DJ-Tan"},"content":"        int number;","lastModifiedDate":"2021-11-04"},{"lineNumber":250,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":251,"author":{"gitId":"DJ-Tan"},"content":"            number \u003d Integer.parseInt(input);","lastModifiedDate":"2021-11-04"},{"lineNumber":252,"author":{"gitId":"DJ-Tan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":253,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitParserException(String.format(ERROR_CONVERT_NUM, flag));","lastModifiedDate":"2021-11-04"},{"lineNumber":254,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":255,"author":{"gitId":"STAung07"},"content":"        if (number \u003c 0) {","lastModifiedDate":"2021-11-05"},{"lineNumber":256,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitParserException(String.format(ERROR_NEGATIVE_NUM, flag));","lastModifiedDate":"2021-11-04"},{"lineNumber":257,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":258,"author":{"gitId":"DJ-Tan"},"content":"        return number;","lastModifiedDate":"2021-11-04"},{"lineNumber":259,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":260,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":261,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":262,"author":{"gitId":"DJ-Tan"},"content":"     * Gets Goal Type from a string label.","lastModifiedDate":"2021-11-04"},{"lineNumber":263,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":264,"author":{"gitId":"DJ-Tan"},"content":"     * @param label String containing label of goal type.","lastModifiedDate":"2021-11-04"},{"lineNumber":265,"author":{"gitId":"DJ-Tan"},"content":"     * @return Goal type corresponding to string label.","lastModifiedDate":"2021-11-04"},{"lineNumber":266,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If an invalid label is used.","lastModifiedDate":"2021-11-04"},{"lineNumber":267,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":268,"author":{"gitId":"DJ-Tan"},"content":"    private static GoalType getGoalType(String label) throws HaBitParserException {","lastModifiedDate":"2021-11-04"},{"lineNumber":269,"author":{"gitId":"DJ-Tan"},"content":"        switch (label) {","lastModifiedDate":"2021-11-04"},{"lineNumber":270,"author":{"gitId":"DJ-Tan"},"content":"        case SLEEP_LABEL:","lastModifiedDate":"2021-11-04"},{"lineNumber":271,"author":{"gitId":"DJ-Tan"},"content":"            return GoalType.SLEEP;","lastModifiedDate":"2021-11-04"},{"lineNumber":272,"author":{"gitId":"DJ-Tan"},"content":"        case FOOD_LABEL:","lastModifiedDate":"2021-11-04"},{"lineNumber":273,"author":{"gitId":"DJ-Tan"},"content":"            return GoalType.FOOD;","lastModifiedDate":"2021-11-04"},{"lineNumber":274,"author":{"gitId":"DJ-Tan"},"content":"        case EXERCISE_LABEL:","lastModifiedDate":"2021-11-04"},{"lineNumber":275,"author":{"gitId":"DJ-Tan"},"content":"            return GoalType.EXERCISE;","lastModifiedDate":"2021-11-04"},{"lineNumber":276,"author":{"gitId":"DJ-Tan"},"content":"        case STUDY_LABEL:","lastModifiedDate":"2021-11-04"},{"lineNumber":277,"author":{"gitId":"DJ-Tan"},"content":"            return GoalType.STUDY;","lastModifiedDate":"2021-11-04"},{"lineNumber":278,"author":{"gitId":"DJ-Tan"},"content":"        case DEFAULT_LABEL:","lastModifiedDate":"2021-11-04"},{"lineNumber":279,"author":{"gitId":"DJ-Tan"},"content":"            return GoalType.DEFAULT;","lastModifiedDate":"2021-11-04"},{"lineNumber":280,"author":{"gitId":"DJ-Tan"},"content":"        default:","lastModifiedDate":"2021-11-04"},{"lineNumber":281,"author":{"gitId":"flerovious"},"content":"            throw new HaBitParserException(ERROR_UNDEFINED_GOAL_TYPE_LABEL);","lastModifiedDate":"2021-11-05"},{"lineNumber":282,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":283,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":284,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":285,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"STAung07":60,"flerovious":63,"DJ-Tan":160,"kahhe":2}},{"path":"src/main/java/happybit/parser/SetParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.SetCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"flerovious"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"public class SetParser extends Parser {","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     * Parses user input to set a goal as the default view in main interface.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * @param commandInstruction User input containing command parameters.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * @return Command to set a goal as default view.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If command parameters are not defined, or defined improperly.","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    public static Command parseSetGoalCommand(String commandInstruction) throws HaBitParserException {","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d splitInput(commandInstruction);","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"flerovious"},"content":"        int goalIndex \u003d getIndex(parameters, FLAG_GOAL_INDEX);","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"        return new SetCommand(goalIndex);","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"flerovious":4,"DJ-Tan":20}},{"path":"src/main/java/happybit/parser/UpdateParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"import happybit.command.Command;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import happybit.command.UpdateGoalEndDateCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"import happybit.command.UpdateGoalNameCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import happybit.command.UpdateGoalTypeCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"import happybit.command.UpdateHabitIntervalCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"import happybit.command.UpdateHabitNameCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"import happybit.goal.GoalType;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"flerovious"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"public class UpdateParser extends Parser {","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_GOAL_END_DATE_FORMAT \u003d \"Use the e/ flag to set the new goal end date\"","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"            + \"Eg: e/31122021\";","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_DATE_FORMAT \u003d \"Use the date format: \u0027ddMMyyyy\u0027.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_INVALID_UPDATE_COMMAND \u003d \"There is no update command for goals in this format, \"","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"kahhe"},"content":"            + \"do check your parameters one more time. Do not include more or less parameters than necessary.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_INVALID_CHANGE_COMMAND \u003d \"There is no change command for habits in this format, \"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"kahhe"},"content":"            + \"do check your parameters one more time. Do not include more or less parameters than necessary.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"kahhe"},"content":"    private static final String ERROR_CHANGE_HABIT_NAME_WITH_UPDATE_COMMAND \u003d \"Are you perhaps trying to change a \"","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"kahhe"},"content":"            + \"habit name? Please use the \u0027change\u0027 command instead.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"kahhe"},"content":"    private static final String ERROR_CHANGE_HABIT_INTERVAL_WITH_UPDATE_COMMAND \u003d \"Are you perhaps trying to change a \"","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"kahhe"},"content":"            + \"habit interval? Please use the \u0027change\u0027 command instead.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"kahhe"},"content":"    private static final String ERROR_UPDATE_GOAL_NAME_WITH_CHANGE_COMMAND \u003d \"Are you perhaps trying to change a \"","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"kahhe"},"content":"            + \"goal name? Please use the \u0027update\u0027 command instead.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"kahhe"},"content":"    private static final String ERROR_UPDATE_GOAL_TYPE_WITH_CHANGE_COMMAND \u003d \"Are you perhaps trying to change a \"","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"kahhe"},"content":"            + \"goal type? Please use the \u0027update\u0027 command instead.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"kahhe"},"content":"    private static final String ERROR_UPDATE_GOAL_END_DATE_WITH_CHANGE_COMMAND \u003d \"Are you perhaps trying to change a \"","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"kahhe"},"content":"            + \"goal end date? Please use the \u0027update\u0027 command instead.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"STAung07"},"content":"    private static final DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"ddMMyyyy\");","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"flerovious"},"content":"    private static final int FLAG_LENGTH \u003d 2;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"kahhe"},"content":"     * Examines user input to decide which goal attribute user wants to update.","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"kahhe"},"content":"     * @param input User input.","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"kahhe"},"content":"     * @return Parse command specifically for updating the chosen goal attribute.","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"kahhe"},"content":"     * @throws HaBitParserException Thrown when parameters given are for changing habit rather than updating goal","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"kahhe"},"content":"     *                              or when parameters are not in the same","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"STAung07"},"content":"    public static Command parseUpdateGoalCommands(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d splitInput(input);","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"        if (isUpdateGoalName(parameters)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"STAung07"},"content":"            return parseUpdateGoalNameCommand(input);","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"        if (isUpdateGoalType(parameters)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"STAung07"},"content":"            return parseUpdateGoalTypeCommand(input);","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"        if (isUpdateGoalEndDate(parameters)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"STAung07"},"content":"            return parseUpdateGoalEndDate(input);","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"kahhe"},"content":"        if (isChangeHabitName(parameters)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"kahhe"},"content":"            throw new HaBitParserException(ERROR_CHANGE_HABIT_NAME_WITH_UPDATE_COMMAND);","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"kahhe"},"content":"        } else if (isChangeHabitInterval(parameters)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"kahhe"},"content":"            throw new HaBitParserException(ERROR_CHANGE_HABIT_INTERVAL_WITH_UPDATE_COMMAND);","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"kahhe"},"content":"        } else {","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"STAung07"},"content":"            throw new HaBitParserException(ERROR_INVALID_UPDATE_COMMAND);","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"STAung07"},"content":"     * Examines user input to decide which habit attribute user wants to change.","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"STAung07"},"content":"     * @param input User input.","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"STAung07"},"content":"     * @return Parse command specifically for updating the chosen habit attribute.","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"STAung07"},"content":"     * @throws HaBitParserException Thrown when parameters given are for updating goal rather than changing habits","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"STAung07"},"content":"     *                              or when parameters are not the same","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"STAung07"},"content":"    public static Command parseUpdateHabitCommands(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d splitInput(input);","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"        if (isChangeHabitName(parameters)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"STAung07"},"content":"            return parseUpdateHabitNameCommand(input);","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"DJ-Tan"},"content":"        if (isChangeHabitInterval(parameters)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"STAung07"},"content":"            return parseUpdateHabitIntervalCommand(input);","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"kahhe"},"content":"        if (isUpdateGoalName(parameters)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"kahhe"},"content":"            throw new HaBitParserException(ERROR_UPDATE_GOAL_NAME_WITH_CHANGE_COMMAND);","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"kahhe"},"content":"        } else if (isUpdateGoalType(parameters)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"kahhe"},"content":"            throw new HaBitParserException(ERROR_UPDATE_GOAL_TYPE_WITH_CHANGE_COMMAND);","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"kahhe"},"content":"        } else if (isUpdateGoalEndDate(parameters)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"kahhe"},"content":"            throw new HaBitParserException(ERROR_UPDATE_GOAL_END_DATE_WITH_CHANGE_COMMAND);","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"kahhe"},"content":"        } else {","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"STAung07"},"content":"            throw new HaBitParserException(ERROR_INVALID_CHANGE_COMMAND);","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"kahhe"},"content":"     * Parses detail from user into goalIndex and newGoalName (information) to create a new Command.","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"kahhe"},"content":"     * @param input Input typed by the user.","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"kahhe"},"content":"     * @return A Command class with the goalIndex and newGoalName.","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"flerovious"},"content":"     * @throws HaBitParserException If command parameters are not defined, or defined improperly.","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"flerovious"},"content":"    public static Command parseUpdateGoalNameCommand(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d splitInput(input);","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"flerovious"},"content":"        int goalIndex \u003d getIndex(parameters, FLAG_GOAL_INDEX);","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"DJ-Tan"},"content":"        String newGoalName \u003d getName(parameters);","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"flerovious"},"content":"        return new UpdateGoalNameCommand(goalIndex, newGoalName);","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"STAung07"},"content":"    public static Command parseUpdateGoalEndDate(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d splitInput(input);","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"flerovious"},"content":"        int goalIndex \u003d getIndex(parameters, FLAG_GOAL_INDEX);","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"STAung07"},"content":"        Date newDate \u003d getDate(parameters);","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"STAung07"},"content":"        return new UpdateGoalEndDateCommand(goalIndex, newDate);","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"STAung07"},"content":"     * Parses detail from user into goalIndex and newGoalName (information) to create a new Command.","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":126,"author":{"gitId":"STAung07"},"content":"     * @param input Input typed by the user.","lastModifiedDate":"2021-10-28"},{"lineNumber":127,"author":{"gitId":"STAung07"},"content":"     * @return A Command class with the goalIndex and newGoalName.","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"STAung07"},"content":"     * @throws HaBitParserException If command parameters are not defined, or defined improperly.","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"STAung07"},"content":"    public static Command parseUpdateGoalTypeCommand(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-28"},{"lineNumber":131,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d splitInput(input);","lastModifiedDate":"2021-11-05"},{"lineNumber":132,"author":{"gitId":"flerovious"},"content":"        int goalIndex \u003d getIndex(parameters, FLAG_GOAL_INDEX);","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"DJ-Tan"},"content":"        GoalType newGoalType \u003d getType(parameters);","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"STAung07"},"content":"        return new UpdateGoalTypeCommand(goalIndex, newGoalType);","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":136,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"kahhe"},"content":"     * Parses detail from user into goalIndex, habitIndex, and newHabitName (information) to create a new Command.","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"kahhe"},"content":"     * @param input Input typed by the user.","lastModifiedDate":"2021-10-28"},{"lineNumber":141,"author":{"gitId":"kahhe"},"content":"     * @return A Command class with the goalIndex, habitIndex, and newHabitName.","lastModifiedDate":"2021-10-28"},{"lineNumber":142,"author":{"gitId":"kahhe"},"content":"     * @throws HaBitParserException If command parameters are not defined, or defined improperly.","lastModifiedDate":"2021-10-28"},{"lineNumber":143,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"kahhe"},"content":"    public static Command parseUpdateHabitNameCommand(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d splitInput(input);","lastModifiedDate":"2021-11-05"},{"lineNumber":146,"author":{"gitId":"flerovious"},"content":"        int goalIndex \u003d getIndex(parameters, FLAG_GOAL_INDEX);","lastModifiedDate":"2021-11-05"},{"lineNumber":147,"author":{"gitId":"flerovious"},"content":"        int habitIndex \u003d getIndex(parameters, FLAG_HABIT_INDEX);","lastModifiedDate":"2021-11-05"},{"lineNumber":148,"author":{"gitId":"DJ-Tan"},"content":"        String newHabitName \u003d getName(parameters);","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"kahhe"},"content":"        return new UpdateHabitNameCommand(goalIndex, habitIndex, newHabitName);","lastModifiedDate":"2021-10-28"},{"lineNumber":150,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":153,"author":{"gitId":"STAung07"},"content":"     * Parser to parse user\u0027s command of updating interval.","lastModifiedDate":"2021-10-28"},{"lineNumber":154,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":155,"author":{"gitId":"STAung07"},"content":"     * @param commandInstruction Input from user.","lastModifiedDate":"2021-10-28"},{"lineNumber":156,"author":{"gitId":"STAung07"},"content":"     * @return A Command instance for UpdateHabitIntervalCommand with the goalIndex, habitIndex and interval","lastModifiedDate":"2021-10-28"},{"lineNumber":157,"author":{"gitId":"STAung07"},"content":"     * @throws HaBitParserException If command parameters are not defined, or defined improperly","lastModifiedDate":"2021-10-28"},{"lineNumber":158,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":159,"author":{"gitId":"STAung07"},"content":"    public static Command parseUpdateHabitIntervalCommand(String commandInstruction) throws HaBitParserException {","lastModifiedDate":"2021-10-28"},{"lineNumber":160,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d splitInput(commandInstruction);","lastModifiedDate":"2021-11-05"},{"lineNumber":161,"author":{"gitId":"STAung07"},"content":"        int goalIndex \u003d getIndex(parameters, FLAG_GOAL_INDEX);","lastModifiedDate":"2021-11-05"},{"lineNumber":162,"author":{"gitId":"STAung07"},"content":"        int habitIndex \u003d getIndex(parameters, FLAG_HABIT_INDEX);","lastModifiedDate":"2021-11-05"},{"lineNumber":163,"author":{"gitId":"STAung07"},"content":"        int interval \u003d getUpdateInterval(parameters, FLAG_INTERVAL);","lastModifiedDate":"2021-11-05"},{"lineNumber":164,"author":{"gitId":"kahhe"},"content":"        if (interval \u003e MAX_INTERVAL) {","lastModifiedDate":"2021-11-05"},{"lineNumber":165,"author":{"gitId":"kahhe"},"content":"            throw new HaBitParserException(ERROR_INTERVAL_TOO_LARGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":167,"author":{"gitId":"STAung07"},"content":"        assert (goalIndex \u003e\u003d 0);","lastModifiedDate":"2021-10-28"},{"lineNumber":168,"author":{"gitId":"STAung07"},"content":"        assert (habitIndex \u003e\u003d 0);","lastModifiedDate":"2021-10-28"},{"lineNumber":169,"author":{"gitId":"STAung07"},"content":"        assert (interval \u003e 0);","lastModifiedDate":"2021-11-03"},{"lineNumber":170,"author":{"gitId":"STAung07"},"content":"        return new UpdateHabitIntervalCommand(goalIndex, habitIndex, interval);","lastModifiedDate":"2021-10-28"},{"lineNumber":171,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":172,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":173,"author":{"gitId":"STAung07"},"content":"    /*","lastModifiedDate":"2021-10-28"},{"lineNumber":174,"author":{"gitId":"STAung07"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":175,"author":{"gitId":"STAung07"},"content":"     * The following are private methods that are used to implement SLAP for the","lastModifiedDate":"2021-10-28"},{"lineNumber":176,"author":{"gitId":"STAung07"},"content":"     * above public methods. These methods are positioned at the bottom to better","lastModifiedDate":"2021-10-28"},{"lineNumber":177,"author":{"gitId":"STAung07"},"content":"     * visualise the actual methods that can be called from outside this class.","lastModifiedDate":"2021-10-28"},{"lineNumber":178,"author":{"gitId":"STAung07"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":179,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":180,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":181,"author":{"gitId":"flerovious"},"content":"    private static boolean isUpdateGoalName(ArrayList\u003cString\u003e parameters) {","lastModifiedDate":"2021-11-05"},{"lineNumber":182,"author":{"gitId":"kahhe"},"content":"        return isContainFlag(parameters, FLAG_GOAL_INDEX) \u0026\u0026 isContainFlag(parameters, FLAG_NAME)","lastModifiedDate":"2021-11-05"},{"lineNumber":183,"author":{"gitId":"kahhe"},"content":"                \u0026\u0026 isContainNoOtherFlag(parameters, FLAG_GOAL_INDEX, FLAG_NAME);","lastModifiedDate":"2021-11-05"},{"lineNumber":184,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":185,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":186,"author":{"gitId":"flerovious"},"content":"    private static boolean isUpdateGoalType(ArrayList\u003cString\u003e parameters) {","lastModifiedDate":"2021-11-05"},{"lineNumber":187,"author":{"gitId":"kahhe"},"content":"        return isContainFlag(parameters, FLAG_GOAL_INDEX) \u0026\u0026 isContainFlag(parameters, FLAG_GOAL_TYPE)","lastModifiedDate":"2021-11-05"},{"lineNumber":188,"author":{"gitId":"kahhe"},"content":"                \u0026\u0026 isContainNoOtherFlag(parameters, FLAG_GOAL_INDEX, FLAG_GOAL_TYPE);","lastModifiedDate":"2021-11-05"},{"lineNumber":189,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":190,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":191,"author":{"gitId":"flerovious"},"content":"    private static boolean isUpdateGoalEndDate(ArrayList\u003cString\u003e parameters) {","lastModifiedDate":"2021-11-05"},{"lineNumber":192,"author":{"gitId":"kahhe"},"content":"        return isContainFlag(parameters, FLAG_GOAL_INDEX) \u0026\u0026 isContainFlag(parameters, FLAG_END_DATE)","lastModifiedDate":"2021-11-05"},{"lineNumber":193,"author":{"gitId":"kahhe"},"content":"                \u0026\u0026 isContainNoOtherFlag(parameters, FLAG_GOAL_INDEX, FLAG_END_DATE);","lastModifiedDate":"2021-11-05"},{"lineNumber":194,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":195,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"flerovious"},"content":"    private static boolean isChangeHabitName(ArrayList\u003cString\u003e parameters) {","lastModifiedDate":"2021-11-05"},{"lineNumber":197,"author":{"gitId":"kahhe"},"content":"        return isContainFlag(parameters, FLAG_GOAL_INDEX) \u0026\u0026 isContainFlag(parameters, FLAG_HABIT_INDEX)","lastModifiedDate":"2021-11-05"},{"lineNumber":198,"author":{"gitId":"kahhe"},"content":"                \u0026\u0026 isContainFlag(parameters, FLAG_NAME);","lastModifiedDate":"2021-11-05"},{"lineNumber":199,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":200,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":201,"author":{"gitId":"flerovious"},"content":"    private static boolean isChangeHabitInterval(ArrayList\u003cString\u003e parameters) {","lastModifiedDate":"2021-11-05"},{"lineNumber":202,"author":{"gitId":"kahhe"},"content":"        return isContainFlag(parameters, FLAG_GOAL_INDEX) \u0026\u0026 isContainFlag(parameters, FLAG_HABIT_INDEX)","lastModifiedDate":"2021-11-05"},{"lineNumber":203,"author":{"gitId":"kahhe"},"content":"                \u0026\u0026 isContainFlag(parameters, FLAG_INTERVAL);","lastModifiedDate":"2021-11-05"},{"lineNumber":204,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":205,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":206,"author":{"gitId":"flerovious"},"content":"    private static boolean isContainFlag(ArrayList\u003cString\u003e parameters, String flag) {","lastModifiedDate":"2021-11-05"},{"lineNumber":207,"author":{"gitId":"DJ-Tan"},"content":"        for (String param : parameters) {","lastModifiedDate":"2021-11-04"},{"lineNumber":208,"author":{"gitId":"STAung07"},"content":"            if (param.contains(flag)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":209,"author":{"gitId":"STAung07"},"content":"                return true;","lastModifiedDate":"2021-10-28"},{"lineNumber":210,"author":{"gitId":"STAung07"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":211,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":212,"author":{"gitId":"STAung07"},"content":"        return false;","lastModifiedDate":"2021-10-28"},{"lineNumber":213,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":214,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":215,"author":{"gitId":"kahhe"},"content":"    //todo can consider overloading to accommodate three flags rather than just two","lastModifiedDate":"2021-11-05"},{"lineNumber":216,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":217,"author":{"gitId":"kahhe"},"content":"     * Ensures no excess parameters are given.","lastModifiedDate":"2021-11-05"},{"lineNumber":218,"author":{"gitId":"kahhe"},"content":"     * Excess parameters given can happen when user wrongly uses a command.","lastModifiedDate":"2021-11-05"},{"lineNumber":219,"author":{"gitId":"kahhe"},"content":"     * e.g. mixing up \"update\" command for \"change\" command, adding an extra habit index parameter.","lastModifiedDate":"2021-11-05"},{"lineNumber":220,"author":{"gitId":"kahhe"},"content":"     * firstFlag and secondFlag are the two flags that is expected from the user.","lastModifiedDate":"2021-11-05"},{"lineNumber":221,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":222,"author":{"gitId":"kahhe"},"content":"     * @param parameters Array with parameters from user.","lastModifiedDate":"2021-11-05"},{"lineNumber":223,"author":{"gitId":"kahhe"},"content":"     * @param firstFlag First expected flag from user.","lastModifiedDate":"2021-11-05"},{"lineNumber":224,"author":{"gitId":"kahhe"},"content":"     * @param secondFlag Second expected flag from user.","lastModifiedDate":"2021-11-05"},{"lineNumber":225,"author":{"gitId":"kahhe"},"content":"     * @return True if there is no excess parameters in user input. False otherwise.","lastModifiedDate":"2021-11-05"},{"lineNumber":226,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":227,"author":{"gitId":"flerovious"},"content":"    private static boolean isContainNoOtherFlag(ArrayList\u003cString\u003e parameters, String firstFlag, String secondFlag) {","lastModifiedDate":"2021-11-05"},{"lineNumber":228,"author":{"gitId":"kahhe"},"content":"        for (String param : parameters) {","lastModifiedDate":"2021-11-05"},{"lineNumber":229,"author":{"gitId":"kahhe"},"content":"            if (param.contains(FLAG_GOAL_INDEX) \u0026\u0026 isExcessFlag(FLAG_GOAL_INDEX, firstFlag, secondFlag)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":230,"author":{"gitId":"kahhe"},"content":"                return false;","lastModifiedDate":"2021-11-05"},{"lineNumber":231,"author":{"gitId":"kahhe"},"content":"            } else if (param.contains(FLAG_NAME) \u0026\u0026 isExcessFlag(FLAG_NAME, firstFlag, secondFlag)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":232,"author":{"gitId":"kahhe"},"content":"                return false;","lastModifiedDate":"2021-11-05"},{"lineNumber":233,"author":{"gitId":"kahhe"},"content":"            } else if (param.contains(FLAG_GOAL_TYPE) \u0026\u0026 isExcessFlag(FLAG_GOAL_TYPE, firstFlag, secondFlag)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":234,"author":{"gitId":"kahhe"},"content":"                return false;","lastModifiedDate":"2021-11-05"},{"lineNumber":235,"author":{"gitId":"kahhe"},"content":"            } else if (param.contains(FLAG_INTERVAL) \u0026\u0026 isExcessFlag(FLAG_INTERVAL, firstFlag, secondFlag)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":236,"author":{"gitId":"kahhe"},"content":"                return false;","lastModifiedDate":"2021-11-05"},{"lineNumber":237,"author":{"gitId":"kahhe"},"content":"            } else if (param.contains(FLAG_START_DATE) \u0026\u0026 isExcessFlag(FLAG_START_DATE, firstFlag, secondFlag)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":238,"author":{"gitId":"kahhe"},"content":"                return false;","lastModifiedDate":"2021-11-05"},{"lineNumber":239,"author":{"gitId":"kahhe"},"content":"            } else if (param.contains(FLAG_END_DATE) \u0026\u0026 isExcessFlag(FLAG_END_DATE, firstFlag, secondFlag)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":240,"author":{"gitId":"kahhe"},"content":"                return false;","lastModifiedDate":"2021-11-05"},{"lineNumber":241,"author":{"gitId":"kahhe"},"content":"            } else if (param.contains(FLAG_HABIT_INDEX) \u0026\u0026 isExcessFlag(FLAG_HABIT_INDEX, firstFlag, secondFlag)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":242,"author":{"gitId":"kahhe"},"content":"                return false;","lastModifiedDate":"2021-11-05"},{"lineNumber":243,"author":{"gitId":"kahhe"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":244,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":245,"author":{"gitId":"kahhe"},"content":"        return true;","lastModifiedDate":"2021-11-05"},{"lineNumber":246,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":247,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":248,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":249,"author":{"gitId":"kahhe"},"content":"     * Compares a reference flag to two other flags to see if reference flag is identical to either of the two flags.","lastModifiedDate":"2021-11-05"},{"lineNumber":250,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":251,"author":{"gitId":"kahhe"},"content":"     * @param referenceFlag Flag used to compare to firstFlag and secondFlag.","lastModifiedDate":"2021-11-05"},{"lineNumber":252,"author":{"gitId":"kahhe"},"content":"     * @param firstFlag First expected flag from user.","lastModifiedDate":"2021-11-05"},{"lineNumber":253,"author":{"gitId":"kahhe"},"content":"     * @param secondFlag Second expected flag from user.","lastModifiedDate":"2021-11-05"},{"lineNumber":254,"author":{"gitId":"kahhe"},"content":"     * @return True if referenceFlag is not equal to the 2 expected flags. False otherwise.","lastModifiedDate":"2021-11-05"},{"lineNumber":255,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":256,"author":{"gitId":"kahhe"},"content":"    private static boolean isExcessFlag(String referenceFlag, String firstFlag, String secondFlag) {","lastModifiedDate":"2021-11-05"},{"lineNumber":257,"author":{"gitId":"flerovious"},"content":"        return !referenceFlag.equals(firstFlag) \u0026\u0026 !referenceFlag.equals(secondFlag);","lastModifiedDate":"2021-11-05"},{"lineNumber":258,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":259,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":260,"author":{"gitId":"flerovious"},"content":"    private static Date getDate(ArrayList\u003cString\u003e parameters) throws HaBitParserException {","lastModifiedDate":"2021-11-05"},{"lineNumber":261,"author":{"gitId":"STAung07"},"content":"        String strEndDate \u003d getParameter(parameters, FLAG_END_DATE);","lastModifiedDate":"2021-10-28"},{"lineNumber":262,"author":{"gitId":"STAung07"},"content":"        if (strEndDate \u003d\u003d null || strEndDate.equals(FLAG_END_DATE)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":263,"author":{"gitId":"STAung07"},"content":"            throw new HaBitParserException(ERROR_GOAL_END_DATE_FORMAT);","lastModifiedDate":"2021-10-28"},{"lineNumber":264,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":265,"author":{"gitId":"STAung07"},"content":"        return stringToDate(strEndDate.substring(FLAG_LENGTH));","lastModifiedDate":"2021-10-28"},{"lineNumber":266,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":267,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":268,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":269,"author":{"gitId":"STAung07"},"content":"     * Converts a string formatted date into a Date object.","lastModifiedDate":"2021-10-28"},{"lineNumber":270,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":271,"author":{"gitId":"STAung07"},"content":"     * @param strDate Date written in String format","lastModifiedDate":"2021-10-28"},{"lineNumber":272,"author":{"gitId":"STAung07"},"content":"     * @return Date object of strDate","lastModifiedDate":"2021-10-28"},{"lineNumber":273,"author":{"gitId":"STAung07"},"content":"     * @throws HaBitParserException If the String Date fails to be parsed","lastModifiedDate":"2021-10-28"},{"lineNumber":274,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":275,"author":{"gitId":"STAung07"},"content":"    private static Date stringToDate(String strDate) throws HaBitParserException {","lastModifiedDate":"2021-10-28"},{"lineNumber":276,"author":{"gitId":"STAung07"},"content":"        LocalDate parsedDate;","lastModifiedDate":"2021-11-04"},{"lineNumber":277,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":278,"author":{"gitId":"STAung07"},"content":"            parsedDate \u003d LocalDate.parse(strDate, dateTimeFormatter);","lastModifiedDate":"2021-11-04"},{"lineNumber":279,"author":{"gitId":"STAung07"},"content":"            return convertLocalDateToDate(parsedDate);","lastModifiedDate":"2021-11-04"},{"lineNumber":280,"author":{"gitId":"STAung07"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":281,"author":{"gitId":"STAung07"},"content":"            throw new HaBitParserException(ERROR_DATE_FORMAT);","lastModifiedDate":"2021-11-04"},{"lineNumber":282,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":283,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":284,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":285,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":286,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":287,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"STAung07":132,"flerovious":26,"DJ-Tan":11,"kahhe":118}},{"path":"src/main/java/happybit/state/State.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.state;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitUiException;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import happybit.ui.UiMain;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"import happybit.ui.UiStartup;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"public class State {","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    protected GoalList goalList;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"    protected PrintManager printManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    protected Storage storage;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"kahhe"},"content":"    protected boolean isExitFromStartup \u003d false;","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"    public State(GoalList goalList, PrintManager printManager, Storage storage) {","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"        this.goalList \u003d goalList;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"        this.printManager \u003d printManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     * Alternates between the 2 states.","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"    public void handleState() {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"        startupState();","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kahhe"},"content":"        if (isExitFromStartup) {","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"kahhe"},"content":"            return;","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"        mainState();","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"        if (!this.isExit) {","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"            handleState();","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"     * Manages the start-up interface.","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"    public void startupState() {","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"            UiStartup uiStartup \u003d new UiStartup();","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"            uiStartup.run();","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"kahhe"},"content":"            isExitFromStartup \u003d uiStartup.getIsExitFromStartup();","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"        } catch (HaBitUiException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"            printManager.printError(e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"    /*","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"     * The following are private methods that are used to implement SLAP for the","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"     * above public methods. These methods are positioned at the bottom to better","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"     * visualise the actual methods that can be called from outside this class.","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"     * Manages the main menu interface.","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"    private void mainState() {","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"STAung07"},"content":"        UiMain uiMain \u003d new UiMain(goalList, printManager, storage);","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"        uiMain.run();","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"        this.isExit \u003d uiMain.getIsExit();","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"STAung07":5,"DJ-Tan":58,"kahhe":5}},{"path":"src/main/java/happybit/storage/Export.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huien77"},"content":"package happybit.storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"huien77"},"content":"import happybit.exception.HaBitStorageException;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"import happybit.goal.Goal;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"huien77"},"content":"import happybit.habit.Habit;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"huien77"},"content":"import happybit.interval.Interval;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"huien77"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":8,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"huien77"},"content":"import java.io.File;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"huien77"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"huien77"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"huien77"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"huien77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"huien77"},"content":"/**","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"huien77"},"content":" * Writes data from GoalList to storage file.","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"huien77"},"content":" */","lastModifiedDate":"2021-11-03"},{"lineNumber":18,"author":{"gitId":"huien77"},"content":"public class Export {","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"huien77"},"content":"    private static final String NEWLINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"huien77"},"content":"    private static final String DELIMITER \u003d \"##\";","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"huien77"},"content":"    private static final String GOAL_TYPE \u003d \"G\";","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"huien77"},"content":"    private static final String HABIT_TYPE \u003d \"H\";","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"huien77"},"content":"    private static final String INTERVAL_TYPE \u003d \"I\";","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"huien77"},"content":"    private static final String EMPTY \u003d \"\";","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"huien77"},"content":"    private static final String NULL \u003d \"null\";","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"huien77"},"content":"    private static final String FILE_WRITE \u003d \"Allow writing of data to storage file.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"huien77"},"content":"    private static final String FILE_WRITE_FAIL \u003d \"Failed to write to storage file.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"huien77"},"content":"    private static final String READ_ONLY \u003d \"Writing done. Storage file is updated and set to read only.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"huien77"},"content":"    private static final String SET_READ_ONLY_FAILED \u003d \"Failed to set storage file as read only.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"huien77"},"content":"    private static final String DATE_FORMAT \u003d \"ddMMyyyy\";","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"huien77"},"content":"    protected String filePath;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"huien77"},"content":"    protected PrintManager printManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"huien77"},"content":"    public Export(String filePath, PrintManager printManager) {","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"huien77"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"huien77"},"content":"        this.printManager \u003d printManager;","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"huien77"},"content":"     * Exports the entire GoalList to storage.","lastModifiedDate":"2021-11-03"},{"lineNumber":42,"author":{"gitId":"huien77"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"huien77"},"content":"     * @param goalList the arraylist of goals to be exported","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"huien77"},"content":"     * @throws HaBitStorageException when an error occurred with storage file","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"huien77"},"content":"    protected void exportToStorage(ArrayList\u003cGoal\u003e goalList) throws HaBitStorageException {","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"huien77"},"content":"            this.clearFile();","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"huien77"},"content":"            this.writeToFile(goalList);","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"huien77"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"huien77"},"content":"            throw new HaBitStorageException(e.toString());","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"huien77"},"content":"     * Clears the storage file.","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"huien77"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"huien77"},"content":"     * @throws IOException error when writing to storage file","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"huien77"},"content":"    protected void clearFile() throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"huien77"},"content":"        this.setWritable();","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"huien77"},"content":"        FileWriter fileWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"huien77"},"content":"        fileWriter.write(EMPTY);","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"huien77"},"content":"        fileWriter.close();","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"huien77"},"content":"     * Writes all the goals set to storage file.","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"huien77"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"huien77"},"content":"     * @param goalList the array list that contains all the user data","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"huien77"},"content":"     * @throws IOException error when writing to the storage file","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"huien77"},"content":"    protected void writeToFile(ArrayList\u003cGoal\u003e goalList) throws IOException {","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"huien77"},"content":"        FileWriter fileWriter \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"huien77"},"content":"        for (Goal goal : goalList) {","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"huien77"},"content":"            int index \u003d goalList.indexOf(goal);","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"huien77"},"content":"            ArrayList\u003cHabit\u003e habits \u003d goal.getHabitList();","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"huien77"},"content":"            String goalToWrite \u003d this.goalString(goal, index);","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"huien77"},"content":"            fileWriter.write(goalToWrite);","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"huien77"},"content":"            this.writeHabit(fileWriter, habits, index);","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"huien77"},"content":"        fileWriter.close();","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"huien77"},"content":"        this.setReadOnly();","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"huien77"},"content":"     * Allows writing to the storage file which was set as read only.","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"huien77"},"content":"    protected void setWritable() {","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"huien77"},"content":"        File storageFile \u003d new File(this.filePath);","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"huien77"},"content":"        boolean isWriteable \u003d storageFile.setWritable(true);","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"huien77"},"content":"        if (isWriteable) {","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"huien77"},"content":"            this.printManager.printStorageMessage(FILE_WRITE);","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"huien77"},"content":"        } else {","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"huien77"},"content":"            this.printManager.printStorageMessage(FILE_WRITE_FAIL);","lastModifiedDate":"2021-11-03"},{"lineNumber":101,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":104,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"huien77"},"content":"     * Sets the storage file back to read only after writing.","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"huien77"},"content":"    protected void setReadOnly() {","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"huien77"},"content":"        File storageFile \u003d new File(this.filePath);","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"huien77"},"content":"        boolean isReadOnly \u003d storageFile.setReadOnly();","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"huien77"},"content":"        if (isReadOnly) {","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"huien77"},"content":"            this.printManager.printStorageMessage(READ_ONLY);","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"huien77"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"huien77"},"content":"            this.printManager.printStorageMessage(SET_READ_ONLY_FAILED);","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"huien77"},"content":"     * Writes all the habits under a certain goal into storage file.","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"huien77"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"huien77"},"content":"     * @param fileWriter the file to write to","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"huien77"},"content":"     * @param habitList the list of habit under a goal","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"huien77"},"content":"     * @param index the index of the goal the habit is under","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"huien77"},"content":"     * @throws IOException error when writing to the storage file","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"huien77"},"content":"    protected void writeHabit(FileWriter fileWriter, ArrayList\u003cHabit\u003e habitList, int index) throws IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"huien77"},"content":"        for (Habit habit : habitList) {","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"huien77"},"content":"            int habitIndex \u003d habitList.indexOf(habit);","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"huien77"},"content":"            ArrayList\u003cInterval\u003e intervals \u003d habit.getIntervals();","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"huien77"},"content":"            String habitToWrite \u003d this.habitString(habit, index);","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"huien77"},"content":"            fileWriter.write(habitToWrite);","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"huien77"},"content":"            this.writeInterval(fileWriter, intervals, index, habitIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"huien77"},"content":"     * Writes all the intervals under a certain habit into storage file.","lastModifiedDate":"2021-11-03"},{"lineNumber":139,"author":{"gitId":"huien77"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":140,"author":{"gitId":"huien77"},"content":"     * @param fileWriter the file to write to","lastModifiedDate":"2021-11-03"},{"lineNumber":141,"author":{"gitId":"huien77"},"content":"     * @param intervalList the list of intervals under a habit","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"huien77"},"content":"     * @param goalIndex the index of goal the habit is under","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"huien77"},"content":"     * @param habitIndex the index of habit the interval is for","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"huien77"},"content":"     * @throws IOException error when writing to the storage file","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":146,"author":{"gitId":"huien77"},"content":"    protected void writeInterval(FileWriter fileWriter, ArrayList\u003cInterval\u003e intervalList, int goalIndex,","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"huien77"},"content":"                                 int habitIndex) throws IOException {","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"huien77"},"content":"        for (Interval interval : intervalList) {","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"huien77"},"content":"            String intervalToWrite \u003d this.intervalString(interval, goalIndex, habitIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"huien77"},"content":"            fileWriter.write(intervalToWrite);","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":156,"author":{"gitId":"huien77"},"content":"     * Converts a Goal object into a string format to be written to storage file.","lastModifiedDate":"2021-11-03"},{"lineNumber":157,"author":{"gitId":"huien77"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":158,"author":{"gitId":"huien77"},"content":"     * @param goal the Goal object to be converted to a string for storage","lastModifiedDate":"2021-11-03"},{"lineNumber":159,"author":{"gitId":"huien77"},"content":"     * @param index the index of the goal in the goallist","lastModifiedDate":"2021-11-03"},{"lineNumber":160,"author":{"gitId":"huien77"},"content":"     * @return the string representing the goal object","lastModifiedDate":"2021-11-03"},{"lineNumber":161,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":162,"author":{"gitId":"huien77"},"content":"    protected String goalString(Goal goal, int index) {","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"huien77"},"content":"        return index + DELIMITER","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"huien77"},"content":"                + GOAL_TYPE + DELIMITER","lastModifiedDate":"2021-10-17"},{"lineNumber":165,"author":{"gitId":"STAung07"},"content":"                + goal.getGoalTypeStr() + DELIMITER","lastModifiedDate":"2021-10-28"},{"lineNumber":166,"author":{"gitId":"huien77"},"content":"                + goal.getGoalName() + DELIMITER","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"STAung07"},"content":"                + goal.getStringStartDate() + DELIMITER","lastModifiedDate":"2021-11-04"},{"lineNumber":168,"author":{"gitId":"DJ-Tan"},"content":"                + goal.getStringEndDate() + NEWLINE;","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":172,"author":{"gitId":"huien77"},"content":"     * Converts a Habit object into a string format to be written to storage file.","lastModifiedDate":"2021-11-03"},{"lineNumber":173,"author":{"gitId":"huien77"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":174,"author":{"gitId":"huien77"},"content":"     * @param habit the Habit object to be converted to string for storage","lastModifiedDate":"2021-11-03"},{"lineNumber":175,"author":{"gitId":"huien77"},"content":"     * @param index the index of the goal the habit is under","lastModifiedDate":"2021-11-03"},{"lineNumber":176,"author":{"gitId":"huien77"},"content":"     * @return the string representing the habit object","lastModifiedDate":"2021-11-03"},{"lineNumber":177,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":178,"author":{"gitId":"huien77"},"content":"    protected String habitString(Habit habit, int index) {","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"huien77"},"content":"        return index + DELIMITER","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"huien77"},"content":"                + HABIT_TYPE + DELIMITER","lastModifiedDate":"2021-10-17"},{"lineNumber":181,"author":{"gitId":"STAung07"},"content":"                + habit.getHabitName() + DELIMITER","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"DJ-Tan"},"content":"                + habit.getStartDate() + DELIMITER","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"DJ-Tan"},"content":"                + habit.getEndDate() + DELIMITER","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"DJ-Tan"},"content":"                + habit.getIntervalLength() + NEWLINE;","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":186,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":188,"author":{"gitId":"huien77"},"content":"     * Converts an Interval object into a string format to be written to storage file.","lastModifiedDate":"2021-11-03"},{"lineNumber":189,"author":{"gitId":"huien77"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":190,"author":{"gitId":"huien77"},"content":"     * @param interval the Interval object to be converted to string for storage","lastModifiedDate":"2021-11-03"},{"lineNumber":191,"author":{"gitId":"huien77"},"content":"     * @param goalIndex the index of the goal the habit is under","lastModifiedDate":"2021-11-03"},{"lineNumber":192,"author":{"gitId":"huien77"},"content":"     * @param habitIndex the index of the habit the interval is for","lastModifiedDate":"2021-11-03"},{"lineNumber":193,"author":{"gitId":"huien77"},"content":"     * @return the string representing the interval object","lastModifiedDate":"2021-11-03"},{"lineNumber":194,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":195,"author":{"gitId":"huien77"},"content":"    protected String intervalString(Interval interval, int goalIndex, int habitIndex) {","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"huien77"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(DATE_FORMAT);","lastModifiedDate":"2021-11-03"},{"lineNumber":197,"author":{"gitId":"huien77"},"content":"        String startDate \u003d format.format(interval.getStartDate());","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"huien77"},"content":"        String endDate \u003d format.format(interval.getEndDate());","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"huien77"},"content":"        String completedDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"huien77"},"content":"        if (interval.getCompletedDate() \u003d\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"huien77"},"content":"            completedDate \u003d NULL;","lastModifiedDate":"2021-11-03"},{"lineNumber":203,"author":{"gitId":"huien77"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"huien77"},"content":"            completedDate \u003d format.format(interval.getCompletedDate());","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":206,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"huien77"},"content":"        return goalIndex + DELIMITER","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"huien77"},"content":"                + INTERVAL_TYPE + DELIMITER","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"huien77"},"content":"                + habitIndex + DELIMITER","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"huien77"},"content":"                + startDate + DELIMITER","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"huien77"},"content":"                + endDate + DELIMITER","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"huien77"},"content":"                + completedDate + NEWLINE;","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":214,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":216,"author":{"gitId":"huien77"},"content":"     * Exports a Goal object.","lastModifiedDate":"2021-11-03"},{"lineNumber":217,"author":{"gitId":"huien77"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":218,"author":{"gitId":"huien77"},"content":"     * @param goal the object to be written to storage","lastModifiedDate":"2021-11-03"},{"lineNumber":219,"author":{"gitId":"huien77"},"content":"     * @param index the index of the goal","lastModifiedDate":"2021-11-03"},{"lineNumber":220,"author":{"gitId":"huien77"},"content":"     * @throws HaBitStorageException error when writing to storage file","lastModifiedDate":"2021-11-03"},{"lineNumber":221,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":222,"author":{"gitId":"huien77"},"content":"    protected void exportGoal(Goal goal, int index) throws HaBitStorageException {","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"huien77"},"content":"        this.setWritable();","lastModifiedDate":"2021-11-03"},{"lineNumber":224,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":225,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":226,"author":{"gitId":"huien77"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"huien77"},"content":"            String goalToWrite \u003d this.goalString(goal, index);","lastModifiedDate":"2021-11-02"},{"lineNumber":228,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"huien77"},"content":"            fileWriter.write(goalToWrite);","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"huien77"},"content":"            fileWriter.close();","lastModifiedDate":"2021-10-24"},{"lineNumber":231,"author":{"gitId":"huien77"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"huien77"},"content":"            throw new HaBitStorageException(e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":235,"author":{"gitId":"huien77"},"content":"        this.setReadOnly();","lastModifiedDate":"2021-11-03"},{"lineNumber":236,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":239,"author":{"gitId":"huien77"},"content":"     * Exports a Habit object.","lastModifiedDate":"2021-11-03"},{"lineNumber":240,"author":{"gitId":"huien77"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":241,"author":{"gitId":"huien77"},"content":"     * @param habit the object to be written to storage","lastModifiedDate":"2021-11-03"},{"lineNumber":242,"author":{"gitId":"huien77"},"content":"     * @param index the index of the goal the habit is under","lastModifiedDate":"2021-11-03"},{"lineNumber":243,"author":{"gitId":"huien77"},"content":"     * @throws HaBitStorageException error when writing to storage file","lastModifiedDate":"2021-11-03"},{"lineNumber":244,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":245,"author":{"gitId":"huien77"},"content":"    protected void exportHabit(Habit habit, int index) throws HaBitStorageException {","lastModifiedDate":"2021-10-24"},{"lineNumber":246,"author":{"gitId":"huien77"},"content":"        this.setWritable();","lastModifiedDate":"2021-11-03"},{"lineNumber":247,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":248,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":249,"author":{"gitId":"huien77"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"huien77"},"content":"            String habitToWrite \u003d this.habitString(habit, index);","lastModifiedDate":"2021-11-02"},{"lineNumber":251,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":252,"author":{"gitId":"huien77"},"content":"            fileWriter.write(habitToWrite);","lastModifiedDate":"2021-10-24"},{"lineNumber":253,"author":{"gitId":"huien77"},"content":"            fileWriter.close();","lastModifiedDate":"2021-10-24"},{"lineNumber":254,"author":{"gitId":"huien77"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-11-02"},{"lineNumber":255,"author":{"gitId":"huien77"},"content":"            throw new HaBitStorageException(e.getMessage());","lastModifiedDate":"2021-11-02"},{"lineNumber":256,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":257,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":258,"author":{"gitId":"huien77"},"content":"        this.setReadOnly();","lastModifiedDate":"2021-11-03"},{"lineNumber":259,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":260,"author":{"gitId":"huien77"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"STAung07":3,"huien77":253,"DJ-Tan":4}},{"path":"src/main/java/happybit/storage/Import.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huien77"},"content":"package happybit.storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"huien77"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"import happybit.exception.HaBitStorageException;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"huien77"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"huien77"},"content":"import happybit.habit.Habit;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"huien77"},"content":"import happybit.interval.Interval;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"huien77"},"content":"import java.io.File;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"huien77"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"huien77"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"huien77"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"huien77"},"content":"/**","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"huien77"},"content":" * Handles the importing of data from the storage file to GoalList.","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"huien77"},"content":" */","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"huien77"},"content":"public class Import {","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"huien77"},"content":"    private static final String DELIMITER \u003d \"##\";","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"huien77"},"content":"    private static final String GOAL_TYPE \u003d \"G\";","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"huien77"},"content":"    private static final String HABIT_TYPE \u003d \"H\";","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"huien77"},"content":"    private static final String INTERVAL_TYPE \u003d \"I\";","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"huien77"},"content":"    private static final String ERROR_INVALID_GOAL_INDEX \u003d \"There is no goal at that index.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"huien77"},"content":"    private static final String ERROR_READING_DATA \u003d \"Error while reading data from storage.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"huien77"},"content":"    private static final int GOAL_INDEX \u003d 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"huien77"},"content":"    private static final int TYPE_INDEX \u003d 1;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"huien77"},"content":"    private static final int HABIT_INDEX \u003d 2;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"huien77"},"content":"     * Reads from the storage file to return a GoalList object.","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"huien77"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"huien77"},"content":"     * @param filePath the location of the storage file","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"huien77"},"content":"     * @return GoalList object that contains user data","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"huien77"},"content":"     * @throws HaBitStorageException when an error occurred during importing of data","lastModifiedDate":"2021-11-03"},{"lineNumber":34,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"huien77"},"content":"    protected static GoalList importStorage(String filePath) throws HaBitStorageException {","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"huien77"},"content":"        GoalList goalList \u003d new GoalList();","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"huien77"},"content":"        File storageFile \u003d new File(filePath);","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"huien77"},"content":"        Scanner s;","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"huien77"},"content":"        String line;","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"huien77"},"content":"            s \u003d new Scanner(storageFile);","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"huien77"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"huien77"},"content":"                line \u003d s.nextLine();","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"huien77"},"content":"                String[] lineData \u003d line.split(DELIMITER);","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"huien77"},"content":"                updateGoalList(lineData, goalList);","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"huien77"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"huien77"},"content":"        } catch (FileNotFoundException | NumberFormatException | ParseException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"huien77"},"content":"            throw new HaBitStorageException(e.getMessage());","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"huien77"},"content":"        } catch (HaBitCommandException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"huien77"},"content":"            throw new HaBitStorageException(ERROR_INVALID_GOAL_INDEX);","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"huien77"},"content":"        return goalList;","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"huien77"},"content":"     * Determines the data to add to GoalList and update accordingly.","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"huien77"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"huien77"},"content":"     * @param lineData the data read from the storage file","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"huien77"},"content":"     * @param goalList the GoalList object to contain user data","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"huien77"},"content":"     * @throws ParseException when string cannot be parsed to integers","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"huien77"},"content":"     * @throws HaBitCommandException when there is error adding to GoalList","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"huien77"},"content":"     * @throws HaBitStorageException when there is an unexpected data being read","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"huien77"},"content":"    protected static void updateGoalList(String[] lineData, GoalList goalList) throws ParseException,","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"huien77"},"content":"            HaBitCommandException, HaBitStorageException {","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"huien77"},"content":"        int goalIndex \u003d Integer.parseInt(lineData[GOAL_INDEX]);","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"huien77"},"content":"        switch (lineData[TYPE_INDEX]) {","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"huien77"},"content":"        case GOAL_TYPE:","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"huien77"},"content":"            goalList.addGoal(ImportParser.goalParser(lineData));","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"huien77"},"content":"            break;","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"huien77"},"content":"        case HABIT_TYPE:","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"huien77"},"content":"            // this Habit object returned contains an empty ArrayList of Intervals","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"huien77"},"content":"            Habit habit \u003d ImportParser.habitParser(lineData);","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"huien77"},"content":"            goalList.addHabitToGoal(habit, goalIndex);","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"huien77"},"content":"            break;","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"huien77"},"content":"        case INTERVAL_TYPE:","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"huien77"},"content":"            int habitIndex \u003d Integer.parseInt(lineData[HABIT_INDEX]);","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"huien77"},"content":"            Interval interval \u003d ImportParser.intervalParser(lineData);","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"huien77"},"content":"            goalList.addIntervalToHabit(goalIndex, habitIndex, interval);","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"huien77"},"content":"            break;","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"huien77"},"content":"        default:","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"huien77"},"content":"            throw new HaBitStorageException(ERROR_READING_DATA);","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"huien77"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"huien77":91}},{"path":"src/main/java/happybit/storage/ImportParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huien77"},"content":"package happybit.storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"huien77"},"content":"import happybit.goal.Goal;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"import happybit.goal.GoalType;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"huien77"},"content":"import happybit.habit.Habit;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import happybit.interval.Interval;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"huien77"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"huien77"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"huien77"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"huien77"},"content":"/**","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"huien77"},"content":" * Handles the parsing of data from storage file and return the appropriate object back to Import class.","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"huien77"},"content":" */","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"huien77"},"content":"public class ImportParser {","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"huien77"},"content":"    private static final String SLEEP \u003d \"Sleep\";","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"huien77"},"content":"    private static final String FOOD \u003d \"Food\";","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"huien77"},"content":"    private static final String EXERCISE \u003d \"Exercise\";","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"huien77"},"content":"    private static final String STUDY \u003d \"Study\";","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"huien77"},"content":"    private static final String NULL \u003d \"null\";","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"huien77"},"content":"    private static final String DATE_FORMAT \u003d \"ddMMyyyy\";","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"huien77"},"content":"    private static final int GOAL_TYPE_INDEX \u003d 2;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"huien77"},"content":"    private static final int GOAL_NAME_INDEX \u003d 3;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"huien77"},"content":"    private static final int GOAL_START_INDEX \u003d 4;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"huien77"},"content":"    private static final int GOAL_END_INDEX \u003d 5;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"    private static final int HABIT_NAME_INDEX \u003d 2;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"    private static final int HABIT_START_INDEX \u003d 3;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    private static final int HABIT_END_INDEX \u003d 4;","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    private static final int HABIT_INTERVAL_INDEX \u003d 5;","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"huien77"},"content":"    private static final int INTERVAL_START_INDEX \u003d 3;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"huien77"},"content":"    private static final int INTERVAL_END_INDEX \u003d 4;","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"huien77"},"content":"    private static final int INTERVAL_COMPLETE_INDEX \u003d 5;","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"huien77"},"content":"     * Parses the data from storage for a Goal object.","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"huien77"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":37,"author":{"gitId":"huien77"},"content":"     * @param lineData the data from storage to be parsed","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"huien77"},"content":"     * @return Goal class that contains data read from storage","lastModifiedDate":"2021-11-03"},{"lineNumber":39,"author":{"gitId":"huien77"},"content":"     * @throws ParseException error when paring date from storage","lastModifiedDate":"2021-11-03"},{"lineNumber":40,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"huien77"},"content":"    protected static Goal goalParser(String[] lineData) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"huien77"},"content":"        GoalType goalType;","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"huien77"},"content":"        Date dateStart;","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"huien77"},"content":"        Date dateEnd;","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"huien77"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(DATE_FORMAT);","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"huien77"},"content":"        dateStart \u003d format.parse(lineData[GOAL_START_INDEX]);","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"huien77"},"content":"        dateEnd \u003d format.parse(lineData[GOAL_END_INDEX]);","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"huien77"},"content":"        switch (lineData[GOAL_TYPE_INDEX]) {","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"huien77"},"content":"        case SLEEP:","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"huien77"},"content":"            goalType \u003d GoalType.SLEEP;","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"huien77"},"content":"            break;","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"huien77"},"content":"        case FOOD:","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"huien77"},"content":"            goalType \u003d GoalType.FOOD;","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"huien77"},"content":"            break;","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"huien77"},"content":"        case EXERCISE:","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"huien77"},"content":"            goalType \u003d GoalType.EXERCISE;","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"huien77"},"content":"            break;","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"huien77"},"content":"        case STUDY:","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"huien77"},"content":"            goalType \u003d GoalType.STUDY;","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"huien77"},"content":"            break;","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"huien77"},"content":"        default:","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"huien77"},"content":"            goalType \u003d GoalType.DEFAULT;","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"huien77"},"content":"        return new Goal(lineData[GOAL_NAME_INDEX], goalType, dateStart, dateEnd);","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"huien77"},"content":"     * Parses the data from storage for a Habit object.","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"huien77"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"huien77"},"content":"     * @param lineData the data from storage to be parsed","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"huien77"},"content":"     * @return Habit object containing the data read from storage","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"huien77"},"content":"     * @throws NumberFormatException error when parsing a string to integer","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"huien77"},"content":"     * @throws ParseException error when parsing a date","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"STAung07"},"content":"    protected static Habit habitParser(String[] lineData) throws NumberFormatException, ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"huien77"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(DATE_FORMAT);","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"        Date habitStartDate \u003d format.parse(lineData[HABIT_START_INDEX]);","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"        Date habitEndDate \u003d format.parse(lineData[HABIT_END_INDEX]);","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"STAung07"},"content":"        String habitName \u003d lineData[HABIT_NAME_INDEX];","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"STAung07"},"content":"        int habitInterval \u003d Integer.parseInt(lineData[HABIT_INTERVAL_INDEX]);","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"huien77"},"content":"        return new Habit(habitName, habitStartDate, habitEndDate, habitInterval);","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"huien77"},"content":"     * Parses the data from storage for an Interval object.","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"huien77"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"huien77"},"content":"     * @param lineData the data from storage to be parsed","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"huien77"},"content":"     * @return Interval object containing the data read from storage","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"huien77"},"content":"     * @throws ParseException error when parsing a date","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"huien77"},"content":"    protected static Interval intervalParser(String[] lineData) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"huien77"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(DATE_FORMAT);","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"huien77"},"content":"        Date intervalStartDate \u003d format.parse(lineData[INTERVAL_START_INDEX]);","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"huien77"},"content":"        Date intervalEndDate \u003d format.parse(lineData[INTERVAL_END_INDEX]);","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"huien77"},"content":"        Interval interval \u003d new Interval(intervalStartDate, intervalEndDate);","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"huien77"},"content":"        Date intervalCompletedDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"huien77"},"content":"        if (!lineData[INTERVAL_COMPLETE_INDEX].equals(NULL)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"huien77"},"content":"            intervalCompletedDate \u003d format.parse(lineData[INTERVAL_COMPLETE_INDEX]);","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"huien77"},"content":"            interval.setCompleted(intervalCompletedDate);","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"huien77"},"content":"        return interval;","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"huien77"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"STAung07":4,"huien77":97,"DJ-Tan":6}},{"path":"src/main/java/happybit/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huien77"},"content":"package happybit.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"huien77"},"content":"import happybit.exception.HaBitStorageException;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"import happybit.goal.Goal;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"huien77"},"content":"import happybit.habit.Habit;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"huien77"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"huien77"},"content":"import java.io.File;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"huien77"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"huien77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"huien77"},"content":"/**","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"huien77"},"content":" * Supports the import and export of user data.","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"huien77"},"content":" */","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"huien77"},"content":"public class Storage {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"huien77"},"content":"    private static final String DEFAULT_DIR \u003d \"data\";","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"huien77"},"content":"    private static final String DEFAULT_FILEPATH \u003d \"data/habits.txt\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"huien77"},"content":"    private static final String DIR_NOT_EXIST \u003d \"Directory \u0027\" + DEFAULT_DIR + \"\u0027 does not exist.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"huien77"},"content":"    private static final String DIR_CREATED \u003d \"Directory created.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"huien77"},"content":"    private static final String DIR_NOT_CREATED \u003d \"Failed to create directory.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"huien77"},"content":"    private static final String FILE_CREATED \u003d \"Storage file created at \" + DEFAULT_FILEPATH + \".\";","lastModifiedDate":"2021-11-03"},{"lineNumber":23,"author":{"gitId":"huien77"},"content":"    private static final String FILE_FOUND \u003d \"Storage file found at \" + DEFAULT_FILEPATH + \".\";","lastModifiedDate":"2021-11-03"},{"lineNumber":24,"author":{"gitId":"huien77"},"content":"    private static final String READ_ONLY \u003d \"Storage file is set to read only.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"huien77"},"content":"    private static final String SET_READ_ONLY_FAILED \u003d \"Failed to set storage file as read only.\";","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"huien77"},"content":"    protected String filePath;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"huien77"},"content":"    protected String fileDir;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"huien77"},"content":"    protected Export export;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"huien77"},"content":"    protected PrintManager printManager;","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"huien77"},"content":"    public Storage() {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"huien77"},"content":"        this(DEFAULT_FILEPATH, DEFAULT_DIR);","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"huien77"},"content":"    public Storage(String filePath, String fileDir) {","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"huien77"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"huien77"},"content":"        this.fileDir \u003d fileDir;","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"huien77"},"content":"        this.printManager \u003d new PrintManager();","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"huien77"},"content":"        this.export \u003d new Export(this.filePath, this.printManager);","lastModifiedDate":"2021-11-03"},{"lineNumber":41,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"huien77"},"content":"     * This method is automatically called everytime the program start up.","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"huien77"},"content":"     * It will import the data from storage file into GoalList object.","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"huien77"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"huien77"},"content":"     * @return a GoalList object","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"huien77"},"content":"     * @throws HaBitStorageException when errors occurred with the importing of data","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"huien77"},"content":"    public GoalList load() throws HaBitStorageException {","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"huien77"},"content":"        this.createStorageFile(this.filePath, this.fileDir);","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"huien77"},"content":"        return Import.importStorage(this.filePath);","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"huien77"},"content":"     * Checks if the storage file exists. If it does not, it will create one for the user.","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"huien77"},"content":"     * The storage file created will be read only.","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"huien77"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"huien77"},"content":"     * @param filePath the file path where the storage file is to be found","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"huien77"},"content":"     * @param fileDir the folder where the storage file is supposed to be stored at","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"huien77"},"content":"    protected void createStorageFile(String filePath, String fileDir) {","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"huien77"},"content":"        File storageDir \u003d new File(fileDir);","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"huien77"},"content":"        File storageFile \u003d new File(filePath);","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"huien77"},"content":"        if (!storageDir.exists()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"huien77"},"content":"            this.printManager.printStorageMessage(DIR_NOT_EXIST);","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"huien77"},"content":"            this.makeDirectory(storageDir);","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"huien77"},"content":"        this.createFile(storageFile);","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"huien77"},"content":"        this.setReadOnly(storageFile);","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"huien77"},"content":"     * Creates the directory of storage file.","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"huien77"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"huien77"},"content":"     * @param storageDir the directory where storage file will be placed","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"huien77"},"content":"    protected void makeDirectory(File storageDir) {","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"huien77"},"content":"        boolean isDirCreated \u003d storageDir.mkdirs();","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"huien77"},"content":"        if (isDirCreated) {","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"huien77"},"content":"            this.printManager.printStorageMessage(DIR_CREATED);","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"huien77"},"content":"        } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"huien77"},"content":"            this.printManager.printStorageMessage(DIR_NOT_CREATED);","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"huien77"},"content":"     * Creates the storage file if it does not exist.","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"huien77"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"huien77"},"content":"     * @param storageFile the storage text file to create","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"huien77"},"content":"    protected void createFile(File storageFile) {","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"huien77"},"content":"            boolean isFileCreated \u003d storageFile.createNewFile();","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"huien77"},"content":"            if (isFileCreated) {","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"huien77"},"content":"                this.printManager.printStorageMessage(FILE_CREATED);","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"huien77"},"content":"            } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"huien77"},"content":"                this.printManager.printStorageMessage(FILE_FOUND);","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"huien77"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"huien77"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"huien77"},"content":"            this.printManager.printError(e.getMessage());","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":111,"author":{"gitId":"huien77"},"content":"     * Sets the storage file as read only.","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"huien77"},"content":"     *","lastModifiedDate":"2021-11-03"},{"lineNumber":113,"author":{"gitId":"huien77"},"content":"     * @param storageFile the storage file to set as read only","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"huien77"},"content":"    protected void setReadOnly(File storageFile) {","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"huien77"},"content":"        boolean isReadOnly \u003d storageFile.setReadOnly();","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"huien77"},"content":"        if (isReadOnly) {","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"huien77"},"content":"            this.printManager.printStorageMessage(READ_ONLY);","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"huien77"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"huien77"},"content":"            this.printManager.printStorageMessage(SET_READ_ONLY_FAILED);","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":123,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"huien77"},"content":"     * Exports goal list to storage file.","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"huien77"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"huien77"},"content":"     * @param goalList an array list of goals","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"huien77"},"content":"     * @throws HaBitStorageException IOException","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"STAung07"},"content":"    public void export(ArrayList\u003cGoal\u003e goalList) throws HaBitStorageException {","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"huien77"},"content":"        this.export.exportToStorage(goalList);","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"huien77"},"content":"     * Exports a goal to storage file.","lastModifiedDate":"2021-11-03"},{"lineNumber":137,"author":{"gitId":"huien77"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"huien77"},"content":"     * @param goal a Goal object","lastModifiedDate":"2021-11-02"},{"lineNumber":139,"author":{"gitId":"huien77"},"content":"     * @param index the index of goal in goal list","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"huien77"},"content":"     * @throws HaBitStorageException IOException","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"huien77"},"content":"    public void export(Goal goal, int index) throws HaBitStorageException {","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"huien77"},"content":"        this.export.exportGoal(goal, index);","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":147,"author":{"gitId":"huien77"},"content":"     * Exports a habit to storage file.","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"huien77"},"content":"     *","lastModifiedDate":"2021-11-02"},{"lineNumber":149,"author":{"gitId":"huien77"},"content":"     * @param habit a Habit object","lastModifiedDate":"2021-11-02"},{"lineNumber":150,"author":{"gitId":"huien77"},"content":"     * @param index the index of the goal the habit is under","lastModifiedDate":"2021-11-02"},{"lineNumber":151,"author":{"gitId":"huien77"},"content":"     * @throws HaBitStorageException IOException","lastModifiedDate":"2021-11-02"},{"lineNumber":152,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":153,"author":{"gitId":"huien77"},"content":"    public void export(Habit habit, int index) throws HaBitStorageException {","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"huien77"},"content":"        this.export.exportHabit(habit, index);","lastModifiedDate":"2021-11-03"},{"lineNumber":155,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":156,"author":{"gitId":"huien77"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"STAung07":1,"huien77":153,"DJ-Tan":2}},{"path":"src/main/java/happybit/ui/PrintManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import happybit.goal.Goal;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.habit.Habit;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"public class PrintManager {","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    private static final String PERCENT_SYMBOL \u003d \"%\";","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    private static final String LINE \u003d \"______________________________________________________________\"","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"            + \"__________________________________________________________\";","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MSG_ERROR \u003d \"Error Detected: %1$s\" + LS;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MSG_LIST_COMMAND \u003d \"Here are the list of commands:\";","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MSG_LIST_GOAL \u003d \"%1$s goal(s) currently being tracked:\" + LS;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"kahhe"},"content":"    private static final String MSG_LIST_GOAL_EXCESS_TEXT \u003d \"Gibberish found: %1$s. Anyway,\" + LS;","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MSG_LIST_HABIT \u003d \"%1$s habit(s) currently being tracked for %2$s:\" + LS;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MSG_ADD_GOAL \u003d \"The goal \u0027%1$s\u0027 has been added.\" + LS;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MSG_ADD_HABIT \u003d \"The habit \u0027%1$s\u0027 has been added to goal \u0027%2$s\u0027\" + LS;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MSG_DELETE_GOAL \u003d \"The goal \u0027%1$s\u0027 has been removed.\" + LS;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MSG_DELETE_HABIT \u003d \"The habit \u0027%1$s\u0027 of goal \u0027%2$s\u0027 has been deleted.\" + LS;","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MSG_DONE_HABIT \u003d \"The habit \u0027%1$s\u0027 of goal \u0027%2$s\u0027 has been completed for %3$s to %4$s.\"","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"            + LS + \"The next interval will begin on %5$s\" + LS;","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"    private static final String MSG_UPDATE_GOAL_NAME \u003d \"The goal name \u0027%1$s\u0027 has been updated to \u0027%2$s\u0027.\" + LS;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"    private static final String MSG_UPDATE_GOAL_TYPE \u003d \"The goal type \u0027%1$s\u0027 has been updated to \u0027%2$s\u0027.\" + LS;","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"    private static final String MSG_UPDATE_GOAL_END_DATE \u003d \"The goal end date of goal \u0027%1$s\u0027 has been changed from \"","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"            + \"\u0027%2$s\u0027 to \u0027%3$s\u0027.\" + LS;","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MSG_UPDATE_HABIT_NAME \u003d \"The habit \u0027%1$s\u0027 of goal \u0027%2$s\u0027 has been changed to \u0027%3$s\u0027\"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"            + LS;","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MSG_UPDATE_HABIT_INTERVAL \u003d \"The habit \u0027%1$s\u0027 of goal \u0027%2$s\u0027 has its interval changed \"","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"            + \"to \u0027%3$s\u0027\" + LS;","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MSG_EXIT \u003d \"Thanks for using Ha(ppy)Bit, see you in a \\033[3mbit\\033[0m! (hehe)\" + LS","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"kahhe"},"content":"            + LS + \"\\\"We are what we repeatedly do. Excellence, then, is not an act, but a habit.\\\"\" + LS","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"            + \" — Will Durant\";","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_HELP \u003d \"open command list\";","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_ADD_GOAL \u003d \"set a goal\";","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_ADD_HABIT \u003d \"add a habit\";","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_UPDATE_GOAL \u003d \"update a goal name/type/end date\";","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_UPDATE_HABIT \u003d \"change a habit name/interval\";","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_LIST_GOAL \u003d \"list all goals\";","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_LIST_HABIT \u003d \"view all habits of a goal\";","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_DELETE_GOAL \u003d \"remove a goal\";","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_DELETE_HABIT \u003d \"delete a habit\";","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_DONE_HABIT \u003d \"mark a habit as done\";","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_RETURN \u003d \"return to start screen\";","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_EXIT \u003d \"exit the application\";","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"    private static final String INSTR_HELP \u003d \"help\";","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"    private static final String INSTR_ADD_GOAL \u003d \"set n/\u003cgoal_name\u003e { t/\u003cgoal_type\u003e s/\u003cstart_date\u003e } e/\u003cend_date\u003e\";","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"    private static final String INSTR_ADD_HABIT \u003d \"add g/\u003cgoal_index\u003e n/\u003chabit_name\u003e i/\u003cinterval\u003e\";","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"STAung07"},"content":"    private static final String INSTR_UPDATE_GOAL \u003d \"update g/\u003cgoal_index\u003e [ n/\u003cgoal_name\u003e t/\u003cgoal_type\u003e \"","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"STAung07"},"content":"            + \"e/\u003cend_date\u003e ]\";","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"STAung07"},"content":"    private static final String INSTR_UPDATE_HABIT \u003d \"change g/\u003cgoal_index\u003e h/\u003chabit_index\u003e [ n/\u003chabit_name\u003e \"","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"STAung07"},"content":"            + \"i/\u003cinterval\u003e ]\";","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"    private static final String INSTR_LIST_GOAL \u003d \"list\";","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"    private static final String INSTR_LIST_HABIT \u003d \"view g/\u003cgoal_index\u003e\";","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"    private static final String INSTR_DELETE_GOAL \u003d \"remove g/\u003cgoal_index\u003e\";","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"    private static final String INSTR_DELETE_HABIT \u003d \"delete g/\u003cgoal_index\u003e h/\u003chabit_index\u003e\";","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"    private static final String INSTR_DONE_HABIT \u003d \"done g/\u003cgoal_index\u003e h/\u003chabit_index\u003e\";","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"    private static final String INSTR_RETURN \u003d \"return\";","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"    private static final String INSTR_EXIT \u003d \"exit\";","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_NOTE_1 \u003d \"* Replace \u003c\u003e with relevant terms (Exp: \u003cgoal_name\u003e --\u003e goal 1)\";","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_NOTE_2 \u003d \"* Items enclosed within { } are optional\";","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"STAung07"},"content":"    private static final String COMMAND_NOTE_3 \u003d \"* Items enclosed within [ ] need to have at least one of the \"","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"STAung07"},"content":"            + \"parameters specified inside.\";","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"STAung07"},"content":"    private static final String COMMAND_NOTE_4 \u003d \"* Use \u0027list\u0027 and \u0027view\u0027 to check the goal and habit indexes \"","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"            + \"respectively\";","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"kahhe"},"content":"    private static final String[] COMMAND_HEADERS \u003d {\"Action\", \"Format\"};","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"DJ-Tan"},"content":"    private static final String[] GOAL_HEADERS \u003d {\"Index\", \"Name\", \"Type\", \"Start Date\", \"End Date\", \"Habit Count\",","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"DJ-Tan"},"content":"        \"Completion Rate\"};","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"    private static final String[] HABIT_HEADERS \u003d {\"Index\", \"Name\", \"Interval\", \"Completion\", \"Completed\", \"Remaining\",","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"        \"Expired\", \"Streak\"};","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"    private static final int INDEX_INDEX \u003d 0;","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"    private static final int GOAL_NAME_INDEX \u003d 1;","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"DJ-Tan"},"content":"    private static final int GOAL_TYPE_INDEX \u003d 2;","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"    private static final int GOAL_START_DATE_INDEX \u003d 3;","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"    private static final int GOAL_END_DATE_INDEX \u003d 4;","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"    private static final int GOAL_HABIT_NUM_INDEX \u003d 5;","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"DJ-Tan"},"content":"    private static final int GOAL_COMPLETION_RATE_INDEX \u003d 6;","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"DJ-Tan"},"content":"    private static final int HABIT_NAME_INDEX \u003d 1;","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"DJ-Tan"},"content":"    private static final int HABIT_INTERVAL_INDEX \u003d 2;","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"DJ-Tan"},"content":"    private static final int HABIT_COMPLETION_RATE_INDEX \u003d 3;","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"DJ-Tan"},"content":"    private static final int HABIT_COMPLETED_INDEX \u003d 4;","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"DJ-Tan"},"content":"    private static final int HABIT_REMAINING_INDEX \u003d 5;","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"DJ-Tan"},"content":"    private static final int HABIT_EXPIRED_INDEX \u003d 6;","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"DJ-Tan"},"content":"    private static final int HABIT_STREAK_INDEX \u003d 7;","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"DJ-Tan"},"content":"    private static final int COMPLETION_RATE_INDEX \u003d 0;","lastModifiedDate":"2021-10-28"},{"lineNumber":94,"author":{"gitId":"DJ-Tan"},"content":"    private static final int COMPLETED_INDEX \u003d 1;","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"DJ-Tan"},"content":"    private static final int REMAINING_INDEX \u003d 2;","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"DJ-Tan"},"content":"    private static final int EXPIRED_INDEX \u003d 3;","lastModifiedDate":"2021-10-28"},{"lineNumber":97,"author":{"gitId":"DJ-Tan"},"content":"    private static final int COMMAND_INDEX \u003d 0;","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"DJ-Tan"},"content":"    private static final int INSTR_INDEX \u003d 1;","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"kahhe"},"content":"    private static final int MAX_GIBBERISH_LENGTH \u003d 40;","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"DJ-Tan"},"content":"     * Prints the list of commands.","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"DJ-Tan"},"content":"    public void printCommandList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(MSG_LIST_COMMAND);","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"DJ-Tan"},"content":"        PrintTable.printTable(COMMAND_HEADERS, populateCommandData());","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"STAung07"},"content":"        System.out.println(COMMAND_NOTE_1 + LS + COMMAND_NOTE_2 + LS + COMMAND_NOTE_3 + LS + COMMAND_NOTE_4);","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"DJ-Tan"},"content":"     * Prints the list of goals in the goalList.","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"DJ-Tan"},"content":"     * @param goals      List of goals.","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"DJ-Tan"},"content":"     * @param numOfGoals Number of goals in the goal list.","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"kahhe"},"content":"    public void printGoalList(ArrayList\u003cGoal\u003e goals, int numOfGoals, String gibberish) {","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"DJ-Tan"},"content":"        String[][] data \u003d populateGoalData(goals, numOfGoals, GOAL_HEADERS.length);","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"kahhe"},"content":"        printGibberish(gibberish);","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"DJ-Tan"},"content":"        System.out.printf(MSG_LIST_GOAL, numOfGoals);","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"DJ-Tan"},"content":"        PrintTable.printTable(GOAL_HEADERS, data);","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"DJ-Tan"},"content":"     * Prints the list of habits in the habitList.","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalDescription String of goal name and type.","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"DJ-Tan"},"content":"     * @param habits          List of habits.","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"DJ-Tan"},"content":"     * @param numOfHabits     Number of habits in the habitList.","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"STAung07"},"content":"    public void printHabitList(String goalDescription, ArrayList\u003cHabit\u003e habits, int numOfHabits) {","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"DJ-Tan"},"content":"        String[][] data \u003d populateHabitData(habits, numOfHabits, HABIT_HEADERS.length);","lastModifiedDate":"2021-10-28"},{"lineNumber":133,"author":{"gitId":"DJ-Tan"},"content":"        System.out.printf(MSG_LIST_HABIT, numOfHabits, goalDescription);","lastModifiedDate":"2021-10-28"},{"lineNumber":134,"author":{"gitId":"DJ-Tan"},"content":"        PrintTable.printTable(HABIT_HEADERS, data);","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"DJ-Tan"},"content":"     * Prints a confirmation message upon successful addition of new goal.","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalDescription String of goal name and type.","lastModifiedDate":"2021-10-28"},{"lineNumber":141,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":142,"author":{"gitId":"flerovious"},"content":"    public void printAddedGoal(String goalDescription) {","lastModifiedDate":"2021-10-14"},{"lineNumber":143,"author":{"gitId":"DJ-Tan"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"DJ-Tan"},"content":"        System.out.printf(MSG_ADD_GOAL, goalDescription);","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"DJ-Tan"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":147,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":148,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":149,"author":{"gitId":"DJ-Tan"},"content":"     * Prints a confirmation message upon successful addition of new habit.","lastModifiedDate":"2021-10-28"},{"lineNumber":150,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":151,"author":{"gitId":"DJ-Tan"},"content":"     * @param habitDescription String of habit name.","lastModifiedDate":"2021-10-28"},{"lineNumber":152,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalDescription  String of goal name and type.","lastModifiedDate":"2021-10-28"},{"lineNumber":153,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":154,"author":{"gitId":"flerovious"},"content":"    public void printAddedHabit(String habitDescription, String goalDescription) {","lastModifiedDate":"2021-10-14"},{"lineNumber":155,"author":{"gitId":"DJ-Tan"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":156,"author":{"gitId":"DJ-Tan"},"content":"        System.out.printf(MSG_ADD_HABIT, habitDescription, goalDescription);","lastModifiedDate":"2021-10-28"},{"lineNumber":157,"author":{"gitId":"DJ-Tan"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":158,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":159,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":160,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":161,"author":{"gitId":"DJ-Tan"},"content":"     * Prints a confirmation message upon successful deletion of a goal.","lastModifiedDate":"2021-10-28"},{"lineNumber":162,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":163,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalDescription String of goal name and type.","lastModifiedDate":"2021-10-28"},{"lineNumber":164,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":165,"author":{"gitId":"STAung07"},"content":"    public void printRemovedGoal(String goalDescription) {","lastModifiedDate":"2021-10-14"},{"lineNumber":166,"author":{"gitId":"DJ-Tan"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":167,"author":{"gitId":"DJ-Tan"},"content":"        System.out.printf(MSG_DELETE_GOAL, goalDescription);","lastModifiedDate":"2021-10-28"},{"lineNumber":168,"author":{"gitId":"DJ-Tan"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":169,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":172,"author":{"gitId":"DJ-Tan"},"content":"     * Prints a confirmation message upon successful deletion of a habit.","lastModifiedDate":"2021-10-28"},{"lineNumber":173,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":174,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalDescription  String of goal name and type.","lastModifiedDate":"2021-10-28"},{"lineNumber":175,"author":{"gitId":"DJ-Tan"},"content":"     * @param habitDescription String of habit name.","lastModifiedDate":"2021-10-28"},{"lineNumber":176,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":177,"author":{"gitId":"DJ-Tan"},"content":"    public void printRemovedHabit(String goalDescription, String habitDescription) {","lastModifiedDate":"2021-10-28"},{"lineNumber":178,"author":{"gitId":"DJ-Tan"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":179,"author":{"gitId":"DJ-Tan"},"content":"        System.out.printf(MSG_DELETE_HABIT, habitDescription, goalDescription);","lastModifiedDate":"2021-10-28"},{"lineNumber":180,"author":{"gitId":"DJ-Tan"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":181,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":182,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":183,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":184,"author":{"gitId":"DJ-Tan"},"content":"     * Prints a confirmation message upon successful completion of a habit.","lastModifiedDate":"2021-10-28"},{"lineNumber":185,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":186,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalDescription  String of goal name and type.","lastModifiedDate":"2021-10-28"},{"lineNumber":187,"author":{"gitId":"DJ-Tan"},"content":"     * @param habitDescription String of habit name.","lastModifiedDate":"2021-10-28"},{"lineNumber":188,"author":{"gitId":"DJ-Tan"},"content":"     * @param strDates         String array of dates containing startDate, endDate and next startDate.","lastModifiedDate":"2021-10-28"},{"lineNumber":189,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":190,"author":{"gitId":"DJ-Tan"},"content":"    public void printDoneHabit(String goalDescription, String habitDescription, String[] strDates) {","lastModifiedDate":"2021-10-28"},{"lineNumber":191,"author":{"gitId":"DJ-Tan"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":192,"author":{"gitId":"DJ-Tan"},"content":"        System.out.printf(MSG_DONE_HABIT, habitDescription, goalDescription, strDates[0], strDates[1], strDates[2]);","lastModifiedDate":"2021-10-28"},{"lineNumber":193,"author":{"gitId":"DJ-Tan"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":194,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":197,"author":{"gitId":"DJ-Tan"},"content":"     * Prints a confirmation message upon successful update of a goal name.","lastModifiedDate":"2021-10-28"},{"lineNumber":198,"author":{"gitId":"DJ-Tan"},"content":"     * Note: Only the goal name has been changed.","lastModifiedDate":"2021-10-28"},{"lineNumber":199,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":200,"author":{"gitId":"DJ-Tan"},"content":"     * @param oldGoalDescription String of previous goal name and type.","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"DJ-Tan"},"content":"     * @param newGoalDescription String of updated goal name and type.","lastModifiedDate":"2021-10-28"},{"lineNumber":202,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":203,"author":{"gitId":"DJ-Tan"},"content":"    public void printUpdatedGoalName(String oldGoalDescription, String newGoalDescription) {","lastModifiedDate":"2021-10-28"},{"lineNumber":204,"author":{"gitId":"DJ-Tan"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":205,"author":{"gitId":"DJ-Tan"},"content":"        System.out.printf(MSG_UPDATE_GOAL_NAME, oldGoalDescription, newGoalDescription);","lastModifiedDate":"2021-10-28"},{"lineNumber":206,"author":{"gitId":"DJ-Tan"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":207,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":208,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":209,"author":{"gitId":"STAung07"},"content":"    public void printUpdatedGoalType(String oldGoalTypeName, String newGoalTypeName) {","lastModifiedDate":"2021-10-28"},{"lineNumber":210,"author":{"gitId":"STAung07"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":211,"author":{"gitId":"STAung07"},"content":"        System.out.printf(MSG_UPDATE_GOAL_TYPE, oldGoalTypeName, newGoalTypeName);","lastModifiedDate":"2021-10-28"},{"lineNumber":212,"author":{"gitId":"STAung07"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":213,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":214,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":215,"author":{"gitId":"STAung07"},"content":"    public void printUpdatedGoalEndDate(String goalName, String oldGoalEndDate, String newGoalEndDate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":216,"author":{"gitId":"STAung07"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":217,"author":{"gitId":"STAung07"},"content":"        System.out.printf(MSG_UPDATE_GOAL_END_DATE, goalName, oldGoalEndDate, newGoalEndDate);","lastModifiedDate":"2021-10-28"},{"lineNumber":218,"author":{"gitId":"STAung07"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":219,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":220,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":221,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":222,"author":{"gitId":"DJ-Tan"},"content":"     * Prints a confirmation message upon successful update of a habit name.","lastModifiedDate":"2021-10-28"},{"lineNumber":223,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":224,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalDescription     String of goal name and type.","lastModifiedDate":"2021-10-28"},{"lineNumber":225,"author":{"gitId":"DJ-Tan"},"content":"     * @param oldHabitDescription String of previous habit name.","lastModifiedDate":"2021-10-28"},{"lineNumber":226,"author":{"gitId":"DJ-Tan"},"content":"     * @param newHabitDescription String of updated habit name.","lastModifiedDate":"2021-10-28"},{"lineNumber":227,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":228,"author":{"gitId":"DJ-Tan"},"content":"    public void printUpdatedHabitName(String goalDescription, String oldHabitDescription, String newHabitDescription) {","lastModifiedDate":"2021-10-28"},{"lineNumber":229,"author":{"gitId":"DJ-Tan"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":230,"author":{"gitId":"DJ-Tan"},"content":"        System.out.printf(MSG_UPDATE_HABIT_NAME, oldHabitDescription, goalDescription, newHabitDescription);","lastModifiedDate":"2021-10-28"},{"lineNumber":231,"author":{"gitId":"DJ-Tan"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":232,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":233,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":234,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":235,"author":{"gitId":"DJ-Tan"},"content":"     * Prints a confirmation message upon successful update of a habit interval.","lastModifiedDate":"2021-10-28"},{"lineNumber":236,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":237,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalDescription  String of goal name and type.","lastModifiedDate":"2021-10-28"},{"lineNumber":238,"author":{"gitId":"DJ-Tan"},"content":"     * @param habitDescription String of habit name.","lastModifiedDate":"2021-10-28"},{"lineNumber":239,"author":{"gitId":"DJ-Tan"},"content":"     * @param interval         New interval length.","lastModifiedDate":"2021-10-28"},{"lineNumber":240,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":241,"author":{"gitId":"DJ-Tan"},"content":"    public void printUpdatedHabitInterval(String goalDescription, String habitDescription, int interval) {","lastModifiedDate":"2021-10-28"},{"lineNumber":242,"author":{"gitId":"DJ-Tan"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":243,"author":{"gitId":"DJ-Tan"},"content":"        System.out.printf(MSG_UPDATE_HABIT_INTERVAL, habitDescription, goalDescription, interval);","lastModifiedDate":"2021-10-28"},{"lineNumber":244,"author":{"gitId":"DJ-Tan"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":245,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":246,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":247,"author":{"gitId":"huien77"},"content":"    public void printStorageMessage(String storageMessage) {","lastModifiedDate":"2021-11-02"},{"lineNumber":248,"author":{"gitId":"huien77"},"content":"        System.out.println(storageMessage);","lastModifiedDate":"2021-11-02"},{"lineNumber":249,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":250,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":251,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":252,"author":{"gitId":"DJ-Tan"},"content":"     * Prints an error message.","lastModifiedDate":"2021-10-28"},{"lineNumber":253,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":254,"author":{"gitId":"DJ-Tan"},"content":"     * @param message String containing the error message.","lastModifiedDate":"2021-10-28"},{"lineNumber":255,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":256,"author":{"gitId":"DJ-Tan"},"content":"    public void printError(String message) {","lastModifiedDate":"2021-10-28"},{"lineNumber":257,"author":{"gitId":"DJ-Tan"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":258,"author":{"gitId":"DJ-Tan"},"content":"        System.out.printf(MSG_ERROR, message);","lastModifiedDate":"2021-10-28"},{"lineNumber":259,"author":{"gitId":"DJ-Tan"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":260,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":261,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":262,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":263,"author":{"gitId":"DJ-Tan"},"content":"     * Prints an exit message.","lastModifiedDate":"2021-10-28"},{"lineNumber":264,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":265,"author":{"gitId":"DJ-Tan"},"content":"    public void printExit() {","lastModifiedDate":"2021-10-28"},{"lineNumber":266,"author":{"gitId":"DJ-Tan"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":267,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(MSG_EXIT);","lastModifiedDate":"2021-10-28"},{"lineNumber":268,"author":{"gitId":"DJ-Tan"},"content":"        printLine();","lastModifiedDate":"2021-10-28"},{"lineNumber":269,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":270,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":271,"author":{"gitId":"DJ-Tan"},"content":"    /*","lastModifiedDate":"2021-10-25"},{"lineNumber":272,"author":{"gitId":"DJ-Tan"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":273,"author":{"gitId":"DJ-Tan"},"content":"     * The following are private methods that are used to implement SLAP for the","lastModifiedDate":"2021-10-25"},{"lineNumber":274,"author":{"gitId":"DJ-Tan"},"content":"     * above public methods. These methods are positioned at the bottom to better","lastModifiedDate":"2021-10-25"},{"lineNumber":275,"author":{"gitId":"DJ-Tan"},"content":"     * visualise the actual methods that can be called from outside this class.","lastModifiedDate":"2021-10-25"},{"lineNumber":276,"author":{"gitId":"DJ-Tan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":277,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":278,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":279,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":280,"author":{"gitId":"DJ-Tan"},"content":"     * Prints a horizontal line.","lastModifiedDate":"2021-10-28"},{"lineNumber":281,"author":{"gitId":"DJ-Tan"},"content":"     * Used for enclosing message within 2 such lines.","lastModifiedDate":"2021-10-28"},{"lineNumber":282,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":283,"author":{"gitId":"DJ-Tan"},"content":"    private void printLine() {","lastModifiedDate":"2021-10-28"},{"lineNumber":284,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-10-28"},{"lineNumber":285,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":286,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":287,"author":{"gitId":"kahhe"},"content":"    //@@author kahhe","lastModifiedDate":"2021-11-05"},{"lineNumber":288,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":289,"author":{"gitId":"kahhe"},"content":"     * Prints the excess text from user after \u0027line\u0027 command if it exists.","lastModifiedDate":"2021-11-05"},{"lineNumber":290,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":291,"author":{"gitId":"kahhe"},"content":"     * @param gibberish Excess text from user after the one-word command \u0027line\u0027.","lastModifiedDate":"2021-11-05"},{"lineNumber":292,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":293,"author":{"gitId":"kahhe"},"content":"    private void printGibberish(String gibberish) {","lastModifiedDate":"2021-11-05"},{"lineNumber":294,"author":{"gitId":"kahhe"},"content":"        if (gibberish !\u003d null) {","lastModifiedDate":"2021-11-05"},{"lineNumber":295,"author":{"gitId":"kahhe"},"content":"            gibberish \u003d trimGibberish(gibberish);","lastModifiedDate":"2021-11-05"},{"lineNumber":296,"author":{"gitId":"kahhe"},"content":"            System.out.printf(MSG_LIST_GOAL_EXCESS_TEXT, gibberish);","lastModifiedDate":"2021-11-05"},{"lineNumber":297,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":298,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":299,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":300,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":301,"author":{"gitId":"kahhe"},"content":"     * Shortens the gibberish text if it\u0027s too long.","lastModifiedDate":"2021-11-05"},{"lineNumber":302,"author":{"gitId":"kahhe"},"content":"     * To prevent abuse from user by typing lengthy characters.","lastModifiedDate":"2021-11-05"},{"lineNumber":303,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":304,"author":{"gitId":"kahhe"},"content":"     * @param gibberish Excess text from user after the one-word command \u0027line\u0027.","lastModifiedDate":"2021-11-05"},{"lineNumber":305,"author":{"gitId":"kahhe"},"content":"     * @return Trimmed gibberish to a respectable length.","lastModifiedDate":"2021-11-05"},{"lineNumber":306,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":307,"author":{"gitId":"kahhe"},"content":"    private String trimGibberish(String gibberish) {","lastModifiedDate":"2021-11-05"},{"lineNumber":308,"author":{"gitId":"kahhe"},"content":"        if (gibberish.length() \u003e MAX_GIBBERISH_LENGTH) {","lastModifiedDate":"2021-11-05"},{"lineNumber":309,"author":{"gitId":"kahhe"},"content":"            return gibberish.substring(0, MAX_GIBBERISH_LENGTH) + \"..\";","lastModifiedDate":"2021-11-05"},{"lineNumber":310,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":311,"author":{"gitId":"kahhe"},"content":"        return gibberish;","lastModifiedDate":"2021-11-05"},{"lineNumber":312,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":313,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":314,"author":{"gitId":"kahhe"},"content":"    /* The following are sub-methods of list printing.","lastModifiedDate":"2021-10-28"},{"lineNumber":315,"author":{"gitId":"kahhe"},"content":"     * populateGoalData()","lastModifiedDate":"2021-10-28"},{"lineNumber":316,"author":{"gitId":"kahhe"},"content":"     * populateHabitData()","lastModifiedDate":"2021-10-28"},{"lineNumber":317,"author":{"gitId":"kahhe"},"content":"     * populateCommandData()","lastModifiedDate":"2021-10-28"},{"lineNumber":318,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":319,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":320,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":321,"author":{"gitId":"kahhe"},"content":"     * Populate a 2D array with goal data.","lastModifiedDate":"2021-10-25"},{"lineNumber":322,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":323,"author":{"gitId":"kahhe"},"content":"     * @param goals        Arraylist containing all the goals.","lastModifiedDate":"2021-10-25"},{"lineNumber":324,"author":{"gitId":"kahhe"},"content":"     * @param numOfGoals   Number of goals.","lastModifiedDate":"2021-10-25"},{"lineNumber":325,"author":{"gitId":"kahhe"},"content":"     * @param numOfColumns Number of data columns.","lastModifiedDate":"2021-10-25"},{"lineNumber":326,"author":{"gitId":"kahhe"},"content":"     * @return 2D string array containing goal data.","lastModifiedDate":"2021-10-25"},{"lineNumber":327,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":328,"author":{"gitId":"kahhe"},"content":"    private String[][] populateGoalData(ArrayList\u003cGoal\u003e goals, int numOfGoals, int numOfColumns) {","lastModifiedDate":"2021-10-25"},{"lineNumber":329,"author":{"gitId":"kahhe"},"content":"        String[][] data \u003d new String[numOfGoals][numOfColumns];","lastModifiedDate":"2021-10-25"},{"lineNumber":330,"author":{"gitId":"kahhe"},"content":"        for (int goalIndex \u003d 0; goalIndex \u003c numOfGoals; goalIndex++) {","lastModifiedDate":"2021-10-25"},{"lineNumber":331,"author":{"gitId":"kahhe"},"content":"            data[goalIndex][INDEX_INDEX] \u003d String.valueOf(goalIndex + 1);","lastModifiedDate":"2021-10-28"},{"lineNumber":332,"author":{"gitId":"kahhe"},"content":"            data[goalIndex][GOAL_NAME_INDEX] \u003d goals.get(goalIndex).getGoalName();","lastModifiedDate":"2021-10-28"},{"lineNumber":333,"author":{"gitId":"kahhe"},"content":"            data[goalIndex][GOAL_TYPE_INDEX] \u003d goals.get(goalIndex).getGoalTypeStr();","lastModifiedDate":"2021-10-28"},{"lineNumber":334,"author":{"gitId":"kahhe"},"content":"            data[goalIndex][GOAL_START_DATE_INDEX] \u003d goals.get(goalIndex).getPrintableStartDate();","lastModifiedDate":"2021-10-28"},{"lineNumber":335,"author":{"gitId":"kahhe"},"content":"            data[goalIndex][GOAL_END_DATE_INDEX] \u003d goals.get(goalIndex).getPrintableEndDate();","lastModifiedDate":"2021-10-28"},{"lineNumber":336,"author":{"gitId":"kahhe"},"content":"            data[goalIndex][GOAL_HABIT_NUM_INDEX] \u003d String.valueOf(goals.get(goalIndex).getHabitListSize());","lastModifiedDate":"2021-10-28"},{"lineNumber":337,"author":{"gitId":"kahhe"},"content":"            data[goalIndex][GOAL_COMPLETION_RATE_INDEX] \u003d goals.get(goalIndex).computeAverageCompletionRate();","lastModifiedDate":"2021-10-28"},{"lineNumber":338,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":339,"author":{"gitId":"kahhe"},"content":"        return data;","lastModifiedDate":"2021-10-25"},{"lineNumber":340,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":341,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":342,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":343,"author":{"gitId":"kahhe"},"content":"     * Populate a 2D array with habit data.","lastModifiedDate":"2021-10-27"},{"lineNumber":344,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":345,"author":{"gitId":"kahhe"},"content":"     * @param habits       Arraylist containing all the habits.","lastModifiedDate":"2021-10-27"},{"lineNumber":346,"author":{"gitId":"kahhe"},"content":"     * @param numOfHabits  Number of habits.","lastModifiedDate":"2021-10-27"},{"lineNumber":347,"author":{"gitId":"kahhe"},"content":"     * @param numOfColumns Number of data columns.","lastModifiedDate":"2021-10-27"},{"lineNumber":348,"author":{"gitId":"kahhe"},"content":"     * @return 2D string array containing habit data.","lastModifiedDate":"2021-10-27"},{"lineNumber":349,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":350,"author":{"gitId":"kahhe"},"content":"    private String[][] populateHabitData(ArrayList\u003cHabit\u003e habits, int numOfHabits, int numOfColumns) {","lastModifiedDate":"2021-10-27"},{"lineNumber":351,"author":{"gitId":"kahhe"},"content":"        String[][] data \u003d new String[numOfHabits][numOfColumns];","lastModifiedDate":"2021-10-27"},{"lineNumber":352,"author":{"gitId":"kahhe"},"content":"        for (int habitIndex \u003d 0; habitIndex \u003c numOfHabits; habitIndex++) {","lastModifiedDate":"2021-10-27"},{"lineNumber":353,"author":{"gitId":"kahhe"},"content":"            data[habitIndex][INDEX_INDEX] \u003d String.valueOf(habitIndex + 1);","lastModifiedDate":"2021-10-28"},{"lineNumber":354,"author":{"gitId":"kahhe"},"content":"            data[habitIndex][HABIT_NAME_INDEX] \u003d habits.get(habitIndex).getHabitName();","lastModifiedDate":"2021-10-28"},{"lineNumber":355,"author":{"gitId":"kahhe"},"content":"            data[habitIndex][HABIT_INTERVAL_INDEX] \u003d String.valueOf(habits.get(habitIndex).getIntervalLength());","lastModifiedDate":"2021-10-28"},{"lineNumber":356,"author":{"gitId":"kahhe"},"content":"            double[] habitStatistics \u003d habits.get(habitIndex).getListStatistics();","lastModifiedDate":"2021-11-04"},{"lineNumber":357,"author":{"gitId":"kahhe"},"content":"            data[habitIndex][HABIT_COMPLETION_RATE_INDEX] \u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":358,"author":{"gitId":"kahhe"},"content":"                    String.format(\"%.2f\", habitStatistics[COMPLETION_RATE_INDEX]) + PERCENT_SYMBOL;","lastModifiedDate":"2021-11-04"},{"lineNumber":359,"author":{"gitId":"kahhe"},"content":"            data[habitIndex][HABIT_COMPLETED_INDEX] \u003d String.valueOf((int)(habitStatistics[COMPLETED_INDEX]));","lastModifiedDate":"2021-11-04"},{"lineNumber":360,"author":{"gitId":"kahhe"},"content":"            data[habitIndex][HABIT_REMAINING_INDEX] \u003d String.valueOf((int)(habitStatistics[REMAINING_INDEX]));","lastModifiedDate":"2021-11-04"},{"lineNumber":361,"author":{"gitId":"kahhe"},"content":"            data[habitIndex][HABIT_EXPIRED_INDEX] \u003d String.valueOf((int)(habitStatistics[EXPIRED_INDEX]));","lastModifiedDate":"2021-11-04"},{"lineNumber":362,"author":{"gitId":"kahhe"},"content":"            data[habitIndex][HABIT_STREAK_INDEX] \u003d String.valueOf(habits.get(habitIndex).getStreak());","lastModifiedDate":"2021-10-28"},{"lineNumber":363,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":364,"author":{"gitId":"kahhe"},"content":"        return data;","lastModifiedDate":"2021-10-27"},{"lineNumber":365,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":366,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":367,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":368,"author":{"gitId":"kahhe"},"content":"     * Populate a 2D array with command data.","lastModifiedDate":"2021-10-28"},{"lineNumber":369,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":370,"author":{"gitId":"kahhe"},"content":"     * @return 2D string array containing command data.","lastModifiedDate":"2021-10-28"},{"lineNumber":371,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":372,"author":{"gitId":"kahhe"},"content":"    private String[][] populateCommandData() {","lastModifiedDate":"2021-10-28"},{"lineNumber":373,"author":{"gitId":"kahhe"},"content":"        String[][] data \u003d new String[12][2];","lastModifiedDate":"2021-10-28"},{"lineNumber":374,"author":{"gitId":"kahhe"},"content":"        data[0][COMMAND_INDEX] \u003d COMMAND_HELP;","lastModifiedDate":"2021-10-28"},{"lineNumber":375,"author":{"gitId":"kahhe"},"content":"        data[1][COMMAND_INDEX] \u003d COMMAND_ADD_GOAL;","lastModifiedDate":"2021-10-28"},{"lineNumber":376,"author":{"gitId":"kahhe"},"content":"        data[2][COMMAND_INDEX] \u003d COMMAND_ADD_HABIT;","lastModifiedDate":"2021-10-28"},{"lineNumber":377,"author":{"gitId":"kahhe"},"content":"        data[3][COMMAND_INDEX] \u003d COMMAND_UPDATE_GOAL;","lastModifiedDate":"2021-10-28"},{"lineNumber":378,"author":{"gitId":"kahhe"},"content":"        data[4][COMMAND_INDEX] \u003d COMMAND_UPDATE_HABIT;","lastModifiedDate":"2021-10-28"},{"lineNumber":379,"author":{"gitId":"kahhe"},"content":"        data[5][COMMAND_INDEX] \u003d COMMAND_LIST_GOAL;","lastModifiedDate":"2021-10-28"},{"lineNumber":380,"author":{"gitId":"kahhe"},"content":"        data[6][COMMAND_INDEX] \u003d COMMAND_LIST_HABIT;","lastModifiedDate":"2021-10-28"},{"lineNumber":381,"author":{"gitId":"kahhe"},"content":"        data[7][COMMAND_INDEX] \u003d COMMAND_DELETE_GOAL;","lastModifiedDate":"2021-10-28"},{"lineNumber":382,"author":{"gitId":"kahhe"},"content":"        data[8][COMMAND_INDEX] \u003d COMMAND_DELETE_HABIT;","lastModifiedDate":"2021-10-28"},{"lineNumber":383,"author":{"gitId":"kahhe"},"content":"        data[9][COMMAND_INDEX] \u003d COMMAND_DONE_HABIT;","lastModifiedDate":"2021-10-28"},{"lineNumber":384,"author":{"gitId":"kahhe"},"content":"        data[10][COMMAND_INDEX] \u003d COMMAND_RETURN;","lastModifiedDate":"2021-10-28"},{"lineNumber":385,"author":{"gitId":"kahhe"},"content":"        data[11][COMMAND_INDEX] \u003d COMMAND_EXIT;","lastModifiedDate":"2021-10-28"},{"lineNumber":386,"author":{"gitId":"kahhe"},"content":"        data[0][INSTR_INDEX] \u003d INSTR_HELP;","lastModifiedDate":"2021-10-28"},{"lineNumber":387,"author":{"gitId":"kahhe"},"content":"        data[1][INSTR_INDEX] \u003d INSTR_ADD_GOAL;","lastModifiedDate":"2021-10-28"},{"lineNumber":388,"author":{"gitId":"kahhe"},"content":"        data[2][INSTR_INDEX] \u003d INSTR_ADD_HABIT;","lastModifiedDate":"2021-10-28"},{"lineNumber":389,"author":{"gitId":"kahhe"},"content":"        data[3][INSTR_INDEX] \u003d INSTR_UPDATE_GOAL;","lastModifiedDate":"2021-10-28"},{"lineNumber":390,"author":{"gitId":"kahhe"},"content":"        data[4][INSTR_INDEX] \u003d INSTR_UPDATE_HABIT;","lastModifiedDate":"2021-10-28"},{"lineNumber":391,"author":{"gitId":"kahhe"},"content":"        data[5][INSTR_INDEX] \u003d INSTR_LIST_GOAL;","lastModifiedDate":"2021-10-28"},{"lineNumber":392,"author":{"gitId":"kahhe"},"content":"        data[6][INSTR_INDEX] \u003d INSTR_LIST_HABIT;","lastModifiedDate":"2021-10-28"},{"lineNumber":393,"author":{"gitId":"kahhe"},"content":"        data[7][INSTR_INDEX] \u003d INSTR_DELETE_GOAL;","lastModifiedDate":"2021-10-28"},{"lineNumber":394,"author":{"gitId":"kahhe"},"content":"        data[8][INSTR_INDEX] \u003d INSTR_DELETE_HABIT;","lastModifiedDate":"2021-10-28"},{"lineNumber":395,"author":{"gitId":"kahhe"},"content":"        data[9][INSTR_INDEX] \u003d INSTR_DONE_HABIT;","lastModifiedDate":"2021-10-28"},{"lineNumber":396,"author":{"gitId":"kahhe"},"content":"        data[10][INSTR_INDEX] \u003d INSTR_RETURN;","lastModifiedDate":"2021-10-28"},{"lineNumber":397,"author":{"gitId":"kahhe"},"content":"        data[11][INSTR_INDEX] \u003d INSTR_EXIT;","lastModifiedDate":"2021-10-28"},{"lineNumber":398,"author":{"gitId":"kahhe"},"content":"        return data;","lastModifiedDate":"2021-10-28"},{"lineNumber":399,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":400,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":401,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"STAung07":49,"huien77":4,"flerovious":6,"DJ-Tan":215,"kahhe":127}},{"path":"src/main/java/happybit/ui/PrintTable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.ui;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public class PrintTable {","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"    private static final String BAR_AND_SPACE \u003d \"| \";","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"    private static final String HORIZONTAL_SYMBOL \u003d \"-\";","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"    private static final String BLANK \u003d \" \";","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    private static final int FRONT_1_BACK_2_PADDING \u003d 3;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    private static final int BACK_2_PADDING \u003d 2;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    private static final int START_SINGLE_BAR \u003d 1;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * Prints data in a tabular format.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     * @param headers 1D string array containing names of headers.","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"     * @param data    2D string array containing data.","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    public static void printTable(String[] headers, String[][] data) {","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"        int numOfRows \u003d data.length;","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"        int numOfColumns \u003d headers.length;","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"        int[] columnLengths \u003d getColumnLengths(numOfRows, numOfColumns, headers, data);","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"        int totalLength \u003d getTotalLength(columnLengths);","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"        String lineSeparator \u003d HORIZONTAL_SYMBOL.repeat(totalLength);","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"        printHeaders(lineSeparator, headers, columnLengths, numOfColumns);","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"        printData(numOfRows, numOfColumns, columnLengths, data, lineSeparator);","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"    /*","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"     * The following are private methods that are used to implement SLAP for the","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"     * above public methods. These methods are positioned at the bottom to better","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"     * visualise the actual methods that can be called from outside this class.","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"     * Get the column lengths for the table.","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"     * @param numOfRows    Number of data rows.","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"     * @param numOfColumns Number of data columns.","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"     * @param headers      1D string array containing names of headers.","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"     * @param data         2D string array containing data.","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"     * @return Integer array containing the column lengths.","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"    private static int[] getColumnLengths(int numOfRows, int numOfColumns, String[] headers, String[][] data) {","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"        int[] columnLengths \u003d new int[numOfColumns];","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"        int minimumLength;","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"        for (int columnIndex \u003d 0; columnIndex \u003c numOfColumns; columnIndex++) {","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"            minimumLength \u003d headers[columnIndex].length() + FRONT_1_BACK_2_PADDING;","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"            columnLengths[columnIndex] \u003d getMinimumLength(minimumLength, columnIndex, numOfRows, data);","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"        return columnLengths;","lastModifiedDate":"2021-11-04"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"     * Get the minimum length that a column can be from the size of each data entry.","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"     * @param minimumLength Minimum column length based off the column header.","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"     * @param columnIndex   Column index of the data.","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"     * @param numOfRows     Number of data rows.","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"     * @param data          2D string array containing data.","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"     * @return Minimum length of a column.","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"    private static int getMinimumLength(int minimumLength, int columnIndex, int numOfRows, String[][] data) {","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"        for (int rowIndex \u003d 0; rowIndex \u003c numOfRows; rowIndex++) {","lastModifiedDate":"2021-11-04"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"            int comparedLength \u003d data[rowIndex][columnIndex].length() + BACK_2_PADDING;","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"            if (comparedLength \u003e minimumLength) {","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"                minimumLength \u003d comparedLength;","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"        return minimumLength;","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"     * Get the total length for a row.","lastModifiedDate":"2021-11-04"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"     * @param columnLengths 1D array containing all column lengths.","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"     * @return Total length for a row.","lastModifiedDate":"2021-11-04"},{"lineNumber":81,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"    private static int getTotalLength(int[] columnLengths) {","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"        int totalLength \u003d START_SINGLE_BAR;","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"        for (int length : columnLengths) {","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"DJ-Tan"},"content":"            totalLength +\u003d length + BACK_2_PADDING;","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":87,"author":{"gitId":"DJ-Tan"},"content":"        return totalLength;","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"DJ-Tan"},"content":"     * Prints the headers of the table.","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"DJ-Tan"},"content":"     * @param lineSeparator Line that separates the rows of the table.","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"DJ-Tan"},"content":"     * @param headers       1D string array containing names of headers.","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"DJ-Tan"},"content":"     * @param columnLengths 1D array containing all column lengths.","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"DJ-Tan"},"content":"     * @param numOfColumns  Number of data columns.","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"DJ-Tan"},"content":"    private static void printHeaders(String lineSeparator, String[] headers, int[] columnLengths, int numOfColumns) {","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(lineSeparator);","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"DJ-Tan"},"content":"        System.out.print(BAR_AND_SPACE);","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"DJ-Tan"},"content":"        for (int columnIndex \u003d 0; columnIndex \u003c numOfColumns; columnIndex++) {","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"DJ-Tan"},"content":"            System.out.print(headers[columnIndex]);","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"DJ-Tan"},"content":"            System.out.print(BLANK.repeat(columnLengths[columnIndex] - headers[columnIndex].length()));","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"DJ-Tan"},"content":"            System.out.print(BAR_AND_SPACE);","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(LS + lineSeparator);","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":109,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":110,"author":{"gitId":"DJ-Tan"},"content":"     * Prints the data entries of the table.","lastModifiedDate":"2021-11-04"},{"lineNumber":111,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":112,"author":{"gitId":"DJ-Tan"},"content":"     * @param numOfRows     Number of data rows.","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"DJ-Tan"},"content":"     * @param numOfColumns  Number of data columns.","lastModifiedDate":"2021-11-04"},{"lineNumber":114,"author":{"gitId":"DJ-Tan"},"content":"     * @param columnLengths 1D array containing all column lengths.","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"DJ-Tan"},"content":"     * @param data          2D string array containing data.","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"DJ-Tan"},"content":"     * @param lineSeparator Line that separates the rows of the table.","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"DJ-Tan"},"content":"    private static void printData(int numOfRows, int numOfColumns, int[] columnLengths, String[][] data,","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"DJ-Tan"},"content":"                                  String lineSeparator) {","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"DJ-Tan"},"content":"        for (int rowIndex \u003d 0; rowIndex \u003c numOfRows; rowIndex++) {","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"DJ-Tan"},"content":"            printRow(rowIndex, numOfColumns, columnLengths, data, lineSeparator);","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"DJ-Tan"},"content":"     * Prints a row of the data entries.","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"DJ-Tan"},"content":"     * @param rowIndex      Column index of the data.","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"DJ-Tan"},"content":"     * @param numOfColumns  Number of data columns.","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"DJ-Tan"},"content":"     * @param columnLengths 1D array containing all column lengths.","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"DJ-Tan"},"content":"     * @param data          2D string array containing data.","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"DJ-Tan"},"content":"     * @param lineSeparator Line that separates the rows of the table.","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"DJ-Tan"},"content":"    private static void printRow(int rowIndex, int numOfColumns, int[] columnLengths, String[][] data,","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"DJ-Tan"},"content":"                                 String lineSeparator) {","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"DJ-Tan"},"content":"        System.out.print(BAR_AND_SPACE);","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"DJ-Tan"},"content":"        for (int columnIndex \u003d 0; columnIndex \u003c numOfColumns; columnIndex++) {","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"DJ-Tan"},"content":"            System.out.print(data[rowIndex][columnIndex]);","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"DJ-Tan"},"content":"            System.out.print(BLANK.repeat(columnLengths[columnIndex] - data[rowIndex][columnIndex].length()));","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"DJ-Tan"},"content":"            System.out.print(BAR_AND_SPACE);","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(LS + lineSeparator);","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"DJ-Tan":145}},{"path":"src/main/java/happybit/ui/UiMain.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.Command;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"huien77"},"content":"import happybit.exception.HaBitStorageException;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalType;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"flerovious"},"content":"import happybit.parser.MainParser;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"public class UiMain extends UiManager {","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    private static final String SLEEP_LOGO \u003d \"              .-.,\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"            + \"      .------;,\u0027 |     ____  __    ____  ____  ____ \\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"            + \"    ,;......: |  |    / ___)(  )  (  __)(  __)(  _ \\\\\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"            + \"   |          |.\u0027;    \\\\___ \\\\/ (_/\\\\ ) _)  ) _)  ) __/\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"            + \"   ;\u0027\u0027\u0027\u0027\u0027\u0027\u0027\u0027\u0027\u0027;       (____/\\\\____/(____)(____)(__)  \\n\";","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"    private static final String FOOD_LOGO \u003d \"   ^    ^^    ^    \\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"            + \" ------;;;;------      ____  __    __  ____ \\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"            + \"|______|;;|______|    (  __)/  \\\\  /  \\\\(    \\\\\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"            + \"  |    |;;|    |       ) _)(  O )(  O )) D (\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"            + \"   \u0027.__|;;|__.\u0027       (__)  \\\\__/  \\\\__/(____/\\n\";","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    private static final String EXERCISE_LOGO \u003d \"            _( } \\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"            + \"   -\u003d  _  \u003c\u003c  \\\\       ____  _  _  ____  ____   ___  __  ____  ____ \\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"            + \"      `.\\\\__/`/\\\\\\\\     (  __)( \\\\/ )(  __)(  _ \\\\ / __)(  )/ ___)(  __)\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"            + \" -\u003d     \u0027--\u0027\\\\\\\\  `     ) _)  )  (  ) _)  )   /( (__  )( \\\\___ \\\\ ) _) \\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"            + \"      -\u003d     \\\\)      (____)(_/\\\\_)(____)(__\\\\_) \\\\___)(__)(____/(____)\\n\";","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"    private static final String STUDY_LOGO \u003d \"       _______ \\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"            + \"      /      /,       ____  ____  _  _  ____  _  _ \\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"            + \"     /      //       / ___)(_  _)/ )( \\\\(    \\\\( \\\\/ )\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"            + \"    /______//        \\\\___ \\\\  )(  ) \\\\/ ( ) D ( )  / \\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"            + \"   (______(/         (____/ (__) \\\\____/(____/(__/ \\n\";","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MESSAGE_RETURN \u003d \"Press enter ONCE to return to command mode...\\n\";","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MESSAGE_DUE_HABITS \u003d \"These are the habit(s) that you have yet to complete:\";","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"    private static final String HABIT_DETAILS \u003d \"%1$s) %2$s\" + LS;","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"    protected GoalList goalList;","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"STAung07"},"content":"    protected PrintManager printManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"    protected Storage storage;","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"    protected boolean isExit;","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"STAung07"},"content":"    public UiMain(GoalList goalList, PrintManager printManager, Storage storage) {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"        this.goalList \u003d goalList;","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"STAung07"},"content":"        this.printManager \u003d printManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"huien77"},"content":"        loadData();","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"     * Main function to execute main application interface.","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"    public void run() {","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"        resetDisplay();","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"        processInput();","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for whether the application should exit.","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"     * @return True if isExit flag is set, false otherwise.","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"    public boolean getIsExit() {","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"        return this.isExit;","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"DJ-Tan"},"content":"    /*","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"     * The following are private methods that are used to implement SLAP for the","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"     * above public methods. These methods are positioned at the bottom to better","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"     * visualise the actual methods that can be called from outside this class.","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"huien77"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"huien77"},"content":"     * Loads in data from an external storage.","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"huien77"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"huien77"},"content":"    private void loadData() {","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"huien77"},"content":"            this.goalList \u003d this.storage.load();","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"huien77"},"content":"        } catch (HaBitStorageException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"DJ-Tan"},"content":"            printManager.printError(e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"DJ-Tan"},"content":"     * Reads in user input and performs the corresponding command.","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"DJ-Tan"},"content":"    private void processInput() {","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"DJ-Tan"},"content":"        String userInput;","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"DJ-Tan"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"DJ-Tan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"DJ-Tan"},"content":"        boolean isReturn \u003d false;","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"DJ-Tan"},"content":"        while (!isExit \u0026\u0026 !isReturn) {","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"DJ-Tan"},"content":"            userInput \u003d readUserInput(in);","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"DJ-Tan"},"content":"            try {","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"flerovious"},"content":"                Command command \u003d MainParser.parse(userInput);","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"STAung07"},"content":"                command.runCommand(goalList, printManager, storage);","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"DJ-Tan"},"content":"                isExit \u003d isExitCommand(command);","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"DJ-Tan"},"content":"                isReturn \u003d isReturnCommand(command);","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"DJ-Tan"},"content":"                checkFlags(isExit, isReturn);","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"DJ-Tan"},"content":"            } catch (HaBitParserException | HaBitCommandException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"DJ-Tan"},"content":"                printManager.printError(e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"DJ-Tan"},"content":"                waitForEnter();","lastModifiedDate":"2021-11-04"},{"lineNumber":113,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"DJ-Tan"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"DJ-Tan"},"content":"     * Reads in the user input.","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"DJ-Tan"},"content":"     * @param in Scanner that obtains the user input.","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"DJ-Tan"},"content":"     * @return String of the user input.","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"DJ-Tan"},"content":"    private String readUserInput(Scanner in) {","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"DJ-Tan"},"content":"        System.out.print(\"Command: \");","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"DJ-Tan"},"content":"        String userInput \u003d in.nextLine();","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"DJ-Tan"},"content":"        System.out.print(LS);","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"DJ-Tan"},"content":"        return userInput;","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the exit command was called by the user.","lastModifiedDate":"2021-10-21"},{"lineNumber":133,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"DJ-Tan"},"content":"     * @param command Command called by the user.","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"DJ-Tan"},"content":"     * @return Boolean of whether the exit command was called.","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"DJ-Tan"},"content":"    private boolean isExitCommand(Command command) {","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"DJ-Tan"},"content":"        return command.isExit();","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the return command was called by the user.","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"DJ-Tan"},"content":"     * @param command Command called by the user.","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"DJ-Tan"},"content":"     * @return Boolean of whether the return command was called.","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"DJ-Tan"},"content":"    private boolean isReturnCommand(Command command) {","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"DJ-Tan"},"content":"        return command.isReturn();","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"DJ-Tan"},"content":"     * Executes waitForEnter if both flags are not set.","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"DJ-Tan"},"content":"     * @param isExit   True if exit flag is set.","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"DJ-Tan"},"content":"     * @param isReturn True if return flag is set.","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"DJ-Tan"},"content":"    private void checkFlags(boolean isExit, boolean isReturn) {","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"DJ-Tan"},"content":"        if (!isExit \u0026\u0026 !isReturn) {","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"DJ-Tan"},"content":"            waitForEnter();","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"DJ-Tan"},"content":"     * Wait for user to press Enter.","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"DJ-Tan"},"content":"    private void waitForEnter() {","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(LS + MESSAGE_RETURN);","lastModifiedDate":"2021-10-28"},{"lineNumber":168,"author":{"gitId":"DJ-Tan"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"DJ-Tan"},"content":"        String userInput \u003d null;","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"DJ-Tan"},"content":"        while (userInput \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"DJ-Tan"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"DJ-Tan"},"content":"        resetDisplay();","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"DJ-Tan"},"content":"     * Clears the console and re-prints the title and due habits.","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"DJ-Tan"},"content":"    private void resetDisplay() {","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"DJ-Tan"},"content":"        clearConsoleScreen();","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"DJ-Tan"},"content":"        printTitle();","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"DJ-Tan"},"content":"        printDueHabits();","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"DJ-Tan"},"content":"     * Prints the title depending on goalType (if a goal has been set).","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"DJ-Tan"},"content":"    private void printTitle() {","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"DJ-Tan"},"content":"        GoalType goalType \u003d goalList.getChosenGoalType();","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"DJ-Tan"},"content":"        switch (goalType) {","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"DJ-Tan"},"content":"        case SLEEP:","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"DJ-Tan"},"content":"            System.out.print(BAR + SLEEP_LOGO + BAR);","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"DJ-Tan"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"DJ-Tan"},"content":"        case FOOD:","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"DJ-Tan"},"content":"            System.out.print(BAR + FOOD_LOGO + BAR);","lastModifiedDate":"2021-10-21"},{"lineNumber":196,"author":{"gitId":"DJ-Tan"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":197,"author":{"gitId":"DJ-Tan"},"content":"        case EXERCISE:","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"DJ-Tan"},"content":"            System.out.print(BAR + EXERCISE_LOGO + BAR);","lastModifiedDate":"2021-10-21"},{"lineNumber":199,"author":{"gitId":"DJ-Tan"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"DJ-Tan"},"content":"        case STUDY:","lastModifiedDate":"2021-10-21"},{"lineNumber":201,"author":{"gitId":"DJ-Tan"},"content":"            System.out.print(BAR + STUDY_LOGO + BAR);","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"DJ-Tan"},"content":"            break;","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"DJ-Tan"},"content":"        default:","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"DJ-Tan"},"content":"            printLogo();","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"DJ-Tan"},"content":"     * Prints the list of habits to be marked as done.","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"DJ-Tan"},"content":"    private void printDueHabits() {","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"DJ-Tan"},"content":"        ArrayList\u003cString\u003e dueHabits \u003d this.goalList.listDueHabits();","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"DJ-Tan"},"content":"        if (!dueHabits.isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"DJ-Tan"},"content":"            System.out.println(MESSAGE_DUE_HABITS);","lastModifiedDate":"2021-10-28"},{"lineNumber":215,"author":{"gitId":"DJ-Tan"},"content":"            for (int listIndex \u003d 0; listIndex \u003c dueHabits.size(); listIndex++) {","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"DJ-Tan"},"content":"                System.out.printf(HABIT_DETAILS, (listIndex + 1), dueHabits.get(listIndex));","lastModifiedDate":"2021-10-28"},{"lineNumber":217,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"DJ-Tan"},"content":"            System.out.println();","lastModifiedDate":"2021-10-27"},{"lineNumber":219,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"STAung07":5,"huien77":12,"flerovious":2,"DJ-Tan":203}},{"path":"src/main/java/happybit/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.ui;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"public class UiManager {","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"    protected static final String S_TAB \u003d \"    \";","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"    protected static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"    protected static final String BAR \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"            + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    protected static final String LOGO \u003d \" _  _   __   ____  ____  _  _  ____  __  ____ \\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"            + \"/ )( \\\\ / _\\\\ (  _ \\\\(  _ \\\\( \\\\/ )(  _ \\\\(  )(_  _)\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"            + \") __ (/    \\\\ ) __/ ) __/ )  /  ) _ ( )(   )(  \\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"            + \"\\\\_)(_/\\\\_/\\\\_/(__)  (__)  (__/  (____/(__) (__) \";","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"    protected static final String SLOGAN \u003d \"tracking habits made fun...\\n\";","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"     * Prints the logo enclosed between double bars.","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    protected void printLogo() {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(BAR + LOGO + S_TAB + SLOGAN + BAR);","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     * Clears the console screen.","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"    protected void clearConsoleScreen() {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"            new ProcessBuilder(\"cmd\", \"/c\", \"cls\").inheritIO().start().waitFor();","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"            final String os \u003d System.getProperty(\"os.name\");","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"            if (os.contains(\"Windows\")) {","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"                Runtime.getRuntime().exec(\"cls\");","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"            } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"                Runtime.getRuntime().exec(\"clear\");","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"STAung07"},"content":"            System.out.print(\"\\033[H\\033[2J\");","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"STAung07"},"content":"            System.out.flush();","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"        } catch (final Exception e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"            // do nothing","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"     * Waits for \u0027time\u0027 seconds before proceeding with the next method.","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"    protected void waitApp(int time) {","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"            TimeUnit.SECONDS.sleep(time);","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"        } catch (InterruptedException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"            // Do nothing","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"STAung07":3,"DJ-Tan":51}},{"path":"src/main/java/happybit/ui/UiStartup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitUiException;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import java.awt.Desktop;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import java.net.URI;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"public class UiStartup extends UiManager {","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    private static final String UG_URI \u003d \"https://ay2122s1-cs2113t-f14-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    private static final String DG_URI \u003d \"https://ay2122s1-cs2113t-f14-1.github.io/tp/DeveloperGuide.html\";","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"    private static final String DEMO_URI \u003d \"https://www.youtube.com/watch?v\u003ddQw4w9WgXcQ\"; // To be changed (lel)","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MENU \u003d \"Select from one of the following menu items:\"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"            + LS + S_TAB + \"[1] About HappyBit\"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"            + LS + S_TAB + \"[2] User Guide\"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"            + LS + S_TAB + \"[3] Developer Guide\"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"            + LS + S_TAB + \"[4] Demo Video\"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kahhe"},"content":"            + LS + S_TAB + \"[5] Start Application\"","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"kahhe"},"content":"            + LS + S_TAB + \"[6] Exit Application\\n\";","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Howdy! Welcome to Ha(ppy)Bit!\\n\";","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"    private static final String BROWSER_MESSAGE \u003d \"Opening in a web browser...\\n\";","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"    private static final String RETURN_MESSAGE \u003d \"Press enter to return to main menu...\\n\";","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    private static final String START_MESSAGE \u003d \"Starting application...\\nType \u0027return\u0027 to return to main menu\\n\";","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    private static final String INVALID_MESSAGE \u003d \"Invalid command detected\\n\";","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ABOUT_MESSAGE \u003d \"Ha(ppy)Bit is a desktop app aimed to improve both the physical and \"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"            + \"mental lifestyle of students,\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"            + \"through the setting and tracking of goals to cultivate good habits. The app operates on a Command\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"            + \"Line Interface (CLI) while still comprising features typically found in a Graphical User Interface\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"            + \"(GUI). Students who type fast will find that Ha(ppy)Bit performs habit tracking more efficiently\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"            + \"than your conventional GUI apps.\\n\";","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"    private static final String TEAM_MESSAGE \u003d \"Meet The Team\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"            + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"            + \"||  Tan Kah Heng       ||  Creative Director, Visionary        ||\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"            + \"||  Swaminathan Varun  ||  Business Manager, Technical Advisor ||\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"            + \"||  Tan Jun Heng Daren ||  Frontend Developer                  ||\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"            + \"||  Tan Hui En         ||  Backend Developer                   ||\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"            + \"||  Swann Tet Aung     ||  Backend Developer                   ||\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"            + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"    private static final String VERSION_MESSAGE \u003d \"Current Version: v2.0 (updated 28-Oct-2021)\\n\";","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kahhe"},"content":"    private static boolean isExitFromStartup \u003d false;","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"     * Main function to execute main menu interface.","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitUiException If browser fails to open for scenario 2, 3 and 4.","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"    public void run() throws HaBitUiException {","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"        defaultDisplay();","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"        String userInput \u003d readUserInput(in);","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kahhe"},"content":"        while (!userInput.equals(\"5\") \u0026\u0026 !userInput.equals(\"6\")) {","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"            scenario1To4(userInput);","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"            userInput \u003d readUserInput(in);","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"kahhe"},"content":"        if (userInput.equals(\"5\")) {","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"            System.out.println(START_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"            waitApp(1);","lastModifiedDate":"2021-11-04"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"            clearConsoleScreen();","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"kahhe"},"content":"        if (userInput.equals(\"6\")) {","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"kahhe"},"content":"            setIsExitFromStartup(true);","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"DJ-Tan"},"content":"    /*","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"DJ-Tan"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"     * The following are private methods that are used to implement SLAP for the","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"     * above public methods. These methods are positioned at the bottom to better","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"     * visualise the actual methods that can be called from outside this class.","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"     * Prints the default display.","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"DJ-Tan"},"content":"    private void defaultDisplay() {","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"DJ-Tan"},"content":"        clearConsoleScreen();","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"DJ-Tan"},"content":"        printLogo();","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(WELCOME_MESSAGE + MENU);","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"DJ-Tan"},"content":"     * Reads in the user input.","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"DJ-Tan"},"content":"     * @param in Scanner that obtains the user input.","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"DJ-Tan"},"content":"     * @return String of the user input.","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"DJ-Tan"},"content":"    private String readUserInput(Scanner in) {","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"DJ-Tan"},"content":"        System.out.print(\"Option: \");","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"DJ-Tan"},"content":"        String userInput \u003d in.next();","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"DJ-Tan"},"content":"        System.out.print(LS);","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"DJ-Tan"},"content":"        return userInput;","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"DJ-Tan"},"content":"     * Executes the corresponding case based on user input.","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"DJ-Tan"},"content":"     * @param number String containing case number.","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitUiException If browser fails to open for case 2, 3 and 4.","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"DJ-Tan"},"content":"    private void scenario1To4(String number) throws HaBitUiException {","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"DJ-Tan"},"content":"        switch (number) {","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"DJ-Tan"},"content":"        case \"1\":","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"DJ-Tan"},"content":"            System.out.println(ABOUT_MESSAGE + LS + TEAM_MESSAGE + LS + VERSION_MESSAGE + LS);","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"DJ-Tan"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"DJ-Tan"},"content":"        case \"2\":","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"DJ-Tan"},"content":"            openBrowser(UG_URI);","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"DJ-Tan"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"DJ-Tan"},"content":"        case \"3\":","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"DJ-Tan"},"content":"            openBrowser(DG_URI);","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"DJ-Tan"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"DJ-Tan"},"content":"        case \"4\":","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"DJ-Tan"},"content":"            openBrowser(DEMO_URI);","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"DJ-Tan"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"DJ-Tan"},"content":"        default:","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"DJ-Tan"},"content":"            defaultDisplay();","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"DJ-Tan"},"content":"            System.out.println(INVALID_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"DJ-Tan"},"content":"        waitForEnter();","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"DJ-Tan"},"content":"        defaultDisplay();","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"DJ-Tan"},"content":"     * Wait for user to press Enter.","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"DJ-Tan"},"content":"    private void waitForEnter() {","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(RETURN_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"DJ-Tan"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"DJ-Tan"},"content":"        String userInput \u003d null;","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"DJ-Tan"},"content":"        while (userInput \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"DJ-Tan"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"DJ-Tan"},"content":"     * Opens a web browser.","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"DJ-Tan"},"content":"     * @param link String of the link to be opened.","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitUiException If the link provided is invalid or webpage does not exist.","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"DJ-Tan"},"content":"    private void openBrowser(String link) throws HaBitUiException {","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"DJ-Tan"},"content":"            System.out.println(BROWSER_MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"DJ-Tan"},"content":"            URI uri \u003d new URI(link);","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"DJ-Tan"},"content":"            Desktop.getDesktop().browse(uri);","lastModifiedDate":"2021-10-20"},{"lineNumber":155,"author":{"gitId":"DJ-Tan"},"content":"        } catch (URISyntaxException | IOException uriSyntaxException) {","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitUiException(\"Webpage is either down or does not exist\");","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":161,"author":{"gitId":"kahhe"},"content":"     * Setter for boolean variable isExitFromStartup.","lastModifiedDate":"2021-11-05"},{"lineNumber":162,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":163,"author":{"gitId":"kahhe"},"content":"     * @param isExitFromStartup True meaning that user has chosen to exit app from startup page. Otherwise, false.","lastModifiedDate":"2021-11-05"},{"lineNumber":164,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":165,"author":{"gitId":"kahhe"},"content":"    public static void setIsExitFromStartup(boolean isExitFromStartup) {","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"kahhe"},"content":"        UiStartup.isExitFromStartup \u003d isExitFromStartup;","lastModifiedDate":"2021-11-05"},{"lineNumber":167,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":168,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":169,"author":{"gitId":"kahhe"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":170,"author":{"gitId":"kahhe"},"content":"     * Getter for boolean variable isExitFromStartup.","lastModifiedDate":"2021-11-05"},{"lineNumber":171,"author":{"gitId":"kahhe"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":172,"author":{"gitId":"kahhe"},"content":"     * @return Boolean value of isExitFromStartup.","lastModifiedDate":"2021-11-05"},{"lineNumber":173,"author":{"gitId":"kahhe"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":174,"author":{"gitId":"kahhe"},"content":"    public static boolean getIsExitFromStartup() {","lastModifiedDate":"2021-11-05"},{"lineNumber":175,"author":{"gitId":"kahhe"},"content":"        return isExitFromStartup;","lastModifiedDate":"2021-11-05"},{"lineNumber":176,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":177,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"STAung07":2,"DJ-Tan":148,"kahhe":27}},{"path":"src/test/java/happybit/command/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"flerovious"},"content":"package happybit.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"flerovious"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"flerovious"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"flerovious"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"flerovious"},"content":"class AddCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"//    private static final String H0 \u003d \"Habit 0\";","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"//    private static final String H1 \u003d \"Habit 1\";","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"//    private static final String H2 \u003d \"Habit 2\";","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"//    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"//    void testAddHabit() {","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"//        AddCommand addCommand \u003d new AddCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"//        assertEquals(0, addCommand.getHabitListSize());","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"//        addCommand.addHabit(H0);","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"//        assertEquals(1, addCommand.getHabitListSize());","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"//        assertArrayEquals(new String[] {H0}, addCommand.getHabits().toArray());","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"//        addCommand.addHabit(H1);","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"//        assertEquals(2, addCommand.getHabitListSize());","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"//        assertArrayEquals(new String[] {H0, H1}, addCommand.getHabits().toArray());","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"//        addCommand.addHabit(H2);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"//        assertEquals(3, addCommand.getHabitListSize());","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"//        assertArrayEquals(new String[] {H0, H1, H2}, addCommand.getHabits().toArray());","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"//    }","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"flerovious"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"flerovious":10,"DJ-Tan":22}},{"path":"src/test/java/happybit/command/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package happybit.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"import happybit.exception.HappyBitException;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"class DeleteCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"//    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"//     * Test runCommand to see if deleteCommand is working.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"//     */","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"//    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"//    void runCommand_habitName_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"//        DeleteCommand deleteCommand \u003d new DeleteCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"//        deleteCommand.habits.add(\"habit 1\");","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"//        deleteCommand.habits.add(\"habit 2\");","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"//        deleteCommand.habits.add(\"habit 3\");","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"//        deleteCommand.habits.add(\"habit 4\");","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"//        deleteCommand.runCommand(\"habit 3\");","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"//        final ArrayList\u003cString\u003e actualResult \u003d deleteCommand.habits;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"//        final ArrayList\u003cString\u003e expectedResult \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"//        expectedResult.add(\"habit 1\");","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"//        expectedResult.add(\"habit 2\");","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"//        expectedResult.add(\"habit 4\");","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"//        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"//    }","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"DJ-Tan":21,"kahhe":12}},{"path":"src/test/java/happybit/command/RemoveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package happybit.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"import happybit.exception.HappyBitException;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import happybit.goal.Goal;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"kahhe"},"content":"class RemoveCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"//    GoalList testGoals \u003d new GoalList();","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"//    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"//     * Test runCommand to see if removeCommand is working.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"//     */","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"//    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"//    void runCommand_goalIndex_success() throws IndexOutOfBoundsException, HappyBitException {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"//        final Goal testGoal1 \u003d new Goal(\"test\", \"07-Oct-2021\", \"21-Oct-2021\");","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"//        final Goal testGoal2 \u003d new Goal(\"test\", \"22-Oct-2021\", \"30-Oct-2021\");","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"//        final Goal testGoal3 \u003d new Goal(\"test\", \"01-Nov-2021\", \"21-Nov-2021\");","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"//        testGoals.setGoal(testGoal1);","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"//        testGoals.setGoal(testGoal2);","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"//        testGoals.setGoal(testGoal3);","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"//        RemoveCommand remove \u003d new RemoveCommand(0);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"//        remove.runCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"//        assertEquals(2, testGoals.getListLength());","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"//    }","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"//    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"//    void runCommand_outOfBoundsGoalIndex_failure() throws HappyBitException, IndexOutOfBoundsException {","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"//        final Goal testGoal1 \u003d new Goal(\"test\", \"07-Oct-2021\", \"21-Oct-2021\");","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"//        final Goal testGoal2 \u003d new Goal(\"test\", \"22-Oct-2021\", \"30-Oct-2021\");","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"//        final Goal testGoal3 \u003d new Goal(\"test\", \"01-Nov-2021\", \"21-Nov-2021\");","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"//        testGoals.setGoal(testGoal1);","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"//        testGoals.setGoal(testGoal2);","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"//        testGoals.setGoal(testGoal3);","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"//        RemoveCommand remove \u003d new RemoveCommand(6);","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"//        assertThrows(IndexOutOfBoundsException.class, () -\u003e remove.runCommand());","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"//    }","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"STAung07":4,"DJ-Tan":29,"kahhe":12}},{"path":"src/test/java/happybit/goal/GoalTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.goal;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HappyBitException;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"class GoalTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"DJ-Tan":16}},{"path":"src/test/java/happybit/habit/HabitTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.habit;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HappyBitException;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.Goal;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"class HabitTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"DJ-Tan":14}},{"path":"src/test/java/happybit/parser/AddParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"flerovious"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"flerovious"},"content":"import happybit.command.AddGoalCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"flerovious"},"content":"import happybit.command.AddHabitCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"flerovious"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"flerovious"},"content":"import happybit.goal.Goal;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"flerovious"},"content":"import happybit.habit.Habit;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"flerovious"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"flerovious"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"flerovious"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"flerovious"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"flerovious"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"flerovious"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"flerovious"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"flerovious"},"content":"class AddParserTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_GOAL_INDEX_FORMAT \u003d \"The command is missing the \u0027g/\u0027 flag\";","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_NAME_FORMAT \u003d \"Use the \u0027n/\u0027 flag to define the name. Exp: n/Foo\";","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_NO_DESCRIPTION \u003d \"Use a description of at least 1 character\";","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_GOAL_TYPE_FORMAT \u003d \"Use the \u0027t/\u0027 flag to define the goal type. Exp: t/df\";","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_INTERVAL_FORMAT \u003d \"The flag \u0027i/\u0027 has to be followed by a number\";","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_DATE_FORMAT \u003d \"Use the date format: \u0027ddMMyyyy\u0027.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_END_DATE_FORMAT \u003d \"Use \u0027e/ddMMyyyy\u0027 to define the end date. Exp: e/25122021\";","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_START_DATE_FORMAT \u003d \"Use \u0027s/ddMMyyyy\u0027 to define the start date. Exp: s/25122021\";","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_GOAL_INDEX_NON_INTEGER \u003d \"The flag \u0027g/\u0027 has to be followed by a number\";","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_INTERVAL_NON_INTEGER \u003d \"The flag \u0027i/\u0027 has to be followed by a number\";","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_INTERVAL_NEGATIVE \u003d \"The flag \u0027i/\u0027 has to be followed by a positive integer\";","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_GOAL_INDEX_NEGATIVE_NUM \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"STAung07"},"content":"            \"The flag \u0027g/\u0027 has to be followed by a positive integer\";","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_GOAL_INDEX_ZERO_NUM \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"            \"The flag \u0027g/\u0027 has to be followed by a number greater than 0\";","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_GOAL_TYPE_LABEL \u003d \"Use the following goal types: \u0027sl\u0027, \u0027fd\u0027, \u0027ex\u0027, \u0027sd\u0027, \u0027df\u0027\";","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_PAST_DATE \u003d \"All dates have to come after today\u0027s date\";","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_CHRONOLOGICAL_DATE \u003d \"Start Date has to come before End Date.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"flerovious"},"content":"    /*","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"flerovious"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"flerovious"},"content":"     * The following are tests for parseAddGoalCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"flerovious"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"flerovious"},"content":"    void parseAddGoalCommand_validInputAllParameters_success() throws HaBitParserException, ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"flerovious"},"content":"        AddGoalCommand testCommand \u003d (AddGoalCommand)","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"flerovious"},"content":"                AddParser.parseAddGoalCommand(\" n/ Test t/sd s/31122021 e/31122022\");","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"flerovious"},"content":"        Goal testGoal \u003d testCommand.getGoal();","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"flerovious"},"content":"        assertEquals(\"Test\", testGoal.getGoalName());","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"flerovious"},"content":"        assertEquals(\"[SD]\", testGoal.getGoalTypeCharacter());","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"STAung07"},"content":"        assertEquals(\"31122021\", testGoal.getStringStartDate());","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"flerovious"},"content":"        assertEquals(new SimpleDateFormat(\"ddMMyyyy\").parse(\"31122022\"), testGoal.getEndDate());","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"flerovious"},"content":"    void parseAddGoalCommand_validInputMinimalParameters_success() throws HaBitParserException, ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"flerovious"},"content":"        AddGoalCommand testCommand \u003d (AddGoalCommand)","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"flerovious"},"content":"                AddParser.parseAddGoalCommand(\" n/ Test  e/31122022\");","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"flerovious"},"content":"        Goal testGoal \u003d testCommand.getGoal();","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"flerovious"},"content":"        assertEquals(\"Test\", testGoal.getGoalName());","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"flerovious"},"content":"        assertEquals(\"[DF]\", testGoal.getGoalTypeCharacter());","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"STAung07"},"content":"        assertEquals(LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"ddMMyyyy\")),","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"STAung07"},"content":"                testGoal.getStringStartDate());","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"flerovious"},"content":"        assertEquals(new SimpleDateFormat(\"ddMMyyyy\").parse(\"31122022\"), testGoal.getEndDate());","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"flerovious"},"content":"    void parseAddGoalCommand_validInputGoalTypes_success() throws HaBitParserException {","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"flerovious"},"content":"        AddGoalCommand testCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"flerovious"},"content":"        testCommand \u003d (AddGoalCommand)","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"flerovious"},"content":"                AddParser.parseAddGoalCommand(\" n/ Test t/sl e/31122022\");","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"flerovious"},"content":"        assertEquals(\"[SL]\", testCommand.getGoal().getGoalTypeCharacter());","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"flerovious"},"content":"        testCommand \u003d (AddGoalCommand)","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"flerovious"},"content":"                AddParser.parseAddGoalCommand(\" n/ Test t/fd e/31122022\");","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"flerovious"},"content":"        assertEquals(\"[FD]\", testCommand.getGoal().getGoalTypeCharacter());","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"flerovious"},"content":"        testCommand \u003d (AddGoalCommand)","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"flerovious"},"content":"                AddParser.parseAddGoalCommand(\" n/ Test t/ex e/31122022\");","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"flerovious"},"content":"        assertEquals(\"[EX]\", testCommand.getGoal().getGoalTypeCharacter());","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"flerovious"},"content":"        testCommand \u003d (AddGoalCommand)","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"flerovious"},"content":"                AddParser.parseAddGoalCommand(\" n/ Test t/sd e/31122022\");","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"flerovious"},"content":"        assertEquals(\"[SD]\", testCommand.getGoal().getGoalTypeCharacter());","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"flerovious"},"content":"        testCommand \u003d (AddGoalCommand)","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"flerovious"},"content":"                AddParser.parseAddGoalCommand(\" n/ Test t/df e/31122022\");","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"flerovious"},"content":"        assertEquals(\"[DF]\", testCommand.getGoal().getGoalTypeCharacter());","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"flerovious"},"content":"    void parseAddGoalCommand_invalidType_exceptionThrown() {","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"flerovious"},"content":"            AddParser.parseAddGoalCommand(\" n/ Test t/ e/31122022\");","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_GOAL_TYPE_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"flerovious"},"content":"            AddParser.parseAddGoalCommand(\" n/ Test t/xx e/31122022\");","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_GOAL_TYPE_LABEL, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"flerovious"},"content":"    void parseAddGoalCommand_invalidName_exceptionThrown() {","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"flerovious"},"content":"            AddParser.parseAddGoalCommand(\" n/  t/ e/31122022\");","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_NO_DESCRIPTION, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"flerovious"},"content":"            AddParser.parseAddGoalCommand(\"  t/ e/31122022\");","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_NAME_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"flerovious"},"content":"    void parseAddGoalCommand_invalidDateFormat_exceptionThrown() {","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"flerovious"},"content":"            AddParser.parseAddGoalCommand(\" n/ Test  e/31-12-2022\");","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_DATE_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"flerovious"},"content":"            AddParser.parseAddGoalCommand(\" n/ Test  e/31/12/2022\");","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_DATE_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"flerovious"},"content":"    void parseAddGoalCommand_invalidStartDateFormat_exceptionThrown() {","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"flerovious"},"content":"            AddParser.parseAddGoalCommand(\"n/ Test s/ e/31122022\");","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_START_DATE_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"flerovious"},"content":"    void parseAddGoalCommand_invalidEndDateFormat_exceptionThrown() {","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"flerovious"},"content":"            AddParser.parseAddGoalCommand(\"n/ Test \");","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_END_DATE_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"flerovious"},"content":"            AddParser.parseAddGoalCommand(\"n/ Test e/\");","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_END_DATE_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"flerovious"},"content":"    void parseAddGoalCommand_invalidDateChronology_exceptionThrown() {","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"flerovious"},"content":"            AddParser.parseAddGoalCommand(\"n/ Test s/31122020 e/31122022\");","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_PAST_DATE, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"flerovious"},"content":"            AddParser.parseAddGoalCommand(\"n/ Test s/31122021 e/31122020\");","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_PAST_DATE, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"flerovious"},"content":"            AddParser.parseAddGoalCommand(\"n/ Test s/31122022 e/31122021\");","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_CHRONOLOGICAL_DATE, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"flerovious"},"content":"    /*","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"flerovious"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"flerovious"},"content":"     * The following are tests for parseAddHabitCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"flerovious"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"flerovious"},"content":"    void parseAddHabitCommand_validInput_success() throws HaBitParserException {","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"flerovious"},"content":"        AddHabitCommand testCommand \u003d (AddHabitCommand)","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"flerovious"},"content":"                AddParser.parseAddHabitCommand(\" n/ Test  g/1 i/3  \");","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"flerovious"},"content":"        Habit habit \u003d testCommand.getHabit();","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"flerovious"},"content":"        assertEquals(0, testCommand.getGoalIndex());","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"flerovious"},"content":"        assertEquals(\"Test\", habit.getHabitName());","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"flerovious"},"content":"        assertEquals(3, habit.getIntervalLength());","lastModifiedDate":"2021-10-28"},{"lineNumber":206,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"flerovious"},"content":"    void parseAddHabitCommand_invalidGoalIndex_exceptionThrown() {","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"flerovious"},"content":"            AddParser.parseAddHabitCommand(\" n/ Test  g/$ i/3  \");","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_GOAL_INDEX_NON_INTEGER, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"flerovious"},"content":"            AddParser.parseAddHabitCommand(\" n/ Test  g/ i/3  \");","lastModifiedDate":"2021-10-27"},{"lineNumber":219,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_GOAL_INDEX_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":226,"author":{"gitId":"STAung07"},"content":"    void parseAddHabitCommand_negativeOrZeroGoalIndex_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":227,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":228,"author":{"gitId":"STAung07"},"content":"            AddParser.parseAddHabitCommand(\" n/ Test  g/-1 i/3  \");","lastModifiedDate":"2021-11-05"},{"lineNumber":229,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":230,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":231,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_GOAL_INDEX_NEGATIVE_NUM, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":232,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":233,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":234,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":235,"author":{"gitId":"STAung07"},"content":"            AddParser.parseAddHabitCommand(\" n/ Test  g/0 i/3  \");","lastModifiedDate":"2021-11-05"},{"lineNumber":236,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":237,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":238,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_GOAL_INDEX_ZERO_NUM, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":239,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":240,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":241,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":242,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":243,"author":{"gitId":"STAung07"},"content":"    void parseAddHabitCommand_invalidInterval_exceptionThrown() {","lastModifiedDate":"2021-11-04"},{"lineNumber":244,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":245,"author":{"gitId":"flerovious"},"content":"            AddParser.parseAddHabitCommand(\" n/ Test  g/1 i/A  \");","lastModifiedDate":"2021-10-27"},{"lineNumber":246,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":247,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":248,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_INTERVAL_NON_INTEGER, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":249,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":250,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":251,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":252,"author":{"gitId":"flerovious"},"content":"            AddParser.parseAddHabitCommand(\" n/ Test  g/1 i/  \");","lastModifiedDate":"2021-10-27"},{"lineNumber":253,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":254,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":255,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_INTERVAL_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":256,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":257,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":258,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":259,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":260,"author":{"gitId":"STAung07"},"content":"    void parseAddHabitCommand_negativeInterval_exceptionThrown() {","lastModifiedDate":"2021-11-04"},{"lineNumber":261,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-11-04"},{"lineNumber":262,"author":{"gitId":"STAung07"},"content":"            AddParser.parseAddHabitCommand(\" n/ Test  g/1 i/-1  \");","lastModifiedDate":"2021-11-04"},{"lineNumber":263,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-11-04"},{"lineNumber":264,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-04"},{"lineNumber":265,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_INTERVAL_NEGATIVE, e.getMessage());","lastModifiedDate":"2021-11-04"},{"lineNumber":266,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":267,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":268,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":269,"author":{"gitId":"flerovious"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"STAung07":36,"flerovious":230,"DJ-Tan":3}},{"path":"src/test/java/happybit/parser/DeleteParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"import happybit.command.DeleteGoalCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"flerovious"},"content":"import happybit.command.DeleteHabitCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"flerovious"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"flerovious"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"class DeleteParserTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_GOAL_INDEX_FORMAT \u003d \"The command is missing the \u0027g/\u0027 flag\";","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_GOAL_INDEX_NON_INTEGER \u003d \"The flag \u0027g/\u0027 has to be followed by a number\";","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_HABIT_INDEX_FORMAT \u003d \"The command is missing the \u0027h/\u0027 flag\";","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_HABIT_INDEX_NON_INTEGER \u003d \"The flag \u0027h/\u0027 has to be followed by a number\";","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_GOAL_INDEX_NEGATIVE_NUM \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"            \"The flag \u0027g/\u0027 has to be followed by a positive integer\";","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_GOAL_INDEX_ZERO_NUM \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"            \"The flag \u0027g/\u0027 has to be followed by a number greater than 0\";","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_HABIT_INDEX_NEGATIVE_NUM \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"            \"The flag \u0027h/\u0027 has to be followed by a positive integer\";","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_HABIT_INDEX_ZERO_NUM \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"            \"The flag \u0027h/\u0027 has to be followed by a number greater than 0\";","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"flerovious"},"content":"    /*","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"flerovious"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"flerovious"},"content":"     * The following are tests for parseDeleteGoalCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"flerovious"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"flerovious"},"content":"    void parseDeleteGoalCommand_validInput_success() throws HaBitParserException {","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"flerovious"},"content":"        DeleteGoalCommand testCommand \u003d (DeleteGoalCommand) DeleteParser.parseDeleteGoalCommand(\" g/1 \");","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"flerovious"},"content":"        assertEquals(0, testCommand.getGoalIndex());","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"flerovious"},"content":"    void parseDeleteGoalCommand_missingParameters_exceptionThrown() {","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"flerovious"},"content":"            DeleteParser.parseDeleteGoalCommand(\"\");","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_GOAL_INDEX_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"flerovious"},"content":"    void parseDeleteGoalCommand_missingGoalIndex_exceptionThrown() {","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"flerovious"},"content":"            DeleteParser.parseDeleteGoalCommand(\"g/\");","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_GOAL_INDEX_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"kahhe"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"flerovious"},"content":"    void parseDeleteGoalCommand_nonIntegerGoalIndex_exceptionThrown() {","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"flerovious"},"content":"            DeleteParser.parseDeleteGoalCommand(\"g/A\");","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_GOAL_INDEX_NON_INTEGER, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"flerovious"},"content":"            DeleteParser.parseDeleteGoalCommand(\"g/$\");","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_GOAL_INDEX_NON_INTEGER, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"STAung07"},"content":"    void parseDeleteGoalCommand_negativeOrZeroGoalIndex_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"STAung07"},"content":"            DeleteParser.parseDeleteGoalCommand(\"g/-1\");","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_GOAL_INDEX_NEGATIVE_NUM, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"STAung07"},"content":"            DeleteParser.parseDeleteGoalCommand(\"g/0\");","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_GOAL_INDEX_ZERO_NUM, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"flerovious"},"content":"    /*","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"flerovious"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"flerovious"},"content":"     * The following are tests for parseDeleteHabitCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"flerovious"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"kahhe"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"flerovious"},"content":"    void parseDeleteHabitCommand_validInput_success() throws HaBitParserException {","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"flerovious"},"content":"        DeleteHabitCommand testCommand \u003d (DeleteHabitCommand) DeleteParser.parseDeleteHabitCommand(\" g/1 h/1 \");","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"flerovious"},"content":"        assertEquals(0, testCommand.getGoalIndex());","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"flerovious"},"content":"        assertEquals(0, testCommand.getHabitIndex());","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"flerovious"},"content":"    void parseDeleteHabitCommand_missingParameters_exceptionThrown() {","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"flerovious"},"content":"            DeleteParser.parseDeleteHabitCommand(\"\");","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_GOAL_INDEX_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"flerovious"},"content":"    void parseDeleteHabitCommand_missingGoalIndex_exceptionThrown() {","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"flerovious"},"content":"            DeleteParser.parseDeleteHabitCommand(\"g/\");","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_GOAL_INDEX_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"flerovious"},"content":"    void parseDeleteHabitCommand_nonIntegerGoalIndex_exceptionThrown() {","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"flerovious"},"content":"            DeleteParser.parseDeleteHabitCommand(\"g/A\");","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_GOAL_INDEX_NON_INTEGER, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"flerovious"},"content":"            DeleteParser.parseDeleteHabitCommand(\"g/$\");","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_GOAL_INDEX_NON_INTEGER, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"flerovious"},"content":"    void parseDeleteHabitCommand_missingHabitIndex_exceptionThrown() {","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"flerovious"},"content":"            DeleteParser.parseDeleteHabitCommand(\"g/1 h/\");","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_HABIT_INDEX_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"flerovious"},"content":"            DeleteParser.parseDeleteHabitCommand(\"g/1 \");","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_HABIT_INDEX_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"flerovious"},"content":"    void parseDeleteHabitCommand_nonIntegerHabitIndex_exceptionThrown() {","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"flerovious"},"content":"            DeleteParser.parseDeleteHabitCommand(\"g/1 h/a\");","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_HABIT_INDEX_NON_INTEGER, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"flerovious"},"content":"            DeleteParser.parseDeleteHabitCommand(\"g/1 h/$\");","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_HABIT_INDEX_NON_INTEGER, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":175,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":177,"author":{"gitId":"STAung07"},"content":"    void parseDeleteHabitCommand_negativeOrZeroHabitIndex_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":178,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":179,"author":{"gitId":"STAung07"},"content":"            DeleteParser.parseDeleteHabitCommand(\"g/1 h/-1\");","lastModifiedDate":"2021-11-05"},{"lineNumber":180,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":181,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":182,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_HABIT_INDEX_NEGATIVE_NUM, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":183,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":184,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":185,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":186,"author":{"gitId":"STAung07"},"content":"            DeleteParser.parseDeleteHabitCommand(\"g/1 h/0\");","lastModifiedDate":"2021-11-05"},{"lineNumber":187,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":188,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":189,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_HABIT_INDEX_ZERO_NUM, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":190,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":191,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":192,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"STAung07":41,"flerovious":132,"DJ-Tan":4,"kahhe":15}},{"path":"src/test/java/happybit/parser/DoneParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import happybit.command.DoneHabitCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"flerovious"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"class DoneParserTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"flerovious"},"content":"//    private static final String ERROR_GOAL_INDEX_FORMAT \u003d \"The command is missing the \u0027g/\u0027 flag\";","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"flerovious"},"content":"//    private static final String ERROR_GOAL_INDEX_NON_INTEGER \u003d \"The flag \u0027g/\u0027 has to be followed by a number\";","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"flerovious"},"content":"//    private static final String ERROR_HABIT_INDEX_FORMAT \u003d \"The flag \u0027h/\u0027 has to be followed by a number\";","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"flerovious"},"content":"//    private static final String ERROR_HABIT_INDEX_NON_INTEGER \u003d \"The flag \u0027h/\u0027 has to be followed by a number\";","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"flerovious"},"content":"//    private static final String ERROR_GOAL_INDEX_NEGATIVE_NUM \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"flerovious"},"content":"//            \"The flag \u0027g/\u0027 has to be followed by a positive integer\";","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"flerovious"},"content":"//    private static final String ERROR_GOAL_INDEX_ZERO_NUM \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"flerovious"},"content":"//            \"The flag \u0027g/\u0027 has to be followed by a number greater than 0\";","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"flerovious"},"content":"//    private static final String ERROR_HABIT_INDEX_NEGATIVE_NUM \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"flerovious"},"content":"//            \"The flag \u0027h/\u0027 has to be followed by a positive integer\";","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"flerovious"},"content":"//    private static final String ERROR_HABIT_INDEX_ZERO_NUM \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"flerovious"},"content":"//            \"The flag \u0027h/\u0027 has to be followed by a number greater than 0\";","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"flerovious"},"content":"//","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"flerovious"},"content":"//","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"flerovious"},"content":"//    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"flerovious"},"content":"//    void parseDoneHabitCommand_validInput_success() throws HaBitParserException {","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"flerovious"},"content":"//        DoneHabitCommand testCommand \u003d (DoneHabitCommand) DoneParser.parseDoneHabitCommand(\" g/1 h/1 \");","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"flerovious"},"content":"//        assertEquals(0, testCommand.getGoalIndex());","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"flerovious"},"content":"//        assertEquals(0, testCommand.getHabitIndex());","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"flerovious"},"content":"//    }","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"flerovious"},"content":"//","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"flerovious"},"content":"//    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"flerovious"},"content":"//    void parseDoneHabitCommand_missingParameters_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"flerovious"},"content":"//        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"flerovious"},"content":"//            DoneParser.parseDoneHabitCommand(\" \");","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"flerovious"},"content":"//            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"flerovious"},"content":"//        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"flerovious"},"content":"//            assertEquals(ERROR_GOAL_INDEX_FORMAT, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"flerovious"},"content":"//        }","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"flerovious"},"content":"//    }","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"flerovious"},"content":"//","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"flerovious"},"content":"//    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"flerovious"},"content":"//    void parseDoneHabitCommand_missingGoalIndex_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"flerovious"},"content":"//        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"flerovious"},"content":"//            DoneParser.parseDoneHabitCommand(\"g/\");","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"flerovious"},"content":"//            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"flerovious"},"content":"//        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"flerovious"},"content":"//            assertEquals(ERROR_GOAL_INDEX_FORMAT, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"flerovious"},"content":"//        }","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"flerovious"},"content":"//    }","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"flerovious"},"content":"//","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"flerovious"},"content":"//    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"flerovious"},"content":"//    void parseDoneHabitCommand_nonIntegerGoalIndex_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"flerovious"},"content":"//        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"flerovious"},"content":"//            DoneParser.parseDoneHabitCommand(\"g/A\");","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"flerovious"},"content":"//            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"flerovious"},"content":"//        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"flerovious"},"content":"//            assertEquals(ERROR_GOAL_INDEX_NON_INTEGER, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"flerovious"},"content":"//        }","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"flerovious"},"content":"//","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"flerovious"},"content":"//        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"flerovious"},"content":"//            DoneParser.parseDoneHabitCommand(\"g/$\");","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"flerovious"},"content":"//            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"flerovious"},"content":"//        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"flerovious"},"content":"//            assertEquals(ERROR_GOAL_INDEX_NON_INTEGER, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"flerovious"},"content":"//        }","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"flerovious"},"content":"//    }","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"flerovious"},"content":"//","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"flerovious"},"content":"//    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"flerovious"},"content":"//    void parseDoneHabitCommand_negativeOrZeroGoalIndex_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"flerovious"},"content":"//        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"flerovious"},"content":"//            DoneParser.parseDoneHabitCommand(\"g/-1\");","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"flerovious"},"content":"//            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"flerovious"},"content":"//        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"flerovious"},"content":"//            assertEquals(ERROR_GOAL_INDEX_NEGATIVE_NUM, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"flerovious"},"content":"//        }","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"flerovious"},"content":"//","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"flerovious"},"content":"//        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"flerovious"},"content":"//            DoneParser.parseDoneHabitCommand(\"g/0\");","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"flerovious"},"content":"//            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"flerovious"},"content":"//        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"flerovious"},"content":"//            assertEquals(ERROR_GOAL_INDEX_ZERO_NUM, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"flerovious"},"content":"//        }","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"flerovious"},"content":"//    }","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"flerovious"},"content":"//","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"flerovious"},"content":"//    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"flerovious"},"content":"//    void parseDoneHabitCommand_missingHabitIndex_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"flerovious"},"content":"//        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"flerovious"},"content":"//            DoneParser.parseDoneHabitCommand(\"g/1 h/\");","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"flerovious"},"content":"//            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"flerovious"},"content":"//        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"flerovious"},"content":"//            assertEquals(ERROR_HABIT_INDEX_FORMAT, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"flerovious"},"content":"//        }","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"flerovious"},"content":"//","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"flerovious"},"content":"//        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"flerovious"},"content":"//            DoneParser.parseDoneHabitCommand(\"g/1 \");","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"flerovious"},"content":"//            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"flerovious"},"content":"//        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"flerovious"},"content":"//            assertEquals(ERROR_HABIT_INDEX_FORMAT, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"flerovious"},"content":"//        }","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"flerovious"},"content":"//    }","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"flerovious"},"content":"//","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"flerovious"},"content":"//    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"flerovious"},"content":"//    void parseDoneHabitCommand_nonIntegerHabitIndex_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"flerovious"},"content":"//        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"flerovious"},"content":"//            DoneParser.parseDoneHabitCommand(\"g/1 h/a\");","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"flerovious"},"content":"//            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"flerovious"},"content":"//        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"flerovious"},"content":"//            assertEquals(ERROR_HABIT_INDEX_NON_INTEGER, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"flerovious"},"content":"//        }","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"flerovious"},"content":"//","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"flerovious"},"content":"//        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"flerovious"},"content":"//            DoneParser.parseDoneHabitCommand(\"g/1 h/$\");","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"flerovious"},"content":"//            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"flerovious"},"content":"//        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"flerovious"},"content":"//            assertEquals(ERROR_HABIT_INDEX_NON_INTEGER, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"flerovious"},"content":"//        }","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"flerovious"},"content":"//    }","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"flerovious"},"content":"//","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"flerovious"},"content":"//    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":123,"author":{"gitId":"flerovious"},"content":"//    void parseDoneHabitCommand_negativeOrZeroHabitIndex_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":124,"author":{"gitId":"flerovious"},"content":"//        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":125,"author":{"gitId":"flerovious"},"content":"//            DoneParser.parseDoneHabitCommand(\"g/1 h/-1\");","lastModifiedDate":"2021-11-05"},{"lineNumber":126,"author":{"gitId":"flerovious"},"content":"//            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":127,"author":{"gitId":"flerovious"},"content":"//        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":128,"author":{"gitId":"flerovious"},"content":"//            assertEquals(ERROR_HABIT_INDEX_NEGATIVE_NUM, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":129,"author":{"gitId":"flerovious"},"content":"//        }","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"flerovious"},"content":"//","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"flerovious"},"content":"//        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":132,"author":{"gitId":"flerovious"},"content":"//            DoneParser.parseDoneHabitCommand(\"g/1 h/0\");","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"flerovious"},"content":"//            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":134,"author":{"gitId":"flerovious"},"content":"//        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":135,"author":{"gitId":"flerovious"},"content":"//            assertEquals(ERROR_HABIT_INDEX_ZERO_NUM, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":136,"author":{"gitId":"flerovious"},"content":"//        }","lastModifiedDate":"2021-11-05"},{"lineNumber":137,"author":{"gitId":"flerovious"},"content":"//    }","lastModifiedDate":"2021-11-05"},{"lineNumber":138,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"STAung07":12,"flerovious":126}},{"path":"src/test/java/happybit/parser/InputParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import happybit.command.HelpCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"class InputParserTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"//    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"//    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"//    @BeforeEach","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"//    public void setUp() {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"//        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"//    }","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"//    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"//    void parseInput_inputHelp_printCommandList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"//        final HelpCommand helpCommand \u003d new HelpCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"//        final InputParser iP \u003d new InputParser();","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"//        String input \u003d \"help\";","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"//        String expectedOutput \u003d ;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"//        iP.parseInput(input);","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"//        assertEquals(expectedOutput, outputStreamCaptor.toString());","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"//    }","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"//    @AfterEach","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"//    public void tearDown() {","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"//        System.setOut(standardOut);","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"//    }","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"STAung07":15,"DJ-Tan":22}},{"path":"src/test/java/happybit/parser/ListHabitParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"flerovious"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"flerovious"},"content":"import happybit.command.ListHabitsCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"flerovious"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"flerovious"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"flerovious"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"flerovious"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"flerovious"},"content":"class ListHabitParserTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_GOAL_INDEX_FORMAT \u003d \"The command is missing the \u0027g/\u0027 flag\";","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_GOAL_INDEX_NON_INTEGER \u003d \"The flag \u0027g/\u0027 has to be followed by a number\";","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_GOAL_INDEX_NEGATIVE_NUM \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"            \"The flag \u0027g/\u0027 has to be followed by a positive integer\";","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_GOAL_INDEX_ZERO_NUM \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"            \"The flag \u0027g/\u0027 has to be followed by a number greater than 0\";","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"flerovious"},"content":"    void parseListHabitCommand_validInput_success() throws HaBitParserException {","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"flerovious"},"content":"        ListHabitsCommand testCommand \u003d (ListHabitsCommand) ListHabitParser.parseListHabitCommand(\" g/1\");","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"flerovious"},"content":"        assertEquals(0, testCommand.getGoalIndex());","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"flerovious"},"content":"    void parseListHabitCommand_missingParameters_exceptionThrown() {","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"flerovious"},"content":"            ListHabitParser.parseListHabitCommand(\" \");","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_GOAL_INDEX_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"flerovious"},"content":"    void parseListHabitCommand_missingGoalIndex_exceptionThrown() {","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"flerovious"},"content":"            ListHabitParser.parseListHabitCommand(\"g/\");","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_GOAL_INDEX_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"flerovious"},"content":"    void parseListHabitCommand_nonIntegerGoalIndex_exceptionThrown() {","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"flerovious"},"content":"            ListHabitParser.parseListHabitCommand(\"g/A\");","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_GOAL_INDEX_NON_INTEGER, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"flerovious"},"content":"            ListHabitParser.parseListHabitCommand(\"g/$\");","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_GOAL_INDEX_NON_INTEGER, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"STAung07"},"content":"    void parseListHabitCommand_negativeOrZeroGoalIndex_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"STAung07"},"content":"            ListHabitParser.parseListHabitCommand(\"g/-1\");","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_GOAL_INDEX_NEGATIVE_NUM, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"STAung07"},"content":"            ListHabitParser.parseListHabitCommand(\"g/0\");","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_GOAL_INDEX_ZERO_NUM, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"flerovious"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"STAung07":20,"flerovious":56,"DJ-Tan":2}},{"path":"src/test/java/happybit/parser/ParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.parser;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalType;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"flerovious"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"flerovious"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"class ParserTest {","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_NAME_FORMAT \u003d \"Use the \u0027n/\u0027 flag to define the name. Exp: n/Foo\";","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_GOAL_TYPE_FORMAT \u003d \"Use the \u0027t/\u0027 flag to define the goal type. Exp: t/df\";","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_INTEGER_FLAG_FORMAT \u003d \"The command is missing the \u0027%1$s\u0027 flag\";","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_CONVERT_NUM \u003d \"The flag \u0027%1$s\u0027 has to be followed by a number\";","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_NEGATIVE_NUM \u003d \"The flag \u0027%1$s\u0027 has to be followed by a positive integer\";","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_UNDEFINED_GOAL_TYPE_LABEL \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"flerovious"},"content":"            \"Use the following goal types: \u0027sl\u0027, \u0027fd\u0027, \u0027ex\u0027, \u0027sd\u0027, \u0027df\u0027\";","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_NO_DESCRIPTION \u003d \"Use a description of at least 1 character\";","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_LONG_DESCRIPTION \u003d \"Use a description no more than 50 characters \"","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"flerovious"},"content":"            + \"(current: %1$s characters)\";","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"flerovious"},"content":"    private static final int MAX_NAME_LENGTH \u003d 50;","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"flerovious"},"content":"    void splitInput_validInput_expectValidSplit() {","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"flerovious"},"content":"        String input \u003d \"  n/ input/1    h/input/2 g/input/ is/3 i/$%   %$/4   \";","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e splitInput \u003d Parser.splitInput(input);","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"flerovious"},"content":"        assertEquals(\"n/input/1\", splitInput.get(0));","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"flerovious"},"content":"        assertEquals(\"h/input/2\", splitInput.get(1));","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"flerovious"},"content":"        assertEquals(\"g/input/ is/3\", splitInput.get(2));","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"flerovious"},"content":"        assertEquals(\"i/$%   %$/4\", splitInput.get(3));","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"flerovious"},"content":"        assertEquals(\"n/input\", Parser.splitInput(\"n/input\").get(0));","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"    void getName_noFlag_expectException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"\");","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"i/1\");","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"e/11112021\");","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"flerovious"},"content":"            Parser.getName(parameters);","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_NAME_FORMAT, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"    void getName_name0Characters_expectException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"n/\");","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"flerovious"},"content":"            Parser.getName(parameters);","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_NO_DESCRIPTION, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"    void getName_name50Characters_expectSameString() throws HaBitParserException {","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"flerovious"},"content":"        String length50String \u003d \"0\".repeat(MAX_NAME_LENGTH);","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"n/ \" + length50String);","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"        assertEquals(length50String, Parser.getName(parameters));","lastModifiedDate":"2021-11-04"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"    void getName_name51Characters_expectException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"flerovious"},"content":"        String length51String \u003d \"0\".repeat(MAX_NAME_LENGTH + 1);","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"n/ \" + length51String);","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"flerovious"},"content":"            Parser.getName(parameters);","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"flerovious"},"content":"            assertEquals(String.format(ERROR_LONG_DESCRIPTION, MAX_NAME_LENGTH + 1), e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":85,"author":{"gitId":"DJ-Tan"},"content":"    void getName_twoNameFlags_expectFirstName() throws HaBitParserException {","lastModifiedDate":"2021-11-04"},{"lineNumber":86,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"n/Name 1\");","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"n/Name 2\");","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"DJ-Tan"},"content":"        assertEquals(\"Name 1\", Parser.getName(parameters));","lastModifiedDate":"2021-11-04"},{"lineNumber":90,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":91,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":92,"author":{"gitId":"DJ-Tan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":93,"author":{"gitId":"DJ-Tan"},"content":"    void getNumber_negativeNumber_expectException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"g/-1\");","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"h/a\");","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"i/\");","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"flerovious"},"content":"            Parser.getNumber(parameters, \"g/\");","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"flerovious"},"content":"            assertEquals(String.format(ERROR_NEGATIVE_NUM, \"g/\"), e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":105,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":106,"author":{"gitId":"DJ-Tan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":107,"author":{"gitId":"DJ-Tan"},"content":"    void getNumber_nonInteger_expectException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":108,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"g/-1\");","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"h/a\");","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"i/\");","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"flerovious"},"content":"            Parser.getNumber(parameters, \"h/\");","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"flerovious"},"content":"            assertEquals(String.format(ERROR_CONVERT_NUM, \"h/\"), e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"DJ-Tan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"DJ-Tan"},"content":"    void getNumber_noNumber_expectException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-05"},{"lineNumber":123,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"g/-1\");","lastModifiedDate":"2021-11-05"},{"lineNumber":124,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"h/a\");","lastModifiedDate":"2021-11-05"},{"lineNumber":125,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"i/\");","lastModifiedDate":"2021-11-05"},{"lineNumber":126,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":127,"author":{"gitId":"flerovious"},"content":"            Parser.getNumber(parameters, \"i/\");","lastModifiedDate":"2021-11-05"},{"lineNumber":128,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":129,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"flerovious"},"content":"            assertEquals(String.format(ERROR_CONVERT_NUM, \"i/\"), e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":132,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"DJ-Tan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"DJ-Tan"},"content":"    void getNumber_twoDigitNumber_expectSameNumber() throws HaBitParserException {","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-05"},{"lineNumber":137,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"g/99\");","lastModifiedDate":"2021-11-05"},{"lineNumber":138,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"h/a\");","lastModifiedDate":"2021-11-05"},{"lineNumber":139,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"i/\");","lastModifiedDate":"2021-11-05"},{"lineNumber":140,"author":{"gitId":"DJ-Tan"},"content":"        assertEquals(99, Parser.getNumber(parameters, \"g/\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":144,"author":{"gitId":"flerovious"},"content":"    void getNumber_noFlag_expectException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":145,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-05"},{"lineNumber":146,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"g/99\");","lastModifiedDate":"2021-11-05"},{"lineNumber":147,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"h/a\");","lastModifiedDate":"2021-11-05"},{"lineNumber":148,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":150,"author":{"gitId":"flerovious"},"content":"            Parser.getNumber(parameters, \"i/\");","lastModifiedDate":"2021-11-05"},{"lineNumber":151,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"flerovious"},"content":"            assertEquals(String.format(ERROR_INTEGER_FLAG_FORMAT, \"i/\"), e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":153,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":154,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":156,"author":{"gitId":"DJ-Tan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"DJ-Tan"},"content":"    void getType_noFlag_expectDefault() throws HaBitParserException {","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-05"},{"lineNumber":159,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"\");","lastModifiedDate":"2021-11-05"},{"lineNumber":160,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"n/Test\");","lastModifiedDate":"2021-11-05"},{"lineNumber":161,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"e/11112021\");","lastModifiedDate":"2021-11-05"},{"lineNumber":162,"author":{"gitId":"DJ-Tan"},"content":"        assertEquals(GoalType.DEFAULT, Parser.getType(parameters));","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"DJ-Tan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"DJ-Tan"},"content":"    void getType_flagWithoutLabel_expectException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-05"},{"lineNumber":168,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"t/\");","lastModifiedDate":"2021-11-05"},{"lineNumber":169,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"n/Test\");","lastModifiedDate":"2021-11-05"},{"lineNumber":170,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"e/11112021\");","lastModifiedDate":"2021-11-05"},{"lineNumber":171,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":172,"author":{"gitId":"flerovious"},"content":"            Parser.getType(parameters);","lastModifiedDate":"2021-11-05"},{"lineNumber":173,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":174,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":175,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_GOAL_TYPE_FORMAT, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":176,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":177,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":178,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":179,"author":{"gitId":"DJ-Tan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":180,"author":{"gitId":"DJ-Tan"},"content":"    void getType_flagWithAUndefinedLabel_expectException() {","lastModifiedDate":"2021-11-04"},{"lineNumber":181,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-05"},{"lineNumber":182,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"t/??\");","lastModifiedDate":"2021-11-05"},{"lineNumber":183,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"n/Test\");","lastModifiedDate":"2021-11-05"},{"lineNumber":184,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"e/11112021\");","lastModifiedDate":"2021-11-05"},{"lineNumber":185,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":186,"author":{"gitId":"flerovious"},"content":"            Parser.getType(parameters);","lastModifiedDate":"2021-11-05"},{"lineNumber":187,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":188,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":189,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_UNDEFINED_GOAL_TYPE_LABEL, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":190,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":191,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":192,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":193,"author":{"gitId":"DJ-Tan"},"content":"    @Test","lastModifiedDate":"2021-11-04"},{"lineNumber":194,"author":{"gitId":"DJ-Tan"},"content":"    void getType_flagWithCorrectLabel_expectGoalTypeOfLabel() throws HaBitParserException {","lastModifiedDate":"2021-11-04"},{"lineNumber":195,"author":{"gitId":"flerovious"},"content":"        ArrayList\u003cString\u003e parameters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-05"},{"lineNumber":196,"author":{"gitId":"flerovious"},"content":"        parameters.add(\"t/sl\");","lastModifiedDate":"2021-11-05"},{"lineNumber":197,"author":{"gitId":"DJ-Tan"},"content":"        assertEquals(GoalType.SLEEP, Parser.getType(parameters));","lastModifiedDate":"2021-11-04"},{"lineNumber":198,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":199,"author":{"gitId":"flerovious"},"content":"        parameters.replaceAll(s -\u003e \"t/fd\");","lastModifiedDate":"2021-11-05"},{"lineNumber":200,"author":{"gitId":"flerovious"},"content":"        assertEquals(GoalType.FOOD, Parser.getType(parameters));","lastModifiedDate":"2021-11-05"},{"lineNumber":201,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":202,"author":{"gitId":"flerovious"},"content":"        parameters.replaceAll(s -\u003e \"t/ex\");","lastModifiedDate":"2021-11-05"},{"lineNumber":203,"author":{"gitId":"flerovious"},"content":"        assertEquals(GoalType.EXERCISE, Parser.getType(parameters));","lastModifiedDate":"2021-11-05"},{"lineNumber":204,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":205,"author":{"gitId":"flerovious"},"content":"        parameters.replaceAll(s -\u003e \"t/sd\");","lastModifiedDate":"2021-11-05"},{"lineNumber":206,"author":{"gitId":"flerovious"},"content":"        assertEquals(GoalType.STUDY, Parser.getType(parameters));","lastModifiedDate":"2021-11-05"},{"lineNumber":207,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":208,"author":{"gitId":"flerovious"},"content":"        parameters.replaceAll(s -\u003e \"t/df\");","lastModifiedDate":"2021-11-05"},{"lineNumber":209,"author":{"gitId":"flerovious"},"content":"        assertEquals(GoalType.DEFAULT, Parser.getType(parameters));","lastModifiedDate":"2021-11-05"},{"lineNumber":210,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":211,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"flerovious":144,"DJ-Tan":67}},{"path":"src/test/java/happybit/parser/UpdateParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"flerovious"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"flerovious"},"content":"import happybit.command.UpdateGoalNameCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import happybit.command.UpdateHabitIntervalCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"flerovious"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"flerovious"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"flerovious"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"flerovious"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"flerovious"},"content":"class UpdateParserTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_GOAL_INDEX_FORMAT \u003d \"The command is missing the \u0027g/\u0027 flag\";","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_GOAL_INDEX_NON_INTEGER \u003d \"The flag \u0027g/\u0027 has to be followed by a number\";","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_GOAL_NAME_FORMAT \u003d \"Use the \u0027n/\u0027 flag to define the name. Exp: n/Foo\";","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_NO_DESCRIPTION \u003d \"Use a description of at least 1 character\";","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_HABIT_INDEX_FORMAT \u003d \"The command is missing the \u0027h/\u0027 flag\";","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_HABIT_INDEX_NON_INTEGER \u003d \"The flag \u0027h/\u0027 has to be followed by a number\";","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_INTERVAL_FORMAT \u003d \"The flag \u0027i/\u0027 has to be followed by a number\";","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"flerovious"},"content":"    private static final String ERROR_MISSING_INTERVAL \u003d \"The command is missing the \u0027i/\u0027 flag\";","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_INTERVAL_NON_INTEGER \u003d \"The flag \u0027i/\u0027 has to be followed by a number\";","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_GOAL_INDEX_NEGATIVE_NUM \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"            \"The flag \u0027g/\u0027 has to be followed by a positive integer\";","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_GOAL_INDEX_ZERO_NUM \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"            \"The flag \u0027g/\u0027 has to be followed by a number greater than 0\";","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_HABIT_INDEX_NEGATIVE_NUM \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"            \"The flag \u0027h/\u0027 has to be followed by a positive integer\";","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_HABIT_INDEX_ZERO_NUM \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"            \"The flag \u0027h/\u0027 has to be followed by a number greater than 0\";","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_INTERVAL_NEGATIVE_NUM \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"            \"The flag \u0027i/\u0027 has to be followed by a positive integer\";","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_INTERVAL_ZERO_NUM \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"STAung07"},"content":"            \"The flag \u0027i/\u0027 has to be followed by a number greater than 0\";","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"flerovious"},"content":"    void parseUpdateGoalNameCommand_validInput_success() throws HaBitParserException {","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"flerovious"},"content":"        UpdateGoalNameCommand testCommand \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"flerovious"},"content":"                (UpdateGoalNameCommand) UpdateParser.parseUpdateGoalNameCommand(\" g/1 n/ New \");","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"flerovious"},"content":"        assertEquals(0, testCommand.getGoalIndex());","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"flerovious"},"content":"        assertEquals(\"New\", testCommand.getNewGoalName());","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"flerovious"},"content":"    void parseUpdateGoalNameCommand_missingParameters_exceptionThrown() {","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"flerovious"},"content":"            UpdateParser.parseUpdateGoalNameCommand(\" \");","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_GOAL_INDEX_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"flerovious"},"content":"    void parseUpdateGoalNameCommand_missingGoalIndex_exceptionThrown() {","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"flerovious"},"content":"            UpdateParser.parseUpdateGoalNameCommand(\"g/\");","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_GOAL_INDEX_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"flerovious"},"content":"    void parseUpdateGoalNameCommand_nonIntegerGoalIndex_exceptionThrown() {","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"flerovious"},"content":"            UpdateParser.parseUpdateGoalNameCommand(\"g/A\");","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_GOAL_INDEX_NON_INTEGER, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"flerovious"},"content":"            UpdateParser.parseUpdateGoalNameCommand(\"g/$\");","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_GOAL_INDEX_NON_INTEGER, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"STAung07"},"content":"    void parseUpdateGoalNameCommand_negativeOrZeroGoalIndex_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"STAung07"},"content":"            UpdateParser.parseUpdateHabitIntervalCommand(\"g/-1 n/test\");","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_GOAL_INDEX_NEGATIVE_NUM, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"STAung07"},"content":"            UpdateParser.parseUpdateHabitIntervalCommand(\"g/0 n/test\");","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_GOAL_INDEX_ZERO_NUM, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"flerovious"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"STAung07"},"content":"    void parseUpdateGoalNameCommand_missingGoalName_exceptionThrown() {","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"flerovious"},"content":"            UpdateParser.parseUpdateGoalNameCommand(\"g/1 n/ \");","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_NO_DESCRIPTION, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"flerovious"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"flerovious"},"content":"            UpdateParser.parseUpdateGoalNameCommand(\"g/1 \");","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"flerovious"},"content":"            fail();","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"flerovious"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_GOAL_NAME_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"flerovious"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"STAung07"},"content":"    void parseUpdateHabitIntervalCommand_validInput_success() throws HaBitParserException {","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"STAung07"},"content":"        UpdateHabitIntervalCommand testCommand \u003d","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"STAung07"},"content":"                (UpdateHabitIntervalCommand) UpdateParser.parseUpdateHabitIntervalCommand(\"g/1 h/1 i/3\");","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"STAung07"},"content":"        assertEquals(0, testCommand.getGoalIndex());","lastModifiedDate":"2021-10-28"},{"lineNumber":120,"author":{"gitId":"STAung07"},"content":"        assertEquals(0, testCommand.getHabitIndex());","lastModifiedDate":"2021-10-28"},{"lineNumber":121,"author":{"gitId":"STAung07"},"content":"        assertEquals(3, testCommand.getNewInterval());","lastModifiedDate":"2021-10-28"},{"lineNumber":122,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"STAung07"},"content":"    void parseUpdateHabitIntervalCommand_missingGoalIndex_exceptionThrown() {","lastModifiedDate":"2021-10-28"},{"lineNumber":126,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":127,"author":{"gitId":"STAung07"},"content":"            UpdateParser.parseUpdateHabitIntervalCommand(\"g/\");","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_GOAL_INDEX_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":131,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":132,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":133,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":134,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":135,"author":{"gitId":"STAung07"},"content":"    void parseUpdateHabitIntervalCommand_nonIntegerGoalIndex_exceptionThrown() {","lastModifiedDate":"2021-10-28"},{"lineNumber":136,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"STAung07"},"content":"            UpdateParser.parseUpdateHabitIntervalCommand(\"g/A\");","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":140,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_GOAL_INDEX_NON_INTEGER, e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":141,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":142,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":143,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":144,"author":{"gitId":"STAung07"},"content":"            UpdateParser.parseUpdateHabitIntervalCommand(\"g/$\");","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-10-28"},{"lineNumber":146,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":147,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_GOAL_INDEX_NON_INTEGER, e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":148,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":149,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":150,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":151,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"STAung07"},"content":"    void parseUpdateHabitIntervalCommand_negativeOrZeroGoalIndex_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":153,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":154,"author":{"gitId":"STAung07"},"content":"            UpdateParser.parseUpdateHabitIntervalCommand(\"g/-1 h/1\");","lastModifiedDate":"2021-11-05"},{"lineNumber":155,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":156,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":157,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_GOAL_INDEX_NEGATIVE_NUM, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":158,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":159,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":160,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":161,"author":{"gitId":"STAung07"},"content":"            UpdateParser.parseUpdateHabitIntervalCommand(\"g/0 h/2\");","lastModifiedDate":"2021-11-05"},{"lineNumber":162,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":163,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":164,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_GOAL_INDEX_ZERO_NUM, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":165,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":166,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":167,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":168,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":169,"author":{"gitId":"STAung07"},"content":"    void parseUpdateHabitIntervalCommand_missingHabitIndex_exceptionThrown() {","lastModifiedDate":"2021-10-28"},{"lineNumber":170,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":171,"author":{"gitId":"STAung07"},"content":"            UpdateParser.parseUpdateHabitIntervalCommand(\"g/1 h/ \");","lastModifiedDate":"2021-10-28"},{"lineNumber":172,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-10-28"},{"lineNumber":173,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":174,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_HABIT_INDEX_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":175,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":176,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":177,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":178,"author":{"gitId":"STAung07"},"content":"            UpdateParser.parseUpdateHabitIntervalCommand(\"g/1 n/ \");","lastModifiedDate":"2021-10-28"},{"lineNumber":179,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-10-28"},{"lineNumber":180,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":181,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_HABIT_INDEX_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":182,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":183,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":184,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":185,"author":{"gitId":"STAung07"},"content":"            UpdateParser.parseUpdateHabitIntervalCommand(\"g/1 \");","lastModifiedDate":"2021-10-28"},{"lineNumber":186,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-10-28"},{"lineNumber":187,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":188,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_HABIT_INDEX_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":189,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":190,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":191,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":192,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":193,"author":{"gitId":"STAung07"},"content":"    void parseUpdateHabitIntervalCommand_nonIntegerHabitIndex_exceptionThrown() {","lastModifiedDate":"2021-10-28"},{"lineNumber":194,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":195,"author":{"gitId":"STAung07"},"content":"            UpdateParser.parseUpdateHabitIntervalCommand(\"g/1 h/A\");","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-10-28"},{"lineNumber":197,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":198,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_HABIT_INDEX_NON_INTEGER, e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":199,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":200,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":202,"author":{"gitId":"STAung07"},"content":"            UpdateParser.parseUpdateHabitIntervalCommand(\"g/1 h/$\");","lastModifiedDate":"2021-10-28"},{"lineNumber":203,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-10-28"},{"lineNumber":204,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":205,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_HABIT_INDEX_NON_INTEGER, e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":206,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":207,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":208,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":209,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":210,"author":{"gitId":"STAung07"},"content":"    void parseUpdateHabitIntervalCommand_negativeOrZeroHabitIndex_exceptionThrown() {","lastModifiedDate":"2021-11-05"},{"lineNumber":211,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":212,"author":{"gitId":"STAung07"},"content":"            UpdateParser.parseUpdateHabitIntervalCommand(\"g/1 h/-1\");","lastModifiedDate":"2021-11-05"},{"lineNumber":213,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":214,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":215,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_HABIT_INDEX_NEGATIVE_NUM, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":216,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":217,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":218,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":219,"author":{"gitId":"STAung07"},"content":"            UpdateParser.parseUpdateHabitIntervalCommand(\"g/1 h/0\");","lastModifiedDate":"2021-11-05"},{"lineNumber":220,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-11-05"},{"lineNumber":221,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":222,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_HABIT_INDEX_ZERO_NUM, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":223,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":224,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":225,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":226,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":227,"author":{"gitId":"STAung07"},"content":"    void parseUpdateHabitIntervalCommand_missingInterval_exceptionThrown() {","lastModifiedDate":"2021-10-28"},{"lineNumber":228,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":229,"author":{"gitId":"STAung07"},"content":"            UpdateParser.parseUpdateHabitIntervalCommand(\"g/1 h/1 i/ \");","lastModifiedDate":"2021-10-28"},{"lineNumber":230,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-10-28"},{"lineNumber":231,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":232,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_INTERVAL_FORMAT, e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":233,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":234,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":235,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":236,"author":{"gitId":"STAung07"},"content":"            UpdateParser.parseUpdateHabitIntervalCommand(\"g/1 h/1 n/ \");","lastModifiedDate":"2021-10-28"},{"lineNumber":237,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-10-28"},{"lineNumber":238,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":239,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_MISSING_INTERVAL, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":240,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":241,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":242,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":243,"author":{"gitId":"STAung07"},"content":"            UpdateParser.parseUpdateHabitIntervalCommand(\"g/1 h/1 \");","lastModifiedDate":"2021-10-28"},{"lineNumber":244,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-10-28"},{"lineNumber":245,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":246,"author":{"gitId":"flerovious"},"content":"            assertEquals(ERROR_MISSING_INTERVAL, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":247,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":248,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":249,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":250,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":251,"author":{"gitId":"STAung07"},"content":"    void parseUpdateHabitIntervalCommand_nonIntegerInterval_exceptionThrown() {","lastModifiedDate":"2021-10-28"},{"lineNumber":252,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":253,"author":{"gitId":"STAung07"},"content":"            UpdateParser.parseUpdateHabitIntervalCommand(\"g/1 h/1 i/A\");","lastModifiedDate":"2021-10-28"},{"lineNumber":254,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-10-28"},{"lineNumber":255,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":256,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_INTERVAL_NON_INTEGER, e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":257,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":258,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":259,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":260,"author":{"gitId":"STAung07"},"content":"            UpdateParser.parseUpdateHabitIntervalCommand(\"g/1 h/1 i/$\");","lastModifiedDate":"2021-10-28"},{"lineNumber":261,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-10-28"},{"lineNumber":262,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-10-28"},{"lineNumber":263,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_INTERVAL_NON_INTEGER, e.getMessage());","lastModifiedDate":"2021-10-28"},{"lineNumber":264,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":265,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":266,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":267,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":268,"author":{"gitId":"STAung07"},"content":"    void parseUpdateHabitIntervalCommand_negativeOrZeroInterval_exceptionThrown() {","lastModifiedDate":"2021-11-03"},{"lineNumber":269,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":270,"author":{"gitId":"STAung07"},"content":"            UpdateParser.parseUpdateHabitIntervalCommand(\"g/1 h/1 i/-100\");","lastModifiedDate":"2021-11-03"},{"lineNumber":271,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-11-03"},{"lineNumber":272,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":273,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_INTERVAL_NEGATIVE_NUM, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":274,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":275,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":276,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-11-03"},{"lineNumber":277,"author":{"gitId":"STAung07"},"content":"            UpdateParser.parseUpdateHabitIntervalCommand(\"g/1 h/1 i/0\");","lastModifiedDate":"2021-11-03"},{"lineNumber":278,"author":{"gitId":"STAung07"},"content":"            fail();","lastModifiedDate":"2021-11-03"},{"lineNumber":279,"author":{"gitId":"STAung07"},"content":"        } catch (HaBitParserException e) {","lastModifiedDate":"2021-11-03"},{"lineNumber":280,"author":{"gitId":"STAung07"},"content":"            assertEquals(ERROR_INTERVAL_ZERO_NUM, e.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":281,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":282,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":283,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":284,"author":{"gitId":"flerovious"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"STAung07":199,"flerovious":79,"DJ-Tan":6}},{"path":"src/test/java/happybit/storage/ExportTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"huien77"},"content":"package happybit.storage;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"huien77"},"content":"import happybit.goal.Goal;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"import happybit.goal.GoalType;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"huien77"},"content":"import happybit.habit.Habit;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"huien77"},"content":"import happybit.interval.Interval;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"huien77"},"content":"import happybit.ui.PrintManager;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"huien77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"huien77"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"huien77"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"huien77"},"content":"import java.util.Date;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"huien77"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"huien77"},"content":"public class ExportTest {","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"huien77"},"content":"    private static final String DATE_FORMAT \u003d \"ddMMyyyy\";","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"huien77"},"content":"    private static final String START_DATE_1 \u003d \"05112021\";","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"huien77"},"content":"    private static final String END_DATE_1 \u003d \"07112021\";","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"huien77"},"content":"    private static final String GOAL_STRING_1 \u003d \"0##G##Default##example##05112021##07112021\" + System.lineSeparator();","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"huien77"},"content":"    private static final String HABIT_STRING_1 \u003d \"0##H##eg1##05112021##07112021##1\" + System.lineSeparator();","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"huien77"},"content":"    private static final String INTERVAL_STRING_1 \u003d \"0##I##0##07112021##07112021##null\" + System.lineSeparator();","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"huien77"},"content":"    private static final String INTERVAL_STRING_2 \u003d \"0##I##0##07112021##07112021##07112021\" + System.lineSeparator();","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"huien77"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"huien77"},"content":"    public void goalStringTest() {","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"huien77"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(DATE_FORMAT);","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"huien77"},"content":"        Date startDate;","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"huien77"},"content":"        Date endDate;","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"huien77"},"content":"            startDate \u003d format.parse(START_DATE_1);","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"huien77"},"content":"            endDate \u003d format.parse(END_DATE_1);","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"huien77"},"content":"            Goal goal \u003d new Goal(\"example\", GoalType.DEFAULT, startDate, endDate);","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"huien77"},"content":"            assertEquals(GOAL_STRING_1, new Export(\"path\", new PrintManager()).goalString(goal, 0));","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"huien77"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"huien77"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"huien77"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"huien77"},"content":"    public void habitStringTest() {","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"huien77"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(DATE_FORMAT);","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"huien77"},"content":"        Date startDate;","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"huien77"},"content":"        Date endDate;","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"huien77"},"content":"            startDate \u003d format.parse(START_DATE_1);","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"huien77"},"content":"            endDate \u003d format.parse(END_DATE_1);","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"huien77"},"content":"            Habit habit \u003d new Habit(\"eg1\",startDate, endDate, 1);","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"huien77"},"content":"            assertEquals(HABIT_STRING_1, new Export(\"path\", new PrintManager()).habitString(habit, 0));","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"huien77"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"huien77"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"huien77"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"huien77"},"content":"    public void intervalStringTest() {","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"huien77"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(DATE_FORMAT);","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"huien77"},"content":"        Date endDate;","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"huien77"},"content":"            endDate \u003d format.parse(END_DATE_1);","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"huien77"},"content":"            Interval interval \u003d new Interval(endDate, endDate);","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"huien77"},"content":"            assertEquals(INTERVAL_STRING_1, new Export(\"path\",","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"huien77"},"content":"                    new PrintManager()).intervalString(interval, 0, 0));","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"huien77"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"huien77"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"huien77"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"huien77"},"content":"    public void intervalStringTest_completedInterval() {","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"huien77"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(DATE_FORMAT);","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"huien77"},"content":"        Date endDate;","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"huien77"},"content":"            endDate \u003d format.parse(END_DATE_1);","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"huien77"},"content":"            Interval interval \u003d new Interval(endDate, endDate);","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"huien77"},"content":"            interval.setCompleted(endDate);","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"huien77"},"content":"            assertEquals(INTERVAL_STRING_2, new Export(\"path\",","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"huien77"},"content":"                    new PrintManager()).intervalString(interval, 0, 0));","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"huien77"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"huien77"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"huien77"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"huien77":91}},{"path":"src/test/java/happybit/storage/ImportParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"huien77"},"content":"package happybit.storage;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"huien77"},"content":"import happybit.goal.Goal;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"import happybit.interval.Interval;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"huien77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"huien77"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"huien77"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"huien77"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"huien77"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"huien77"},"content":"public class ImportParserTest {","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"huien77"},"content":"    private static final String DELIMITER \u003d \"##\";","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"huien77"},"content":"    private static final String DATE_FORMAT \u003d \"ddMMyyyy\";","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"huien77"},"content":"    private static final String START_DATE_1 \u003d \"05112021\";","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"huien77"},"content":"    private static final String END_DATE_1 \u003d \"07112021\";","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"huien77"},"content":"    private static final String TEST_GOAL_1 \u003d \"0##G##Sleep##example##05112021##07112021\";","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"huien77"},"content":"    private static final String TEST_GOAL_2 \u003d \"0##G##Food##example##05112021##07112021\";","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"huien77"},"content":"    private static final String TEST_GOAL_3 \u003d \"0##G##Exercise##example##05112021##07112021\";","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"huien77"},"content":"    private static final String TEST_GOAL_4 \u003d \"0##G##Study##example##05112021##07112021\";","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"huien77"},"content":"    private static final String TEST_GOAL_5 \u003d \"0##G##Default##example##05112021##07112021\";","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"huien77"},"content":"    private static final String TEST_INTERVAL_1 \u003d \"0##I##0##07112021##07112021##null\";","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"huien77"},"content":"    private static final String TEST_INTERVAL_2 \u003d \"0##I##0##07112021##07112021##07112021\";","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"huien77"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"huien77"},"content":"    public void goalParser_sleep() {","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"huien77"},"content":"        String[] lineData \u003d TEST_GOAL_1.split(DELIMITER);","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"huien77"},"content":"            Goal goal \u003d ImportParser.goalParser(lineData);","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"huien77"},"content":"            assertEquals(\"Sleep\", goal.getGoalTypeStr());","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"huien77"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"huien77"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"huien77"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"huien77"},"content":"    public void goalParser_food() {","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"huien77"},"content":"        String[] lineData \u003d TEST_GOAL_2.split(DELIMITER);","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"huien77"},"content":"            Goal goal \u003d ImportParser.goalParser(lineData);","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"huien77"},"content":"            assertEquals(\"Food\", goal.getGoalTypeStr());","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"huien77"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"huien77"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"huien77"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"huien77"},"content":"    public void goalParser_exercise() {","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"huien77"},"content":"        String[] lineData \u003d TEST_GOAL_3.split(DELIMITER);","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"huien77"},"content":"            Goal goal \u003d ImportParser.goalParser(lineData);","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"huien77"},"content":"            assertEquals(\"Exercise\", goal.getGoalTypeStr());","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"huien77"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"huien77"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"huien77"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"huien77"},"content":"    public void goalParser_study() {","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"huien77"},"content":"        String[] lineData \u003d TEST_GOAL_4.split(DELIMITER);","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"huien77"},"content":"            Goal goal \u003d ImportParser.goalParser(lineData);","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"huien77"},"content":"            assertEquals(\"Study\", goal.getGoalTypeStr());","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"huien77"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"huien77"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"huien77"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"huien77"},"content":"    public void goalParser_default() {","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"huien77"},"content":"        String[] lineData \u003d TEST_GOAL_5.split(DELIMITER);","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"huien77"},"content":"            Goal goal \u003d ImportParser.goalParser(lineData);","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"huien77"},"content":"            assertEquals(\"Default\", goal.getGoalTypeStr());","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"huien77"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"huien77"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"huien77"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"huien77"},"content":"    public void intervalParser_notCompleted() {","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"huien77"},"content":"        String[] lineData \u003d TEST_INTERVAL_1.split(DELIMITER);","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"huien77"},"content":"            Interval interval \u003d ImportParser.intervalParser(lineData);","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"huien77"},"content":"            assertFalse(interval.getDone());","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"huien77"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"huien77"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"huien77"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"huien77"},"content":"    public void intervalParser_completed() {","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"huien77"},"content":"        String[] lineData \u003d TEST_INTERVAL_2.split(DELIMITER);","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"huien77"},"content":"            Interval interval \u003d ImportParser.intervalParser(lineData);","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"huien77"},"content":"            assertTrue(interval.getDone());","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"huien77"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"huien77"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"huien77"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"huien77":116}},{"path":"src/test/java/happybit/storage/ImportTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"huien77"},"content":"package happybit.storage;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"huien77"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"import happybit.exception.HaBitStorageException;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"huien77"},"content":"import happybit.goal.Goal;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"huien77"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"huien77"},"content":"import happybit.habit.Habit;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"huien77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"huien77"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"huien77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"huien77"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"huien77"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"huien77"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"huien77"},"content":"public class ImportTest {","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"huien77"},"content":"    private static final String DELIMITER \u003d \"##\";","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"huien77"},"content":"    private static final String TEST_1 \u003d \"0##G##Default##example##03##12122021\";","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"huien77"},"content":"    private static final String TEST_2 \u003d \"a##G##Default##example##03112021##12122021\";","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"huien77"},"content":"    private static final String TEST_3 \u003d \"10##H##eg1##03112021##12122021##1\";","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"huien77"},"content":"    private static final String TEST_4 \u003d \"0##Z##eg1##03112021##12122021##1\";","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"huien77"},"content":"    private static final String TEST_5 \u003d \"0##G##Default##example##05112021##07112021\";","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"huien77"},"content":"    private static final String TEST_6 \u003d \"0##H##eg1##05112021##07112021##1\";","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"huien77"},"content":"    private static final String TEST_7 \u003d \"0##I##0##05112021##06112021##null\";","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"huien77"},"content":"    private static final String TEST_8 \u003d \"0##I##0##06112021##07112021##null\";","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"huien77"},"content":"    private static final String TEST_9 \u003d \"0##I##0##07112021##07112021##null\";","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"huien77"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"huien77"},"content":"    public void updateGoalList_incorrectDateFormat_parseException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"huien77"},"content":"        String[] lineData \u003d TEST_1.split(DELIMITER);","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"huien77"},"content":"        GoalList goalList \u003d new GoalList();","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"huien77"},"content":"        ParseException thrown \u003d assertThrows(ParseException.class, () -\u003e {","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"huien77"},"content":"            Import.updateGoalList(lineData, goalList);","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"huien77"},"content":"        });","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"huien77"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"huien77"},"content":"    public void updateGoalList_notInt_parseException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"huien77"},"content":"        String[] lineData \u003d TEST_2.split(DELIMITER);","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"huien77"},"content":"        GoalList goalList \u003d new GoalList();","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"huien77"},"content":"        NumberFormatException thrown \u003d assertThrows(NumberFormatException.class, () -\u003e {","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"huien77"},"content":"            Import.updateGoalList(lineData, goalList);","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"huien77"},"content":"        });","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"huien77"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"huien77"},"content":"    public void updateGoalList_indexOutOfBound_habitCommandException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"huien77"},"content":"        String[] lineData \u003d TEST_3.split(DELIMITER);","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"huien77"},"content":"        GoalList goalList \u003d new GoalList();","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"huien77"},"content":"        HaBitCommandException thrown \u003d assertThrows(HaBitCommandException.class, () -\u003e {","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"huien77"},"content":"            Import.updateGoalList(lineData, goalList);","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"huien77"},"content":"        });","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"huien77"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"huien77"},"content":"    public void updateGoalList_invalidClassType_habitStorageException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"huien77"},"content":"        String[] lineData \u003d TEST_4.split(DELIMITER);","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"huien77"},"content":"        GoalList goalList \u003d new GoalList();","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"huien77"},"content":"        HaBitStorageException thrown \u003d assertThrows(HaBitStorageException.class, () -\u003e {","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"huien77"},"content":"            Import.updateGoalList(lineData, goalList);","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"huien77"},"content":"        });","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"huien77"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"huien77"},"content":"    public void updateGoalList_addGoalHabitInterval_success() {","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"huien77"},"content":"        String[] lineData1 \u003d TEST_5.split(DELIMITER);","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"huien77"},"content":"        String[] lineData2 \u003d TEST_6.split(DELIMITER);","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"huien77"},"content":"        String[] lineData3 \u003d TEST_7.split(DELIMITER);","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"huien77"},"content":"        String[] lineData4 \u003d TEST_8.split(DELIMITER);","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"huien77"},"content":"        String[] lineData5 \u003d TEST_9.split(DELIMITER);","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"huien77"},"content":"        GoalList goalList \u003d new GoalList();","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"huien77"},"content":"            Import.updateGoalList(lineData1, goalList);","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"huien77"},"content":"            Import.updateGoalList(lineData2, goalList);","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"huien77"},"content":"            Import.updateGoalList(lineData3, goalList);","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"huien77"},"content":"            Import.updateGoalList(lineData4, goalList);","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"huien77"},"content":"            Import.updateGoalList(lineData5, goalList);","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"huien77"},"content":"        } catch (HaBitStorageException | HaBitCommandException | ParseException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"huien77"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"huien77"},"content":"        assertAll(() -\u003e {","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"huien77"},"content":"            assertEquals(1, goalList.getListLength());","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"huien77"},"content":"            ArrayList\u003cGoal\u003e goals \u003d goalList.getGoalList();","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"huien77"},"content":"            Goal goal1 \u003d goals.get(0);","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"huien77"},"content":"            ArrayList\u003cHabit\u003e habits \u003d goal1.getHabitList();","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"huien77"},"content":"            assertEquals(\"[DF] example\", goal1.getDescription());","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"huien77"},"content":"            assertEquals(1, habits.size());","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"huien77"},"content":"            Habit habit1 \u003d habits.get(0);","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"huien77"},"content":"            assertEquals(\"eg1\", habit1.getHabitName());","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"huien77"},"content":"            assertEquals(1, habit1.getIntervalLength());","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"huien77"},"content":"            assertEquals(3, habit1.getTotalIntervals());","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"huien77"},"content":"        });","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"huien77"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"huien77":105}},{"path":"src/test/java/happybit/storage/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"huien77"},"content":"package happybit.storage;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"huien77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"huien77"},"content":"import java.io.File;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"huien77"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"huien77"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"huien77"},"content":"public class StorageTest {","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"huien77"},"content":"    private static final String FILEDIR \u003d \"test/dir\";","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"huien77"},"content":"    private static final String FILEPATH \u003d \"test/dir/testFile.txt\";","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"huien77"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"huien77"},"content":"    public void createStorageFileTest() {","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"huien77"},"content":"        new Storage().createStorageFile(FILEPATH, FILEDIR);","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"huien77"},"content":"        File fileDir \u003d new File(FILEDIR);","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"huien77"},"content":"        File filePath \u003d new File(FILEPATH);","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"huien77"},"content":"        assertTrue(fileDir.exists());","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"huien77"},"content":"        assertTrue(filePath.exists());","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"huien77"},"content":"        assertFalse(filePath.canWrite());","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"huien77"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"huien77":25}}]
