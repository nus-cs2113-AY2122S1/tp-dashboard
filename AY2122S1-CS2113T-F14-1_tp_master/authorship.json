[{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# About us","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Portfolio ","lastModifiedDate":"2020-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"--------|:----:|:--------------:|:---------:","lastModifiedDate":"2020-05-24"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"![](Display Images/Gudetama.png) | Tan Hui En | [Github](https://github.com/huien77) | [Portfolio](team/johndoe.md)","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"![](Display Images/Rimuru.png) | Daren Tan | [Github](https://github.com/DJ-Tan) | [Portfolio](team/johndoe.md)","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"![](Display Images/GrabFood.png) | Swann Tet Aung | [Github](https://github.com/STAung07) | [Portfolio](team/johndoe.md)","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"![](Display Images/KahHeng.png) | Tan Kah Heng | [Github](https://github.com/kahhe) | [Portfolio](team/kahheng.md)","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"![](Display Images/Flerovious.png) | Swaminathan Varun | [Github](https://github.com/flerovious) | [Portfolio](team/johndoe.md)","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"-":4,"kahhe":5}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2020-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":3,"author":{"gitId":"huien77"},"content":"Ha(ppy)Bit is a desktop app aimed to improve both the **physical and mental lifestyle of students**, ","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"through the setting and tracking of goals to cultivate good habits. ","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"huien77"},"content":"The app operates on a Command Line Interface (CLI) while still ","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"huien77"},"content":"comprising features typically found in a Graphical User Interface (GUI). ","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"huien77"},"content":"Students who type fast will find that Ha(ppy)Bit performs habit tracking more efficiently than your ","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"huien77"},"content":"conventional GUI apps.","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"huien77"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"huien77"},"content":"* [Terminology](#terminology)","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"huien77"},"content":"* [Features](#features)","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"huien77"},"content":"    * [Ask for Help: `help`](#ask-for-help-help)","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"huien77"},"content":"    * [List all Goals: `list`](#list-all-goals-list)","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"huien77"},"content":"    * [Set a Goal: `set`](#set-a-goal-set)","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"huien77"},"content":"    * [Remove a Goal: `remove`](#remove-a-goal-remove)","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"huien77"},"content":"    * [Add a Habit: `add`](#add-a-habit-add)","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"huien77"},"content":"    * [Complete Habit: `done`](#complete-habit-done)","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"huien77"},"content":"    * [Delete Habit: `delete`](#delete-habit-delete)","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"huien77"},"content":"    * [View Habit: `view`](#view-habit-view)","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"huien77"},"content":"    * [Exit Program: `bye`](#exit-program-bye)","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"huien77"},"content":"* [About Loading and Saving Data](#about-loading-and-saving-data)","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"huien77"},"content":"* [FAQ](#faq)","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"huien77"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## Quick Start","lastModifiedDate":"2020-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"{Give steps to get started quickly}","lastModifiedDate":"2020-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Ensure that you have Java 11 or above installed.","lastModifiedDate":"2020-05-24"},{"lineNumber":31,"author":{"gitId":"huien77"},"content":"2. Down the latest version of `Duke` from [here](http://link.to/duke).","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"huien77"},"content":"## Terminology","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":38,"author":{"gitId":"huien77"},"content":"Below are the commands that the app supports.","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"huien77"},"content":"Each section includes the function of the command and the command format.","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"huien77"},"content":"### Ask for Help: `help`","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"huien77"},"content":"### List all Goals: `list`","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"huien77"},"content":"### Set a Goal: `set`","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"huien77"},"content":"### Remove a Goal: `remove`","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":49,"author":{"gitId":"huien77"},"content":"### Add a Habit: `add`","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":51,"author":{"gitId":"huien77"},"content":"### Complete Habit: `done`","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":53,"author":{"gitId":"huien77"},"content":"### Delete Habit: `delete`","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":55,"author":{"gitId":"huien77"},"content":"### View Habit: `view`","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":57,"author":{"gitId":"huien77"},"content":"### Exit Program: `bye`","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":59,"author":{"gitId":"huien77"},"content":"## About Loading and Saving Data","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another computer? ","lastModifiedDate":"2020-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"**A**: {your answer here}","lastModifiedDate":"2020-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"## Command Summary","lastModifiedDate":"2020-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"{Give a \u0027cheat sheet\u0027 of commands here}","lastModifiedDate":"2020-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-24"}],"authorContributionMap":{"huien77":42,"-":28}},{"path":"docs/team/kahheng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"# Kah Heng - Project Portfolio Page","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"## Overview","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"### Summary of Contributions","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"kahhe":6}},{"path":"src/main/java/happybit/HappyBit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.Command;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"huien77"},"content":"import happybit.exception.HaBitStorageException;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"import happybit.parser.Parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"import happybit.ui.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"public class HappyBit {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    private Storage storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    private GoalList goalList;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    private Ui ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"     * Duke class constructor that also loads in tasks data from an external save file.","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"     * @param filePath File path of the external save file","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"    public HappyBit(String filePath, String fileDir) {","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"        storage \u003d new Storage(filePath, fileDir);","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"        goalList \u003d new GoalList();","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"huien77"},"content":"        loadData();","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"     * Main method of HappyBit.","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"     * Creates a HappyBit class and runs it.","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"     * @param args Not applicable.","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"        new HappyBit(\"data/habits.txt\", \"data\").run();","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"    /*","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"     * The following are private methods that are used to implement SLAP for the","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"     * above public methods. These methods are positioned at the bottom to better","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"     * visualise the actual methods that can be called from outside this class.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"     * Loads in data from an external storage.","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"    private void loadData() {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"            goalList \u003d storage.load();","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"huien77"},"content":"        } catch (HaBitStorageException e) {","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"huien77"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"     * Executes the main body of HappyBit.","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"    private void run() {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"kahhe"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"        handleUserInput();","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"kahhe"},"content":"        ui.showGoodbye();","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"     * Takes in the user input and performs the relevant commands.","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"DJ-Tan"},"content":"        String userInput;","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"DJ-Tan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"        while (!isExit) {","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"            try {","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"                Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"DJ-Tan"},"content":"                command.runCommand(goalList, ui, storage);","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"            } catch (HaBitParserException | HaBitCommandException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"STAung07"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"STAung07":2,"huien77":6,"DJ-Tan":79,"kahhe":2}},{"path":"src/main/java/happybit/command/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"flerovious"},"content":"package happybit.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import happybit.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand(GoalList goalList, Ui ui, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"        // do nothing","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"flerovious"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"flerovious":6,"DJ-Tan":8}},{"path":"src/main/java/happybit/command/AddGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.command;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.Goal;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import happybit.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"public class AddGoalCommand extends AddCommand {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    protected Goal goal;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    public AddGoalCommand(Goal goal) {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"        this.goal \u003d goal;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand(GoalList goalList, Ui ui, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"flerovious"},"content":"        goalList.addGoal(goal, ui);","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"flerovious":1,"DJ-Tan":21}},{"path":"src/main/java/happybit/command/AddHabitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.command;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.habit.Habit;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import happybit.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"public class AddHabitCommand extends AddCommand {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    protected Habit habit;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    protected int goalIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    public AddHabitCommand(Habit habit, int goalIndex) {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"        this.habit \u003d habit;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"        this.goalIndex \u003d goalIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand(GoalList goalList, Ui ui, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"flerovious"},"content":"        goalList.addHabitFromGoal(habit, goalIndex, ui);","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"flerovious":1,"DJ-Tan":23}},{"path":"src/main/java/happybit/command/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.command;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import happybit.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public abstract class Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"     * Abstract method that runs user input commands.","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalList List that stores all the tasks.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * @param ui       User interface of duke.","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage  Reference to the file where data is stored.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If exception is thrown by Command subclasses.","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    public abstract void runCommand(GoalList goalList, Ui ui, Storage storage) throws HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the exit command is being called.","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"     * @return True if Command subclass is exitCommand.","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"     *         False if other Command subclasses.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"        return false;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"DJ-Tan":30}},{"path":"src/main/java/happybit/command/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package happybit.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import happybit.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand(GoalList goalList, Ui ui, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"        // Do nothing","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"DJ-Tan":6,"kahhe":8}},{"path":"src/main/java/happybit/command/DeleteGoalCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.command;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import happybit.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class DeleteGoalCommand extends DeleteCommand {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    protected int goalIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    public DeleteGoalCommand(int goalIndex) {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"        this.goalIndex \u003d goalIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand(GoalList goalList, Ui ui, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"        goalList.deleteGoal(goalIndex, ui);","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"STAung07":1,"DJ-Tan":20}},{"path":"src/main/java/happybit/command/DeleteHabitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.command;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import happybit.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class DeleteHabitCommand extends DeleteCommand {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    protected int goalIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    protected int habitIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    public DeleteHabitCommand(int goalIndex, int habitIndex) {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"        this.goalIndex \u003d goalIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"        this.habitIndex \u003d habitIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand(GoalList goalList, Ui ui, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"        goalList.deleteHabitFromGoal(goalIndex, habitIndex, ui);","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"STAung07":1,"DJ-Tan":22}},{"path":"src/main/java/happybit/command/DoneHabitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.command;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import happybit.ui.Ui;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"public class DoneHabitCommand extends Command {","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"    protected int goalIndex;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"    protected int habitIndex;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"    public DoneHabitCommand(int goalIndex, int habitIndex) {","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"        this.goalIndex \u003d goalIndex;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"        this.habitIndex \u003d habitIndex;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"    public void runCommand(GoalList goalList, Ui ui, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"        goalList.doneHabitFromGoal(goalIndex, habitIndex, ui);","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"    public int getGoalIndex() {","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"        return goalIndex;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"    public int getHabitIndex() {","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"        return habitIndex;","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"STAung07":31}},{"path":"src/main/java/happybit/command/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package happybit.command;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"import happybit.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"    public void runCommand(GoalList goalList, Ui ui, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"        isExit();","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"        // do nothing","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kahhe"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kahhe"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kahhe"},"content":"        return true;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"DJ-Tan":1,"kahhe":20}},{"path":"src/main/java/happybit/command/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import happybit.ui.Ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand(GoalList goalList, Ui ui, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"        ui.printCommandList();","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"STAung07":7,"DJ-Tan":8}},{"path":"src/main/java/happybit/command/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.command;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import happybit.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand(GoalList goalList, Ui ui, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"        // Do nothing","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"DJ-Tan":13}},{"path":"src/main/java/happybit/command/ListGoalsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import happybit.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class ListGoalsCommand extends ListCommand {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand(GoalList goalList, Ui ui, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"        goalList.listGoals(ui);","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"STAung07":7,"DJ-Tan":8}},{"path":"src/main/java/happybit/command/ListHabitsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.command;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import happybit.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class ListHabitsCommand extends ListCommand {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    protected int goalIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    public ListHabitsCommand(int goalIndex) {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"        this.goalIndex \u003d goalIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand(GoalList goalList, Ui ui, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"        goalList.listHabitsFromGoal(goalIndex, ui);","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"    public int getGoalIndex() {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"        return goalIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"STAung07":3,"DJ-Tan":21}},{"path":"src/main/java/happybit/command/ViewProgressCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.command;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import happybit.ui.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class ViewProgressCommand extends Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand(GoalList goalList, Ui ui, Storage storage) throws HaBitCommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"        // To be implemented","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"STAung07":7,"DJ-Tan":7}},{"path":"src/main/java/happybit/exception/HaBitCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.exception;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public class HaBitCommandException extends HappyBitException {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"    public HaBitCommandException(String message) {","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"        super(message);","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"DJ-Tan":9}},{"path":"src/main/java/happybit/exception/HaBitParserException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.exception;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public class HaBitParserException extends HappyBitException {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"    public HaBitParserException(String message) {","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"        super(message);","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"DJ-Tan":9}},{"path":"src/main/java/happybit/exception/HaBitStorageException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huien77"},"content":"package happybit.exception;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"huien77"},"content":"public class HaBitStorageException extends HappyBitException {","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"huien77"},"content":"    public HaBitStorageException(String message) {","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"huien77"},"content":"        super(message);","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"huien77"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"huien77":8}},{"path":"src/main/java/happybit/exception/HappyBitException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.exception;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public class HappyBitException extends Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"    public HappyBitException(String message) {","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"        super(message);","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"DJ-Tan":9}},{"path":"src/main/java/happybit/goal/Goal.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.goal;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.habit.Habit;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"huien77"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"public class Goal {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    protected String goalName;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    protected GoalType goalType;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    protected Date startDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    protected Date endDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"    protected ArrayList\u003cHabit\u003e habitList;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"     * Constructor for Goal class with goalType and startDate defined.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalName  String description of the goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalType  Type/Category of goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"     * @param startDate Date to start tracking of the goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"     * @param endDate   Date to end tracking of the goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"    public Goal(String goalName, GoalType goalType, Date startDate, Date endDate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"        this.goalName \u003d goalName;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"        this.goalType \u003d goalType;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"        this.habitList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"     * Setter for name of goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"     * Used to edit the name of the goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalName Name of goal to be updated.","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"    public void setGoalName(String goalName) {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"        this.goalName \u003d goalName;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the description of the goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"     * @return String containing goal name and type.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"    public String getDescription() {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"STAung07"},"content":"        return getGoalTypeCharacter() + \" \" + goalName;","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the habitList.","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"     * @return ArrayList of habits.","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"    public ArrayList\u003cHabit\u003e getHabitList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"        return habitList;","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"     * Adds a habit to the goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"     * @param habit Habit to be added to the goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"    public void addHabit(Habit habit) {","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"        habitList.add(habit);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"     * Removes a habit from the goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"     * @param habitIndex Index corresponding to habit in the habitList.","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"DJ-Tan"},"content":"    public void removeHabit(int habitIndex) {","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"        habitList.remove(habitIndex);","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"STAung07"},"content":"     * Sets a habit at user specified index as done.","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"STAung07"},"content":"     * @param habitIndex Index corresponding to habit in the habitList","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"STAung07"},"content":"    public void doneHabit(int habitIndex) {","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"STAung07"},"content":"        Habit habit \u003d habitList.get(habitIndex);","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"STAung07"},"content":"        habit.setCompleted();","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the number of habits in a goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"DJ-Tan"},"content":"     * @return Integer number of habits associated with the goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"DJ-Tan"},"content":"    public int numberOfHabits() {","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"DJ-Tan"},"content":"        return habitList.size();","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"huien77"},"content":"    public String getStartDate() {","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"huien77"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"ddMMyyyy\");","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"huien77"},"content":"        return dateFormat.format(this.startDate);","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"huien77"},"content":"    public String getEndDate() {","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"huien77"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"ddMMyyyy\");","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"huien77"},"content":"        return dateFormat.format(this.endDate);","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"DJ-Tan"},"content":"    /*","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"DJ-Tan"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"DJ-Tan"},"content":"     * The following are private methods that are used to implement SLAP for the","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"DJ-Tan"},"content":"     * above public methods. These methods are positioned at the bottom to better","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"DJ-Tan"},"content":"     * visualise the actual methods that can be called from outside this class.","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"DJ-Tan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the corresponding 2-character code for the goalType.","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"DJ-Tan"},"content":"     * @return String of the goalType 2-character code.","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"huien77"},"content":"    public String getGoalTypeCharacter() {","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"DJ-Tan"},"content":"        switch (this.goalType) {","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"DJ-Tan"},"content":"        case SLEEP:","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"DJ-Tan"},"content":"            return \"[SL]\";","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"DJ-Tan"},"content":"        case FOOD:","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"DJ-Tan"},"content":"            return \"[FD]\";","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"DJ-Tan"},"content":"        case EXERCISE:","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"DJ-Tan"},"content":"            return \"[EX]\";","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"DJ-Tan"},"content":"        case STUDY:","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"DJ-Tan"},"content":"            return \"[SD]\";","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"DJ-Tan"},"content":"        default:","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"DJ-Tan"},"content":"            return \"[DF]\";","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"STAung07":11,"huien77":14,"DJ-Tan":112}},{"path":"src/main/java/happybit/goal/GoalList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.goal;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitCommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.habit.Habit;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"import happybit.ui.Ui;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"public class GoalList {","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_EMPTY_GOAL_LIST \u003d \"You have no set any goals for yourself yet, would\"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"            + \" you like to set some for yourself?\";","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_INVALID_GOAL_INDEX \u003d \"There is no goal at that index.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_EMPTY_HABIT_LIST \u003d \"There are no habits listed under this goal, add some!\";","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_INVALID_HABIT_INDEX \u003d \"There are no habits at this index in your goal.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    protected ArrayList\u003cGoal\u003e goalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"    public GoalList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"        this.goalList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"    public int getListLength() {","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"        return goalList.size();","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"     * Adds a goal to the goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"     * @param goal Goal to be added.","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"    public void addGoal(Goal goal) {","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"        goalList.add(goal);","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"flerovious"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"flerovious"},"content":"     * Adds a goal to the goalList.","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"flerovious"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"flerovious"},"content":"     * @param goal Goal to be added.","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"flerovious"},"content":"     * @param ui User Interface class for printing added goal.","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"flerovious"},"content":"    public void addGoal(Goal goal, Ui ui) {","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"flerovious"},"content":"        goalList.add(goal);","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"flerovious"},"content":"        ui.printAddedGoal(goal.getDescription());","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"flerovious"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"flerovious"},"content":"     * Adds a habit that is linked to a goal.","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"flerovious"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"flerovious"},"content":"     * @param habit     Habit to be linked to a goal.","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"flerovious"},"content":"     * @param goalIndex Integer index of goal in goalList.","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"flerovious"},"content":"     * @param ui User Interface class for printing added habit to goal in goalList.","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"flerovious"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"flerovious"},"content":"    public void addHabitFromGoal(Habit habit, int goalIndex, Ui ui) {","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"flerovious"},"content":"        goalList.get(goalIndex).addHabit(habit);","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"flerovious"},"content":"        ui.printAddedHabit(habit.getHabitName(), goalList.get(goalIndex).getDescription());","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"     * Adds a habit that is linked to a goal.","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"     * @param habit     Habit to be linked to a goal.","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalIndex Integer index of goal in goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"    public void addHabitFromGoal(Habit habit, int goalIndex) {","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"        goalList.get(goalIndex).addHabit(habit);","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"     * Deletes a goal from the goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalIndex Integer index of the goal to be deleted from goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"STAung07"},"content":"     * @param ui User Interface class for printing deleted goal to output.","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If the goalIndex is not within the index range of the goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"STAung07"},"content":"    public void deleteGoal(int goalIndex, Ui ui) throws HaBitCommandException {","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"        Goal goal \u003d getGoal(goalIndex);","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"        goalList.remove(goal);","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"STAung07"},"content":"        ui.printRemovedGoal(goal.getDescription());","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"     * Deletes a habit that is linked to a goal.","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalIndex  Integer index of goal in goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"DJ-Tan"},"content":"     * @param habitIndex Integer index of habit to be deleted in goal.","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"STAung07"},"content":"     * @param ui User Interface class for printing deleted habit from goal to output.","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If the goalIndex is not within the index range of the goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"DJ-Tan"},"content":"     *                               If the habitIndex is not within the index range of the habitList.","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"STAung07"},"content":"    public void deleteHabitFromGoal(int goalIndex, int habitIndex, Ui ui) throws HaBitCommandException {","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"STAung07"},"content":"        Goal goal;","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"STAung07"},"content":"        Habit habit;","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"STAung07"},"content":"            goal \u003d getGoal(goalIndex);","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"STAung07"},"content":"            ArrayList\u003cHabit\u003e habits \u003d goal.getHabitList();","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"STAung07"},"content":"            habit \u003d habits.get(habitIndex); // index out of bounds exception thrown here if invalid","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"STAung07"},"content":"            goal.removeHabit(habitIndex);","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"DJ-Tan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"STAung07"},"content":"            throw new HaBitCommandException(ERROR_INVALID_HABIT_INDEX);","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"STAung07"},"content":"        ui.printRemovedHabit(goal.getDescription(), habit.getHabitName());","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"STAung07"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"STAung07"},"content":"     * Marks a habit under a goal as done","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"STAung07"},"content":"     * Expand upon in v2.0 to include date and description","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"STAung07"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"STAung07"},"content":"     * @param goalIndex Integer index of goal in goal list","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"STAung07"},"content":"     * @param habitIndex Integer index of habit to be marked as done in goal","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"STAung07"},"content":"     * @param ui User Interface class for printing Habit marked as done to output.","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"STAung07"},"content":"     * @throws HaBitCommandException If goalIndex is not within index range of goalList.","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"STAung07"},"content":"     *                               if habitIndex is not within index range of the habitList","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"STAung07"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"STAung07"},"content":"    public void doneHabitFromGoal(int goalIndex, int habitIndex, Ui ui) throws HaBitCommandException {","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"STAung07"},"content":"        Goal goal;","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"STAung07"},"content":"        Habit habit;","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"STAung07"},"content":"            goal \u003d getGoal(goalIndex);","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"STAung07"},"content":"            ArrayList\u003cHabit\u003e habits \u003d goal.getHabitList();","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"STAung07"},"content":"            habit \u003d habits.get(habitIndex); // index out of bounds exception thrown here if invalid","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"STAung07"},"content":"            goal.doneHabit(habitIndex);","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"STAung07"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"STAung07"},"content":"            throw new HaBitCommandException(ERROR_INVALID_HABIT_INDEX);","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"STAung07"},"content":"        ui.printDoneHabit(goal.getDescription(), habit.getHabitName());","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"DJ-Tan"},"content":"     * List all the goals in the goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"DJ-Tan"},"content":"     * @param ui User Interface class for printing goalList to output.","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If there are no items in the goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"DJ-Tan"},"content":"    public void listGoals(Ui ui) throws HaBitCommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"DJ-Tan"},"content":"        if (goalList.isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":136,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitCommandException(ERROR_EMPTY_GOAL_LIST);","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"STAung07"},"content":"        ui.printGoalList(goalList, getListLength());","lastModifiedDate":"2021-10-14"},{"lineNumber":139,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"DJ-Tan"},"content":"     * List all the habits of a goal.","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalIndex Integer index of goal in goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"DJ-Tan"},"content":"     * @param ui        User Interface class for printing habitList to output.","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If the goalIndex is not within the range of the goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"DJ-Tan"},"content":"     *                            If there are no items in the habitList.","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"DJ-Tan"},"content":"    public void listHabitsFromGoal(int goalIndex, Ui ui) throws HaBitCommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"DJ-Tan"},"content":"        Goal goal \u003d getGoal(goalIndex);","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"DJ-Tan"},"content":"        ArrayList\u003cHabit\u003e habitList \u003d goal.getHabitList();","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"STAung07"},"content":"        int numOfHabits \u003d goal.numberOfHabits();","lastModifiedDate":"2021-10-14"},{"lineNumber":153,"author":{"gitId":"DJ-Tan"},"content":"        if (habitList.isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"STAung07"},"content":"            throw new HaBitCommandException(ERROR_EMPTY_HABIT_LIST);","lastModifiedDate":"2021-10-14"},{"lineNumber":155,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"STAung07"},"content":"        ui.printHabitList(goal.getDescription(), habitList, numOfHabits);","lastModifiedDate":"2021-10-14"},{"lineNumber":157,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"DJ-Tan"},"content":"    /*","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"DJ-Tan"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":161,"author":{"gitId":"DJ-Tan"},"content":"     * The following are private methods that are used to implement SLAP for the","lastModifiedDate":"2021-10-13"},{"lineNumber":162,"author":{"gitId":"DJ-Tan"},"content":"     * above public methods. These methods are positioned at the bottom to better","lastModifiedDate":"2021-10-13"},{"lineNumber":163,"author":{"gitId":"DJ-Tan"},"content":"     * visualise the actual methods that can be called from outside this class.","lastModifiedDate":"2021-10-13"},{"lineNumber":164,"author":{"gitId":"DJ-Tan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":165,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":166,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":167,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":168,"author":{"gitId":"DJ-Tan"},"content":"     * Get a goal from the goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":169,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":170,"author":{"gitId":"DJ-Tan"},"content":"     * @param goalIndex Integer index of goal in goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":171,"author":{"gitId":"DJ-Tan"},"content":"     * @return Goal corresponding to the index provided.","lastModifiedDate":"2021-10-13"},{"lineNumber":172,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitCommandException If the goalIndex is not within the range of the goalList.","lastModifiedDate":"2021-10-13"},{"lineNumber":173,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":174,"author":{"gitId":"DJ-Tan"},"content":"    private Goal getGoal(int goalIndex) throws HaBitCommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":175,"author":{"gitId":"DJ-Tan"},"content":"        Goal goal;","lastModifiedDate":"2021-10-13"},{"lineNumber":176,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":177,"author":{"gitId":"DJ-Tan"},"content":"            goal \u003d goalList.get(goalIndex);","lastModifiedDate":"2021-10-13"},{"lineNumber":178,"author":{"gitId":"DJ-Tan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":179,"author":{"gitId":"STAung07"},"content":"            throw new HaBitCommandException(ERROR_INVALID_GOAL_INDEX);","lastModifiedDate":"2021-10-14"},{"lineNumber":180,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"DJ-Tan"},"content":"        return goal;","lastModifiedDate":"2021-10-13"},{"lineNumber":182,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"STAung07":73,"flerovious":23,"DJ-Tan":88}},{"path":"src/main/java/happybit/goal/GoalType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.goal;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public enum GoalType {","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"    DEFAULT, SLEEP, FOOD, EXERCISE, STUDY","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"DJ-Tan":5}},{"path":"src/main/java/happybit/habit/Habit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.habit;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public class Habit {","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"    protected String habitName;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"     * Constructor for Habit class.","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"     * @param habitName Name of habit linked to a goal.","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    public Habit(String habitName) {","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"        this.habitName \u003d habitName;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for habitName.","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"     * @return String containing name of habit.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"    public String getHabitName() {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"        return habitName;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for isDone.","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"     * @return Boolean value of whether the habit has been completed.","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"    public boolean getDone() {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"        return isDone;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"     * Update the habit as completed.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"    public void setCompleted() {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"DJ-Tan":42}},{"path":"src/main/java/happybit/logger/HaBitLogger.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.logger;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import java.util.logging.LogManager;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class HaBitLogger {","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    private final Logger logger \u003d Logger.getLogger(HaBitLogger.class.getName());","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    // Testing logger methods for now, will implement in v2.0","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    public void main(String[] args) {","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"        LogManager.getLogManager().reset();","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"        logger.setLevel(Level.ALL);","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"        ConsoleHandler ch \u003d new ConsoleHandler();","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"        ch.setLevel(Level.SEVERE);","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"        logger.addHandler(ch);","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"        logger.info(\"Testing\");","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"        logger.warning(\"ERROR\");","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"        logger.log(Level.SEVERE, \"System down\");","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"DJ-Tan":26}},{"path":"src/main/java/happybit/parser/AddParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.AddGoalCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.AddHabitCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.Command;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.Goal;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalType;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"import happybit.habit.Habit;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"import java.time.Instant;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"public class AddParser {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"    public static Command parseAddGoalCommand(String commandInstruction) throws HaBitParserException {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"        checkNoDescription(commandInstruction);","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"        GoalType goalType \u003d getTypeFlag(commandInstruction);","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"        Date[] dates \u003d getDates(commandInstruction);","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"        Date startDate \u003d dates[0];","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"        Date endDate \u003d dates[1];","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"        String goalName \u003d getGoalDescription(commandInstruction);","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"        Goal goal \u003d new Goal(goalName, goalType, startDate, endDate);","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"        return new AddGoalCommand(goal);","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"    public static Command parseAddHabitCommand(String commandInstruction) throws HaBitParserException {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"        checkNoDescription(commandInstruction);","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"        int goalIndex \u003d getGoalIndex(commandInstruction);","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"        String habitName \u003d getHabitDescription(commandInstruction);","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"        Habit habit \u003d new Habit(habitName);","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"        return new AddHabitCommand(habit, goalIndex);","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"    /*","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"     * The following are private methods that are used to implement SLAP for the","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"     * above public methods. These methods are positioned at the bottom to better","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"     * visualise the actual methods that can be called from outside this class.","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the input is null.","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"     * @param input String of the user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If the user input is null (blank).","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"    private static void checkNoDescription(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"        if (input \u003d\u003d null) {","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitParserException(\"Command cannot be called without parameters.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"    // Section 1: Add Goal Methods","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"    // Section 1.1: Add Goal - GoalType Methods","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"     * Checks for flag errors before returning the GoalType based on user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"     * @param input String of the user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"     * @return GoalType corresponding to flag in user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If there are syntax errors in the flag provided.","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"    private static GoalType getTypeFlag(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"        checkMultipleFlags(input);","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"        checkImproperFlags(input);","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"        return checkTypeFlag(input);","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"     * Checks for flag in user input and returns the GoalType.","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"     * @param input String of the user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"     * @return GoalType corresponding to flag in user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"DJ-Tan"},"content":"    private static GoalType checkTypeFlag(String input) {","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"        if (input.contains(\" -sl \")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"            return GoalType.SLEEP;","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"        } else if (input.contains(\" -fd \")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"DJ-Tan"},"content":"            return GoalType.FOOD;","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"DJ-Tan"},"content":"        } else if (input.contains(\" -ex \")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"DJ-Tan"},"content":"            return GoalType.EXERCISE;","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"DJ-Tan"},"content":"        } else if (input.contains(\" -sd \")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"DJ-Tan"},"content":"            return GoalType.STUDY;","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"DJ-Tan"},"content":"        return GoalType.DEFAULT;","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if there are multiple flags in the user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"DJ-Tan"},"content":"     * @param input String of the user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If there are multiple flags within the user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"DJ-Tan"},"content":"    private static void checkMultipleFlags(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"DJ-Tan"},"content":"        String[] flagArray \u003d {\"-sl\", \"-fd\", \"-ex\", \"-sd\", \"-df\"};","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"DJ-Tan"},"content":"        if (countInstancesInString(input, flagArray) \u003e 1) {","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitParserException(\"Multiple goal flags detected.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"DJ-Tan"},"content":"     * Checks the syntax of flags used in the user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"DJ-Tan"},"content":"     * @param input String of the user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If there are errors in the flag syntax used.","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"DJ-Tan"},"content":"    private static void checkImproperFlags(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"DJ-Tan"},"content":"        String[] improperFlagArray \u003d {\" -sl\", \" -fd\", \" -ex\", \" -sd\", \" -df\",","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"DJ-Tan"},"content":"            \"-sl \", \"-fd \", \"-ex \", \"-sd \", \"-df \",","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"DJ-Tan"},"content":"            \"-sl\", \"-fd\", \"-ex\", \"-sd\", \"-df\"};","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"DJ-Tan"},"content":"        if (countInstancesInString(input, improperFlagArray) !\u003d 0) {","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitParserException(\"Flags should be defined with a space before and after.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"DJ-Tan"},"content":"     * Counts the number of elements in the String array that appears in a given String.","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"DJ-Tan"},"content":"     * @param input         String to be checked.","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"DJ-Tan"},"content":"     * @param instanceArray String array containing the String elements.","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"DJ-Tan"},"content":"     * @return Integer number of String elements that appeared in the given String.","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"DJ-Tan"},"content":"    private static int countInstancesInString(String input, String[] instanceArray) {","lastModifiedDate":"2021-10-14"},{"lineNumber":130,"author":{"gitId":"DJ-Tan"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-14"},{"lineNumber":131,"author":{"gitId":"DJ-Tan"},"content":"        for (String s : instanceArray) {","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"DJ-Tan"},"content":"            if (input.contains(s)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"DJ-Tan"},"content":"                count++;","lastModifiedDate":"2021-10-14"},{"lineNumber":134,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":136,"author":{"gitId":"DJ-Tan"},"content":"        return count;","lastModifiedDate":"2021-10-14"},{"lineNumber":137,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":138,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":139,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":140,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if a given string has any flags.","lastModifiedDate":"2021-10-14"},{"lineNumber":141,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":142,"author":{"gitId":"DJ-Tan"},"content":"     * @param input         String to be checked.","lastModifiedDate":"2021-10-14"},{"lineNumber":143,"author":{"gitId":"DJ-Tan"},"content":"     * @return Boolean value of whether any elements in the String array exists within the checked String.","lastModifiedDate":"2021-10-14"},{"lineNumber":144,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":145,"author":{"gitId":"DJ-Tan"},"content":"    private static boolean doesFlagExist(String input) {","lastModifiedDate":"2021-10-14"},{"lineNumber":146,"author":{"gitId":"DJ-Tan"},"content":"        String[] flagArray \u003d {\"-sl\", \"-fd\", \"-ex\", \"-sd\", \"-df\"};","lastModifiedDate":"2021-10-14"},{"lineNumber":147,"author":{"gitId":"DJ-Tan"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-14"},{"lineNumber":148,"author":{"gitId":"DJ-Tan"},"content":"        for (String s : flagArray) {","lastModifiedDate":"2021-10-14"},{"lineNumber":149,"author":{"gitId":"DJ-Tan"},"content":"            if (input.contains(s)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":150,"author":{"gitId":"DJ-Tan"},"content":"                count++;","lastModifiedDate":"2021-10-14"},{"lineNumber":151,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":152,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":153,"author":{"gitId":"DJ-Tan"},"content":"        return count !\u003d 0;","lastModifiedDate":"2021-10-14"},{"lineNumber":154,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":155,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":156,"author":{"gitId":"DJ-Tan"},"content":"    // Section 1.2: Add Goal - Date Methods","lastModifiedDate":"2021-10-14"},{"lineNumber":157,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":158,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":159,"author":{"gitId":"DJ-Tan"},"content":"     * Checks for date errors before returning the dates based on user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":160,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":161,"author":{"gitId":"DJ-Tan"},"content":"     * @param input String of the user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":162,"author":{"gitId":"DJ-Tan"},"content":"     * @return Date[] containing 2 dates: start and end date.","lastModifiedDate":"2021-10-14"},{"lineNumber":163,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If there are errors in parsing the date.","lastModifiedDate":"2021-10-14"},{"lineNumber":164,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":165,"author":{"gitId":"DJ-Tan"},"content":"    private static Date[] getDates(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-14"},{"lineNumber":166,"author":{"gitId":"DJ-Tan"},"content":"        Date[] dates \u003d new Date[2];","lastModifiedDate":"2021-10-14"},{"lineNumber":167,"author":{"gitId":"DJ-Tan"},"content":"        if (numberOfDates(input) \u003d\u003d 1) {","lastModifiedDate":"2021-10-14"},{"lineNumber":168,"author":{"gitId":"DJ-Tan"},"content":"            dates \u003d getDatesIfOneDate(input);","lastModifiedDate":"2021-10-14"},{"lineNumber":169,"author":{"gitId":"DJ-Tan"},"content":"        } else if (numberOfDates(input) \u003d\u003d 2) {","lastModifiedDate":"2021-10-14"},{"lineNumber":170,"author":{"gitId":"DJ-Tan"},"content":"            dates \u003d getDatesIfTwoDates(input);","lastModifiedDate":"2021-10-14"},{"lineNumber":171,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":172,"author":{"gitId":"DJ-Tan"},"content":"        checkDateNotBeforeToday(dates[0]);","lastModifiedDate":"2021-10-14"},{"lineNumber":173,"author":{"gitId":"DJ-Tan"},"content":"        checkDateNotBeforeToday(dates[1]);","lastModifiedDate":"2021-10-14"},{"lineNumber":174,"author":{"gitId":"DJ-Tan"},"content":"        checkStartDateBeforeOrEqualEndDate(dates[0], dates[1]);","lastModifiedDate":"2021-10-14"},{"lineNumber":175,"author":{"gitId":"DJ-Tan"},"content":"        assert dates[0].compareTo(dates[1]) \u003c 0;","lastModifiedDate":"2021-10-14"},{"lineNumber":176,"author":{"gitId":"DJ-Tan"},"content":"        return dates;","lastModifiedDate":"2021-10-14"},{"lineNumber":177,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":178,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":179,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":180,"author":{"gitId":"DJ-Tan"},"content":"     * Find the number of dates given in the input.","lastModifiedDate":"2021-10-14"},{"lineNumber":181,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":182,"author":{"gitId":"DJ-Tan"},"content":"     * @param input String of the user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":183,"author":{"gitId":"DJ-Tan"},"content":"     * @return Integer number of dates given.","lastModifiedDate":"2021-10-14"},{"lineNumber":184,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If number of dates \u003c 1 or \u003e 2.","lastModifiedDate":"2021-10-14"},{"lineNumber":185,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":186,"author":{"gitId":"DJ-Tan"},"content":"    private static int numberOfDates(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-14"},{"lineNumber":187,"author":{"gitId":"DJ-Tan"},"content":"        if (input.matches(\"(.*) /(.*) /(.*) /(.*)\")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":188,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitParserException(\"Too many dates provided.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":189,"author":{"gitId":"DJ-Tan"},"content":"        } else if (input.matches(\"(.*) /(.*) /(.*)\")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":190,"author":{"gitId":"DJ-Tan"},"content":"            return 2;","lastModifiedDate":"2021-10-14"},{"lineNumber":191,"author":{"gitId":"DJ-Tan"},"content":"        } else if (input.matches(\"(.*) /(.*)\")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":192,"author":{"gitId":"DJ-Tan"},"content":"            return 1;","lastModifiedDate":"2021-10-14"},{"lineNumber":193,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":194,"author":{"gitId":"DJ-Tan"},"content":"        throw new HaBitParserException(\"No dates provided.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":195,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":196,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":197,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":198,"author":{"gitId":"DJ-Tan"},"content":"     * Obtains the date from user input if only one date is specified.","lastModifiedDate":"2021-10-14"},{"lineNumber":199,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":200,"author":{"gitId":"DJ-Tan"},"content":"     * @param input String of the user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":201,"author":{"gitId":"DJ-Tan"},"content":"     * @return Date[] containing 2 dates: start and end date.","lastModifiedDate":"2021-10-14"},{"lineNumber":202,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If there are errors in parsing the date.","lastModifiedDate":"2021-10-14"},{"lineNumber":203,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":204,"author":{"gitId":"DJ-Tan"},"content":"    private static Date[] getDatesIfOneDate(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-14"},{"lineNumber":205,"author":{"gitId":"DJ-Tan"},"content":"        Date[] dates \u003d new Date[2];","lastModifiedDate":"2021-10-14"},{"lineNumber":206,"author":{"gitId":"DJ-Tan"},"content":"        dates[0] \u003d new Date();","lastModifiedDate":"2021-10-14"},{"lineNumber":207,"author":{"gitId":"DJ-Tan"},"content":"        dates[1] \u003d getFirstDate(input);","lastModifiedDate":"2021-10-14"},{"lineNumber":208,"author":{"gitId":"DJ-Tan"},"content":"        return dates;","lastModifiedDate":"2021-10-14"},{"lineNumber":209,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":210,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":211,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":212,"author":{"gitId":"DJ-Tan"},"content":"     * Obtains the date from user input if only one date is specified.","lastModifiedDate":"2021-10-14"},{"lineNumber":213,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":214,"author":{"gitId":"DJ-Tan"},"content":"     * @param input String of the user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":215,"author":{"gitId":"DJ-Tan"},"content":"     * @return Date[] containing 2 dates: start and end date.","lastModifiedDate":"2021-10-14"},{"lineNumber":216,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If there are errors in parsing the date.","lastModifiedDate":"2021-10-14"},{"lineNumber":217,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":218,"author":{"gitId":"DJ-Tan"},"content":"    private static Date[] getDatesIfTwoDates(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-14"},{"lineNumber":219,"author":{"gitId":"DJ-Tan"},"content":"        Date[] dates \u003d new Date[2];","lastModifiedDate":"2021-10-14"},{"lineNumber":220,"author":{"gitId":"DJ-Tan"},"content":"        dates[0] \u003d getFirstDate(input);","lastModifiedDate":"2021-10-14"},{"lineNumber":221,"author":{"gitId":"DJ-Tan"},"content":"        dates[1] \u003d getSecondDate(input);","lastModifiedDate":"2021-10-14"},{"lineNumber":222,"author":{"gitId":"DJ-Tan"},"content":"        return dates;","lastModifiedDate":"2021-10-14"},{"lineNumber":223,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":224,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":225,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":226,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the first date specified in the user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":227,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":228,"author":{"gitId":"DJ-Tan"},"content":"     * @param input String of the user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":229,"author":{"gitId":"DJ-Tan"},"content":"     * @return Date which is the first date specified.","lastModifiedDate":"2021-10-14"},{"lineNumber":230,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If there are issues with the date formatting.","lastModifiedDate":"2021-10-14"},{"lineNumber":231,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":232,"author":{"gitId":"DJ-Tan"},"content":"    private static Date getFirstDate(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-14"},{"lineNumber":233,"author":{"gitId":"DJ-Tan"},"content":"        String strDate;","lastModifiedDate":"2021-10-14"},{"lineNumber":234,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":235,"author":{"gitId":"DJ-Tan"},"content":"            int firstDateStartIndex \u003d input.indexOf(\u0027/\u0027) + 1;","lastModifiedDate":"2021-10-14"},{"lineNumber":236,"author":{"gitId":"DJ-Tan"},"content":"            strDate \u003d input.substring(firstDateStartIndex, firstDateStartIndex + 8);","lastModifiedDate":"2021-10-14"},{"lineNumber":237,"author":{"gitId":"DJ-Tan"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-14"},{"lineNumber":238,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitParserException(\"Invalid date format. Use ddMMyyyy e.g, 28102021.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":239,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":240,"author":{"gitId":"DJ-Tan"},"content":"        return stringToDate(strDate);","lastModifiedDate":"2021-10-14"},{"lineNumber":241,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":242,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":243,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":244,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the second date specified in the user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":245,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":246,"author":{"gitId":"DJ-Tan"},"content":"     * @param input String of the user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":247,"author":{"gitId":"DJ-Tan"},"content":"     * @return Date which is the second date specified.","lastModifiedDate":"2021-10-14"},{"lineNumber":248,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If there are issues with the date formatting.","lastModifiedDate":"2021-10-14"},{"lineNumber":249,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":250,"author":{"gitId":"DJ-Tan"},"content":"    private static Date getSecondDate(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-14"},{"lineNumber":251,"author":{"gitId":"DJ-Tan"},"content":"        String strDate;","lastModifiedDate":"2021-10-14"},{"lineNumber":252,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":253,"author":{"gitId":"DJ-Tan"},"content":"            int secondDateStartIndex \u003d input.indexOf(\u0027/\u0027, input.indexOf(\u0027/\u0027) + 1) + 1;","lastModifiedDate":"2021-10-14"},{"lineNumber":254,"author":{"gitId":"DJ-Tan"},"content":"            strDate \u003d input.substring(secondDateStartIndex, secondDateStartIndex + 8);","lastModifiedDate":"2021-10-14"},{"lineNumber":255,"author":{"gitId":"DJ-Tan"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-14"},{"lineNumber":256,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitParserException(\"Invalid date format. Use ddMMyyyy e.g, 28102021.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":257,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":258,"author":{"gitId":"DJ-Tan"},"content":"        return stringToDate(strDate);","lastModifiedDate":"2021-10-14"},{"lineNumber":259,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":260,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":261,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":262,"author":{"gitId":"DJ-Tan"},"content":"     * Converts a String into a Date.","lastModifiedDate":"2021-10-14"},{"lineNumber":263,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":264,"author":{"gitId":"DJ-Tan"},"content":"     * @param strDate String representation of a start or end date.","lastModifiedDate":"2021-10-14"},{"lineNumber":265,"author":{"gitId":"DJ-Tan"},"content":"     * @return Date formatted from a string in the dd-MMM-yyyy format e.g, 07-Oct-2021.","lastModifiedDate":"2021-10-14"},{"lineNumber":266,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":267,"author":{"gitId":"DJ-Tan"},"content":"    private static Date stringToDate(String strDate) throws HaBitParserException {","lastModifiedDate":"2021-10-14"},{"lineNumber":268,"author":{"gitId":"DJ-Tan"},"content":"        Date date;","lastModifiedDate":"2021-10-14"},{"lineNumber":269,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":270,"author":{"gitId":"DJ-Tan"},"content":"            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"ddMMyyyy\");","lastModifiedDate":"2021-10-14"},{"lineNumber":271,"author":{"gitId":"DJ-Tan"},"content":"            date \u003d formatter.parse(strDate);","lastModifiedDate":"2021-10-14"},{"lineNumber":272,"author":{"gitId":"DJ-Tan"},"content":"        } catch (ParseException parseException) {","lastModifiedDate":"2021-10-14"},{"lineNumber":273,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitParserException(\"Invalid date format. Use ddMMyyyy e.g, 28102021.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":274,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":275,"author":{"gitId":"DJ-Tan"},"content":"        return date;","lastModifiedDate":"2021-10-14"},{"lineNumber":276,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":277,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":278,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":279,"author":{"gitId":"DJ-Tan"},"content":"     * Checks that the compared date does not fall before the current date.","lastModifiedDate":"2021-10-14"},{"lineNumber":280,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":281,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If the compared date falls before the current date.","lastModifiedDate":"2021-10-14"},{"lineNumber":282,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":283,"author":{"gitId":"DJ-Tan"},"content":"    private static void checkDateNotBeforeToday(Date compareDate) throws HaBitParserException {","lastModifiedDate":"2021-10-14"},{"lineNumber":284,"author":{"gitId":"DJ-Tan"},"content":"        Instant now \u003d Instant.now();","lastModifiedDate":"2021-10-14"},{"lineNumber":285,"author":{"gitId":"DJ-Tan"},"content":"        Instant anHourBeforeNow \u003d now.minus(1, ChronoUnit.HOURS);","lastModifiedDate":"2021-10-14"},{"lineNumber":286,"author":{"gitId":"DJ-Tan"},"content":"        Date currentDate \u003d Date.from(anHourBeforeNow);","lastModifiedDate":"2021-10-14"},{"lineNumber":287,"author":{"gitId":"DJ-Tan"},"content":"        if (compareDate.compareTo(currentDate) \u003c 0) {","lastModifiedDate":"2021-10-14"},{"lineNumber":288,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitParserException(\"Specified date has to come after today\u0027s date\");","lastModifiedDate":"2021-10-14"},{"lineNumber":289,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":290,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":291,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":292,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":293,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the start date is before or equal to the end date.","lastModifiedDate":"2021-10-14"},{"lineNumber":294,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":295,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If start date is after the end date.","lastModifiedDate":"2021-10-14"},{"lineNumber":296,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":297,"author":{"gitId":"DJ-Tan"},"content":"    private static void checkStartDateBeforeOrEqualEndDate(Date startDate, Date endDate) throws HaBitParserException {","lastModifiedDate":"2021-10-14"},{"lineNumber":298,"author":{"gitId":"DJ-Tan"},"content":"        if (startDate.compareTo(endDate) \u003e 0) {","lastModifiedDate":"2021-10-14"},{"lineNumber":299,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitParserException(\"Start Date has to come before End Date.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":300,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":301,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":302,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":303,"author":{"gitId":"DJ-Tan"},"content":"    // Section 1.3: Add Goal - Description Methods","lastModifiedDate":"2021-10-14"},{"lineNumber":304,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":305,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":306,"author":{"gitId":"DJ-Tan"},"content":"     * Checks for description errors before returning the description based on user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":307,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":308,"author":{"gitId":"DJ-Tan"},"content":"     * @param input String of the user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":309,"author":{"gitId":"DJ-Tan"},"content":"     * @return String containing description of the goal.","lastModifiedDate":"2021-10-14"},{"lineNumber":310,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":311,"author":{"gitId":"DJ-Tan"},"content":"    private static String getGoalDescription(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-14"},{"lineNumber":312,"author":{"gitId":"DJ-Tan"},"content":"        String description \u003d input.substring(0, findGoalDescriptionEndIndex(input)).strip();","lastModifiedDate":"2021-10-14"},{"lineNumber":313,"author":{"gitId":"DJ-Tan"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":314,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitParserException(\"Description cannot be empty.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":315,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":316,"author":{"gitId":"DJ-Tan"},"content":"        return description;","lastModifiedDate":"2021-10-14"},{"lineNumber":317,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":318,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":319,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":320,"author":{"gitId":"DJ-Tan"},"content":"     * Finds the index + 1 of the last character of the description.","lastModifiedDate":"2021-10-14"},{"lineNumber":321,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":322,"author":{"gitId":"DJ-Tan"},"content":"     * @param input String of the user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":323,"author":{"gitId":"DJ-Tan"},"content":"     * @return Integer of the description\u0027s last character + 1.","lastModifiedDate":"2021-10-14"},{"lineNumber":324,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":325,"author":{"gitId":"DJ-Tan"},"content":"    private static int findGoalDescriptionEndIndex(String input) {","lastModifiedDate":"2021-10-14"},{"lineNumber":326,"author":{"gitId":"DJ-Tan"},"content":"        int endIndex;","lastModifiedDate":"2021-10-14"},{"lineNumber":327,"author":{"gitId":"DJ-Tan"},"content":"        if (doesFlagExist(input)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":328,"author":{"gitId":"DJ-Tan"},"content":"            endIndex \u003d input.indexOf(\" -\");","lastModifiedDate":"2021-10-14"},{"lineNumber":329,"author":{"gitId":"DJ-Tan"},"content":"        } else {","lastModifiedDate":"2021-10-14"},{"lineNumber":330,"author":{"gitId":"DJ-Tan"},"content":"            endIndex \u003d input.indexOf(\" /\");","lastModifiedDate":"2021-10-14"},{"lineNumber":331,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":332,"author":{"gitId":"DJ-Tan"},"content":"        return endIndex;","lastModifiedDate":"2021-10-14"},{"lineNumber":333,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":334,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":335,"author":{"gitId":"DJ-Tan"},"content":"    // Section 2: Add Habit Methods","lastModifiedDate":"2021-10-14"},{"lineNumber":336,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":337,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":338,"author":{"gitId":"DJ-Tan"},"content":"     * Checks for goal index errors before returning the goal index based on user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":339,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":340,"author":{"gitId":"DJ-Tan"},"content":"     * @param input String of the user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":341,"author":{"gitId":"DJ-Tan"},"content":"     * @return Integer index of the goal that the habit should be added to.","lastModifiedDate":"2021-10-14"},{"lineNumber":342,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If the goal number was not specified or is not numeric.","lastModifiedDate":"2021-10-14"},{"lineNumber":343,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":344,"author":{"gitId":"DJ-Tan"},"content":"    private static int getGoalIndex(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-14"},{"lineNumber":345,"author":{"gitId":"DJ-Tan"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2021-10-14"},{"lineNumber":346,"author":{"gitId":"DJ-Tan"},"content":"        int goalNumber;","lastModifiedDate":"2021-10-14"},{"lineNumber":347,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":348,"author":{"gitId":"DJ-Tan"},"content":"            goalNumber \u003d Integer.parseInt(words[0]);","lastModifiedDate":"2021-10-14"},{"lineNumber":349,"author":{"gitId":"DJ-Tan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-14"},{"lineNumber":350,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitParserException(\"Goal number has to be specified.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":351,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":352,"author":{"gitId":"DJ-Tan"},"content":"        return goalNumber - 1;","lastModifiedDate":"2021-10-14"},{"lineNumber":353,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":354,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":355,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":356,"author":{"gitId":"DJ-Tan"},"content":"     * Checks for description errors before returning the description based on user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":357,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":358,"author":{"gitId":"DJ-Tan"},"content":"     * @param input String of the user input.","lastModifiedDate":"2021-10-14"},{"lineNumber":359,"author":{"gitId":"DJ-Tan"},"content":"     * @return String description of the habit.","lastModifiedDate":"2021-10-14"},{"lineNumber":360,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If habit description (name) is empty.","lastModifiedDate":"2021-10-14"},{"lineNumber":361,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":362,"author":{"gitId":"DJ-Tan"},"content":"    private static String getHabitDescription(String input) throws HaBitParserException {","lastModifiedDate":"2021-10-14"},{"lineNumber":363,"author":{"gitId":"DJ-Tan"},"content":"        String description;","lastModifiedDate":"2021-10-14"},{"lineNumber":364,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":365,"author":{"gitId":"DJ-Tan"},"content":"            description \u003d input.substring(input.indexOf(\u0027 \u0027));","lastModifiedDate":"2021-10-14"},{"lineNumber":366,"author":{"gitId":"DJ-Tan"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-14"},{"lineNumber":367,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitParserException(\"Habit name cannot be empty.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":368,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":369,"author":{"gitId":"DJ-Tan"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":370,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitParserException(\"Habit name cannot be empty.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":371,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":372,"author":{"gitId":"DJ-Tan"},"content":"        return description;","lastModifiedDate":"2021-10-14"},{"lineNumber":373,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":374,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":375,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"DJ-Tan":375}},{"path":"src/main/java/happybit/parser/DeleteParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.Command;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.DeleteGoalCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.DeleteHabitCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class DeleteParser {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"    private static final String ERROR_BLANK \u003d \"No instruction given.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"    private static final String ERROR_NOT_NUM \u003d \"Expected a number.\";","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"    private static final String ERROR_HABIT_NOT_EXIST \u003d \"Habit index does not exist.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    public static Command parseDeleteGoalCommand(String commandInstruction) throws HaBitParserException  {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kahhe"},"content":"        if (commandInstruction \u003d\u003d null) {","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"kahhe"},"content":"            throw new HaBitParserException(ERROR_BLANK);","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kahhe"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kahhe"},"content":"            int goalIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"kahhe"},"content":"            goalIndex \u003d Integer.parseInt(commandInstruction) - 1;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"kahhe"},"content":"            return new DeleteGoalCommand(goalIndex);","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"kahhe"},"content":"            //todo: if goal is a name","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"kahhe"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"kahhe"},"content":"            throw new HaBitParserException(ERROR_NOT_NUM);","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"    public static Command parseDeleteHabitCommand(String commandInstruction) throws HaBitParserException {","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"kahhe"},"content":"        if (commandInstruction \u003d\u003d null) {","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"kahhe"},"content":"            throw new HaBitParserException(ERROR_BLANK);","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"kahhe"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"kahhe"},"content":"            int goalIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"kahhe"},"content":"            int habitIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"kahhe"},"content":"            String[] numbers \u003d commandInstruction.split(\" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"kahhe"},"content":"            goalIndex \u003d Integer.parseInt(numbers[0]) - 1;","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"kahhe"},"content":"            habitIndex \u003d Integer.parseInt(numbers[1]) - 1;","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"kahhe"},"content":"            return new DeleteHabitCommand(goalIndex, habitIndex);","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"kahhe"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"kahhe"},"content":"            throw new HaBitParserException(ERROR_NOT_NUM);","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"kahhe"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"kahhe"},"content":"            throw new HaBitParserException(ERROR_HABIT_NOT_EXIST);","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"kahhe"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"DJ-Tan":16,"kahhe":36}},{"path":"src/main/java/happybit/parser/DoneParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.Command;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import happybit.command.DoneHabitCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"public class DoneParser {","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_INVALID_DESCRIPTION \u003d \"Please provide the goal and habit index\"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"            + \" of the habit to be marked as done\";","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_EXTRA_PARAMETERS \u003d \"Please provide only 2 integers\";","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_MISSING_HABIT_INDEX \u003d \"The habit index is missing.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_INVALID_GOAL_INDEX \u003d \"Please enter a valid integer for the goal index\";","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_INVALID_HABIT_INDEX \u003d \"Please enter a valid integer for the habit index\";","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"    private static final int GOAL_INDEX \u003d 0;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"    private static final int HABIT_INDEX \u003d 1;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    public static Command parseDoneHabitCommand(String commandInstruction) throws HaBitParserException  {","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"        // write parse code","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"        if (commandInstruction \u003d\u003d null) {","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"            throw new HaBitParserException(ERROR_INVALID_DESCRIPTION);","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"        String[] descriptions \u003d commandInstruction.split(\"\\\\s\");","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"        if (descriptions.length \u003e 2) {","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"            throw new HaBitParserException(ERROR_EXTRA_PARAMETERS);","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"        if (descriptions.length \u003c 2) {","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"            throw new HaBitParserException(ERROR_MISSING_HABIT_INDEX);","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"STAung07"},"content":"        // get goal Index","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"STAung07"},"content":"        int goalIndex;","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"STAung07"},"content":"            goalIndex \u003d Integer.parseInt(descriptions[GOAL_INDEX]) - 1;","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"STAung07"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"STAung07"},"content":"            throw new HaBitParserException(ERROR_INVALID_GOAL_INDEX);","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"STAung07"},"content":"        // get goal Index","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"STAung07"},"content":"        int habitIndex;","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"STAung07"},"content":"            habitIndex \u003d Integer.parseInt(descriptions[HABIT_INDEX]) - 1;","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"STAung07"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"STAung07"},"content":"            throw new HaBitParserException(ERROR_INVALID_HABIT_INDEX);","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"STAung07"},"content":"        return new DoneHabitCommand(goalIndex, habitIndex);","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"STAung07":39,"DJ-Tan":12}},{"path":"src/main/java/happybit/parser/ListParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.Command;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.ListHabitsCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class ListParser {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"    private static final String ERROR_INVALID_GOAL_INDEX \u003d \"Please enter a valid integer for the goal index\";","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    public static Command parseListHabitCommand(String commandInstruction) throws HaBitParserException {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"        // write parse code","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"        int goalIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"        try {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"            goalIndex \u003d Integer.parseInt(commandInstruction);","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"            throw new HaBitParserException(ERROR_INVALID_GOAL_INDEX);","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"        return new ListHabitsCommand(goalIndex);","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"STAung07":8,"DJ-Tan":14}},{"path":"src/main/java/happybit/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.Command;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.HelpCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.ExitCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import happybit.command.ListGoalsCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"public class Parser {","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    private static final String DELIMITER \u003d \"@@@\";","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_HELP \u003d \"help\";","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_ADD_GOAL \u003d \"set\";","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"    private static final String COMMAND_ADD_HABIT \u003d \"add\";","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_LIST_GOAL \u003d \"list\";","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_LIST_HABIT \u003d \"view\";","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_DELETE_GOAL \u003d \"remove\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_DELETE_HABIT \u003d \"delete\";","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_COMPLETE_HABIT \u003d \"done\";","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"     * Parses the user input.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     * @param userInput String of the user input in the command line.","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"     * @return Command to be executed based off user input.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If there are syntax / missing information in the user input.","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"    public static Command parse(String userInput) throws HaBitParserException {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"        String treatedUserInput \u003d treatUserInput(userInput);","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"        String[] words \u003d treatedUserInput.split(\" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"        String commandWord \u003d words[0];","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"        String commandInstruction \u003d getCommandInstruction(words);","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"        return parseCommand(commandWord, commandInstruction);","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"    /*","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"     * The following are private methods that are used to implement SLAP for the","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"     * above public methods. These methods are positioned at the bottom to better","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"     * visualise the actual methods that can be called from outside this class.","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"     * Treat the userInput by removing extra blank/white spaces.","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"     * @param userInput String input by the user into the command line.","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"     * @return String with removed extraneous whitespaces.","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If the delimiter appears in the user\u0027s input.","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"    private static String treatUserInput(String userInput) throws HaBitParserException {","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"        if (userInput.contains(DELIMITER)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitParserException(\"Invalid character in the user input\");","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"        String treatedInput \u003d userInput.strip().replaceAll(\"\\\\s+\",\" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"        testEmptyString(treatedInput);","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"        return treatedInput;","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the string is empty.","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"     * @param userInput String of user\u0027s input with extraneous whitespace removed.","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"     * @throws HaBitParserException If the treated user\u0027s input is empty.","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"    private static void testEmptyString(String userInput) throws HaBitParserException {","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"        if (userInput.isEmpty()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"            throw new HaBitParserException(\"No user command detected\");","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"DJ-Tan"},"content":"     * Obtain the instruction of the user input command without the command word.","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"     * @param words String array of user input command delimited by whitespaces.","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"     * @return String containing the remainder of the user input without the command word.","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"    private static String getCommandInstruction(String[] words) {","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"DJ-Tan"},"content":"        if (words.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"            return null;","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"        return concatenateString(words);","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"DJ-Tan"},"content":"     * Concatenate the string in a string array, excluding the first string.","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"DJ-Tan"},"content":"     * @param words String array containing the strings to be concatenated.","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"DJ-Tan"},"content":"     * @return String that has been concatenated.","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"DJ-Tan"},"content":"    private static String concatenateString(String[] words) {","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"DJ-Tan"},"content":"        StringBuilder instruction \u003d new StringBuilder();","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"DJ-Tan"},"content":"        for (int i \u003d 1; i \u003c words.length; i++) {","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"DJ-Tan"},"content":"            instruction.append(words[i]);","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"STAung07"},"content":"            if (i !\u003d words.length - 1) {","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"STAung07"},"content":"                instruction.append(\" \");","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"STAung07"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"DJ-Tan"},"content":"        return instruction.toString();","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"DJ-Tan"},"content":"     * Parse the command instruction based off the command word.","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"DJ-Tan"},"content":"     * @param command String of the command word.","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"DJ-Tan"},"content":"     * @param details String of the command instructions.","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"DJ-Tan"},"content":"     * @return Command to be executed based off user input.","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"DJ-Tan"},"content":"    private static Command parseCommand(String command, String details) throws HaBitParserException {","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"DJ-Tan"},"content":"        switch (command) {","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_ADD_GOAL:","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"DJ-Tan"},"content":"            return AddParser.parseAddGoalCommand(details);","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_ADD_HABIT:","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"DJ-Tan"},"content":"            return AddParser.parseAddHabitCommand(details);","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_LIST_GOAL:","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"DJ-Tan"},"content":"            return new ListGoalsCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_LIST_HABIT:","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"DJ-Tan"},"content":"            return ListParser.parseListHabitCommand(details);","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_DELETE_GOAL:","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"DJ-Tan"},"content":"            return DeleteParser.parseDeleteGoalCommand(details);","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_DELETE_HABIT:","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"DJ-Tan"},"content":"            return DeleteParser.parseDeleteHabitCommand(details);","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_COMPLETE_HABIT:","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"DJ-Tan"},"content":"            return DoneParser.parseDoneHabitCommand(details);","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"DJ-Tan"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_HELP:","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"DJ-Tan"},"content":"        default:","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"DJ-Tan"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":132,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":133,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":135,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"STAung07":4,"DJ-Tan":131}},{"path":"src/main/java/happybit/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huien77"},"content":"package happybit.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"huien77"},"content":"import happybit.exception.HaBitStorageException;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"import happybit.goal.Goal;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"huien77"},"content":"import happybit.goal.GoalType;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"huien77"},"content":"import happybit.habit.Habit;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"huien77"},"content":"import java.io.File;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"huien77"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"huien77"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"huien77"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"huien77"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"huien77"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"huien77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"huien77"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"huien77"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"huien77"},"content":"public class Storage {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"huien77"},"content":"    private static final String DEFAULT_DIR \u003d \"data\";","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"huien77"},"content":"    private static final String DEFAULT_FILEPATH \u003d \"data/habits.txt\";","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"huien77"},"content":"    private static final String DELIMITER \u003d \"##\";","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"huien77"},"content":"    private static final String GOAL_TYPE \u003d \"G\";","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"huien77"},"content":"    private static final String HABIT_TYPE \u003d \"H\";","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"huien77"},"content":"    private static final String SLEEP \u003d \"[SL]\";","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"huien77"},"content":"    private static final String FOOD \u003d \"[FD]\";","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"huien77"},"content":"    private static final String EXERCISE \u003d \"[EX]\";","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"huien77"},"content":"    private static final String STUDY \u003d \"[SD]\";","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"huien77"},"content":"    private static final int NUM_INDEX \u003d 0;","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"huien77"},"content":"    private static final int TYPE_INDEX \u003d 1;","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"huien77"},"content":"    private static final int GOAL_TYPE_INDEX \u003d 2;","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"huien77"},"content":"    private static final int DONE_INDEX \u003d 2;","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"huien77"},"content":"    private static final int GOAL_NAME_INDEX \u003d 3;","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"huien77"},"content":"    private static final int HABIT_NAME_INDEX \u003d 3;","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"huien77"},"content":"    private static final int GOAL_START_INDEX \u003d 4;","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"huien77"},"content":"    private static final int GOAL_END_INDEX \u003d 5;","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"huien77"},"content":"    protected String filePath;","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"huien77"},"content":"    protected String fileDir;","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"huien77"},"content":"    public Storage() {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"huien77"},"content":"        this(DEFAULT_FILEPATH, DEFAULT_DIR);","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"huien77"},"content":"    public Storage(String filePath, String fileDir) {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"huien77"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"huien77"},"content":"        this.fileDir \u003d fileDir;","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"huien77"},"content":"    public GoalList load() throws HaBitStorageException {","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"huien77"},"content":"        GoalList goalList \u003d new GoalList();","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"huien77"},"content":"        Scanner s;","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"huien77"},"content":"        String line;","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"huien77"},"content":"        createFile(this.filePath, this.fileDir);","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"huien77"},"content":"        File storageFile \u003d new File(this.filePath);","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"huien77"},"content":"            s \u003d new Scanner(storageFile);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"huien77"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"huien77"},"content":"                line \u003d s.nextLine();","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"huien77"},"content":"                String[] lineData \u003d line.split(DELIMITER);","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"huien77"},"content":"                switch (lineData[TYPE_INDEX]) {","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"huien77"},"content":"                case GOAL_TYPE:","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"huien77"},"content":"                    try {","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"huien77"},"content":"                        goalList.addGoal(goalParser(lineData));","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"huien77"},"content":"                    } catch (ParseException e) {","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"huien77"},"content":"                        throw new HaBitStorageException(e.toString());","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"huien77"},"content":"                    }","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"huien77"},"content":"                    break;","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"huien77"},"content":"                case HABIT_TYPE:","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"huien77"},"content":"                    Habit habit \u003d habitParser(lineData);","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"                    int goalIndex \u003d Integer.parseInt(lineData[NUM_INDEX]);","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"huien77"},"content":"                    goalList.addHabitFromGoal(habit, goalIndex);","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"huien77"},"content":"                    break;","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"huien77"},"content":"                default:","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"huien77"},"content":"                    throw new HaBitStorageException(\"error while loading\");","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"huien77"},"content":"                }","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"huien77"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"huien77"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"huien77"},"content":"            throw new HaBitStorageException(e.toString());","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"huien77"},"content":"        return goalList;","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"huien77"},"content":"    protected Goal goalParser(String[] lineData) throws ParseException {","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"huien77"},"content":"        GoalType goalType;","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"huien77"},"content":"        Date dateStart;","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"huien77"},"content":"        Date dateEnd;","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"huien77"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"ddMMyyyy\");","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"huien77"},"content":"        dateStart \u003d format.parse(lineData[GOAL_START_INDEX]);","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"huien77"},"content":"        dateEnd \u003d format.parse(lineData[GOAL_END_INDEX]);","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"huien77"},"content":"        switch (lineData[GOAL_TYPE_INDEX]) {","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"huien77"},"content":"        case SLEEP:","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"huien77"},"content":"            goalType \u003d GoalType.SLEEP;","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"huien77"},"content":"            break;","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"huien77"},"content":"        case FOOD:","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"huien77"},"content":"            goalType \u003d GoalType.FOOD;","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"huien77"},"content":"            break;","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"huien77"},"content":"        case EXERCISE:","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"huien77"},"content":"            goalType \u003d GoalType.EXERCISE;","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"huien77"},"content":"            break;","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"huien77"},"content":"        case STUDY:","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"huien77"},"content":"            goalType \u003d GoalType.STUDY;","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"huien77"},"content":"            break;","lastModifiedDate":"2021-10-14"},{"lineNumber":113,"author":{"gitId":"huien77"},"content":"        default:","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"huien77"},"content":"            goalType \u003d GoalType.DEFAULT;","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"huien77"},"content":"        return new Goal(lineData[GOAL_NAME_INDEX],","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"huien77"},"content":"                goalType,","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"huien77"},"content":"                dateStart,","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"huien77"},"content":"                dateEnd);","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"huien77"},"content":"    protected Habit habitParser(String[] lineData) {","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"huien77"},"content":"        boolean isDone;","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"huien77"},"content":"        if (lineData[DONE_INDEX].equals(\"0\")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"huien77"},"content":"            isDone \u003d false;","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"huien77"},"content":"            assert isDone : \"done should be false if value of done is 0\";","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"huien77"},"content":"        } else {","lastModifiedDate":"2021-10-14"},{"lineNumber":130,"author":{"gitId":"huien77"},"content":"            isDone \u003d true;","lastModifiedDate":"2021-10-14"},{"lineNumber":131,"author":{"gitId":"huien77"},"content":"            assert !isDone : \"done should be true if value of done is 1\";","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"DJ-Tan"},"content":"        return new Habit(lineData[HABIT_NAME_INDEX]);","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"huien77"},"content":"    protected void createFile(String filePath, String fileDir) {","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"huien77"},"content":"        File storageDir \u003d new File(fileDir);","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"huien77"},"content":"        File storageFile \u003d new File(filePath);","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"huien77"},"content":"        if (!storageDir.exists()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"huien77"},"content":"            boolean isDirCreated \u003d storageDir.mkdirs();","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"huien77"},"content":"            if (isDirCreated) {","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"huien77"},"content":"                System.out.println(\"Directory created: \" + fileDir);","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"huien77"},"content":"                assert !storageDir.exists() : \"directory should have been created\";","lastModifiedDate":"2021-10-14"},{"lineNumber":147,"author":{"gitId":"huien77"},"content":"            } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"huien77"},"content":"                System.out.println(\"Directory not created\");","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"huien77"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"huien77"},"content":"            boolean isFileCreated \u003d storageFile.createNewFile();","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"huien77"},"content":"            if (isFileCreated) {","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"huien77"},"content":"                System.out.println(\"File created: \" + filePath);","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"huien77"},"content":"                assert !storageFile.exists() : \"file should have been created\";","lastModifiedDate":"2021-10-14"},{"lineNumber":158,"author":{"gitId":"huien77"},"content":"            } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"huien77"},"content":"                System.out.println(\"File exists\");","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"huien77"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"huien77"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"huien77"},"content":"            System.out.println(\"Error occurred while creating file: \" + e);","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":166,"author":{"gitId":"huien77"},"content":"    protected void export(ArrayList\u003cGoal\u003e goalList) throws HaBitStorageException {","lastModifiedDate":"2021-10-14"},{"lineNumber":167,"author":{"gitId":"huien77"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":168,"author":{"gitId":"huien77"},"content":"            clearFile();","lastModifiedDate":"2021-10-14"},{"lineNumber":169,"author":{"gitId":"huien77"},"content":"            writeToFile(goalList);","lastModifiedDate":"2021-10-14"},{"lineNumber":170,"author":{"gitId":"huien77"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-14"},{"lineNumber":171,"author":{"gitId":"huien77"},"content":"            throw new HaBitStorageException(e.toString());","lastModifiedDate":"2021-10-14"},{"lineNumber":172,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":173,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":174,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":175,"author":{"gitId":"huien77"},"content":"    protected void clearFile() throws IOException {","lastModifiedDate":"2021-10-14"},{"lineNumber":176,"author":{"gitId":"huien77"},"content":"        FileWriter fileWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":177,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":178,"author":{"gitId":"huien77"},"content":"        fileWriter.write(\"\");","lastModifiedDate":"2021-10-14"},{"lineNumber":179,"author":{"gitId":"huien77"},"content":"        fileWriter.close();","lastModifiedDate":"2021-10-14"},{"lineNumber":180,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":181,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":182,"author":{"gitId":"huien77"},"content":"    protected void writeToFile(ArrayList\u003cGoal\u003e goalList) throws IOException {","lastModifiedDate":"2021-10-14"},{"lineNumber":183,"author":{"gitId":"huien77"},"content":"        FileWriter fileWriter \u003d new FileWriter(this.filePath, true);","lastModifiedDate":"2021-10-14"},{"lineNumber":184,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":185,"author":{"gitId":"huien77"},"content":"        for (Goal goal : goalList) {","lastModifiedDate":"2021-10-14"},{"lineNumber":186,"author":{"gitId":"huien77"},"content":"            int index \u003d goalList.indexOf(goal);","lastModifiedDate":"2021-10-14"},{"lineNumber":187,"author":{"gitId":"huien77"},"content":"            ArrayList\u003cHabit\u003e habits \u003d goal.getHabitList();","lastModifiedDate":"2021-10-14"},{"lineNumber":188,"author":{"gitId":"huien77"},"content":"            String goalToWrite \u003d index","lastModifiedDate":"2021-10-14"},{"lineNumber":189,"author":{"gitId":"huien77"},"content":"                    + DELIMITER","lastModifiedDate":"2021-10-14"},{"lineNumber":190,"author":{"gitId":"huien77"},"content":"                    + GOAL_TYPE","lastModifiedDate":"2021-10-14"},{"lineNumber":191,"author":{"gitId":"huien77"},"content":"                    + DELIMITER","lastModifiedDate":"2021-10-14"},{"lineNumber":192,"author":{"gitId":"huien77"},"content":"                    + goal.getGoalTypeCharacter()","lastModifiedDate":"2021-10-14"},{"lineNumber":193,"author":{"gitId":"huien77"},"content":"                    + DELIMITER","lastModifiedDate":"2021-10-14"},{"lineNumber":194,"author":{"gitId":"huien77"},"content":"                    + goal.getDescription()","lastModifiedDate":"2021-10-14"},{"lineNumber":195,"author":{"gitId":"huien77"},"content":"                    + DELIMITER","lastModifiedDate":"2021-10-14"},{"lineNumber":196,"author":{"gitId":"huien77"},"content":"                    + goal.getStartDate()","lastModifiedDate":"2021-10-14"},{"lineNumber":197,"author":{"gitId":"huien77"},"content":"                    + DELIMITER","lastModifiedDate":"2021-10-14"},{"lineNumber":198,"author":{"gitId":"huien77"},"content":"                    + goal.getEndDate();","lastModifiedDate":"2021-10-14"},{"lineNumber":199,"author":{"gitId":"huien77"},"content":"            fileWriter.write(goalToWrite);","lastModifiedDate":"2021-10-14"},{"lineNumber":200,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":201,"author":{"gitId":"huien77"},"content":"            for (Habit habit : habits) {","lastModifiedDate":"2021-10-14"},{"lineNumber":202,"author":{"gitId":"huien77"},"content":"                int doneValue \u003d habit.getDone() ? 1 : 0;","lastModifiedDate":"2021-10-14"},{"lineNumber":203,"author":{"gitId":"huien77"},"content":"                String habitToWrite \u003d index","lastModifiedDate":"2021-10-14"},{"lineNumber":204,"author":{"gitId":"huien77"},"content":"                        + DELIMITER","lastModifiedDate":"2021-10-14"},{"lineNumber":205,"author":{"gitId":"huien77"},"content":"                        + HABIT_TYPE","lastModifiedDate":"2021-10-14"},{"lineNumber":206,"author":{"gitId":"huien77"},"content":"                        + DELIMITER","lastModifiedDate":"2021-10-14"},{"lineNumber":207,"author":{"gitId":"huien77"},"content":"                        + doneValue","lastModifiedDate":"2021-10-14"},{"lineNumber":208,"author":{"gitId":"huien77"},"content":"                        + DELIMITER","lastModifiedDate":"2021-10-14"},{"lineNumber":209,"author":{"gitId":"huien77"},"content":"                        + habit.getHabitName();","lastModifiedDate":"2021-10-14"},{"lineNumber":210,"author":{"gitId":"huien77"},"content":"                fileWriter.write(habitToWrite);","lastModifiedDate":"2021-10-14"},{"lineNumber":211,"author":{"gitId":"huien77"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":212,"author":{"gitId":"huien77"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":213,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":214,"author":{"gitId":"huien77"},"content":"        fileWriter.close();","lastModifiedDate":"2021-10-14"},{"lineNumber":215,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":216,"author":{"gitId":"huien77"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"huien77":212,"DJ-Tan":4}},{"path":"src/main/java/happybit/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import happybit.goal.Goal;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.habit.Habit;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"public class Ui {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"    private static final String COMMAND_LIST_GREETING \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"            \"Hello! These are all the possible commands for this habit tracker :)\";","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"    private static final String SET_GOAL_COMMAND \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"            \"set a goal: set /\u003cgoal type\u003e /\u003cgoal name\u003e /\u003cstart date\u003e - /\u003cend date\u003e\";","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"    private static final String GOAL_TYPE_INFO \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"            \"-\u003e Habit types include: default, sleep, food, exercise and study\";","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"    private static final String REMOVE_GOAL_COMMAND \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"            \"remove a goal: remove \u003cgoal index\u003e\";","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"    private static final String LIST_GOAL_COMMAND \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"            \"list all goals for that habit: list\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"    private static final String ADD_HABIT_COMMAND \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"            \"add a habit to a goal: add \u003cgoal index\u003e \u003chabit name\u003e\";","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"    private static final String DELETE_HABIT_COMMAND \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"            \"delete a habit from a goal: delete \u003cgoal index\u003e \u003chabit index\u003e\";","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"    private static final String DONE_HABIT_COMMAND \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"            \"indicate a habit as done: done \u003cgoal index\u003e \u003chabit index\u003e\";","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"    private static final String LIST_HABIT_COMMAND \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"            \"View all the habits user has under a goal: view \u003cgoal index\u003e\";","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"    private static final String NEWLINE \u003d System.lineSeparator();","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"    private static final String DASHES \u003d \"______________________________________________________________\"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"            + \"__________________________________________________________\";","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"    public void printCommandList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"STAung07"},"content":"        printDashes();","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"        System.out.print(COMMAND_LIST_GREETING + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"STAung07"},"content":"                + SET_GOAL_COMMAND + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"STAung07"},"content":"                + GOAL_TYPE_INFO + NEWLINE","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"STAung07"},"content":"                + REMOVE_GOAL_COMMAND + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"STAung07"},"content":"                + LIST_GOAL_COMMAND + NEWLINE","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"STAung07"},"content":"                + ADD_HABIT_COMMAND + NEWLINE","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"STAung07"},"content":"                + DELETE_HABIT_COMMAND + NEWLINE","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"STAung07"},"content":"                + DONE_HABIT_COMMAND + NEWLINE","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"STAung07"},"content":"                + LIST_HABIT_COMMAND + NEWLINE","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"STAung07"},"content":"        );","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"STAung07"},"content":"        printDashes();","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"STAung07"},"content":"    public void printGoalList(ArrayList\u003cGoal\u003e goals, int numOfGoals) {","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"STAung07"},"content":"        printDashes();","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"STAung07"},"content":"        assert (numOfGoals \u003e 0) : \"List cannot be empty here\";","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"There are \" + numOfGoals + \" goal(s) in your list:\");","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"STAung07"},"content":"        for (Goal goal : goals) {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"STAung07"},"content":"            System.out.println(goal.getDescription());","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"STAung07"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"STAung07"},"content":"        printDashes();","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"STAung07"},"content":"    public void printHabitList(String goalDescription, ArrayList\u003cHabit\u003e habits, int numOfHabits) {","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"        printDashes();","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"STAung07"},"content":"        assert (numOfHabits \u003e 0) : \"List cannot be empty here\";","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"Here are your \" + numOfHabits + \" habit(s) under the goal \\\"\"","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"STAung07"},"content":"                + goalDescription + \"\\\".\");","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"STAung07"},"content":"        String prefix \u003d \"[ ]\";","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"        for (Habit habit : habits) {","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"STAung07"},"content":"            if (habit.getDone()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"STAung07"},"content":"                prefix \u003d \"[X]\";","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"STAung07"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"STAung07"},"content":"            System.out.println(prefix + \" \" + habit.getHabitName());","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"        printDashes();","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"flerovious"},"content":"    public void printAddedGoal(String goalDescription) {","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"flerovious"},"content":"        printDashes();","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"flerovious"},"content":"        System.out.println(\"Your goal: \" + goalDescription + \" has been added.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"flerovious"},"content":"        printDashes();","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"flerovious"},"content":"    public void printAddedHabit(String habitDescription, String goalDescription) {","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"flerovious"},"content":"        printDashes();","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"flerovious"},"content":"        System.out.println(\"Your habit: \" + habitDescription + \" has been added to your goal: \" + goalDescription);","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"flerovious"},"content":"        printDashes();","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"flerovious"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"STAung07"},"content":"    public void printRemovedGoal(String goalDescription) {","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"STAung07"},"content":"        printDashes();","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"Your goal: \" + goalDescription + \"has been removed.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"STAung07"},"content":"        printDashes();","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"STAung07"},"content":"    public void printRemovedHabit(String goalDescription, String habitName) {","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"STAung07"},"content":"        printDashes();","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"Your habit of \\\"\" + habitName + \"\\\" under the goal \\\"\"","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"STAung07"},"content":"                + goalDescription + \"\\\" has been removed.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"STAung07"},"content":"        printDashes();","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"STAung07"},"content":"    public void printDoneHabit(String goalDescription, String habitName) {","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"STAung07"},"content":"        printDashes();","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"STAung07"},"content":"        System.out.println(\"Your habit of \\\"\" + habitName + \"\\\" under the goal \\\"\"","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"STAung07"},"content":"                + goalDescription + \"\\\" has been set as done.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"STAung07"},"content":"        printDashes();","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"DJ-Tan"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"kahhe"},"content":"        printDashes();","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"kahhe"},"content":"        System.out.println(\"Howdy! Welcome to Ha(ppy)Bit!\");","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"kahhe"},"content":"        printDashes();","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"STAung07"},"content":"    public void showError(String message) {","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"STAung07"},"content":"        printDashes();","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"STAung07"},"content":"        System.out.println(message);","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"STAung07"},"content":"        printDashes();","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"DJ-Tan"},"content":"    public void showGoodbye() {","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"kahhe"},"content":"        printDashes();","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"kahhe"},"content":"        System.out.println(\"Thanks for using Ha(ppy)Bit, see you in a \\033[3mbit\\033[0m! (hehe)\" + NEWLINE);","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"kahhe"},"content":"        System.out.println(\"\\\"We are what we repeatedly do. Excellence, then, is not an act, but a habit.\\\"\" + NEWLINE","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"kahhe"},"content":"                + \" — Will Durant\");","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"kahhe"},"content":"        printDashes();","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"STAung07"},"content":"    private void printDashes() {","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"STAung07"},"content":"        System.out.println(DASHES);","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"STAung07":94,"flerovious":12,"DJ-Tan":10,"kahhe":12}},{"path":"src/test/java/happybit/command/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"flerovious"},"content":"package happybit.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"flerovious"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"flerovious"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"flerovious"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"flerovious"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"flerovious"},"content":"class AddCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"//    private static final String H0 \u003d \"Habit 0\";","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"//    private static final String H1 \u003d \"Habit 1\";","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"//    private static final String H2 \u003d \"Habit 2\";","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"//    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"//    void testAddHabit() {","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"//        AddCommand addCommand \u003d new AddCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"//        assertEquals(0, addCommand.getHabitListSize());","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"//        addCommand.addHabit(H0);","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"//        assertEquals(1, addCommand.getHabitListSize());","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"//        assertArrayEquals(new String[] {H0}, addCommand.getHabits().toArray());","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"//        addCommand.addHabit(H1);","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"//        assertEquals(2, addCommand.getHabitListSize());","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"//        assertArrayEquals(new String[] {H0, H1}, addCommand.getHabits().toArray());","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"//        addCommand.addHabit(H2);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"//        assertEquals(3, addCommand.getHabitListSize());","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"//        assertArrayEquals(new String[] {H0, H1, H2}, addCommand.getHabits().toArray());","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"//    }","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"flerovious"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"flerovious":10,"DJ-Tan":22}},{"path":"src/test/java/happybit/command/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package happybit.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"import happybit.exception.HappyBitException;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"class DeleteCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"//    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"//     * Test runCommand to see if deleteCommand is working.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"//     */","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"//    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"//    void runCommand_habitName_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"//        DeleteCommand deleteCommand \u003d new DeleteCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"//        deleteCommand.habits.add(\"habit 1\");","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"//        deleteCommand.habits.add(\"habit 2\");","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"//        deleteCommand.habits.add(\"habit 3\");","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"//        deleteCommand.habits.add(\"habit 4\");","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"//        deleteCommand.runCommand(\"habit 3\");","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"//        final ArrayList\u003cString\u003e actualResult \u003d deleteCommand.habits;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"//        final ArrayList\u003cString\u003e expectedResult \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"//        expectedResult.add(\"habit 1\");","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"//        expectedResult.add(\"habit 2\");","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"//        expectedResult.add(\"habit 4\");","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"//        assertEquals(expectedResult, actualResult);","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"//    }","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"DJ-Tan":21,"kahhe":12}},{"path":"src/test/java/happybit/command/RemoveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package happybit.command;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"import happybit.exception.HappyBitException;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import happybit.goal.Goal;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"import happybit.goal.GoalList;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"kahhe"},"content":"class RemoveCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"//    GoalList testGoals \u003d new GoalList();","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"//    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"//     * Test runCommand to see if removeCommand is working.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"//     */","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"//    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"//    void runCommand_goalIndex_success() throws IndexOutOfBoundsException, HappyBitException {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"//        final Goal testGoal1 \u003d new Goal(\"test\", \"07-Oct-2021\", \"21-Oct-2021\");","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"//        final Goal testGoal2 \u003d new Goal(\"test\", \"22-Oct-2021\", \"30-Oct-2021\");","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"//        final Goal testGoal3 \u003d new Goal(\"test\", \"01-Nov-2021\", \"21-Nov-2021\");","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"//        testGoals.setGoal(testGoal1);","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"//        testGoals.setGoal(testGoal2);","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"//        testGoals.setGoal(testGoal3);","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"//        RemoveCommand remove \u003d new RemoveCommand(0);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"//        remove.runCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"//        assertEquals(2, testGoals.getListLength());","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"//    }","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"//    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"//    void runCommand_outOfBoundsGoalIndex_failure() throws HappyBitException, IndexOutOfBoundsException {","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"//        final Goal testGoal1 \u003d new Goal(\"test\", \"07-Oct-2021\", \"21-Oct-2021\");","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"//        final Goal testGoal2 \u003d new Goal(\"test\", \"22-Oct-2021\", \"30-Oct-2021\");","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"//        final Goal testGoal3 \u003d new Goal(\"test\", \"01-Nov-2021\", \"21-Nov-2021\");","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"//        testGoals.setGoal(testGoal1);","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"//        testGoals.setGoal(testGoal2);","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"//        testGoals.setGoal(testGoal3);","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"//        RemoveCommand remove \u003d new RemoveCommand(6);","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"//        assertThrows(IndexOutOfBoundsException.class, () -\u003e remove.runCommand());","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"//    }","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"STAung07":4,"DJ-Tan":29,"kahhe":12}},{"path":"src/test/java/happybit/goal/GoalTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.goal;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HappyBitException;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import java.util.Date;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"class GoalTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"DJ-Tan":16}},{"path":"src/test/java/happybit/habit/HabitTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package happybit.habit;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import happybit.exception.HappyBitException;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import happybit.goal.Goal;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"class HabitTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"DJ-Tan":14}},{"path":"src/test/java/happybit/parser/DeleteParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kahhe"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"kahhe"},"content":"import happybit.command.DeleteGoalCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"kahhe"},"content":"import happybit.command.ListHabitsCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"kahhe"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"kahhe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"kahhe"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"kahhe"},"content":"class DeleteParserTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"kahhe"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"kahhe"},"content":"    void parseDeleteGoalCommand_emptyCommandInstruction_exceptionThrown() {","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"kahhe"},"content":"        String emptyText \u003d null;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"kahhe"},"content":"        assertThrows(HaBitParserException.class, () -\u003e DeleteParser.parseDeleteGoalCommand(emptyText));","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"kahhe"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"kahhe"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"kahhe"},"content":"    void parseDeleteHabitCommand_emptyCommandInstruction_exceptionThrown() {","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"kahhe"},"content":"        String emptyText \u003d null;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"kahhe"},"content":"        assertThrows(HaBitParserException.class, () -\u003e DeleteParser.parseDeleteHabitCommand(emptyText));","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"kahhe"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"kahhe"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"kahhe":23}},{"path":"src/test/java/happybit/parser/DoneParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import happybit.command.DoneHabitCommand;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"class DoneParserTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"    void parseDoneHabitCommand_input2Integers_habitIsDone() throws HaBitParserException {","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"        String inputCommand \u003d \"1 2\";","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"        DoneHabitCommand testCommand \u003d (DoneHabitCommand) DoneParser.parseDoneHabitCommand(inputCommand);","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"        assertEquals(0, testCommand.getGoalIndex());","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"        assertEquals(1, testCommand.getHabitIndex());","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"    void parseDoneHabitCommand_inputEmptyDescription_throwsException() throws HaBitParserException {","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"        String inputCommand \u003d null;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"        assertThrows(HaBitParserException.class, () -\u003e DoneParser.parseDoneHabitCommand(inputCommand));","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"    void parseDoneHabitCommand_input1Integer_throwsException() throws HaBitParserException {","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"        String inputCommand \u003d \"1\";","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"        assertThrows(HaBitParserException.class, () -\u003e DoneParser.parseDoneHabitCommand(inputCommand));","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"STAung07"},"content":"    void parseDoneHabitCommand_input3Integers_throwsException() throws HaBitParserException {","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"STAung07"},"content":"        String inputCommand \u003d \"1 2 3\";","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"STAung07"},"content":"        assertThrows(HaBitParserException.class, () -\u003e DoneParser.parseDoneHabitCommand(inputCommand));","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"STAung07"},"content":"    void parseDoneHabitCommand_invalidDescriptions_throwsException() throws HaBitParserException {","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"STAung07"},"content":"        String inputCommand \u003d \"Daren 4.9\";","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"STAung07"},"content":"        assertThrows(HaBitParserException.class, () -\u003e DoneParser.parseDoneHabitCommand(inputCommand));","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"STAung07":46}},{"path":"src/test/java/happybit/parser/InputParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import happybit.command.HelpCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"class InputParserTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"//    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"//    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"//    @BeforeEach","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"//    public void setUp() {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"//        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"//    }","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"//    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"//    void parseInput_inputHelp_printCommandList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"//        final HelpCommand helpCommand \u003d new HelpCommand();","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"//        final InputParser iP \u003d new InputParser();","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"//        String input \u003d \"help\";","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"//        String expectedOutput \u003d ;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"//        iP.parseInput(input);","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"//        assertEquals(expectedOutput, outputStreamCaptor.toString());","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"//    }","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"//","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"//    @AfterEach","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"//    public void tearDown() {","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"//        System.setOut(standardOut);","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"//    }","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"STAung07":15,"DJ-Tan":22}},{"path":"src/test/java/happybit/parser/ListParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"STAung07"},"content":"package happybit.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"STAung07"},"content":"import happybit.command.ListHabitsCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"STAung07"},"content":"import happybit.exception.HaBitParserException;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"STAung07"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"STAung07"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"STAung07"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"STAung07"},"content":"class ListParserTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"STAung07"},"content":"    void parseListHabitCommand_index2_goalIndex() throws HaBitParserException {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"STAung07"},"content":"        String testIndex \u003d \"2\";","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"STAung07"},"content":"        ListHabitsCommand expectedOutput \u003d new ListHabitsCommand(2);","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"STAung07"},"content":"        ListHabitsCommand actualOutput \u003d (ListHabitsCommand) ListParser.parseListHabitCommand(testIndex);","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"STAung07"},"content":"        assertEquals(expectedOutput.getGoalIndex(), actualOutput.getGoalIndex());","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"STAung07"},"content":"    void parseListHabitCommand_invalidIndexString_exceptionThrown() throws HaBitParserException {","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"STAung07"},"content":"        String testIndex \u003d \"Daren is a beast\";","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"STAung07"},"content":"        assertThrows(HaBitParserException.class, () -\u003e ListParser.parseListHabitCommand(testIndex));","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"STAung07"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"STAung07"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"STAung07"},"content":"    void parseListHabitCommand_invalidIndexDouble_exceptionThrown() throws HaBitParserException {","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"STAung07"},"content":"        String testIndex \u003d \"8.0\";","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"STAung07"},"content":"        assertThrows(HaBitParserException.class, () -\u003e ListParser.parseListHabitCommand(testIndex));","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"STAung07"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"STAung07"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"STAung07":31}},{"path":"src/test/java/happybit/storage/StorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"huien77"},"content":"package happybit.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"huien77"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"huien77"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"huien77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"huien77"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"huien77"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"huien77"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"huien77"},"content":"class StorageTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"huien77"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"huien77"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"huien77"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"huien77"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"huien77"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"huien77"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"huien77"},"content":"    public void createFile_createFileThatExists_fileExists() {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"huien77"},"content":"        new Storage().createFile(\"data/habits.txt\", \"data\");","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"huien77"},"content":"        assertEquals(\"File exists\", outputStreamCaptor.toString().trim());","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"huien77"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"huien77"},"content":"    @AfterEach","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"huien77"},"content":"    public void tearDown() {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"huien77"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"huien77"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"huien77"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"huien77":31}}]
